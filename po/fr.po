#
msgid ""
msgstr ""
"Project-Id-Version: The Cairo Programming Language\n"
"POT-Creation-Date: 2024-07-01T00:37:38+01:00\n"
"PO-Revision-Date: 2023-10-13 15:42+0200\n"
"Last-Translator: glihm <dev@glihm.net>\n"
"Language-Team: fr <fr@example.com>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Poedit 3.4\n"

#: src/SUMMARY.md src/title-page.md
msgid "The Cairo Book"
msgstr "Le Livre du Caire"

#: src/SUMMARY.md
msgid "The Cairo Book Foreword Introduction"
msgstr "Avant-propos du livre du Caire"

#: src/SUMMARY.md
msgid "The Cairo Programming Language"
msgstr "Le langage de programmation du Caire"

#: src/SUMMARY.md src/ch01-00-getting-started.md
msgid "Getting Started"
msgstr "Commencer"

#: src/SUMMARY.md src/ch01-01-installation.md:1 src/ch01-01-installation.md:22
msgid "Installation"
msgstr "Installation"

#: src/SUMMARY.md
msgid "Hello, World!"
msgstr "Bonjour, Monde!"

#: src/SUMMARY.md src/ch02-00-common-programming-concepts.md
msgid "Common Programming Concepts"
msgstr "Concepts communs de programmation"

#: src/SUMMARY.md src/ch02-01-variables-and-mutability.md:1
msgid "Variables and Mutability"
msgstr "Variables et mutabilité"

#: src/SUMMARY.md src/ch02-02-data-types.md:1
msgid "Data Types"
msgstr "Types de données"

#: src/SUMMARY.md src/ch02-03-functions.md:1
msgid "Functions"
msgstr "Fonctions"

#: src/SUMMARY.md src/ch02-04-comments.md:1
msgid "Comments"
msgstr "Commentaires"

#: src/SUMMARY.md src/ch02-05-control-flow.md:1
msgid "Control Flow"
msgstr "Débit de contrôle"

#: src/SUMMARY.md src/ch03-00-common-collections.md
msgid "Common Collections"
msgstr "Collections communes"

#: src/SUMMARY.md src/ch03-01-arrays.md:1
msgid "Arrays"
msgstr "Tableaux"

#: src/SUMMARY.md src/ch03-02-dictionaries.md:1
msgid "Dictionaries"
msgstr "Dictionnaires"

#: src/SUMMARY.md
msgid "Understanding Ownership"
msgstr "Comprendre la propriété"

#: src/SUMMARY.md
msgid "What is Ownership?"
msgstr "Qu'est-ce que la propriété?"

#: src/SUMMARY.md src/ch04-02-references-and-snapshots.md:1
msgid "References and Snapshots"
msgstr "Références et instantanés"

#: src/SUMMARY.md src/ch05-00-using-structs-to-structure-related-data.md
msgid "Using Structs to Structure Related Data"
msgstr "Utilisation des structures pour structurer les données connexes"

#: src/SUMMARY.md src/ch05-01-defining-and-instantiating-structs.md:1
msgid "Defining and Instantiating Structs"
msgstr "Définition et activation des structures"

#: src/SUMMARY.md src/ch05-02-an-example-program-using-structs.md:1
msgid "An Example Program Using Structs"
msgstr "Un exemple de programme utilisant des structures"

#: src/SUMMARY.md src/ch05-03-method-syntax.md:1
msgid "Method Syntax"
msgstr "Méthode Syntaxe"

#: src/SUMMARY.md src/ch06-00-enums-and-pattern-matching.md
msgid "Enums and Pattern Matching"
msgstr "Énumérations et correspondance des motifs"

#: src/SUMMARY.md src/ch06-01-enums.md:1 src/ch08-01-generic-data-types.md:181
msgid "Enums"
msgstr "Énumérations"

#: src/SUMMARY.md src/ch06-02-the-match-control-flow-construct.md:1
msgid "The Match Control Flow Construct"
msgstr "Constructeur de flux de contrôle de correspondance"

#: src/SUMMARY.md
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:1
msgid "Concise Control Flow with `if let` and `while let`"
msgstr "Concise le débit de contrôle avec `si let` et `tout en let`"

#: src/SUMMARY.md
#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid "Managing Cairo Projects with Packages, Crates and Modules"
msgstr ""
"Gérer les projets du Caire avec des paquets, des caisses et des modules"

#: src/SUMMARY.md src/ch07-01-packages-and-crates.md:1
msgid "Packages and Crates"
msgstr "Paquets et caisses"

#: src/SUMMARY.md src/ch07-02-defining-modules-to-control-scope.md:1
msgid "Defining Modules to Control Scope"
msgstr "Définition des modules pour le contrôle de la portée"

#: src/SUMMARY.md
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:1
msgid "Paths for Referring to an Item in the Module Tree"
msgstr "Chemins pour se référer à un élément de l'arbre de modules"

#: src/SUMMARY.md
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:1
msgid "Bringing Paths into Scope with the `use` Keyword"
msgstr "Mettre les chemins à la portée avec le mot-clé `use`"

#: src/SUMMARY.md src/ch07-05-separating-modules-into-different-files.md:1
msgid "Separating Modules into Different Files"
msgstr "Séparation des modules dans différents fichiers"

#: src/SUMMARY.md src/ch08-01-generic-data-types.md:1
msgid "Generic Data Types"
msgstr "Types de données génériques"

#: src/SUMMARY.md src/ch08-00-generic-types-and-traits.md
msgid "Generic Types and Traits"
msgstr "Types et caractères génériques"

#: src/SUMMARY.md src/ch08-02-traits-in-cairo.md:1
msgid "Traits in Cairo"
msgstr "Traits au Caire"

#: src/SUMMARY.md
msgid "Error Handling"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md
msgid "Unrecoverable Errors with panic"
msgstr "Erreurs irrécupérables avec panique"

#: src/SUMMARY.md
msgid "Recoverable Errors with Result"
msgstr "Erreurs récupérables avec résultat"

#: src/SUMMARY.md src/ch10-00-testing-cairo-programs.md
msgid "Testing Cairo Programs"
msgstr "Tester les programmes du Caire"

#: src/SUMMARY.md src/ch10-01-how-to-write-tests.md:1
msgid "How To Write Tests"
msgstr "Comment écrire des tests"

#: src/SUMMARY.md src/ch10-02-test-organization.md:1
msgid "Testing Organization"
msgstr "Organisation des essais"

#: src/SUMMARY.md
msgid "Advanced Cairo Features"
msgstr "Caractéristiques avancées du Caire"

#: src/SUMMARY.md src/ch11-01-custom-data-structures.md:1
msgid "Custom Data Structures"
msgstr "Structures de données personnalisées"

#: src/SUMMARY.md src/ch11-02-smart-pointers.md:1
msgid "Smart Pointers"
msgstr "Pointeurs intelligents"

#: src/SUMMARY.md src/ch11-03-operator-overloading.md:1
msgid "Operator Overloading"
msgstr "Surcharge de l'opérateur"

#: src/SUMMARY.md src/ch11-04-hash.md:24
msgid "Working with Hashes"
msgstr "Travailler avec Hashes"

#: src/SUMMARY.md src/ch11-05-macros.md:1
msgid "Macros"
msgstr "Macros"

#: src/SUMMARY.md src/ch11-06-inlining-in-cairo.md:1
msgid "Inlining in Cairo"
msgstr "Inline au Caire"

#: src/SUMMARY.md src/ch11-08-printing.md:1
msgid "Printing"
msgstr "Impression"

#: src/SUMMARY.md
msgid "Appendix (Cairo)"
msgstr "Annexe (Le Caire)"

#: src/SUMMARY.md
msgid "A - Keywords"
msgstr "A - Mots clés"

#: src/SUMMARY.md
msgid "B - Operators and Symbols"
msgstr "B - Opérateurs et symboles"

#: src/SUMMARY.md
msgid "C - Derivable Traits"
msgstr "C - Traits dérivés"

#: src/SUMMARY.md
msgid "D - The Cairo Prelude"
msgstr "D - Le Prélude du Caire"

#: src/SUMMARY.md
msgid "E - Common Error Messages"
msgstr "E - Messages d'erreur courants"

#: src/SUMMARY.md
msgid "F - Useful Development Tools"
msgstr "F - Outils de développement utiles"

#: src/SUMMARY.md
msgid "G - Installing Cairo binaries"
msgstr "G - Installation des binaires du Caire"

#: src/SUMMARY.md
msgid "Smart Contracts in Cairo"
msgstr "Contrats intelligents au Caire"

#: src/SUMMARY.md src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Introduction to Starknet Smart Contracts"
msgstr "Introduction aux contrats intelligents Starknet"

#: src/SUMMARY.md src/ch13-01-general-introduction-to-smart-contracts.md:1
msgid "General Introduction to Smart Contracts"
msgstr "Introduction générale aux contrats intelligents"

#: src/SUMMARY.md src/ch13-02-anatomy-of-a-simple-contract.md:1
msgid "Anatomy of a Simple Contract"
msgstr "Anatomie d'un contrat simple"

#: src/SUMMARY.md src/ch14-00-building-starknet-smart-contracts.md
msgid "Building Starknet Smart Contracts"
msgstr "Construction de contrats intelligents Starknet"

#: src/SUMMARY.md src/ch14-01-contract-storage.md:1
msgid "Contract Storage"
msgstr "Stockage contractuel"

#: src/SUMMARY.md src/ch14-02-contract-functions.md:1
msgid "Contract Functions"
msgstr "Fonctions contractuelles"

#: src/SUMMARY.md src/ch14-03-contract-events.md:1
msgid "Contract Events"
msgstr "Événements contractuels"

#: src/SUMMARY.md src/ch15-00-starknet-cross-contract-interactions.md
msgid "Starknet Cross-Contract Interactions"
msgstr "Interactions entre contrats Starknet"

#: src/SUMMARY.md src/ch15-01-abis-and-contract-interfaces.md:1
msgid "ABIs and Contract Interfaces"
msgstr "ABI et interfaces contractuelles"

#: src/SUMMARY.md
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:1
msgid "Contract Dispatchers, Library Dispatchers and System Calls"
msgstr ""
"Régulateurs contractuels, répartiteurs de bibliothèque et appels système"

#: src/SUMMARY.md src/ch16-00-building-advanced-starknet-smart-contracts.md
msgid "Building Advanced Starknet Smart Contracts"
msgstr "Construction de contrats évolués Starknet Smart"

#: src/SUMMARY.md src/ch16-01-optimizing-storage-costs.md:1
msgid "Optimizing Storage Costs"
msgstr "Optimisation des coûts de stockage"

#: src/SUMMARY.md
msgid "Composability and Components"
msgstr "Composabilité et composants"

#: src/SUMMARY.md
msgid "Under the Hood"
msgstr "Sous le capot"

#: src/SUMMARY.md src/ch16-02-02-component-dependencies.md:1
msgid "Component Dependencies"
msgstr "Dépendances des composantes"

#: src/SUMMARY.md src/ch16-02-03-testing-components.md:1
msgid "Testing Components"
msgstr "Composants d'essai"

#: src/SUMMARY.md
msgid "Upgradeability"
msgstr "Mise à niveau"

#: src/SUMMARY.md
msgid "L1 \\<\\> L2 Messaging"
msgstr "L1 \\<\\> L2 Messagerie"

#: src/SUMMARY.md src/ch16-05-oracle-interactions.md:1
msgid "Oracle Interactions"
msgstr "Interactions Oracle"

#: src/SUMMARY.md src/ch16-05-01-price-feeds.md:1
msgid "Price Feeds"
msgstr "Aliments pour animaux"

#: src/SUMMARY.md src/ch16-05-02-randomness.md:1
msgid "Randomness"
msgstr "Aléatoire"

#: src/SUMMARY.md src/ch16-06-00-other-examples.md:1
msgid "Other Examples"
msgstr "Autres exemples"

#: src/SUMMARY.md
msgid "Deploying and Interacting with a Voting Contract"
msgstr "Déployer et interagir avec un contrat de vote"

#: src/SUMMARY.md src/ch17-00-starknet-smart-contracts-security.md
msgid "Starknet Smart Contracts Security"
msgstr "Starknet Smart Contracts Sécurité"

#: src/SUMMARY.md src/ch17-01-general-recommendations.md:1
msgid "General Recommendations"
msgstr "Recommandations générales"

#: src/SUMMARY.md src/ch17-02-testing-smart-contracts.md:1
msgid "Testing Smart Contracts"
msgstr "Tester les contrats intelligents"

#: src/SUMMARY.md src/ch17-03-static-analysis-tools.md:1
msgid "Static Analysis Tools"
msgstr "Outils d'analyse statique"

#: src/SUMMARY.md
msgid "Formal Verification"
msgstr "Vérification formelle"

#: src/SUMMARY.md src/appendix-00.md src/appendix-000.md
msgid "Appendix"
msgstr "Annexe"

#: src/SUMMARY.md
msgid "Appendix (Starknet)"
msgstr "Annexe (Starknet)"

#: src/SUMMARY.md
msgid "A - System Calls"
msgstr "A - Appels système"

#: src/SUMMARY.md
msgid "Cairo VM"
msgstr "Le Caire, MV"

#: src/SUMMARY.md src/ch00-00-introduction.md src/ch200-introduction.md
msgid "Introduction"
msgstr "Présentation"

#: src/SUMMARY.md
msgid "Architecture"
msgstr "Architecture"

#: src/SUMMARY.md
msgid "Memory"
msgstr "Mémoire"

#: src/SUMMARY.md
msgid "Non-Deterministic Read-only Memory"
msgstr "Mémoire non déterministe en lecture seule"

#: src/SUMMARY.md
msgid "Segments"
msgstr "Segments"

#: src/SUMMARY.md
msgid "Segment Value"
msgstr "Valeur du segment"

#: src/SUMMARY.md
msgid "Relocation"
msgstr "Réinstallation"

#: src/SUMMARY.md
msgid "Layout"
msgstr "Mise en page"

#: src/SUMMARY.md
msgid "Execution Model"
msgstr "Modèle d'exécution"

#: src/SUMMARY.md
msgid "Registers"
msgstr "Registres"

#: src/SUMMARY.md
msgid "Instructions"
msgstr "Instructions"

#: src/SUMMARY.md
msgid "Cairo Assembly (CASM)"
msgstr "Assemblée du Caire (CASM)"

#: src/SUMMARY.md
msgid "State transition"
msgstr "Transition de l'État"

#: src/SUMMARY.md
msgid "Builtins"
msgstr "Eléments"

#: src/SUMMARY.md
msgid "Memory Communication"
msgstr "Communication mémoire"

#: src/SUMMARY.md
msgid "List of builtins"
msgstr "Liste des constructions"

#: src/SUMMARY.md
msgid "Hints"
msgstr "Conseils"

#: src/SUMMARY.md
msgid "Structure"
msgstr "Structure"

#: src/SUMMARY.md
msgid "Hint runner"
msgstr "Coureur d'allure"

#: src/SUMMARY.md
msgid "List of hints"
msgstr "Liste des conseils"

#: src/SUMMARY.md
msgid "Runner"
msgstr "Coureur"

#: src/SUMMARY.md
msgid "Program"
msgstr "Programme"

#: src/SUMMARY.md
msgid "Program Artifacts"
msgstr "Artéfacts du programme"

#: src/SUMMARY.md
msgid "Program Parsing"
msgstr "Parsing du programme"

#: src/SUMMARY.md
msgid "Runner Mode"
msgstr "Mode de course"

#: src/SUMMARY.md
msgid "Execution Mode"
msgstr "Mode d'exécution"

#: src/SUMMARY.md
msgid "Proof Mode"
msgstr "Mode de preuve"

#: src/SUMMARY.md
msgid "Output"
msgstr "Produit"

#: src/SUMMARY.md
msgid "Cairo PIE"
msgstr "PIE du Caire"

#: src/SUMMARY.md
msgid "Memory File"
msgstr "Fichier mémoire"

#: src/SUMMARY.md
msgid "Trace file"
msgstr "Tracer le fichier"

#: src/SUMMARY.md
msgid "AIR public input"
msgstr "Contribution du public dans le domaine de l'AIR"

#: src/SUMMARY.md
msgid "AIR private input"
msgstr "AIR intrant privé"

#: src/SUMMARY.md
msgid "Tracer"
msgstr "Traceur"

#: src/SUMMARY.md
msgid "Implementations"
msgstr "Mise en œuvre"

#: src/SUMMARY.md
msgid "Resources"
msgstr "Ressources"

#: src/title-page.md
msgid ""
"By the Cairo Community and its [contributors](https://github.com/cairo-book/"
"cairo-book.github.io). Special thanks to [StarkWare](https://starkware.co/) "
"through [OnlyDust](https://www.onlydust.xyz/), and [Voyager](https://voyager."
"online/) for supporting the creation of this book."
msgstr ""
"Par la Communauté du Caire et ses [contributeurs](https://github.com/cairo-"
"book/cairo-book.github.io). Remerciements spéciaux à [StarkWare](https://"
"starkware.co/) par [OnlyDust](https://www.onlydust.xyz/), et [Voyager]"
"(https://voyager.online/) pour leur soutien à la création de ce livre."

#: src/title-page.md
msgid ""
"This version of the text assumes you’re using the [Cairo Compiler](https://"
"github.com/starkware-libs/cairo) [version 2.6.3](https://github.com/"
"starkware-libs/cairo/releases). See the [Installation](ch01-01-installation."
"md) section of Chapter 1 to install or update Cairo."
msgstr ""
"Cette version du texte suppose que vous utilisez le [Cairo Compiler](https://"
"github.com/starkware-libs/cairo) [version 2.6.3](https://github.com/"
"starkware-libs/cairo/releases). Voir la section [Installation](ch01-01-"
"installation.md) du chapitre 1 pour installer ou mettre à jour le Caire."

#: src/title-page.md
msgid ""
"If you want to play around with Cairo code and see how it compiles into "
"Sierra (Intermediate Representation) and CASM (Cairo Assembly), you can use "
"[cairovm.codes](https://cairovm.codes/) playground."
msgstr ""
"Si vous voulez jouer avec le code Cairo et voir comment il se compile dans "
"Sierra (représentation intermédiaire) et CASM (Assemblée du Caire), vous "
"pouvez utiliser [cairovm.codes](https://cairovm.codes/) terrain de jeu."

#: src/ch00-01-foreword.md
msgid "Foreword"
msgstr "Avant-propos"

#: src/ch00-01-foreword.md
msgid ""
"In 2020, StarkWare released Cairo 0, a Turing-complete programming language "
"supporting verifiable computation. Cairo started as an assembly language and "
"gradually became more expressive. The learning curve was initially steep, as "
"Cairo 0.x was a low-level language that did not entirely abstract the "
"underlying cryptographic primitives required to build a proof for the "
"execution of a program."
msgstr ""
"En 2020, StarkWare a publié Cairo 0, un langage de programmation complet de "
"Turing supportant un calcul vérifiable. Cairo a commencé comme un langage "
"d'assemblage et progressivement est devenu plus expressif. La courbe "
"d'apprentissage était initialement raide, car Cairo 0.x était un langage de "
"bas niveau qui n'a pas entièrement abstrait les primitives cryptographiques "
"sous-jacents nécessaires pour construire une preuve pour l'exécution d'un "
"programme."

#: src/ch00-01-foreword.md
msgid ""
"With the release of Cairo 1, the developer experience has considerably "
"improved, abstracting away the underlying immutable memory model of the "
"Cairo architecture where possible. Strongly inspired by Rust, Cairo 1 has "
"been built to help you create provable programs without specific knowledge "
"of its underlying architecture so that you can focus on the program itself, "
"increasing the overall security of Cairo programs. Powered by a Rust VM, the "
"execution of Cairo programs is now _blazingly_ fast, allowing you to build "
"an extensive test suite without compromising on performance."
msgstr ""
"Avec la sortie de Cairo 1, l'expérience développeur s'est considérablement "
"améliorée, abstractionnant le modèle de mémoire immuable sous-jacent de "
"l'architecture Cairo lorsque cela est possible. Fortement inspiré par Rust, "
"Cairo 1 a été construit pour vous aider à créer des programmes prouvables "
"sans connaissance spécifique de son architecture sous-jacente afin que vous "
"puissiez vous concentrer sur le programme lui-même, augmentant la sécurité "
"globale des programmes Cairo."

#: src/ch00-01-foreword.md
msgid ""
"Blockchain developers that want to deploy contracts on Starknet will use the "
"Cairo programming language to code their smart contracts. This allows the "
"Starknet OS to generate execution traces for transactions to be proved by a "
"prover, which is then verified on Ethereum L1 prior to updating the state "
"root of Starknet."
msgstr ""
"Les développeurs de Blockchain qui veulent déployer des contrats sur "
"Starknet utiliseront le langage de programmation du Caire pour coder leurs "
"contrats intelligents. Cela permet au Starknet OS de générer des traces "
"d'exécution pour les transactions à prouver par un prover, qui est ensuite "
"vérifié sur Ethereum L1 avant de mettre à jour la racine d'état de Starknet."

#: src/ch00-01-foreword.md
msgid ""
"However, Cairo is not only for blockchain developers. As a general purpose "
"programming language, it can be used for any computation that would benefit "
"from being proved on one computer and verified on other machines with lower "
"hardware requirements."
msgstr ""
"Cependant, Le Caire n'est pas seulement pour les développeurs de blockchain. "
"En tant que langage de programmation d'usage général, il peut être utilisé "
"pour tout calcul qui bénéficierait d'être prouvé sur un ordinateur et "
"vérifié sur d'autres machines avec des exigences matérielles plus faibles."

#: src/ch00-01-foreword.md
msgid ""
"This book is designed for developers with a basic understanding of "
"programming concepts. It is a friendly and approachable text intended to "
"help you level up your knowledge of Cairo, but also help you develop your "
"programming skills in general. So, dive in and get ready to learn all there "
"is to know about Cairo!"
msgstr ""
"Ce livre est conçu pour les développeurs avec une compréhension de base des "
"concepts de programmation. C'est un texte amical et accessible destiné à "
"vous aider à mettre à niveau vos connaissances du Caire, mais aussi vous "
"aider à développer vos compétences de programmation en général."

#: src/ch00-01-foreword.md
msgid "Acknowledgements"
msgstr "Remerciements"

#: src/ch00-01-foreword.md
msgid ""
"This book would not have been possible without the help of the Cairo "
"community. We would like to thank every contributor for their contributions "
"to this book!"
msgstr ""
"Ce livre n'aurait pas été possible sans l'aide de la communauté du Caire. "
"Nous tenons à remercier tous les contributeurs pour leurs contributions à ce "
"livre!"

#: src/ch00-01-foreword.md
msgid ""
"We would like to thank the Rust community for the [Rust Book](https://doc."
"rust-lang.org/book/), which has been a great source of inspiration for this "
"book. Many examples and explanations have been adapted from the Rust Book to "
"fit the Cairo programming language, as the two languages share many "
"similarities."
msgstr ""
"Nous tenons à remercier la communauté Rust pour le [Livre Rust](https://doc."
"rust-lang.org/book/), qui a été une grande source d'inspiration pour ce "
"livre. De nombreux exemples et explications ont été adaptés du Livre Rust "
"pour s'adapter au langage de programmation du Caire, car les deux langues "
"partagent de nombreuses similitudes."

#: src/ch00-00-introduction.md
msgid "What is Cairo?"
msgstr "Qu'est-ce que le Caire?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo is a programming language designed for a virtual CPU of the same name. "
"The unique aspect of this processor is that it was not created for the "
"physical constraints of our world but for cryptographic ones, making it "
"capable of efficiently proving the execution of any program running on it. "
"This means that you can perform time consuming operations on a machine you "
"don't trust, and check the result very quickly on a cheaper machine. While "
"Cairo 0 used to be directly compiled to CASM, the Cairo CPU assembly, Cairo "
"1 is a higher level language. It first compiles to Sierra, an intermediate "
"representation of Cairo which will compile later down to a safe subset of "
"CASM. The point of Sierra is to ensure your CASM will always be provable, "
"even when the computation fails."
msgstr ""
"Le Caire est un langage de programmation conçu pour un processeur virtuel du "
"même nom. L'aspect unique de ce processeur est qu'il n'a pas été créé pour "
"les contraintes physiques de notre monde mais pour les cryptographiques, ce "
"qui le rend capable de prouver efficacement l'exécution de n'importe quel "
"programme en cours d'exécution. Cela signifie que vous pouvez effectuer des "
"opérations de temps sur une machine que vous n'avez pas confiance, et "
"vérifier le résultat très rapidement sur une machine moins chère. Alors que "
"le Caire 0 était compilé directement à CASM, l'assemblage du CPU du Caire, "
"Le Caire 1 est un langage de niveau supérieur. Il compile d'abord à Sierra, "
"une représentation intermédiaire du Caire qui se compilera plus tard à un "
"sous-ensemble sûr de CASM. Le point de Sierra est de s'assurer que votre "
"CASM sera toujours prouvable, même si le calcul échoue."

#: src/ch00-00-introduction.md
msgid "What Can you Do with It?"
msgstr "Qu'est-ce que tu peux en faire?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo allows you to compute trustworthy values on untrusted machines. One "
"major usecase is Starknet, a solution to Ethereum scaling. Ethereum is a "
"decentralized blockchain platform that enables the creation of decentralized "
"applications where every single interaction between a user and a d-app is "
"verified by all the participants. Starknet is a Layer 2 built on top of "
"Ethereum. Instead of having all the participants of the network to verify "
"all user interactions, only one node, called the prover, executes the "
"programs and generates proofs that the computations were done correctly. "
"These proofs are then verified by an Ethereum smart contract, requiring "
"significantly less computational power compared to executing the "
"interactions themselves. This approach allows for increased throughput and "
"reduced transaction costs while preserving Ethereum security."
msgstr ""
"Le Caire vous permet de calculer des valeurs fiables sur des machines non "
"fiables. L'une des principales applications est Starknet, une solution à "
"l'échelle Ethereum. Ethereum est une plate-forme de blockchain décentralisée "
"qui permet la création d'applications décentralisées où chaque interaction "
"entre un utilisateur et une application d est vérifiée par tous les "
"participants. Starknet est un Layer 2 construit sur le dessus d'Ethereum. Au "
"lieu d'avoir tous les participants du réseau pour vérifier toutes les "
"interactions utilisateur, un seul noeud, appelé le prover, exécute les "
"programmes et génère des preuves que les calculs ont été effectués "
"correctement. Ces preuves sont ensuite vérifiées par un contrat Ethereum "
"smart, nécessitant beaucoup moins de puissance computationnelle par rapport "
"à l'exécution des interactions elles-mêmes. Cette approche permet "
"d'augmenter le débit et de réduire les coûts de transaction tout en "
"préservant la sécurité Ethereum."

#: src/ch00-00-introduction.md
msgid "What Are the Differences with Other Programming Languages?"
msgstr "Quelles sont les différences avec les autres langues de programmation?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo is quite different from traditional programming languages, especially "
"when it comes to overhead costs and its primary advantages. Your program can "
"be executed in two different ways:"
msgstr ""
"Le Caire est très différent des langages traditionnels de programmation, "
"surtout en ce qui concerne les frais généraux et ses principaux avantages. "
"Votre programme peut être exécuté de deux façons différentes :"

#: src/ch00-00-introduction.md
msgid ""
"When executed by the prover, it is similar to any other language. Because "
"Cairo is virtualized, and because the operations were not specifically "
"designed for maximum efficiency, this can lead to some performance overhead "
"but it is not the most relevant part to optimize."
msgstr ""
"Lorsqu'il est exécuté par le prover, il est similaire à n'importe quelle "
"autre langue. Parce que le Caire est virtualisé, et parce que les opérations "
"n'ont pas été spécifiquement conçues pour une efficacité maximale, cela peut "
"conduire à certains frais généraux de performance, mais il n'est pas la "
"partie la plus pertinente à optimiser."

#: src/ch00-00-introduction.md
msgid ""
"When the generated proof is verified by a verifier, it is a bit different. "
"This has to be as cheap as possible since it could potentially be verified "
"on many very small machines. Fortunately verifying is faster than computing "
"and Cairo has some unique advantages to improve it even more. A notable one "
"is non-determinism. This is a topic you will cover in more detail later in "
"this book, but the idea is that you can theoretically use a different "
"algorithm for verifying than for computing. Currently, writing custom non-"
"deterministic code is not supported for the developers, but the standard "
"library leverages non-determinism for improved performance. For example "
"sorting an array in Cairo costs the same price as copying it. Because the "
"verifier doesn't sort the array, it just checks that it is sorted, which is "
"cheaper."
msgstr ""
"Lorsque la preuve générée est vérifiée par un vérificateur, elle est un peu "
"différente. Cela doit être aussi bon marché que possible car il pourrait "
"potentiellement être vérifié sur de nombreuses très petites machines. "
"Heureusement, la vérification est plus rapide que l'informatique et le Caire "
"a quelques avantages uniques pour l'améliorer encore plus. Un notable est "
"non-déterminisme. C'est un sujet que vous allez couvrir plus en détail plus "
"tard dans ce livre, mais l'idée est que vous pouvez théoriquement utiliser "
"un algorithme différent pour vérifier que pour l'informatique. Actuellement, "
"l'écriture de code non-déterministe personnalisé n'est pas supporté pour les "
"développeurs, mais la bibliothèque standard exploite le non-déterminisme "
"pour améliorer les performances. Par exemple, le tri d'un tableau au Caire "
"coûte le même prix que la copie. Parce que le vérificateur ne trie pas le "
"tableau, il vérifie simplement qu'il est trié, ce qui est moins cher."

#: src/ch00-00-introduction.md
msgid ""
"Another aspect that sets the language apart is its memory model. In Cairo, "
"memory access is immutable, meaning that once a value is written to memory, "
"it cannot be changed. Cairo 1 provides abstractions that help developers "
"work with these constraints, but it does not fully simulate mutability. "
"Therefore, developers must think carefully about how they manage memory and "
"data structures in their programs to optimize performance."
msgstr ""
"Un autre aspect qui distingue le langage est son modèle de mémoire. Au "
"Caire, l'accès à la mémoire est immuable, ce qui signifie qu'une fois qu'une "
"valeur est écrite à la mémoire, elle ne peut pas être changée. Le Caire 1 "
"fournit des abstractions qui aident les développeurs à travailler avec ces "
"contraintes, mais il ne simule pas complètement la mutabilité."

#: src/ch00-00-introduction.md
msgid "References"
msgstr "Références"

#: src/ch00-00-introduction.md
msgid "Cairo CPU Architecture: <https://eprint.iacr.org/2021/1063>"
msgstr "Architecture du CPU du Caire : <https://eprint.iacr.org/2021/1063>"

#: src/ch00-00-introduction.md
msgid ""
"Cairo, Sierra and Casm: <https://medium.com/nethermind-eth/under-the-hood-of-"
"cairo-1-0-exploring-sierra-7f32808421f5>"
msgstr ""
"Le Caire, la Sierra et Casm : <https://medium.com/nethermind-eth/under-the-"
"hood- of-cairo-1-0-exploring-sierra-7f32808421f5>"

#: src/ch00-00-introduction.md
msgid ""
"State of non determinism: <https://twitter.com/PapiniShahar/"
"status/1638203716535713798>"
msgstr ""
"État de non-déterminisme: <https://twitter.com/PapiniShahar/"
"status/1638203716535713798>"

#: src/ch01-00-getting-started.md
msgid ""
"Let’s start your Cairo journey! There’s a lot to learn, but every journey "
"starts somewhere. In this chapter, we’ll discuss:"
msgstr ""
"Commençons votre voyage au Caire! Il ya beaucoup à apprendre, mais chaque "
"voyage commence quelque part. Dans ce chapitre, nous allons discuter:"

#: src/ch01-00-getting-started.md
msgid ""
"Installing Scarb, which is Cairo's build toolchain and package manager, on "
"Linux, macOS, and Windows."
msgstr ""
"Installer Scarb, qui est la chaîne d'outils de construction du Caire et "
"gestionnaire de paquets, sur Linux, macOS et Windows."

#: src/ch01-00-getting-started.md
msgid "Writing a program that prints `Hello, world!`."
msgstr "Écrire un programme qui imprime \"Bonjour, monde!\"."

#: src/ch01-00-getting-started.md
msgid "Using basic Scarb commands to create a project and execute a program."
msgstr ""
"Utiliser des commandes Scarb de base pour créer un projet et exécuter un "
"programme."

#: src/ch01-00-getting-started.md
msgid "Getting Help"
msgstr "Obtenir de l'aide"

#: src/ch01-00-getting-started.md
msgid ""
"If you have any questions about Starknet or Cairo, you can ask them in the "
"[Starknet Discord server](https://discord.gg/starknet-community). The "
"community is friendly and always willing to help."
msgstr ""
"Si vous avez des questions sur Starknet ou le Caire, vous pouvez les poser "
"dans le [serveur Starknet Discord](https://discord.gg/starknet-community). "
"La communauté est amicale et toujours prête à aider."

#: src/ch01-00-getting-started.md
msgid "Interacting with the Cairo Chatbot"
msgstr "Interagir avec le Chatbot du Caire"

#: src/ch01-00-getting-started.md
msgid ""
"Cairo has its own chatbot, which can help you with Cairo-related questions. "
"The chatbot is trained on the Cairo book, and uses RAG to efficiently "
"retrieve information to provide help. You can find the chatbot on the [Cairo-"
"Chatbot](https://cairo-chatbot.vercel.app/) website."
msgstr ""
"Le Caire a son propre chatbot, qui peut vous aider avec les questions liées "
"au Caire. Le chatbot est formé sur le livre du Caire, et utilise RAG pour "
"récupérer efficacement l'information pour fournir de l'aide. Vous pouvez "
"trouver le chatbot sur le [Cairo-Chatbot](https://cairo-chatbot.vercel.app/) "
"site Web."

#: src/ch01-01-installation.md:3
msgid ""
"Cairo can be installed by simply downloading [Scarb](https://docs.swmansion."
"com/scarb/docs). Scarb bundles the Cairo compiler and the Cairo language "
"server together in an easy-to-install package so that you can start writing "
"Cairo code right away."
msgstr ""
"Le Caire peut être installé en téléchargeant simplement [Scarb](https://docs."
"swmansion.com/scarb/docs). Scarb regroupe le compilateur du Caire et le "
"serveur de langue du Caire dans un paquet facile à installer afin que vous "
"puissiez commencer à écrire le code du Caire tout de suite."

#: src/ch01-01-installation.md:5
msgid ""
"Scarb is also Cairo's package manager and is heavily inspired by [Cargo]"
"(https://doc.rust-lang.org/cargo/), Rust’s build system and package manager."
msgstr ""
"Scarb est également le gestionnaire de paquets du Caire et est fortement "
"inspiré par [Cargo](https://doc.rust-lang.org/cargo/), Rust=\"s build system "
"and package manager."

#: src/ch01-01-installation.md:7
msgid ""
"Scarb handles a lot of tasks for you, such as building your code (either "
"pure Cairo or Starknet contracts), downloading the libraries your code "
"depends on, building those libraries, and provides LSP support for the "
"VSCode Cairo 1 extension."
msgstr ""
"Scarb s'occupe de beaucoup de tâches pour vous, telles que la construction "
"de votre code (contrats du Caire pur ou de Starknet), le téléchargement des "
"bibliothèques dont dépend votre code, la construction de ces bibliothèques, "
"et fournit une prise en charge LSP pour l'extension VSCode Cairo 1."

#: src/ch01-01-installation.md:9
msgid ""
"As you write more complex Cairo programs, you might add dependencies, and if "
"you start a project using Scarb, managing external code and dependencies "
"will be a lot easier to do."
msgstr ""
"Lorsque vous écrivez des programmes plus complexes au Caire, vous pouvez "
"ajouter des dépendances, et si vous commencez un projet en utilisant Scarb, "
"gérer le code externe et les dépendances sera beaucoup plus facile à faire."

#: src/ch01-01-installation.md:11
msgid "Let's start by installing Scarb."
msgstr "Commençons par installer Scarb."

#: src/ch01-01-installation.md:16
msgid "Installing Scarb"
msgstr "Installation de Scarb"

#: src/ch01-01-installation.md:18
msgid "Requirements"
msgstr "Besoins"

#: src/ch01-01-installation.md:20
msgid ""
"Scarb requires a Git executable to be available in the `PATH` environment "
"variable."
msgstr ""
"Scarb exige qu'un exécutable Git soit disponible dans la variable "
"d'environnement `PATH`."

#: src/ch01-01-installation.md:24
msgid ""
"To install Scarb, please refer to the [installation instructions](https://"
"docs.swmansion.com/scarb/download). We strongly recommend that you install "
"Scarb [via asdf](https://docs.swmansion.com/scarb/download.html#install-via-"
"asdf), a CLI tool that can manage multiple language runtime versions on a "
"per-project basis. This will ensure that the version of Scarb you use to "
"work on a project always matches the one defined in the project settings, "
"avoiding problems related to version mismatches."
msgstr ""
"Pour installer Scarb, veuillez vous référer aux [instructions d'installation]"
"(https://docs.swmansion.com/scarb/download). Nous vous recommandons "
"fortement d'installer Scarb [via asdf](https://docs.swmansion.com/scarb/"
"download.html#install-via-asdf), un outil CLI qui peut gérer plusieurs "
"versions d'exécution de langue sur une base de projet. Cela permettra de "
"s'assurer que la version de Scarb que vous utilisez pour travailler sur un "
"projet correspond toujours à celle définie dans les paramètres du projet, en "
"évitant les problèmes liés aux erreurs d'appariement de version."

#: src/ch01-01-installation.md:28
msgid ""
"Please refer to the [asdf documentation](https://asdf-vm.com/guide/getting-"
"started.html) to install all prerequisites."
msgstr ""
"Veuillez consulter la [document asdf](https://asdf-vm.com/guide/getting-"
"started.html) pour installer toutes les conditions préalables."

#: src/ch01-01-installation.md:30
msgid ""
"Once you have asdf installed locally, you can download Scarb plugin with the "
"following command:"
msgstr ""
"Une fois que vous avez asdf installé localement, vous pouvez télécharger le "
"plugin Scarb avec la commande suivante:"

#: src/ch01-01-installation.md:36
msgid "This will allow you to download specific versions:"
msgstr "Cela vous permettra de télécharger des versions spécifiques:"

#: src/ch01-01-installation.md:42
msgid "and set a global version:"
msgstr "et définir une version globale:"

#: src/ch01-01-installation.md:48
msgid ""
"Otherwise, you can simply run the following command in your terminal, and "
"follow the onscreen instructions. This will install the latest stable "
"release of Scarb."
msgstr ""
"Sinon, vous pouvez simplement exécuter la commande suivante dans votre "
"terminal, et suivre les instructions à l'écran. Cela installera la dernière "
"version stable de Scarb."

#: src/ch01-01-installation.md:51
msgid "'=https'"
msgstr "'=https'"

#: src/ch01-01-installation.md:68
msgid "Installing the VSCode Extension"
msgstr "Installation de l'extension VSCode"

#: src/ch01-01-installation.md:70
msgid ""
"Cairo has a VSCode extension that provides syntax highlighting, code "
"completion, and other useful features. You can install it from the [VSCode "
"Marketplace](https://marketplace.visualstudio.com/items?itemName=starkware."
"cairo1). Once installed, go into the extension settings, and make sure to "
"tick the `Enable Language Server` and `Enable Scarb` options."
msgstr ""
"Le Caire dispose d'une extension VSCode qui fournit la mise en surbrillance "
"syntaxique, l'achèvement du code et d'autres fonctionnalités utiles. Vous "
"pouvez l'installer à partir du [VSCode Marketplace](https://marketplace."
"visualstudio.com/items?itemName=starkware.cairo1). Une fois installé, allez "
"dans les paramètres d'extension, et assurez-vous de cocher les options "
"`Enable Language Server` et `Enable Scarb`."

#: src/ch01-01-installation.md:75
msgid "{{#quiz ../quizzes/ch01-01-installation.toml}}"
msgstr "{{#quiz../quizes/ch01-01-installation.toml}}"

#: src/ch01-02-hello-world.md:1
msgid "Hello, World"
msgstr "Bonjour, Monde"

#: src/ch01-02-hello-world.md:3
msgid ""
"Now that you’ve installed Cairo through Scarb, it’s time to write your first "
"Cairo program. It’s traditional when learning a new language to write a "
"little program that prints the text `Hello, world!` to the screen, so we’ll "
"do the same here!"
msgstr ""
"Maintenant que vous avez installé Cairo à travers Scarb, il est temps "
"d'écrire votre premier programme Cairo. C'est traditionnel quand vous "
"apprenez une nouvelle langue pour écrire un petit programme qui imprime le "
"texte `Bonjour, monde!` à l'écran, donc nous allons faire la même chose ici!"

#: src/ch01-02-hello-world.md:7
msgid ""
"Note: This book assumes basic familiarity with the command line. Cairo makes "
"no specific demands about your editing or tooling or where your code lives, "
"so if you prefer to use an integrated development environment (IDE) instead "
"of the command line, feel free to use your favorite IDE. The Cairo team has "
"developed a VSCode extension for the Cairo language that you can use to get "
"the features from the language server and code highlighting. See [Appendix F]"
"(./appendix-06-useful-development-tools.md) for more details."
msgstr ""
"Note: Ce livre suppose une familiarité de base avec la ligne de commande. Le "
"Caire ne fait pas de demandes spécifiques concernant votre édition ou "
"outillage ou l'endroit où votre code vit, donc si vous préférez utiliser un "
"environnement de développement intégré (IDE) au lieu de la ligne de "
"commande, n'hésitez pas à utiliser votre IDE préféré. L'équipe du Caire a "
"développé une extension VSCode pour la langue du Caire que vous pouvez "
"utiliser pour obtenir les fonctionnalités du serveur de langue et de la mise "
"en surbrillance du code. Voir [Annexe F](./appendice-06-useful-development-"
"tools.md) pour plus de détails."

#: src/ch01-02-hello-world.md:17
msgid "Creating a Project Directory"
msgstr "Création d'un répertoire de projets"

#: src/ch01-02-hello-world.md:19
msgid ""
"You’ll start by making a directory to store your Cairo code. It doesn’t "
"matter to Cairo where your code lives, but for the exercises and projects in "
"this book, we suggest making a _cairo_projects_ directory in your home "
"directory and keeping all your projects there."
msgstr ""
"Vous commencerez par créer un répertoire pour stocker votre code du Caire. "
"Cela n'a pas d'importance pour le Caire où vit votre code, mais pour les "
"exercices et les projets de ce livre, nous vous suggérons de créer un "
"répertoire _cairo_projects_ dans votre répertoire personnel et de garder "
"tous vos projets là-bas."

#: src/ch01-02-hello-world.md:24
msgid ""
"Open a terminal and enter the following commands to make a _cairo_projects_ "
"directory."
msgstr ""
"Ouvrez un terminal et entrez les commandes suivantes pour créer un "
"répertoire _cairo_projects_."

#: src/ch01-02-hello-world.md:26
msgid "For Linux, macOS, and PowerShell on Windows, enter this:"
msgstr "Pour Linux, macOS et PowerShell sous Windows, saisissez ceci :"

#: src/ch01-02-hello-world.md:33
msgid "For Windows CMD, enter this:"
msgstr "Pour Windows CMD, saisissez ceci :"

#: src/ch01-02-hello-world.md:36 src/ch01-02-hello-world.md:37
msgid "\"%USERPROFILE%\\cairo_projects\""
msgstr "\"%USERPROFILE%\\cairo_projets\""

#: src/ch01-02-hello-world.md:40
msgid ""
"Note: From now on, for each example shown in the book, we assume that you "
"will be working from a Scarb project directory. If you are not using Scarb, "
"and try to run the examples from a different directory, you might need to "
"adjust the commands accordingly or create a Scarb project."
msgstr ""
"Note: A partir de maintenant, pour chaque exemple montré dans le livre, nous "
"supposons que vous travaillerez à partir d'un répertoire de projet Scarb. Si "
"vous n'utilisez pas Scarb, et essayez d'exécuter les exemples à partir d'un "
"répertoire différent, vous pourriez avoir besoin d'ajuster les commandes en "
"conséquence ou de créer un projet Scarb."

#: src/ch01-02-hello-world.md:43
msgid "Creating a Project with Scarb"
msgstr "Création d'un projet avec Scarb"

#: src/ch01-02-hello-world.md:45
msgid "Let’s create a new project using Scarb."
msgstr "Laissez-les créer un nouveau projet en utilisant Scarb."

#: src/ch01-02-hello-world.md:47
msgid ""
"Navigate to your _cairo_projects_ directory (or wherever you decided to "
"store your code). Then run the following:"
msgstr ""
"Naviguez dans votre répertoire _cairo_projects_ (ou partout où vous avez "
"décidé de stocker votre code)."

#: src/ch01-02-hello-world.md:53
msgid ""
"It creates a new directory and project called _hello_world_. We’ve named our "
"project _hello_world_, and Scarb creates its files in a directory of the "
"same name."
msgstr ""
"Il crée un nouveau répertoire et projet appelé _hello_world_. Nous avons "
"nommé notre projet _hello_world_, et Scarb crée ses fichiers dans un "
"répertoire du même nom."

#: src/ch01-02-hello-world.md:55
msgid ""
"Go into the _hello_world_ directory with the command `cd hello_world`. "
"You’ll see that Scarb has generated two files and one directory for us: a "
"_Scarb.toml_ file and a _src_ directory with a _lib.cairo_ file inside."
msgstr ""
"Allez dans le répertoire _hello_world_ avec la commande `cd hello_world`. "
"Vous verrez que Scarb a généré deux fichiers et un répertoire pour nous: un "
"fichier _scarb.toml_ et un répertoire _src_ avec un fichier _lib.cairo_ à "
"l'intérieur."

#: src/ch01-02-hello-world.md:57
msgid ""
"It has also initialized a new Git repository along with a `.gitignore` file"
msgstr ""
"Il a également initialisé un nouveau dépôt Git avec un fichier `.gitignore`"

#: src/ch01-02-hello-world.md:59
msgid ""
"Note: Git is a common version control system. You can stop using version "
"control system by using the `--no-vcs` flag. Run `scarb new --help` to see "
"the available options."
msgstr ""
"Remarque : Git est un système de contrôle de version commun. Vous pouvez "
"arrêter d'utiliser le système de contrôle de version en utilisant le drapeau "
"`--no-vcs`. Exécutez `scarb new --help` pour voir les options disponibles."

#: src/ch01-02-hello-world.md:62
msgid ""
"Open _Scarb.toml_ in your text editor of choice. It should look similar to "
"the code in Listing 1-1."
msgstr ""
"Ouvrez _scarb.toml_ dans l'éditeur de texte de votre choix. Il devrait "
"ressembler au code dans Listing 1-1."

#: src/ch01-02-hello-world.md:64
msgid "<span class=\"filename\">Filename: Scarb.toml</span>"
msgstr "<span class=\"filename\">Nom du fichier: Scarb.toml</span>"

#: src/ch01-02-hello-world.md:66
msgid ""
"```toml\n"
"[package]\n"
"name = \"hello_world\"\n"
"version = \"0.1.0\"\n"
"edition = \"2023_11\"\n"
"\n"
"# See more keys and their definitions at https://docs.swmansion.com/scarb/"
"docs/reference/manifest\n"
"\n"
"[dependencies]\n"
"# foo = { path = \"vendor/foo\" }\n"
"```"
msgstr ""
"```toml [package] name = \"hello_world\" version = \"0.1.0\" édition = "
"\"2023_11\" # Voir plus de clés et leurs définitions à https://docs."
"swmansion.com/scarb/docs/reference/manifest [dependences] # foo = { chemin = "
"\"vendor/foo\" } ``"

#: src/ch01-02-hello-world.md:78
msgid ""
"<span class=\"caption\">Listing 1-1: Contents of _Scarb.toml_ generated by "
"`scarb new`</span>"
msgstr ""
"<span class=\"caption\">Liste 1-1: Contenu de _Scarb.toml_ généré par `scarb "
"new`</span>"

#: src/ch01-02-hello-world.md:80
msgid ""
"This file is in the [TOML](https://toml.io/) (Tom’s Obvious, Minimal "
"Language) format, which is Scarb’s configuration format."
msgstr ""
"Ce fichier est au format [TOML](https://toml.io/) (Tom=s Obvious, Minimal "
"Language), qui est le format de configuration Scarb=s."

#: src/ch01-02-hello-world.md:82
msgid ""
"The first line, `[package]`, is a section heading that indicates that the "
"following statements are configuring a package. As we add more information "
"to this file, we’ll add other sections."
msgstr ""
"La première ligne, `[package]`, est un titre de section qui indique que les "
"instructions suivantes sont en train de configurer un paquet. Comme nous "
"ajoutons plus d'informations à ce fichier, nous ajouterons d'autres sections."

#: src/ch01-02-hello-world.md:84
msgid ""
"The next three lines set the configuration information Scarb needs to "
"compile your program: the name of the package and the version of Scarb to "
"use, and the edition of the prelude to use. The prelude is the collection of "
"the most commonly used items that are automatically imported into every "
"Cairo program. You can learn more about the prelude in [Appendix D](./"
"appendix-04-cairo-prelude.md)."
msgstr ""
"Les trois lignes suivantes définissent les informations de configuration "
"Scarb doit compiler votre programme: le nom du paquet et la version de Scarb "
"à utiliser, et l'édition du prélude à utiliser. Le prélude est la collection "
"des articles les plus couramment utilisés qui sont automatiquement importés "
"dans chaque programme du Caire. Vous pouvez en savoir plus sur le prélude "
"dans [Annexe D](./appendix-04-cairo-prelude.md)."

#: src/ch01-02-hello-world.md:86
msgid ""
"The last line, `[dependencies]`, is the start of a section for you to list "
"any of your project’s dependencies. In Cairo, packages of code are referred "
"to as crates. We won’t need any other crates for this project."
msgstr ""
"La dernière ligne, `[dependences]`, est le début d'une section pour vous de "
"lister les dépendances de votre projet. Au Caire, les paquets de code sont "
"appelés caisses. Nous n'avons pas besoin d'autres caisses pour ce projet."

#: src/ch01-02-hello-world.md:88
msgid ""
"Note: If you're building contracts for Starknet, you will need to add the "
"`starknet` dependency as mentioned in the [Scarb documentation](https://docs."
"swmansion.com/scarb/docs/extensions/starknet/starknet-package.html)."
msgstr ""
"Remarque: Si vous construisez des contrats pour Starknet, vous devrez "
"ajouter la dépendance `starknet` mentionnée dans la [documentation Scarb]"
"(https://docs.swmansion.com/scarb/docs/extensions/starknet/starknet-package."
"html)."

#: src/ch01-02-hello-world.md:90
msgid ""
"The other file created by Scarb is _src/lib.cairo_, let's delete all the "
"content and put in the following content, we will explain the reason later."
msgstr ""
"L'autre fichier créé par Scarb est _src/lib.cairo_, supprimons tout le "
"contenu et mettons dans le contenu suivant, nous expliquerons la raison plus "
"tard."

#: src/ch01-02-hello-world.md:96
msgid ""
"Then create a new file called _src/hello_world.cairo_ and put the following "
"code in it:"
msgstr ""
"Puis créez un nouveau fichier appelé _src/hello_world.cairo_ et mettez le "
"code suivant :"

#: src/ch01-02-hello-world.md:98
msgid "<span class=\"filename\">Filename: src/hello_world.cairo</span>"
msgstr "<span class=\"filename\">Nom du fichier: src/hello_world.cairo</span>"

#: src/ch01-02-hello-world.md:102 src/ch01-02-hello-world.md:185
msgid "\"Hello, World!\""
msgstr "\"Bonjour, Monde!\""

#: src/ch01-02-hello-world.md:106
msgid ""
"We have just created a file called _lib.cairo_, which contains a module "
"declaration referencing another module named `hello_world`, as well as the "
"file _hello_world.cairo_, containing the implementation details of the "
"`hello_world` module."
msgstr ""
"Nous venons de créer un fichier appelé _lib.cairo_, qui contient une "
"déclaration de module faisant référence à un autre module nommé "
"`hello_world`, ainsi que le fichier _hello_world.cairo_, qui contient les "
"détails d'implémentation du module `hello_world`."

#: src/ch01-02-hello-world.md:108
msgid ""
"Scarb requires your source files to be located within the _src_ directory."
msgstr ""
"Scarb exige que vos fichiers sources soient situés dans le répertoire _src_."

#: src/ch01-02-hello-world.md:110
msgid ""
"The top-level project directory is reserved for README files, license "
"information, configuration files, and any other non-code-related content. "
"Scarb ensures a designated location for all project components, maintaining "
"a structured organization."
msgstr ""
"Le répertoire de projet de haut niveau est réservé aux fichiers README, aux "
"informations de licence, aux fichiers de configuration et à tout autre "
"contenu non lié au code. Scarb assure un emplacement désigné pour tous les "
"composants du projet, en maintenant une organisation structurée."

#: src/ch01-02-hello-world.md:113
msgid ""
"If you started a project that doesn’t use Scarb, you can convert it to a "
"project that does use Scarb. Move the project code into the _src_ directory "
"and create an appropriate _Scarb.toml_ file. You can also use `scarb init` "
"command to generate the _src_ folder and the _Scarb.toml_ it contains."
msgstr ""
"Si vous avez démarré un projet qui n'utilise pas Scarb, vous pouvez le "
"convertir en un projet qui utilise Scarb. Déplacez le code de projet dans le "
"répertoire _src_ et créez un fichier _Scarb.toml_ approprié. Vous pouvez "
"également utiliser la commande `scarb init` pour générer le dossier _src_ et "
"le _Scarb.toml_ qu'il contient."

#: src/ch01-02-hello-world.md:122
msgid "<span class=\"caption\"> A sample Scarb project structure</span>"
msgstr ""
"<span class=\"caption\"> Un échantillon Structure du projet Scarb</span>"

#: src/ch01-02-hello-world.md:128
msgid "Building a Scarb Project"
msgstr "Construction d'un projet d'écharpe"

#: src/ch01-02-hello-world.md:130
msgid ""
"From your _hello_world_ directory, build your project by entering the "
"following command:"
msgstr ""
"À partir de votre répertoire _hello_world_, construisez votre projet en "
"entrant la commande suivante :"

#: src/ch01-02-hello-world.md:138
msgid ""
"This command creates a `sierra` file in _target/dev_, let's ignore the "
"`sierra` file for now."
msgstr ""
"Cette commande crée un fichier `sierra` dans _target/dev_, oublions le "
"fichier `sierra` pour le moment."

#: src/ch01-02-hello-world.md:140
msgid ""
"If you have installed Cairo correctly, you should be able to run the `main` "
"function of your program with the `scarb cairo-run` command and see the "
"following output:"
msgstr ""
"Si vous avez installé le Caire correctement, vous devriez être en mesure "
"d'exécuter la fonction `main` de votre programme avec la commande `scarb "
"cairo-run` et voir la sortie suivante:"

#: src/ch01-02-hello-world.md:149
msgid ""
"Regardless of your operating system, the string `Hello, world!` should be "
"printed to the terminal."
msgstr ""
"Quel que soit votre système d'exploitation, la chaîne `Bonjour, monde!` "
"devrait être imprimée sur le terminal."

#: src/ch01-02-hello-world.md:152
msgid ""
"If `Hello, world!` did print, congratulations! You’ve officially written a "
"Cairo program. That makes you a Cairo programmer — welcome!"
msgstr ""
"Si `Bonjour, monde!` a imprimé, félicitations! Vous avez officiellement "
"écrit un programme du Caire. Cela fait de vous un programmeur du Caire — "
"bienvenue!"

#: src/ch01-02-hello-world.md:155
msgid "Anatomy of a Cairo Program"
msgstr "Anatomie d'un programme du Caire"

#: src/ch01-02-hello-world.md:157
msgid ""
"Let’s review this “Hello, world!” program in detail. Here’s the first piece "
"of the puzzle:"
msgstr ""
"Laissez-nous passer en revue ce programme en détail. Voici le premier "
"morceau du puzzle:"

#: src/ch01-02-hello-world.md:166
msgid ""
"These lines define a function named `main`. The `main` function is special: "
"it is always the first code that runs in every executable Cairo program. "
"Here, the first line declares a function named `main` that has no parameters "
"and returns nothing. If there were parameters, they would go inside the "
"parentheses `()`."
msgstr ""
"Ces lignes définissent une fonction nommée `main`. La fonction `main` est "
"spéciale: c'est toujours le premier code qui fonctionne dans chaque "
"programme exécutable du Caire. Ici, la première ligne déclare une fonction "
"nommée `main` qui n'a aucun paramètre et ne renvoie rien. S'il y avait des "
"paramètres, ils iraient à l'intérieur des parenthèses `()`."

#: src/ch01-02-hello-world.md:171
msgid ""
"The function body is wrapped in `{}`. Cairo requires curly brackets around "
"all function bodies. It’s good style to place the opening curly bracket on "
"the same line as the function declaration, adding one space in between."
msgstr ""
"Le corps de la fonction est enveloppé dans `{}`. Le Caire nécessite des "
"crochets bouclés autour de tous les corps de la fonction. Il est bon de "
"placer le crochet d'ouverture bouclé sur la même ligne que la déclaration de "
"la fonction, en ajoutant un espace entre les deux."

#: src/ch01-02-hello-world.md:175
msgid ""
"Note: If you want to stick to a standard style across Cairo projects, you "
"can use the automatic formatter tool available with `scarb fmt` to format "
"your code in a particular style (more on `scarb fmt` in [Appendix F](./"
"appendix-06-useful-development-tools.md)). The Cairo team has included this "
"tool with the standard Cairo distribution, as `cairo-run` is, so it should "
"already be installed on your computer!"
msgstr ""
"Remarque : Si vous voulez vous en tenir à un style standard dans tous les "
"projets du Caire, vous pouvez utiliser l'outil de forme automatique "
"disponible avec `scarb fmt` pour formater votre code dans un style "
"particulier (plus sur `scarb fmt` dans [Appendice F](./appendix-06-useful-"
"development-tools.md)). L'équipe du Caire a inclus cet outil avec la "
"distribution standard du Caire, comme `cairo-run` est, donc il devrait déjà "
"être installé sur votre ordinateur!"

#: src/ch01-02-hello-world.md:182
msgid "The body of the `main` function holds the following code:"
msgstr "Le corps de la fonction `main` contient le code suivant:"

#: src/ch01-02-hello-world.md:188
msgid ""
"This line does all the work in this little program: it prints text to the "
"screen. There are four important details to notice here."
msgstr ""
"Cette ligne fait tout le travail dans ce petit programme : elle imprime du "
"texte à l'écran. Il y a quatre détails importants à remarquer ici."

#: src/ch01-02-hello-world.md:191
msgid "First, Cairo style is to indent with four spaces, not a tab."
msgstr ""
"Tout d'abord, le style du Caire est d'entrer avec quatre espaces, pas un "
"onglet."

#: src/ch01-02-hello-world.md:193
msgid ""
"Second, `println!` calls a Cairo macro. If it had called a function instead, "
"it would be entered as `println` (without the `!`). We’ll discuss Cairo "
"macros in more detail in the [\"Macros\"](./ch11-05-macros.md) chapter. For "
"now, you just need to know that using a `!` means that you’re calling a "
"macro instead of a normal function and that macros don’t always follow the "
"same rules as functions."
msgstr ""
"Deuxièmement, `println!` appelle une macro du Caire. S'il avait appelé une "
"fonction à la place, il serait entré comme `println` (sans la `!`). Nous "
"allons discuter des macros du Caire plus en détail dans le chapitre [./"
"ch11-05-macros.md). Pour l'instant, vous avez juste besoin de savoir que "
"l'utilisation d'un `!` signifie que vous appelez une macro au lieu d'une "
"fonction normale et que les macros ne suivent pas toujours les mêmes règles "
"que les fonctions."

#: src/ch01-02-hello-world.md:196
msgid ""
"Third, you see the `\"Hello, world!\"` string. We pass this string as an "
"argument to `println!`, and the string is printed to the screen."
msgstr ""
"Troisièmement, vous voyez la chaîne `\"Bonjour, monde!\"`. Nous passons "
"cette chaîne comme argument à `println!`, et la chaîne est imprimée à "
"l'écran."

#: src/ch01-02-hello-world.md:198
msgid ""
"Fourth, we end the line with a semicolon (`;`), which indicates that this "
"expression is over and the next one is ready to begin. Most lines of Cairo "
"code end with a semicolon."
msgstr ""
"Quatrièmement, nous terminons la ligne par un point-virgule (`;`), ce qui "
"indique que cette expression est terminée et que la suivante est prête à "
"commencer. La plupart des lignes du code du Caire se terminent par un point-"
"virgule."

#: src/ch01-02-hello-world.md:205
msgid "{{#quiz ../quizzes/ch01-02-hello-world.toml}}"
msgstr "{{#quiz../quizes/ch01-02-hello-world.toml}}"

#: src/ch01-02-hello-world.md:207 src/ch02-05-control-flow.md:311
#: src/ch07-05-separating-modules-into-different-files.md:97
#: src/ch09-02-recoverable-errors.md:188 src/ch10-02-test-organization.md:265
#: src/ch11-01-custom-data-structures.md:345
#: src/ch11-06-inlining-in-cairo.md:269
#: src/ch17-02-testing-smart-contracts.md:730
msgid "Summary"
msgstr "Résumé"

#: src/ch01-02-hello-world.md:209
msgid "Let’s recap what we’ve learned so far about Scarb:"
msgstr ""
"Récapitulons ce que nous avons appris jusqu'à présent à propos de Scarb:"

#: src/ch01-02-hello-world.md:211
msgid ""
"We can install one or multiple Scarb versions, either the latest stable or a "
"specific one, using asdf."
msgstr ""
"Nous pouvons installer une ou plusieurs versions Scarb, soit la dernière "
"stable, soit une version spécifique, en utilisant asdf."

#: src/ch01-02-hello-world.md:212
msgid "We can create a project using `scarb new`."
msgstr "Nous pouvons créer un projet en utilisant `scarb new`."

#: src/ch01-02-hello-world.md:213
msgid ""
"We can build a project using `scarb build` to generate the compiled Sierra "
"code."
msgstr ""
"Nous pouvons construire un projet en utilisant `scarb build` pour générer le "
"code de Sierra compilé."

#: src/ch01-02-hello-world.md:214
msgid "We can execute a Cairo program using the `scarb cairo-run` command."
msgstr ""
"Nous pouvons exécuter un programme du Caire en utilisant la commande `scarb "
"cairo-run`."

#: src/ch01-02-hello-world.md:216
msgid ""
"An additional advantage of using Scarb is that the commands are the same no "
"matter which operating system you’re working on. So, at this point, we’ll no "
"longer provide specific instructions for Linux and macOS versus Windows."
msgstr ""
"Un avantage supplémentaire de l'utilisation de Scarb est que les commandes "
"sont les mêmes quel que soit le système d'exploitation sur lequel vous "
"travaillez. Donc, à ce stade, nous ne fournissons plus d'instructions "
"spécifiques pour Linux et macOS par rapport à Windows."

#: src/ch01-02-hello-world.md:218
msgid ""
"You’re already off to a great start on your Cairo journey! This is a great "
"time to build a more substantial program to get used to reading and writing "
"Cairo code."
msgstr ""
"Vous êtes déjà sur un bon départ sur votre voyage au Caire! C'est un grand "
"moment pour construire un programme plus substantiel pour s'habituer à la "
"lecture et à l'écriture du code du Caire."

#: src/ch02-00-common-programming-concepts.md
msgid ""
"This chapter covers concepts that appear in almost every programming "
"language and how they work in Cairo. Many programming languages have much in "
"common at their core. None of the concepts presented in this chapter are "
"unique to Cairo, but we’ll discuss them in the context of Cairo and explain "
"the conventions around using these concepts."
msgstr ""
"Ce chapitre couvre les concepts qui apparaissent dans presque tous les "
"langages de programmation et comment ils fonctionnent au Caire. Beaucoup de "
"langages de programmation ont beaucoup en commun à leur base. Aucun des "
"concepts présentés dans ce chapitre sont uniques au Caire, mais nous allons "
"les discuter dans le contexte du Caire et expliquer les conventions autour "
"de l'utilisation de ces concepts."

#: src/ch02-00-common-programming-concepts.md
msgid ""
"Specifically, you’ll learn about variables, basic types, functions, "
"comments, and control flow. These foundations will be in every Cairo "
"program, and learning them early will give you a strong core to start from."
msgstr ""
"Plus précisément, vous apprendrez sur les variables, les types de base, les "
"fonctions, les commentaires et le flux de contrôle. Ces fondations seront "
"dans chaque programme du Caire, et les apprendre tôt vous donnera un noyau "
"solide à partir de."

#: src/ch02-01-variables-and-mutability.md:3
msgid ""
"Cairo uses an immutable memory model, meaning that once a memory cell is "
"written to, it can't be overwritten but only read from. To reflect this "
"immutable memory model, variables in Cairo are immutable by default. "
"However, the language abstracts this model and gives you the option to make "
"your variables mutable. Let’s explore how and why Cairo enforces "
"immutability, and how you can make your variables mutable."
msgstr ""
"Le Caire utilise un modèle de mémoire immuable, ce qui signifie qu'une fois "
"qu'une cellule de mémoire est écrite, elle ne peut pas être écrasée mais "
"seulement lue. Pour refléter ce modèle de mémoire immuable, les variables au "
"Caire sont immuables par défaut. Cependant, le langage abstractionne ce "
"modèle et vous donne la possibilité de rendre vos variables mutables."

#: src/ch02-01-variables-and-mutability.md:10
msgid ""
"When a variable is immutable, once a value is bound to a name, you can’t "
"change that value. To illustrate this, generate a new project called "
"_variables_ in your _cairo_projects_ directory by using `scarb new "
"variables`."
msgstr ""
"Quand une variable est immuable, une fois qu'une valeur est liée à un nom, "
"vous ne pouvez pas changer cette valeur. Pour illustrer cela, générer un "
"nouveau projet appelé _variables_ dans votre répertoire _cairo_projects_ en "
"utilisant `scarb new variables`."

#: src/ch02-01-variables-and-mutability.md:14
msgid ""
"Then, in your new _variables_ directory, open _src/lib.cairo_ and replace "
"its code with the following code, which won’t compile just yet:"
msgstr ""
"Ensuite, dans votre nouveau répertoire _variables_, ouvrez _src/lib.cairo_ "
"et remplacez son code par le code suivant, qui n'a pas encore été compilé :"

#: src/ch02-01-variables-and-mutability.md:17
#: src/ch04-01-what-is-ownership.md:265 src/ch04-01-what-is-ownership.md:310
#: src/ch04-02-references-and-snapshots.md:26
#: src/ch04-02-references-and-snapshots.md:118
#: src/ch05-01-defining-and-instantiating-structs.md:7
#: src/ch05-01-defining-and-instantiating-structs.md:27
#: src/ch05-01-defining-and-instantiating-structs.md:53
#: src/ch05-01-defining-and-instantiating-structs.md:89
#: src/ch05-01-defining-and-instantiating-structs.md:125
#: src/ch05-01-defining-and-instantiating-structs.md:167
#: src/ch05-01-defining-and-instantiating-structs.md:203
#: src/ch05-02-an-example-program-using-structs.md:7
#: src/ch05-02-an-example-program-using-structs.md:50
#: src/ch05-02-an-example-program-using-structs.md:75
#: src/ch07-02-defining-modules-to-control-scope.md:80
#: src/ch07-02-defining-modules-to-control-scope.md:137
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:14
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:90
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:116
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:150
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:10
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:36
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:81
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:133
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:206
#: src/ch07-05-separating-modules-into-different-files.md:18
#: src/ch09-01-unrecoverable-errors-with-panic.md:9
#: src/ch10-01-how-to-write-tests.md:32 src/ch10-01-how-to-write-tests.md:95
#: src/ch10-01-how-to-write-tests.md:146 src/ch10-01-how-to-write-tests.md:228
#: src/ch10-01-how-to-write-tests.md:340 src/ch10-01-how-to-write-tests.md:564
#: src/ch10-01-how-to-write-tests.md:658 src/ch10-01-how-to-write-tests.md:747
msgid "<span class=\"filename\">Filename: src/lib.cairo</span>"
msgstr "<span class=\"filename\">Nom du fichier: src/lib.cairo</span>"

#: src/ch02-01-variables-and-mutability.md:22
#: src/ch02-01-variables-and-mutability.md:24
#: src/ch02-01-variables-and-mutability.md:89
#: src/ch02-01-variables-and-mutability.md:91
#: src/ch02-01-variables-and-mutability.md:248
#: src/ch02-01-variables-and-mutability.md:250 src/ch02-03-functions.md:71
#: src/ch02-03-functions.md:287 src/ch02-03-functions.md:325
#: src/ch02-03-functions.md:341
msgid "\"The value of x is: {}\""
msgstr "\"La valeur de x est: {}\""

#: src/ch02-01-variables-and-mutability.md:29
msgid ""
"Save and run the program using `scarb cairo-run`. You should receive an "
"error message regarding an immutability error, as shown in this output:"
msgstr ""
"Enregistrer et exécuter le programme en utilisant `scarb cairo-run`. Vous "
"devriez recevoir un message d'erreur concernant une erreur d'immutabilité, "
"comme indiqué dans cette sortie:"

#: src/ch02-01-variables-and-mutability.md:45
msgid ""
"This example shows how the compiler helps you find errors in your programs. "
"Compiler errors can be frustrating, but they only mean your program isn’t "
"safely doing what you want it to do yet; they do _not_ mean that you’re not "
"a good programmer! Experienced Caironautes still get compiler errors."
msgstr ""
"Cet exemple montre comment le compilateur vous aide à trouver des erreurs "
"dans vos programmes. Les erreurs de compilateur peuvent être frustrantes, "
"mais elles signifient seulement que votre programme n'est pas en toute "
"sécurité faire ce que vous voulez qu'il fasse encore; elles font _not_ "
"signifient que vous n'êtes pas un bon programmeur!"

#: src/ch02-01-variables-and-mutability.md:50
msgid ""
"You received the error message `Cannot assign to an immutable variable.` "
"because you tried to assign a second value to the immutable `x` variable."
msgstr ""
"Vous avez reçu le message d'erreur `Impossible d'attribuer à une variable "
"immuable.` parce que vous avez essayé d'attribuer une deuxième valeur à la "
"variable immuable `x`."

#: src/ch02-01-variables-and-mutability.md:53
msgid ""
"It’s important that we get compile-time errors when we attempt to change a "
"value that’s designated as immutable because this specific situation can "
"lead to bugs. If one part of our code operates on the assumption that a "
"value will never change and another part of our code changes that value, "
"it’s possible that the first part of the code won’t do what it was designed "
"to do. The cause of this kind of bug can be difficult to track down after "
"the fact, especially when the second piece of code changes the value only "
"_sometimes_."
msgstr ""
"Il est important que nous obtenions des erreurs de compilation-temps lorsque "
"nous essayons de changer une valeur qui est désignée comme immuable parce "
"que cette situation spécifique peut conduire à des bogues. Si une partie de "
"notre code fonctionne sur l'hypothèse qu'une valeur ne changera jamais et "
"qu'une autre partie de notre code change cette valeur, il est possible que "
"la première partie du code ne fasse pas ce qu'il a été conçu pour faire. La "
"cause de ce type de bogue peut être difficile à suivre après le fait, "
"surtout lorsque le deuxième morceau de code ne change la valeur que "
"_parfois_."

#: src/ch02-01-variables-and-mutability.md:61
msgid ""
"Cairo, unlike most other languages, has immutable memory. This makes a whole "
"class of bugs impossible, because values will never change unexpectedly. "
"This makes code easier to reason about."
msgstr ""
"Le Caire, contrairement à la plupart des autres langues, a une mémoire "
"immuable. Cela rend toute une classe de bogues impossible, car les valeurs "
"ne changeront jamais de façon inattendue. Cela rend le code plus facile à "
"raisonner."

#: src/ch02-01-variables-and-mutability.md:65
msgid ""
"But mutability can be very useful, and can make code more convenient to "
"write. Although variables are immutable by default, you can make them "
"mutable by adding `mut` in front of the variable name. Adding `mut` also "
"conveys intent to future readers of the code by indicating that other parts "
"of the code will be changing the value associated to this variable."
msgstr ""
"Mais la mutabilité peut être très utile, et peut rendre le code plus "
"pratique à écrire. Bien que les variables soient immuables par défaut, vous "
"pouvez les rendre mutables en ajoutant `mut` devant le nom de la variable. "
"Ajouter `mut` transmet également l'intention aux futurs lecteurs du code en "
"indiquant que d'autres parties du code changeront la valeur associée à cette "
"variable."

#: src/ch02-01-variables-and-mutability.md:73
msgid ""
"However, you might be wondering at this point what exactly happens when a "
"variable is declared as `mut`, as we previously mentioned that Cairo's "
"memory is immutable. The answer is that the _value_ is immutable, but the "
"_variable_ isn't. The value associated to the variable can be changed. "
"Assigning to a mutable variable in Cairo is essentially equivalent to "
"redeclaring it to refer to another value in another memory cell, but the "
"compiler handles that for you, and the keyword `mut` makes it explicit. Upon "
"examining the low-level Cairo Assembly code, it becomes clear that variable "
"mutation is implemented as syntactic sugar, which translates mutation "
"operations into a series of steps equivalent to variable shadowing. The only "
"difference is that at the Cairo level, the variable is not redeclared so its "
"type cannot change."
msgstr ""
"Cependant, vous vous demandez peut-être à ce stade ce qui se passe "
"exactement lorsqu'une variable est déclarée comme étant `mut`, comme nous "
"l'avons déjà mentionné, la mémoire du Caire est immuable. La réponse est que "
"la _value_ est immuable, mais la _variable_ n'est pas. La valeur associée à "
"la variable peut être modifiée. L'attribution à une variable mutable au "
"Caire est essentiellement équivalente à la redéclaration de la variable pour "
"renvoyer à une autre valeur dans une autre cellule mémoire, mais le "
"compilateur gère cela pour vous, et le mot-clé `mut` la rend explicite."

#: src/ch02-01-variables-and-mutability.md:84
msgid "For example, let’s change _src/lib.cairo_ to the following:"
msgstr "Par exemple, laissez passer _src/lib.cairo_ à ce qui suit :"

#: src/ch02-01-variables-and-mutability.md:95
msgid "When we run the program now, we get this:"
msgstr "Lorsque nous exécutons le programme maintenant, nous obtenons ceci:"

#: src/ch02-01-variables-and-mutability.md:108
msgid ""
"We’re allowed to change the value bound to `x` from `5` to `6` when `mut` is "
"used. Ultimately, deciding whether to use mutability or not is up to you and "
"depends on what you think is clearest in that particular situation."
msgstr ""
"Nous sommes autorisés à changer la valeur liée à `x` de `5` à `6` quand "
"`mut` est utilisé. En fin de compte, décider s'il faut utiliser la "
"mutabilité ou non est à vous et dépend de ce que vous pensez être le plus "
"clair dans cette situation particulière."

#: src/ch02-01-variables-and-mutability.md:112
msgid "Constants"
msgstr "Constantes"

#: src/ch02-01-variables-and-mutability.md:114
msgid ""
"Like immutable variables, _constants_ are values that are bound to a name "
"and are not allowed to change, but there are a few differences between "
"constants and variables."
msgstr ""
"Comme les variables immuables, _constants_ sont des valeurs liées à un nom "
"et qui ne sont pas autorisées à changer, mais il y a quelques différences "
"entre les constantes et les variables."

#: src/ch02-01-variables-and-mutability.md:118
msgid ""
"First, you aren’t allowed to use `mut` with constants. Constants aren’t just "
"immutable by default—they’re always immutable. You declare constants using "
"the `const` keyword instead of the `let` keyword, and the type of the value "
"_must_ be annotated. We’ll cover types and type annotations in the next "
"section, [“Data Types”](./ch02-02-data-types.md), so don’t worry about the "
"details right now. Just know that you must always annotate the type."
msgstr ""
"Tout d'abord, vous n'êtes pas autorisé à utiliser `mut` avec des constantes. "
"Les constantes ne sont pas simplement immuables par défaut — elles sont "
"toujours immuables. Vous déclarez les constantes en utilisant le mot-clé "
"`const` au lieu du mot-clé `let`, et le type de la valeur _must_ être "
"annoté. Nous allons couvrir les types et les annotations de type dans la "
"section suivante, [=Types de données=](./ch02-02-data-types.md), donc ne "
"vous inquiétez pas des détails en ce moment. Sachez juste que vous devez "
"toujours annoter le type."

#: src/ch02-01-variables-and-mutability.md:125
msgid ""
"Constant variables can be declared with any usual data type, including "
"structs, enums and fixed-size arrays."
msgstr ""
"Les variables constantes peuvent être déclarées avec n'importe quel type de "
"données habituel, y compris les structures, les enums et les tableaux de "
"taille fixe."

#: src/ch02-01-variables-and-mutability.md:127
msgid ""
"Constants can only be declared in the global scope, which makes them useful "
"for values that many parts of code need to know about."
msgstr ""
"Les constantes ne peuvent être déclarées qu'à l'échelle mondiale, ce qui les "
"rend utiles pour les valeurs que de nombreuses parties du code doivent "
"connaître."

#: src/ch02-01-variables-and-mutability.md:130
msgid ""
"The last difference is that constants may natively be set only to a constant "
"expression, not the result of a value that could only be computed at runtime."
msgstr ""
"La dernière différence est que les constantes peuvent nativement être "
"définies seulement à une expression constante, pas le résultat d'une valeur "
"qui ne pourrait être calculée qu'à l'exécution."

#: src/ch02-01-variables-and-mutability.md:133
msgid "Here’s an example of constants declaration:"
msgstr "Voici un exemple de déclaration des constantes:"

#: src/ch02-01-variables-and-mutability.md:152
msgid ""
"Nonetheless, it is possible to use the `consteval_int!` macro to create a "
"`const` variable that is the result of some computation:"
msgstr ""
"Néanmoins, il est possible d'utiliser la macro `consteval_int!` pour créer "
"une variable `const` qui est le résultat d'un certain calcul:"

#: src/ch02-01-variables-and-mutability.md:158
msgid ""
"We will dive into more detail about macros in the [dedicated section](./"
"ch11-05-macros.md)."
msgstr ""
"Nous plongerons dans plus de détails sur les macros dans la [section dédiée]"
"(../ch11-05-macros.md)."

#: src/ch02-01-variables-and-mutability.md:160
msgid ""
"Cairo's naming convention for constants is to use all uppercase with "
"underscores between words."
msgstr ""
"La convention du Caire pour la désignation des constantes est d'utiliser "
"toutes les majuscules avec des accents entre les mots."

#: src/ch02-01-variables-and-mutability.md:162
msgid ""
"Constants are valid for the entire time a program runs, within the scope in "
"which they were declared. This property makes constants useful for values in "
"your application domain that multiple parts of the program might need to "
"know about, such as the maximum number of points any player of a game is "
"allowed to earn, or the speed of light."
msgstr ""
"Les constantes sont valables pendant toute la durée d'exécution d'un "
"programme, dans la portée dans laquelle elles ont été déclarées. Cette "
"propriété rend les constantes utiles pour les valeurs dans votre domaine "
"d'application que plusieurs parties du programme pourraient avoir besoin de "
"connaître, comme le nombre maximum de points que tout joueur d'un jeu est "
"autorisé à gagner, ou la vitesse de la lumière."

#: src/ch02-01-variables-and-mutability.md:168
msgid ""
"Naming hardcoded values used throughout your program as constants is useful "
"in conveying the meaning of that value to future maintainers of the code. It "
"also helps to have only one place in your code you would need to change if "
"the hardcoded value needed to be updated in the future."
msgstr ""
"Nommer des valeurs codées en dur utilisées tout au long de votre programme "
"comme constantes est utile pour transmettre le sens de cette valeur aux "
"futurs responsables du code. Il aide également à avoir une seule place dans "
"votre code que vous auriez besoin de changer si la valeur codée en dur "
"devait être mise à jour à l'avenir."

#: src/ch02-01-variables-and-mutability.md:175
msgid "Shadowing"
msgstr "L'ombre"

#: src/ch02-01-variables-and-mutability.md:177
msgid ""
"Variable shadowing refers to the declaration of a new variable with the same "
"name as a previous variable. Caironautes say that the first variable is "
"_shadowed_ by the second, which means that the second variable is what the "
"compiler will see when you use the name of the variable. In effect, the "
"second variable overshadows the first, taking any uses of the variable name "
"to itself until either it itself is shadowed or the scope ends. We can "
"shadow a variable by using the same variable’s name and repeating the use of "
"the `let` keyword as follows:"
msgstr ""
"Les Caironautes disent que la première variable est _shadowed_ par la "
"seconde, ce qui signifie que la deuxième variable est ce que le compilateur "
"verra lorsque vous utiliserez le nom de la variable. En effet, la deuxième "
"variable recouvre la première, prenant toutes les utilisations du nom de la "
"variable à elle-même jusqu'à ce qu'elle soit elle-même ombragée ou que la "
"portée se termine. Nous pouvons ombrer une variable en utilisant le même nom "
"de variable et en répétant l'utilisation du mot-clé `let` comme suit:"

#: src/ch02-01-variables-and-mutability.md:192
msgid "\"Inner scope x value is: {}\""
msgstr "\"La valeur de la portée interne x est : {}\""

#: src/ch02-01-variables-and-mutability.md:194
msgid "\"Outer scope x value is: {}\""
msgstr "\"Outer scope x value is: {}\""

#: src/ch02-01-variables-and-mutability.md:198
msgid ""
"This program first binds `x` to a value of `5`. Then it creates a new "
"variable `x` by repeating `let x =`, taking the original value and adding "
"`1` so the value of `x` is then `6`. Then, within an inner scope created "
"with the curly brackets, the third `let` statement also shadows `x` and "
"creates a new variable, multiplying the previous value by `2` to give `x` a "
"value of `12`. When that scope is over, the inner shadowing ends and `x` "
"returns to being `6`. When we run this program, it will output the following:"
msgstr ""
"Ce programme lie d'abord `x` à une valeur de `5`. Ensuite, il crée une "
"nouvelle variable `x` en répétant `let x=`, en prenant la valeur d'origine "
"et en ajoutant `1` de sorte que la valeur de `x` est alors `6`. Ensuite, "
"dans une portée intérieure créée avec les crochets bouclés, la troisième "
"instruction `let` aussi ombres `x` et crée une nouvelle variable, en "
"multipliant la valeur précédente par `2` pour donner `x` une valeur de `12`. "
"Lorsque cette portée est terminée, les extrémités de l'ombre intérieure et "
"`x` reviennent à être `6`. Lorsque nous exécutons ce programme, il affichera "
"ce qui suit:"

#: src/ch02-01-variables-and-mutability.md:217
msgid ""
"Shadowing is different from marking a variable as `mut` because we’ll get a "
"compile-time error if we accidentally try to reassign to this variable "
"without using the `let` keyword. By using `let`, we can perform a few "
"transformations on a value but have the variable be immutable after those "
"transformations have been completed."
msgstr ""
"Shadowing est différent de marquer une variable comme `mut` parce que nous "
"allons obtenir une erreur de compilation-temps si nous essayons "
"accidentellement de réassigner à cette variable sans utiliser le mot-clé "
"`let`. En utilisant `let`, nous pouvons effectuer quelques transformations "
"sur une valeur mais avons la variable être immuable après que ces "
"transformations ont été terminées."

#: src/ch02-01-variables-and-mutability.md:223
msgid ""
"Another distinction between `mut` and shadowing is that when we use the "
"`let` keyword again, we are effectively creating a new variable, which "
"allows us to change the type of the value while reusing the same name. As "
"mentioned before, variable shadowing and mutable variables are equivalent at "
"the lower level. The only difference is that by shadowing a variable, the "
"compiler will not complain if you change its type. For example, say our "
"program performs a type conversion between the `u64` and `felt252` types."
msgstr ""
"Une autre distinction entre `mut` et ombre est que lorsque nous utilisons le "
"mot clé `let` à nouveau, nous créons effectivement une nouvelle variable, ce "
"qui nous permet de changer le type de la valeur tout en réutilisant le même "
"nom. Comme mentionné précédemment, variable ombre et variables mutables sont "
"équivalentes au niveau inférieur. La seule différence est que par ombre "
"d'une variable, le compilateur ne se plaindra pas si vous changez son type. "
"Par exemple, notre programme effectue une conversion de type entre les types "
"`u64` et `felt252`."

#: src/ch02-01-variables-and-mutability.md:234
msgid "\"The value of x is {} of type u64\""
msgstr "\"La valeur de x est {} du type u64\""

#: src/ch02-01-variables-and-mutability.md:235
msgid "// converts x to a felt, type annotation is required.\n"
msgstr "// convertit x en feutre, une annotation de type est requise.\n"

#: src/ch02-01-variables-and-mutability.md:236
msgid "\"The value of x is {} of type felt252\""
msgstr "\"La valeur de x est {} du type feutre252\""

#: src/ch02-01-variables-and-mutability.md:240
msgid ""
"The first `x` variable has a `u64` type while the second `x` variable has a "
"`felt252` type. Shadowing thus spares us from having to come up with "
"different names, such as `x_u64` and `x_felt252`; instead, we can reuse the "
"simpler `x` name. However, if we try to use `mut` for this, as shown here, "
"we’ll get a compile-time error:"
msgstr ""
"La première variable `x` a un type `u64` tandis que la deuxième variable `x` "
"a un type `felt252`. Shadowing nous évite ainsi d'avoir à trouver des noms "
"différents, tels que `x_u64` et `x_felt252`; au lieu de cela, nous pouvons "
"réutiliser le nom `x` plus simple. Cependant, si nous essayons d'utiliser "
"`mut` pour cela, comme montré ici, nous allons obtenir une erreur de "
"compilation-temps:"

#: src/ch02-01-variables-and-mutability.md:254
msgid ""
"The error says we were expecting a `u64` (the original type) but we got a "
"different type:"
msgstr ""
"L'erreur dit que nous nous attendions à un `u64` (le type original) mais "
"nous avons un type différent:"

#: src/ch02-01-variables-and-mutability.md:269
msgid "{{#quiz ../quizzes/ch02-01-variables-and-mutability.toml}}"
msgstr "{{#quiz../quizes/ch02-01-variables-et-mutabilité.toml}}"

#: src/ch02-01-variables-and-mutability.md:271
msgid ""
"Now that we’ve explored how variables work, let’s look at more data types "
"they can have."
msgstr ""
"Maintenant que nous avons exploré comment les variables fonctionnent, "
"laissons-nous regarder plus de types de données qu'ils peuvent avoir."

#: src/ch02-02-data-types.md:3
msgid ""
"Every value in Cairo is of a certain _data type_, which tells Cairo what "
"kind of data is being specified so it knows how to work with that data. This "
"section covers two subsets of data types: scalars and compounds."
msgstr ""
"Chaque valeur au Caire est d'un certain type de _données_, qui indique au "
"Caire quel type de données est spécifié afin qu'il sache travailler avec ces "
"données. Cette section couvre deux sous-ensembles de types de données : "
"scalars et composés."

#: src/ch02-02-data-types.md:6
msgid ""
"Keep in mind that Cairo is a _statically typed_ language, which means that "
"it must know the types of all variables at compile time. The compiler can "
"usually infer the desired type based on the value and its usage. In cases "
"when many types are possible, we can use a cast method where we specify the "
"desired output type."
msgstr ""
"Gardez à l'esprit que le Caire est un langage _statically dactylographié, ce "
"qui signifie qu'il doit connaître les types de toutes les variables au "
"moment de la compilation. Le compilateur peut généralement déduire le type "
"désiré en fonction de la valeur et de son utilisation."

#: src/ch02-02-data-types.md:16
msgid "You’ll see different type annotations for other data types."
msgstr ""
"Vous verrez différentes annotations de type pour d'autres types de données."

#: src/ch02-02-data-types.md:18
msgid "Scalar Types"
msgstr "Types scalaires"

#: src/ch02-02-data-types.md:20
msgid ""
"A _scalar_ type represents a single value. Cairo has three primary scalar "
"types: felts, integers, and booleans. You may recognize these from other "
"programming languages. Let’s jump into how they work in Cairo."
msgstr ""
"Un type _scalar_ représente une valeur unique. Le Caire a trois types de "
"scalaires primaires : les feutres, les entiers et les booléens. Vous pouvez "
"les reconnaître à partir d'autres langages de programmation."

#: src/ch02-02-data-types.md:24
msgid "Felt Type"
msgstr "Type de feutre"

#: src/ch02-02-data-types.md:26
msgid ""
"In Cairo, if you don't specify the type of a variable or argument, its type "
"defaults to a field element, represented by the keyword `felt252`. In the "
"context of Cairo, when we say “a field element” we mean an integer in the "
"range \\\\( 0 \\leq x \\< P \\\\), where \\\\( P \\\\) is a very large prime "
"number currently equal to \\\\( {2^{251}} + 17 \\cdot {2^{192}} + 1 \\\\). "
"When adding, subtracting, or multiplying, if the result falls outside the "
"specified range of the prime number, an overflow (or underflow) occurs, and "
"an appropriate multiple of \\\\( P \\\\) is added or subtracted to bring the "
"result back within the range (i.e., the result is computed \\\\( \\mod P \\"
"\\) )."
msgstr ""
"Au Caire, si vous ne spécifiez pas le type d'une variable ou d'un argument, "
"son type par défaut à un élément de champ, représenté par le mot-clé "
"`felt252`. Dans le contexte du Caire, lorsque nous disons \"un élément de "
"champ\" nous entendons un entier dans la plage \\\\( 0 \\leq x \\< P \\\\), "
"où \\\\( P \\\\) est un très grand nombre primaire actuellement égal à \\"
"\\( {2^{251}} + 17 \\cdot {2^{192}}} + 1 \\\\). Lors de l'ajout, de la "
"soustraction ou de la multiplication, si le résultat sort de la plage "
"spécifiée du nombre principal, il se produit un débordement (ou un sous-"
"écoulement) et un multiple approprié de \\\\( P \\\\) est ajouté ou "
"soustrait pour ramener le résultat dans la plage (c'est-à-dire, le résultat "
"est calculé \\\\( \\mod P \\\\) )."

#: src/ch02-02-data-types.md:29
msgid ""
"The most important difference between integers and field elements is "
"division: Division of field elements (and therefore division in Cairo) is "
"unlike regular CPUs division, where integer division \\\\( \\frac{x}{y} \\"
"\\) is defined as \\\\( \\left\\lfloor \\frac{x}{y} \\right\\rfloor \\\\) "
"where the integer part of the quotient is returned (so you get \\"
"\\( \\frac{7}{3} = 2 \\\\)) and it may or may not satisfy the equation \\"
"\\( \\frac{x}{y} \\cdot y == x \\\\), depending on the divisibility of `x` "
"by `y`."
msgstr ""
"La différence la plus importante entre les entiers et les éléments de champ "
"est la division: La division des éléments de champ (et donc la division au "
"Caire) est différente de la division CPU régulière, où la division entière \\"
"\\( \\frac{x}{y} \\\\) est définie comme étant \\\\( \\left\\lfloor \\frac{x}"
"{y} \\right\\rfloor \\\\) où la partie entière du quotient est retournée (de "
"sorte que vous obtenez \\\\( \\frac{7}{3} = 2 \\\\)) et elle peut ou non "
"satisfaire à l'équation \\\\( \\frac{x}{y} \\cdot y == x \\\\), selon la "
"divisibilité de `x` par `y`."

#: src/ch02-02-data-types.md:34
msgid ""
"In Cairo, the result of \\\\( \\frac{x}{y} \\\\) is defined to always "
"satisfy the equation \\\\( \\frac{x}{y} \\cdot y == x \\\\). If y divides x "
"as integers, you will get the expected result in Cairo (for example \\"
"\\( \\frac{6}{2} \\\\) will indeed result in `3`). But when y does not "
"divide x, you may get a surprising result: for example, since \\\\( 2 \\cdot "
"\\frac{P + 1}{2} = P + 1 \\equiv 1 \\mod P \\\\), the value of \\"
"\\( \\frac{1}{2} \\\\) in Cairo is \\\\( \\frac{P + 1}{2} \\\\) (and not 0 "
"or 0.5), as it satisfies the above equation."
msgstr ""
"Au Caire, le résultat de \\\\( \\frac{x}{y} \\\\) est défini de manière à "
"satisfaire toujours l'équation \\\\( \\frac{x}{y} \\cdot y == x \\\\). Si y "
"divise x comme entiers, vous obtiendrez le résultat attendu au Caire (par "
"exemple \\\\( \\frac{6}{2} \\\\) se traduira en effet par `3`). Mais lorsque "
"y ne divise pas x, vous obtiendrez un résultat surprenant: par exemple, "
"puisque \\\\( 2 \\cdot \\frac{P + 1}{2} = P + 1 \\equiv 1 \\mod P \\\\\\), "
"la valeur de \\\\( \\frac{1}{2} \\\\) au Caire est \\\\( \\frac{P + 1}{2} \\"
"\\) (et non 0 ou 0,5), car elle satisfait à l'équation ci-dessus."

#: src/ch02-02-data-types.md:37
msgid "Integer Types"
msgstr "Types entiers"

#: src/ch02-02-data-types.md:39
msgid ""
"The felt252 type is a fundamental type that serves as the basis for creating "
"all types in the core library. However, it is highly recommended for "
"programmers to use the integer types instead of the `felt252` type whenever "
"possible, as the `integer` types come with added security features that "
"provide extra protection against potential vulnerabilities in the code, such "
"as overflow and underflow checks. By using these integer types, programmers "
"can ensure that their programs are more secure and less susceptible to "
"attacks or other security threats. An `integer` is a number without a "
"fractional component. This type declaration indicates the number of bits the "
"programmer can use to store the integer. Table 3-1 shows the built-in "
"integer types in Cairo. We can use any of these variants to declare the type "
"of an integer value."
msgstr ""
"Le type Feel252 est un type fondamental qui sert de base à la création de "
"tous les types dans la bibliothèque centrale. Cependant, il est fortement "
"recommandé pour les programmeurs d'utiliser les types entiers au lieu du "
"type \"felt252\" chaque fois que possible, car les types entiers sont dotés "
"de fonctionnalités de sécurité supplémentaires qui offrent une protection "
"supplémentaire contre les vulnérabilités potentielles dans le code, telles "
"que les contrôles de débordement et de sous-flux. En utilisant ces types "
"entiers, les programmeurs peuvent s'assurer que leurs programmes sont plus "
"sûrs et moins sensibles aux attaques ou autres menaces de sécurité. Un "
"\"integer\" est un nombre sans composant fractionnel. Cette déclaration de "
"type indique le nombre de bits que le programmeur peut utiliser pour stocker "
"l'entier. Le tableau 3-1 montre les types entiers intégrés au Caire. Nous "
"pouvons utiliser n'importe quelle variante pour déclarer le type de valeur "
"entière."

#: src/ch02-02-data-types.md:44
msgid "Length"
msgstr "Longueur"

#: src/ch02-02-data-types.md:44
msgid "Unsigned"
msgstr "Non signé"

#: src/ch02-02-data-types.md:46
msgid "8-bit"
msgstr "8 bits"

#: src/ch02-02-data-types.md:46
msgid "`u8`"
msgstr "«u8»"

#: src/ch02-02-data-types.md:47
msgid "16-bit"
msgstr "16 bits"

#: src/ch02-02-data-types.md:47
msgid "`u16`"
msgstr "«u16»"

#: src/ch02-02-data-types.md:48 src/ch02-02-data-types.md:52
msgid "32-bit"
msgstr "32 bits"

#: src/ch02-02-data-types.md:48
msgid "`u32`"
msgstr "«u32»"

#: src/ch02-02-data-types.md:49
msgid "64-bit"
msgstr "64 bits"

#: src/ch02-02-data-types.md:49
msgid "`u64`"
msgstr "«u64»"

#: src/ch02-02-data-types.md:50
msgid "128-bit"
msgstr "128 bits"

#: src/ch02-02-data-types.md:50
msgid "`u128`"
msgstr "«u128»"

#: src/ch02-02-data-types.md:51
msgid "256-bit"
msgstr "256 bits"

#: src/ch02-02-data-types.md:51
msgid "`u256`"
msgstr "«u256»"

#: src/ch02-02-data-types.md:52
msgid "`usize`"
msgstr "«viser à l'usage»"

#: src/ch02-02-data-types.md:57
msgid ""
"Each variant has an explicit size. Note that for now, the `usize` type is "
"just an alias for `u32`; however, it might be useful when in the future "
"Cairo can be compiled to MLIR. As variables are unsigned, they can't contain "
"a negative number. This code will cause the program to panic:"
msgstr ""
"Chaque variante a une taille explicite. Notez que pour l'instant, le type "
"`usize` n'est qu'un alias pour `u32`; cependant, il pourrait être utile "
"lorsque dans le futur Caire peut être compilé à MLIR. Comme les variables ne "
"sont pas signées, ils ne peuvent pas contenir un nombre négatif. Ce code "
"fera paniquer le programme:"

#: src/ch02-02-data-types.md:70
msgid ""
"All integer types previously mentioned fit into a `felt252`, except for "
"`u256` which needs 4 more bits to be stored. Under the hood, `u256` is "
"basically a struct with 2 fields: `u256 {low: u128, high: u128}`."
msgstr ""
"Tous les types entiers mentionnés précédemment s'intègrent dans un "
"`felt252`, à l'exception de `u256` qui nécessite 4 bits de plus à stocker. "
"Sous le capot, `u256` est essentiellement une structure avec 2 champs: `u256 "
"{low: u128, high: u128}`."

#: src/ch02-02-data-types.md:72
msgid ""
"Cairo also provides support for signed integers, starting with the prefix "
"`i`. These integers can represent both positive and negative values, with "
"sizes ranging from `i8` to `i128`. Each signed variant can store numbers "
"from \\\\( -({2^{n - 1}}) \\\\) to \\\\( {2^{n - 1}} - 1 \\\\) inclusive, "
"where `n` is the number of bits that variant uses. So an i8 can store "
"numbers from \\\\( -({2^7}) \\\\) to \\\\( {2^7} - 1 \\\\), which equals "
"`-128` to `127`."
msgstr ""
"Le Caire fournit également un support pour les entiers signés, en commençant "
"par le préfixe `i`. Ces entiers peuvent représenter à la fois des valeurs "
"positives et négatives, avec des tailles allant de `i8` à `i128`. Chaque "
"variante signée peut stocker des numéros de \\\\( {2^{n - 1}}) \\\\) à \\"
"\\( {2^{n - 1}} - 1 \\\\) inclusivement, où `n` est le nombre de bits que la "
"variante utilise. Ainsi, un i8 peut stocker des numéros de \\\\( -({2^7}) \\"
"\\) à \\\\( {2^7} - 1 \\\\), ce qui équivaut à `-128` à `127`."

#: src/ch02-02-data-types.md:75
msgid ""
"You can write integer literals in any of the forms shown in Table 3-2. Note "
"that number literals that can be multiple numeric types allow a type suffix, "
"such as `57_u8`, to designate the type. It is also possible to use a visual "
"separator `_` for number literals, in order to improve code readability."
msgstr ""
"Vous pouvez écrire des nombres entiers littéraux dans n'importe lequel des "
"formulaires indiqués dans le tableau 3-2. Notez que les nombres littéraux "
"qui peuvent être des types numériques multiples permettent à un suffixe de "
"type, comme `57_u8`, de désigner le type. Il est également possible "
"d'utiliser un séparateur visuel `_` pour les nombres littéraux, afin "
"d'améliorer la lisibilité du code."

#: src/ch02-02-data-types.md:80
msgid "Numeric literals"
msgstr "Littérales numériques"

#: src/ch02-02-data-types.md:80 src/appendix-02-operators-and-symbols.md:9
#: src/appendix-08-system-calls.md:177 src/appendix-08-system-calls.md:256
#: src/appendix-08-system-calls.md:331
msgid "Example"
msgstr "Exemple"

#: src/ch02-02-data-types.md:82
msgid "Decimal"
msgstr "Décimal"

#: src/ch02-02-data-types.md:82
msgid "`98222`"
msgstr "\"98222\""

#: src/ch02-02-data-types.md:83
msgid "Hex"
msgstr "Hex"

#: src/ch02-02-data-types.md:83
msgid "`0xff`"
msgstr "`0xff`"

#: src/ch02-02-data-types.md:84
msgid "Octal"
msgstr "Octal"

#: src/ch02-02-data-types.md:84
msgid "`0o04321`"
msgstr "`0o04321`"

#: src/ch02-02-data-types.md:85
msgid "Binary"
msgstr "Binaire"

#: src/ch02-02-data-types.md:85
msgid "`0b01`"
msgstr "`0b01`"

#: src/ch02-02-data-types.md:90
msgid ""
"So how do you know which type of integer to use? Try to estimate the max "
"value your int can have and choose the good size. The primary situation in "
"which you’d use `usize` is when indexing some sort of collection."
msgstr ""
"Alors comment savez-vous quel type d'entier à utiliser? Essayez d'estimer la "
"valeur maximale que votre int peut avoir et choisissez la bonne taille. La "
"situation principale dans laquelle vous avez utilisé `usize` est lors de "
"l'indexation d'une sorte de collection."

#: src/ch02-02-data-types.md:93
msgid "Numeric Operations"
msgstr "Opérations numériques"

#: src/ch02-02-data-types.md:95
msgid ""
"Cairo supports the basic mathematical operations you’d expect for all the "
"integer types: addition, subtraction, multiplication, division, and "
"remainder. Integer division truncates toward zero to the nearest integer. "
"The following code shows how you’d use each numeric operation in a `let` "
"statement:"
msgstr ""
"Le Caire prend en charge les opérations mathématiques de base que vous "
"attendez pour tous les types entiers : addition, soustraction, "
"multiplication, division et reste. La division entière tronque vers zéro à "
"l'entier le plus proche. Le code suivant montre comment vous avez utilisé "
"chaque opération numérique dans un état `let` :"

#: src/ch02-02-data-types.md:102
msgid "// addition\n"
msgstr "// ajout\n"

#: src/ch02-02-data-types.md:105
msgid "// subtraction\n"
msgstr "// soustraction\n"

#: src/ch02-02-data-types.md:108
msgid "// multiplication\n"
msgstr "// multiplication\n"

#: src/ch02-02-data-types.md:111
msgid "// division\n"
msgstr "// division\n"

#: src/ch02-02-data-types.md:112
msgid "//result is 1\n"
msgstr "//Le résultat est 1\n"

#: src/ch02-02-data-types.md:113
msgid "//result is 2\n"
msgstr "//le résultat est 2\n"

#: src/ch02-02-data-types.md:115
msgid "// remainder\n"
msgstr "// restant\n"

#: src/ch02-02-data-types.md:116
msgid "// result is 3\n"
msgstr "// le résultat est 3\n"

#: src/ch02-02-data-types.md:120
msgid ""
"Each expression in these statements uses a mathematical operator and "
"evaluates to a single value, which is then bound to a variable."
msgstr ""
"Chaque expression de ces instructions utilise un opérateur mathématique et "
"évalue à une seule valeur, qui est alors liée à une variable."

#: src/ch02-02-data-types.md:123
msgid ""
"[Appendix B](./appendix-02-operators-and-symbols.md#operators) contains a "
"list of all operators that Cairo provides."
msgstr ""
"[Appendice B](./appendix-02-operators-and-symbols.md#operators) contient une "
"liste de tous les exploitants que le Caire fournit."

#: src/ch02-02-data-types.md:127
msgid "The Boolean Type"
msgstr "Le type booléen"

#: src/ch02-02-data-types.md:129
msgid ""
"As in most other programming languages, a Boolean type in Cairo has two "
"possible values: `true` and `false`. Booleans are one `felt252` in size. The "
"Boolean type in Cairo is specified using `bool`. For example:"
msgstr ""
"Comme dans la plupart des autres langages de programmation, un type booléen "
"au Caire a deux valeurs possibles: `true` et `false`. Booléens sont un "
"`felt252` de taille. Le type booléen au Caire est spécifié en utilisant "
"`bool`. Par exemple:"

#: src/ch02-02-data-types.md:137
msgid "// with explicit type annotation\n"
msgstr "// avec annotation de type explicite\n"

#: src/ch02-02-data-types.md:141
msgid ""
"When declaring a `bool` variable, it is mandatory to use either `true` or "
"`false` literals as value. Hence, it is not allowed to use integer literals "
"(i.e. `0` instead of false) for `bool` declarations."
msgstr ""
"Lorsqu'on déclare une variable `bool`, il est obligatoire d'utiliser les "
"termes `true` ou `false` comme valeur. Par conséquent, il n'est pas permis "
"d'utiliser des termes entiers (c'est-à-dire `0' au lieu de faux) pour les "
"déclarations `bool`."

#: src/ch02-02-data-types.md:143
msgid ""
"The main way to use Boolean values is through conditionals, such as an `if` "
"expression. We’ll cover how `if` expressions work in Cairo in the [\"Control "
"Flow\"](./ch02-05-control-flow.md) section."
msgstr ""
"La principale façon d'utiliser les valeurs booléennes est par "
"l'intermédiaire de conditionnels, comme une expression `if`. Nous allons "
"couvrir comment les expressions `if` fonctionnent au Caire dans la section "
"[\"Control Flow\"](./ch02-05-control-flow.md)."

#: src/ch02-02-data-types.md:148
msgid "String Types"
msgstr "Types de chaînes"

#: src/ch02-02-data-types.md:150
msgid ""
"Cairo doesn't have a native type for strings but provides two ways to handle "
"them: short strings using simple quotes and ByteArray using double quotes."
msgstr ""
"Le Caire n'a pas de type natif pour les chaînes, mais fournit deux façons de "
"les gérer : les chaînes courtes à l'aide de guillemets simples et ByteArray "
"à l'aide de guillemets doubles."

#: src/ch02-02-data-types.md:152
msgid "Short strings"
msgstr "Cordes courtes"

#: src/ch02-02-data-types.md:154
msgid ""
"A short string is an ASCII string where each character is encoded on one "
"byte (see the [ASCII table](https://www.asciitable.com/)). For example:"
msgstr ""
"Une courte chaîne est une chaîne ASCII où chaque caractère est encodé sur un "
"octet (voir la [table ASCII](https://www.asciitable.com/)). Par exemple :"

#: src/ch02-02-data-types.md:156
msgid "`'a'` is equivalent to `0x61`"
msgstr "`'a'` est équivalent à `0x61`"

#: src/ch02-02-data-types.md:157
msgid "`'b'` is equivalent to `0x62`"
msgstr "`'b'` est équivalent à `0x62`"

#: src/ch02-02-data-types.md:158
msgid "`'c'` is equivalent to `0x63`"
msgstr "`'c'` est équivalent à `0x63`"

#: src/ch02-02-data-types.md:159
msgid "`0x616263` is equivalent to `'abc'`."
msgstr "`0x616263` est équivalent à `'abc'`."

#: src/ch02-02-data-types.md:161
msgid ""
"Cairo uses the `felt252` for short strings. As the `felt252` is on 251 bits, "
"a short string is limited to 31 characters (31 \\* 8 = 248 bits, which is "
"the maximum multiple of 8 that fits in 251 bits)."
msgstr ""
"Le Caire utilise le `felt252` pour les cordes courtes. Comme le `felt252` "
"est sur 251 bits, une chaîne courte est limitée à 31 caractères (31 \\* 8 = "
"248 bits, ce qui est le multiple maximum de 8 qui correspond en 251 bits)."

#: src/ch02-02-data-types.md:163
msgid ""
"You can choose to represent your short string with an hexadecimal value like "
"`0x616263` or by directly writing the string using simple quotes like "
"`'abc'`, which is more convenient."
msgstr ""
"Vous pouvez choisir de représenter votre chaîne courte avec une valeur "
"hexadécimal comme `0x616263` ou en écrivant directement la chaîne en "
"utilisant des guillemets simples comme `'abc'`, ce qui est plus pratique."

#: src/ch02-02-data-types.md:165
msgid "Here are some examples of declaring short strings in Cairo:"
msgstr "Voici quelques exemples de déclarations de cordes courtes au Caire:"

#: src/ch02-02-data-types.md:169 src/ch02-02-data-types.md:187
msgid "'C'"
msgstr "'C'"

#: src/ch02-02-data-types.md:175 src/ch02-02-data-types.md:193
msgid "\"this is a string which has more than 31 characters\""
msgstr "\"c'est une chaîne qui a plus de 31 caractères\""

#: src/ch02-02-data-types.md:181
msgid "Byte Array Strings"
msgstr "Cordes d'array à octets"

#: src/ch02-02-data-types.md:183
msgid ""
"With the `ByteArray` struct added in Cairo 2.4.0, you are not limited to 31 "
"characters anymore. These `ByteArray` strings are written in double quotes "
"like in the following example:"
msgstr ""
"Avec la structure `ByteArray` ajoutée au Caire 2.4.0, vous n'êtes plus "
"limité à 31 caractères. Ces chaînes `ByteArray` sont écrites en guillemets "
"doubles comme dans l'exemple suivant :"

#: src/ch02-02-data-types.md:197
msgid "Type Casting"
msgstr "Type Casting"

#: src/ch02-02-data-types.md:199
msgid ""
"In Cairo, you can convert scalar types from one type to another by using the "
"`try_into` and `into` methods provided by the `TryInto` and `Into` traits "
"from the core library."
msgstr ""
"Au Caire, vous pouvez convertir des types scalaires d'un type à l'autre en "
"utilisant les méthodes `try_into` et `into` fournies par les caractères "
"`TryInto` et `Into` de la bibliothèque centrale."

#: src/ch02-02-data-types.md:201
msgid ""
"The `try_into` method allows for safe type casting when the target type "
"might not fit the source value. Keep in mind that `try_into` returns an "
"`Option<T>` type, which you'll need to unwrap to access the new value."
msgstr ""
"La méthode `try_into` permet de lancer un type sûr lorsque le type cible ne "
"correspond pas à la valeur source. Gardez à l'esprit que `try_into` retourne "
"un type `Option<T>`, que vous devrez décompresser pour accéder à la nouvelle "
"valeur."

#: src/ch02-02-data-types.md:203
msgid ""
"On the other hand, the `into` method can be used for type casting when "
"success is guaranteed, such as when the source type is smaller than the "
"destination type."
msgstr ""
"D'autre part, la méthode « into » peut être utilisée pour la coulée de type "
"lorsque le succès est garanti, par exemple lorsque le type de source est "
"plus petit que le type de destination."

#: src/ch02-02-data-types.md:205
msgid ""
"To perform the conversion, call `var.into()` or `var.try_into()` on the "
"source value to cast it to another type. The new variable's type must be "
"explicitly defined, as demonstrated in the example below."
msgstr ""
"Pour effectuer la conversion, appelez `var.into()` ou `var.try_into()` sur "
"la valeur source pour la lancer dans un autre type. Le type de la nouvelle "
"variable doit être explicitement défini, comme le montre l'exemple ci-"
"dessous."

#: src/ch02-02-data-types.md:210
msgid ""
"// Since a felt252 might not fit in a u8, we need to unwrap the Option<T> "
"type\n"
msgstr ""
"// Étant donné qu'un feutre252 pourrait ne pas s'intégrer dans un u8, nous "
"devons déballer l'option <T> type\n"

#: src/ch02-02-data-types.md:216
msgid "// As a felt252 is smaller than a u256, we can use the into() method\n"
msgstr ""
"// Comme un feutre252 est plus petit qu'un u256, nous pouvons utiliser la "
"méthode in()\n"

#: src/ch02-02-data-types.md:224
msgid "The Tuple Type"
msgstr "Le type de tuple"

#: src/ch02-02-data-types.md:226
msgid ""
"A _tuple_ is a general way of grouping together a number of values with a "
"variety of types into one compound type. Tuples have a fixed length: once "
"declared, they cannot grow or shrink in size."
msgstr ""
"Un _tuple_ est une façon générale de regrouper un certain nombre de valeurs "
"avec une variété de types en un seul type composé. Les tuples ont une "
"longueur fixe: une fois déclarés, ils ne peuvent pas croître ou rétrécir "
"dans la taille."

#: src/ch02-02-data-types.md:230
msgid ""
"We create a tuple by writing a comma-separated list of values inside "
"parentheses. Each position in the tuple has a type, and the types of the "
"different values in the tuple don’t have to be the same. We’ve added "
"optional type annotations in this example:"
msgstr ""
"Nous créons un tuple en écrivant une liste de valeurs séparées par des "
"virgules à l'intérieur des parenthèses. Chaque position dans le tuple a un "
"type, et les types des différentes valeurs dans le tuple ne doivent pas être "
"les mêmes. Nous avons ajouté des annotations de type optionnel dans cet "
"exemple:"

#: src/ch02-02-data-types.md:241
msgid ""
"The variable `tup` binds to the entire tuple because a tuple is considered a "
"single compound element. To get the individual values out of a tuple, we can "
"use pattern matching to destructure a tuple value, like this:"
msgstr ""
"La variable `tup` se lie à l'ensemble du tuple parce qu'un tuple est "
"considéré comme un seul élément composé. Pour sortir les valeurs "
"individuelles d'un tuple, nous pouvons utiliser le modèle correspondant pour "
"déstructurer une valeur de tuple, comme ceci:"

#: src/ch02-02-data-types.md:252
msgid "\"y is 6!\""
msgstr "\"il a 6 ans!\""

#: src/ch02-02-data-types.md:257
msgid ""
"This program first creates a tuple and binds it to the variable `tup`. It "
"then uses a pattern with `let` to take `tup` and turn it into three separate "
"variables, `x`, `y`, and `z`. This is called _destructuring_ because it "
"breaks the single tuple into three parts. Finally, the program prints `y is "
"6!` as the value of `y` is `6`."
msgstr ""
"Ce programme crée d'abord un tuple et le lie à la variable `tup`. Il utilise "
"ensuite un motif avec `let` pour prendre `tup` et le transformer en trois "
"variables distinctes, `x`, `y` et `z`. Ceci s'appelle _destructuration_ "
"parce qu'il casse le tuple unique en trois parties. Enfin, le programme "
"imprime `y est 6!` comme la valeur `y` est `6`."

#: src/ch02-02-data-types.md:263
msgid ""
"We can also declare the tuple with value and types, and destructure it at "
"the same time. For example:"
msgstr ""
"Nous pouvons également déclarer le tuple avec valeur et types, et le "
"déstructurer en même temps. Par exemple:"

#: src/ch02-02-data-types.md:272
msgid "The Unit Type ()"
msgstr "Le type d'unité ()"

#: src/ch02-02-data-types.md:274
msgid ""
"A _unit type_ is a type which has only one value `()`. It is represented by "
"a tuple with no elements. Its size is always zero, and it is guaranteed to "
"not exist in the compiled code."
msgstr ""
"Un _unit type_ est un type qui n'a qu'une seule valeur `()`. Il est "
"représenté par un tuple sans éléments. Sa taille est toujours zéro, et il "
"est garanti de ne pas exister dans le code compilé."

#: src/ch02-02-data-types.md:278
msgid ""
"You might be wondering why you would even need a unit type? In Cairo, "
"everything is an expression, and an expression that returns nothing actually "
"returns `()` implicitly."
msgstr ""
"Vous vous demandez peut-être pourquoi vous auriez même besoin d'un type "
"d'unité? Au Caire, tout est une expression, et une expression qui ne "
"retourne rien ne retourne réellement `()` implicitement."

#: src/ch02-02-data-types.md:280
msgid "{{#quiz ../quizzes/ch02-02-data-types.toml}}"
msgstr "{{#quiz../quizes/ch02-02-data-types.toml}}"

#: src/ch02-03-functions.md:3
msgid ""
"Functions are prevalent in Cairo code. You’ve already seen one of the most "
"important functions in the language: the `main` function, which is the entry "
"point of many programs. You’ve also seen the `fn` keyword, which allows you "
"to declare new functions."
msgstr ""
"Vous avez déjà vu l'une des fonctions les plus importantes dans la langue: "
"la fonction `main`, qui est le point d'entrée de nombreux programmes. Vous "
"avez également vu le mot-clé `fn`, qui vous permet de déclarer de nouvelles "
"fonctions."

#: src/ch02-03-functions.md:8
msgid ""
"Cairo code uses _snake case_ as the conventional style for function and "
"variable names, in which all letters are lowercase and underscores separate "
"words. Here’s a program that contains an example function definition:"
msgstr ""
"Le code du Caire utilise _snake case_ comme style conventionnel pour les "
"noms de fonction et de variable, dans lequel toutes les lettres sont "
"minuscules et souligne des mots séparés. Voici un programme qui contient une "
"définition de fonction d'exemple:"

#: src/ch02-03-functions.md:14
msgid "\"Another function.\""
msgstr "\"Une autre fonction.\""

#: src/ch02-03-functions.md:18
msgid "\"Hello, world!\""
msgstr "\"Bonjour, le monde!\""

#: src/ch02-03-functions.md:23
msgid ""
"We define a function in Cairo by entering `fn` followed by a function name "
"and a set of parentheses. The curly brackets tell the compiler where the "
"function body begins and ends."
msgstr ""
"Nous définissons une fonction au Caire en entrant `fn` suivi d'un nom de "
"fonction et d'un ensemble de parenthèses. Les crochets bouclés indiquent au "
"compilateur où le corps de fonction commence et se termine."

#: src/ch02-03-functions.md:27
msgid ""
"We can call any function we’ve defined by entering its name followed by a "
"set of parentheses. Because `another_function` is defined in the program, it "
"can be called from inside the `main` function. Note that we defined "
"`another_function` _before_ the `main` function in the source code; we could "
"have defined it after as well. Cairo doesn’t care where you define your "
"functions, only that they’re defined somewhere in a scope that can be seen "
"by the caller."
msgstr ""
"Nous pouvons appeler n'importe quelle fonction que nous avons définie en "
"entrant son nom suivi d'un ensemble de parenthèses. Parce que "
"`another_function` est défini dans le programme, il peut être appelé de "
"l'intérieur de la fonction `main`. Notez que nous avons défini "
"`another_function` _fore_ la fonction `main` dans le code source; nous "
"aurions pu la définir après aussi. Le Caire ne se soucie pas où vous "
"définissez vos fonctions, seulement qu'elles soient définies quelque part "
"dans une portée qui peut être vue par l'appelant."

#: src/ch02-03-functions.md:34
msgid ""
"Let’s start a new project with Scarb named _functions_ to explore functions "
"further. Place the `another_function` example in _src/lib.cairo_ and run it. "
"You should see the following output:"
msgstr ""
"Laissez démarrer un nouveau projet avec Scarb nommé _functions_ pour "
"explorer les fonctions plus loin. Placez l'exemple `another_function` dans "
"_src/lib.cairo_ et exécutez-le. Vous devriez voir la sortie suivante :"

#: src/ch02-03-functions.md:49
msgid ""
"The lines execute in the order in which they appear in the `main` function. "
"First the `Hello, world!` message prints, and then `another_function` is "
"called and its message is printed."
msgstr ""
"Les lignes s'exécutent dans l'ordre dans lequel elles apparaissent dans la "
"fonction `main`. D'abord les impressions de message `Hello, world!`, puis "
"`une autre_fonction` est appelée et son message est imprimé."

#: src/ch02-03-functions.md:53
msgid "Parameters"
msgstr "Paramètres"

#: src/ch02-03-functions.md:55
msgid ""
"We can define functions to have _parameters_, which are special variables "
"that are part of a function’s signature. When a function has parameters, you "
"can provide it with concrete values for those parameters. Technically, the "
"concrete values are called _arguments_, but in casual conversation, people "
"tend to use the words _parameter_ and _argument_ interchangeably for either "
"the variables in a function’s definition or the concrete values passed in "
"when you call a function."
msgstr ""
"Nous pouvons définir des fonctions pour avoir _parameters_, qui sont des "
"variables spéciales qui font partie d'une signature de fonction. Lorsqu'une "
"fonction a des paramètres, vous pouvez lui fournir des valeurs concrètes "
"pour ces paramètres. Techniquement, les valeurs concrètes sont appelées "
"_arguments_, mais dans une conversation occasionnelle, les gens ont tendance "
"à utiliser les mots _parameter_ et _argument_ interchangeablement pour les "
"variables d'une définition de fonction, ou les valeurs concrètes passées "
"lorsque vous appelez une fonction."

#: src/ch02-03-functions.md:63
msgid "In this version of `another_function` we add a parameter:"
msgstr "Dans cette version de `une autre_fonction` nous ajoutons un paramètre:"

#: src/ch02-03-functions.md:75
msgid "Try running this program; you should get the following output:"
msgstr ""
"Essayez d'exécuter ce programme ; vous devriez obtenir la sortie suivante :"

#: src/ch02-03-functions.md:87
msgid ""
"The declaration of `another_function` has one parameter named `x`. The type "
"of `x` is specified as `felt252`. When we pass `5` in to `another_function`, "
"the `println!` macro puts `5` where the pair of curly brackets containing "
"`x` was in the format string."
msgstr ""
"La déclaration de `une autre_fonction` a un paramètre nommé `x`. Le type de "
"`x` est spécifié comme `felt252`. Lorsque nous passons `5` dans `une "
"autre_fonction`, la macro `println!` met `5` où la paire de crochets "
"contenant `x` était dans la chaîne de format."

#: src/ch02-03-functions.md:91
msgid ""
"In function signatures, you _must_ declare the type of each parameter. This "
"is a deliberate decision in Cairo’s design: requiring type annotations in "
"function definitions means the compiler almost never needs you to use them "
"elsewhere in the code to figure out what type you mean. The compiler is also "
"able to give more helpful error messages if it knows what types the function "
"expects."
msgstr ""
"Dans les signatures de fonction, vous _must_ déclarez le type de chaque "
"paramètre. Il s'agit d'une décision délibérée dans la conception du Cairo: "
"exiger des annotations de type dans les définitions de fonction signifie que "
"le compilateur n'a presque jamais besoin de vous pour les utiliser ailleurs "
"dans le code pour comprendre quel type vous voulez dire. Le compilateur est "
"également en mesure de donner des messages d'erreur plus utiles s'il sait "
"quels types la fonction attend."

#: src/ch02-03-functions.md:97
msgid ""
"When defining multiple parameters, separate the parameter declarations with "
"commas, like this:"
msgstr ""
"Lors de la définition de plusieurs paramètres, séparer les déclarations de "
"paramètres avec des virgules, comme ceci:"

#: src/ch02-03-functions.md:102
msgid "\"h\""
msgstr "\"h\""

#: src/ch02-03-functions.md:106
msgid "\"The measurement is: {value}{unit_label}\""
msgstr "\"La mesure est : {valeur}{unit_label}\""

#: src/ch02-03-functions.md:110
msgid ""
"This example creates a function named `print_labeled_measurement` with two "
"parameters. The first parameter is named `value` and is a `u128`. The second "
"is named `unit_label` and is of type `ByteArray` - Cairo's internal type to "
"represent string literals. The function then prints text containing both the "
"`value` and the `unit_label`."
msgstr ""
"Cet exemple crée une fonction nommée `print_labeled_measurement` avec deux "
"paramètres. Le premier paramètre est nommé `value` et est un `u128`. Le "
"second est nommé `unit_label` et est de type `ByteArray` - le type interne "
"du Caire pour représenter les chaînes littérales. La fonction imprime "
"ensuite du texte contenant à la fois la `value` et le `unit_label`."

#: src/ch02-03-functions.md:114
msgid ""
"Let’s try running this code. Replace the program currently in your "
"_functions_ project’s _src/lib.cairo_ file with the preceding example and "
"run it using `scarb cairo-run`:"
msgstr ""
"Essayez d'exécuter ce code. Remplacez le programme actuellement dans votre "
"fichier _functions_ project.s _src/lib.cairo_ avec l'exemple précédent et "
"exécutez-le en utilisant `scarb cairo-run`:"

#: src/ch02-03-functions.md:127
msgid ""
"Because we called the function with `5` as the value for value and `\"h\"` "
"as the value for `unit_label`, the program output contains those values."
msgstr ""
"Parce que nous avons appelé la fonction avec `5` comme valeur pour la valeur "
"et `\"h\"` comme valeur pour `unit_label`, la sortie du programme contient "
"ces valeurs."

#: src/ch02-03-functions.md:129
msgid "Named Parameters"
msgstr "Paramètres nommés"

#: src/ch02-03-functions.md:131
msgid ""
"In Cairo, named parameters allow you to specify the names of arguments when "
"you call a function. This makes the function calls more readable and self-"
"descriptive. If you want to use named parameters, you need to specify the "
"name of the parameter and the value you want to pass to it. The syntax is "
"`parameter_name: value`. If you pass a variable that has the same name as "
"the parameter, you can simply write `:parameter_name` instead of "
"`parameter_name: variable_name`."
msgstr ""
"Au Caire, les paramètres nommés vous permettent de spécifier les noms des "
"arguments lorsque vous appelez une fonction. Cela rend la fonction plus "
"lisible et autodescriptive. Si vous voulez utiliser les paramètres nommés, "
"vous devez spécifier le nom du paramètre et la valeur que vous voulez lui "
"transmettre. La syntaxe est `parameter_name: value`. Si vous passez une "
"variable qui a le même nom que le paramètre, vous pouvez simplement écrire `:"
"parameter_name` au lieu de `parameter_name: variable_name`."

#: src/ch02-03-functions.md:134
#: src/ch09-01-unrecoverable-errors-with-panic.md:72
#: src/ch09-02-recoverable-errors.md:141
#: src/appendix-03-derivable-traits.md:151
#: src/appendix-03-derivable-traits.md:200
msgid "Here is an example:"
msgstr "Voici un exemple :"

#: src/ch02-03-functions.md:149
msgid "Statements and Expressions"
msgstr "Déclarations et expressions"

#: src/ch02-03-functions.md:151
msgid ""
"Function bodies are made up of a series of statements optionally ending in "
"an expression. So far, the functions we’ve covered haven’t included an "
"ending expression, but you have seen an expression as part of a statement. "
"Because Cairo is an expression-based language, this is an important "
"distinction to understand. Other languages don’t have the same distinctions, "
"so let’s look at what statements and expressions are and how their "
"differences affect the bodies of functions."
msgstr ""
"Les corps de fonction sont constitués d'une série d'énoncés se terminant en "
"option dans une expression. Jusqu'à présent, les fonctions que nous avons "
"couvertes haven't comprenaient une expression de fin, mais vous avez vu une "
"expression comme faisant partie d'une déclaration. Parce que le Caire est un "
"langage basé sur l'expression, il s'agit d'une distinction importante à "
"comprendre. D'autres langues n'ont pas les mêmes distinctions, alors "
"regardons quelles sont les déclarations et les expressions et comment leurs "
"différences affectent les corps de fonctions."

#: src/ch02-03-functions.md:159
msgid ""
"**Statements** are instructions that perform some action and do not return a "
"value."
msgstr ""
"**Les états** sont des instructions qui effectuent une action et ne "
"retournent pas une valeur."

#: src/ch02-03-functions.md:161
msgid ""
"**Expressions** evaluate to a resultant value. Let’s look at some examples."
msgstr ""
"**Expressions** évaluer à une valeur résultante. Laissez-nous regarder "
"quelques exemples."

#: src/ch02-03-functions.md:163
msgid ""
"We’ve actually already used statements and expressions. Creating a variable "
"and assigning a value to it with the `let` keyword is a statement. In "
"Listing 2-1, `let y = 6;` is a statement."
msgstr ""
"Nous avons déjà utilisé des instructions et des expressions. Créer une "
"variable et lui attribuer une valeur avec le mot-clé `let` est une "
"instruction. Dans Listing 2-1, `let y = 6;` est une instruction."

#: src/ch02-03-functions.md:173
msgid ""
"<span class=\"caption\">Listing 2-1: A `main` function declaration "
"containing one statement</span>"
msgstr ""
"<span class=\"caption\">Liste 2-1: Une déclaration de fonction `main` "
"contenant une déclaration</span>"

#: src/ch02-03-functions.md:175
msgid ""
"Function definitions are also statements; the entire preceding example is a "
"statement in itself."
msgstr ""
"Les définitions de fonctions sont également des énoncés; l'exemple précédent "
"est un énoncé en soi."

#: src/ch02-03-functions.md:177
msgid ""
"Statements do not return values. Therefore, you can’t assign a `let` "
"statement to another variable, as the following code tries to do; you’ll get "
"an error:"
msgstr ""
"Les instructions ne retournent pas les valeurs. Par conséquent, vous ne "
"pouvez pas assigner une instruction `let` à une autre variable, comme le "
"code suivant essaie de le faire; vous obtiendrez une erreur:"

#: src/ch02-03-functions.md:186
msgid "When you run this program, the error you’ll get looks like this:"
msgstr ""
"Lorsque vous exécutez ce programme, l'erreur que vous obtenez ressemble à "
"ceci:"

#: src/ch02-03-functions.md:226
msgid ""
"The `let y = 6` statement does not return a value, so there isn’t anything "
"for `x` to bind to. This is different from what happens in other languages, "
"such as C and Ruby, where the assignment returns the value of the "
"assignment. In those languages, you can write `x = y = 6` and have both `x` "
"and `y` have the value `6`; that is not the case in Cairo."
msgstr ""
"L'instruction `let y = 6` ne renvoie pas de valeur, donc il n'y a rien pour "
"`x` à lier. Ceci est différent de ce qui se passe dans d'autres langues, "
"comme C et Ruby, où l'assignation renvoie la valeur de l'assignation. Dans "
"ces langues, vous pouvez écrire `x = y = 6` et avoir à la fois `x` et `y` la "
"valeur `6`; ce n'est pas le cas au Caire."

#: src/ch02-03-functions.md:232
msgid ""
"Expressions evaluate to a value and make up most of the rest of the code "
"that you’ll write in Cairo. Consider a math operation, such as `5 + 6`, "
"which is an expression that evaluates to the value `11`. Expressions can be "
"part of statements: in Listing 2-1, the `6` in the statement `let y = 6;` is "
"an expression that evaluates to the value `6`."
msgstr ""
"Les expressions évaluent à une valeur et constituent la plupart du reste du "
"code que vous allez écrire au Caire. Considérez une opération mathématique, "
"telle que `5 + 6`, qui est une expression qui évalue à la valeur `11`. "
"Expressions peuvent faire partie d'énoncés: dans Listing 2-1, le `6` dans "
"l'énoncé `let y = 6;` est une expression qui évalue à la valeur `6`."

#: src/ch02-03-functions.md:238
msgid ""
"Calling a function is an expression since it always evaluates to a value: "
"the function's explicit return value, if specified, or the 'unit' type `()` "
"otherwise."
msgstr ""
"Appeler une fonction est une expression puisqu'elle évalue toujours à une "
"valeur : la valeur de retour explicite de la fonction, si elle est "
"spécifiée, ou le type d'unité `()` autrement."

#: src/ch02-03-functions.md:240
msgid ""
"A new scope block created with curly brackets is an expression, for example:"
msgstr ""
"Un nouveau bloc de champ créé avec des crochets bouclés est une expression, "
"par exemple:"

#: src/ch02-03-functions.md:249
msgid "\"The value of y is: {}\""
msgstr "\"La valeur de y est: {}\""

#: src/ch02-03-functions.md:253
msgid "This expression:"
msgstr "Cette expression :"

#: src/ch02-03-functions.md:262
msgid ""
"is a block that, in this case, evaluates to `4`. That value gets bound to "
"`y` as part of the `let` statement. Note that the `x + 1` line doesn’t have "
"a semicolon at the end, which is unlike most of the lines you’ve seen so "
"far. Expressions do not include ending semicolons. If you add a semicolon to "
"the end of an expression, you turn it into a statement, and it will then not "
"return a value. Keep this in mind as you explore function return values and "
"expressions next."
msgstr ""
"est un bloc qui, dans ce cas, évalue à `4`. Cette valeur se lie à `y` dans "
"le cadre de l'instruction `let`. Notez que la ligne `x + 1` n'a pas de point-"
"virgule à la fin, ce qui est différent de la plupart des lignes que vous "
"avez vues jusqu'à présent. Expressions ne comprennent pas les points-virgule "
"de fin. Si vous ajoutez un point-virgule à la fin d'une expression, vous le "
"transformez en point-virgule, et il ne retournera pas une valeur. Gardez "
"cela à l'esprit que vous explorez la fonction retourner les valeurs et les "
"expressions à la fin d'une expression."

#: src/ch02-03-functions.md:270
msgid "Functions with Return Values"
msgstr "Fonctions avec valeurs de retour"

#: src/ch02-03-functions.md:272
msgid ""
"Functions can return values to the code that calls them. We don’t name "
"return values, but we must declare their type after an arrow (`->`). In "
"Cairo, the return value of the function is synonymous with the value of the "
"final expression in the block of the body of a function. You can return "
"early from a function by using the `return` keyword and specifying a value, "
"but most functions return the last expression implicitly. Here’s an example "
"of a function that returns a value:"
msgstr ""
"Au Caire, la valeur de retour de la fonction est synonyme de la valeur de "
"l'expression finale dans le bloc du corps d'une fonction. Vous pouvez "
"retourner tôt d'une fonction en utilisant le mot-clé `retour` et en "
"spécifiant une valeur, mais la plupart des fonctions retournent "
"implicitement la dernière expression. Voici un exemple de fonction qui "
"retourne une valeur:"

#: src/ch02-03-functions.md:291
msgid ""
"There are no function calls, or even `let` statements in the `five` function—"
"just the number `5` by itself. That’s a perfectly valid function in Cairo. "
"Note that the function’s return type is specified too, as `-> u32`. Try "
"running this code; the output should look like this:"
msgstr ""
"Il n'y a pas d'appel de fonction, ni même d'instructions `let` dans la "
"fonction `5' – juste le nombre `5` en soi. C'est une fonction parfaitement "
"valide au Caire. Notez que le type de retour de fonction est également "
"spécifié, comme `-> u32`. Essayez d'exécuter ce code; la sortie devrait "
"ressembler à ceci:"

#: src/ch02-03-functions.md:306
msgid ""
"The `5` in `five` is the function’s return value, which is why the return "
"type is `u32`. Let’s examine this in more detail. There are two important "
"bits: first, the line `let x = five();` shows that we’re using the return "
"value of a function to initialize a variable. Because the function `five` "
"returns a `5`, that line is the same as the following:"
msgstr ""
"La valeur `5` dans `5` est la valeur de retour de la fonction, c'est "
"pourquoi le type de retour est `u32`. Laissez-nous examiner plus en détail. "
"Il y a deux bits importants: d'abord, la ligne `let x = 5();` montre que "
"nous utilisons la valeur de retour d'une fonction pour initialiser une "
"variable. Parce que la fonction `5` retourne une `5`, cette ligne est la "
"même que la suivante:"

#: src/ch02-03-functions.md:316
msgid ""
"Second, the `five` function has no parameters and defines the type of the "
"return value, but the body of the function is a lonely `5` with no semicolon "
"because it’s an expression whose value we want to return. Let’s look at "
"another example:"
msgstr ""
"Deuxièmement, la fonction `5` n'a pas de paramètres et définit le type de la "
"valeur de retour, mais le corps de la fonction est un `5` solitaire sans "
"point-virgule parce que c'est une expression dont nous voulons revenir la "
"valeur."

#: src/ch02-03-functions.md:333
msgid ""
"Running this code will print `x = 6`. But if we place a semicolon at the end "
"of the line containing `x + 1`, changing it from an expression to a "
"statement, we’ll get an error:"
msgstr ""
"Exécuter ce code va imprimer `x = 6`. Mais si nous plaçons un point-virgule "
"à la fin de la ligne contenant `x + 1`, le changeant d'une expression à une "
"instruction, nous obtiendrons une erreur:"

#: src/ch02-03-functions.md:349
msgid ""
"```shell\n"
"$ scarb cairo-run \n"
"   Compiling no_listing_22_function_return_invalid v0.1.0 (listings/ch02-"
"common-programming-concepts/no_listing_24_function_return_invalid/Scarb."
"toml)\n"
"error: Unexpected return type. Expected: \"core::integer::u32\", found: "
"\"()\".\n"
" --> listings/ch02-common-programming-concepts/"
"no_listing_24_function_return_invalid/src/lib.cairo:9:28\n"
"fn plus_one(x: u32) -> u32 {\n"
"                           ^\n"
"\n"
"error: could not compile `no_listing_22_function_return_invalid` due to "
"previous error\n"
"error: `scarb metadata` exited with error\n"
"\n"
"```"
msgstr ""
"``shell $ scarb cairo-run Compiling no_listing_22_function_return_invalid "
"v0.1.0 (listings/ch02-common-programming-concepts/"
"no_listing_24_function_invalid/Scarb.toml) erreur : Type de retour "
"inattendu. Prévu : \"core::integer::u32\", trouvé : \"()\". --> lists/ch02-"
"common-programming-concepts/no_listing_24_function_invalid/src/lib."
"cairo:9:28 fn plus_one(x: u32) -> u32 { ^ erreur : n'a pas pu compiler "
"`no_listing_22_function_invalid` en raison d'une erreur précédente : `scarb "
"metadas` est sorti avec erreur ````"

#: src/ch02-03-functions.md:362
msgid ""
"The main error message, `Unexpected return type`, reveals the core issue "
"with this code. The definition of the function `plus_one` says that it will "
"return an `u32`, but statements don’t evaluate to a value, which is "
"expressed by `()`, the unit type. Therefore, nothing is returned, which "
"contradicts the function definition and results in an error."
msgstr ""
"Le message d'erreur principal, `Type de retour inattendu`, révèle le "
"problème de base avec ce code. La définition de la fonction `plus_one` "
"indique qu'elle retournera un `u32`, mais les instructions n'évaluent pas à "
"une valeur, qui est exprimée par `()`, le type d'unité. Par conséquent, rien "
"n'est retourné, ce qui contredit la définition de la fonction et entraîne "
"une erreur."

#: src/ch02-03-functions.md:368
msgid "{{#quiz ../quizzes/ch02-03-functions.toml}}"
msgstr "{{#quiz../quizes/ch02-03-fonctions.toml}}"

#: src/ch02-04-comments.md:3
msgid ""
"All programmers strive to make their code easy to understand, but sometimes "
"extra explanation is warranted. In these cases, programmers leave comments "
"in their source code that the compiler will ignore but people reading the "
"source code may find useful."
msgstr ""
"Tous les programmeurs s'efforcent de rendre leur code facile à comprendre, "
"mais parfois une explication supplémentaire est justifiée. Dans ces cas, les "
"programmeurs laissent des commentaires dans leur code source que le "
"compilateur ignorera, mais les personnes lisant le code source peuvent "
"trouver utile."

#: src/ch02-04-comments.md:5
msgid "Here’s a simple comment:"
msgstr "Voici un commentaire simple:"

#: src/ch02-04-comments.md:8
msgid "// hello, world\n"
msgstr "// Bonjour, monde\n"

#: src/ch02-04-comments.md:11
msgid ""
"In Cairo, the idiomatic comment style starts a comment with two slashes, and "
"the comment continues until the end of the line. For comments that extend "
"beyond a single line, you’ll need to include `//` on each line, like this:"
msgstr ""
"Au Caire, le style de commentaire idiomatique commence un commentaire avec "
"deux slashes, et le commentaire continue jusqu'à la fin de la ligne. Pour "
"les commentaires qui s'étendent au-delà d'une seule ligne, vous devrez "
"inclure `//` sur chaque ligne, comme ceci:"

#: src/ch02-04-comments.md:14
msgid ""
"// So we’re doing something complicated here, long enough that we need\n"
"// multiple lines of comments to do it! Whew! Hopefully, this comment will\n"
"// explain what’s going on.\n"
msgstr ""
"// Donc nous faisons quelque chose de compliqué ici, assez longtemps que "
"nous avons besoin // plusieurs lignes de commentaires pour le faire! Whew! "
"Espérons que ce commentaire va // expliquer ce qui se passe.\n"

#: src/ch02-04-comments.md:19
msgid "Comments can also be placed at the end of lines containing code:"
msgstr ""
"Les commentaires peuvent également être placés à la fin des lignes contenant "
"du code:"

#: src/ch02-04-comments.md:23
msgid "// return the sum of 1 and 4\n"
msgstr "// retourner la somme de 1 et 4\n"

#: src/ch02-04-comments.md:27
msgid ""
"But you’ll more often see them used in this format, with the comment on a "
"separate line above the code it’s annotating:"
msgstr ""
"Mais vous allez plus souvent les voir utilisés dans ce format, avec le "
"commentaire sur une ligne séparée au-dessus du code il est annotant:"

#: src/ch02-04-comments.md:31
msgid "// this function performs a simple addition\n"
msgstr "// cette fonction effectue un ajout simple\n"

#: src/ch02-04-comments.md:36
msgid "Item-level Documentation"
msgstr "Documentation au niveau des points"

#: src/ch02-04-comments.md:38
msgid ""
"Item-level documentation comments refer to specific items such as functions, "
"implementations, traits, etc. They are prefixed with three slashes (`///`). "
"These comments provide a detailed description of the item, examples of "
"usage, and any conditions that might cause a panic. In case of functions, "
"the comments may also include separate sections for parameter and return "
"value descriptions."
msgstr ""
"Les commentaires relatifs à la documentation au niveau des éléments se "
"rapportent à des éléments spécifiques tels que les fonctions, les "
"implémentations, les traits, etc. Ils sont préfixés par trois slashs (`///"
"`). Ces commentaires fournissent une description détaillée de l'élément, des "
"exemples d'utilisation, et toutes les conditions qui pourraient causer une "
"panique."

#: src/ch02-04-comments.md:41
msgid ""
"/// Returns the sum of `arg1` and `arg2`.\n"
"/// `arg1` cannot be zero.\n"
"///\n"
"/// # Panics\n"
"///\n"
"/// This function will panic if `arg1` is `0`.\n"
"///\n"
"/// # Examples\n"
"///\n"
"/// ```\n"
"/// let a: felt252 = 2;\n"
"/// let b: felt252 = 3;\n"
"/// let c: felt252 = add(a, b);\n"
"/// assert(c == a + b, \"Should equal a + b\");\n"
"/// ```\n"
msgstr ""
"/// Renvoie la somme de `arg1` et `arg2`. /// `arg1` ne peut pas être "
"zéro. /// //// # Panics /// //// Cette fonction paniquera si `arg1` est "
"`0`. /// //// # Exemples /// /// ``` /// let a: feel252 = 2; /// let b: "
"feel252 = 3; /// let c: feel252 = add(a, b); /// affert(c) == a + b, "
"\"Should egal a + b\"); /// ````\n"

#: src/ch02-04-comments.md:62
msgid "Module Documentation"
msgstr "Documentation du module"

#: src/ch02-04-comments.md:64
msgid ""
"Module documentation comments provide an overview of the entire module, "
"including its purpose and examples of use. These comments are meant to be "
"placed above the module they're describing and are prefixed with `//!`. This "
"type of documentation gives a broad understanding of what the module does "
"and how it can be used."
msgstr ""
"Les commentaires sur la documentation du module donnent un aperçu de "
"l'ensemble du module, y compris son but et des exemples d'utilisation. Ces "
"commentaires sont censés être placés au-dessus du module qu'ils décrivent et "
"sont préfixés avec `//!`. Ce type de documentation permet de bien comprendre "
"ce que le module fait et comment il peut être utilisé."

#: src/ch02-04-comments.md:67
msgid ""
"//! # my_module and implementation\n"
"//!\n"
"//! This is an example description of my_module and some of its features.\n"
"//!\n"
"//! # Examples\n"
"//!\n"
"//! ```\n"
"//! mod my_other_module {\n"
"//!   use path::to::my_module;\n"
"//!\n"
"//!   fn foo() {\n"
"//!     my_module.bar();\n"
"//!   }\n"
"//! }\n"
"//! ```\n"
msgstr ""
"//! # my_module et implémentation //! //! Voici un exemple de description de "
"my_module et de certaines de ses caractéristiques. //! //! # "
"Exemples //! //! `` //! mod my_other_module { //! utilisez le chemin::to::"
"my_module; //! //! fn foo() { //! my_module.bar(); //! } //! } //! ```\n"

#: src/ch02-04-comments.md:82
msgid "// rest of implementation...\n"
msgstr "// reste de la mise en œuvre...\n"

#: src/ch02-04-comments.md:86
msgid "{{#quiz ../quizzes/ch02-04-comments.toml}}"
msgstr "{{#quiz../quizes/ch02-04-comments.toml}}"

#: src/ch02-05-control-flow.md:3
msgid ""
"The ability to run some code depending on whether a condition is true and to "
"run some code repeatedly while a condition is true are basic building blocks "
"in most programming languages. The most common constructs that let you "
"control the flow of execution of Cairo code are if expressions and loops."
msgstr ""
"La possibilité d'exécuter un certain code selon qu'une condition est vraie "
"et d'exécuter un certain code à plusieurs reprises alors qu'une condition "
"est vraie sont des éléments de base dans la plupart des langages de "
"programmation. Les constructions les plus courantes qui vous permettent de "
"contrôler le flux d'exécution du code du Caire sont si les expressions et "
"les boucles."

#: src/ch02-05-control-flow.md:5
msgid "`if` Expressions"
msgstr "\"si\" Expressions"

#: src/ch02-05-control-flow.md:7
msgid ""
"An if expression allows you to branch your code depending on conditions. You "
"provide a condition and then state, “If this condition is met, run this "
"block of code. If the condition is not met, do not run this block of code.”"
msgstr ""
"Une expression if vous permet de brancher votre code en fonction des "
"conditions. Vous fournissez une condition et puis indiquez, Si cette "
"condition est remplie, lancez ce bloc de code. Si la condition n'est pas "
"remplie, ne lancez pas ce bloc de code."

#: src/ch02-05-control-flow.md:9
msgid ""
"Create a new project called _branches_ in your _cairo_projects_ directory to "
"explore the `if` expression. In the _src/lib.cairo_ file, input the "
"following:"
msgstr ""
"Créez un nouveau projet appelé _branches_ dans votre répertoire "
"_cairo_projects_ pour explorer l'expression `if`. Dans le fichier _src/lib."
"cairo_, entrez ce qui suit :"

#: src/ch02-05-control-flow.md:16
msgid "\"condition was true and number = {}\""
msgstr "\"la condition était vraie et le nombre = {}\""

#: src/ch02-05-control-flow.md:18
msgid "\"condition was false and number = {}\""
msgstr "\"la condition était fausse et le nombre = {}\""

#: src/ch02-05-control-flow.md:23
msgid ""
"All `if` expressions start with the keyword `if`, followed by a condition. "
"In this case, the condition checks whether or not the variable `number` has "
"a value equal to 5. We place the block of code to execute if the condition "
"is `true` immediately after the condition inside curly brackets."
msgstr ""
"Toutes les expressions `si` commencent par le mot clé `si`, suivi d'une "
"condition. Dans ce cas, la condition vérifie si la variable `number` a ou "
"non une valeur égale à 5. Nous plaçons le bloc de code à exécuter si la "
"condition est `true` immédiatement après la condition à l'intérieur des "
"crochets bouclés."

#: src/ch02-05-control-flow.md:25
msgid ""
"Optionally, we can also include an `else` expression, which we chose to do "
"here, to give the program an alternative block of code to execute should the "
"condition evaluate to `false`. If you don’t provide an `else` expression and "
"the condition is `false`, the program will just skip the `if` block and move "
"on to the next bit of code."
msgstr ""
"En option, nous pouvons également inclure une expression \"else`, que nous "
"avons choisi de faire ici, pour donner au programme un bloc alternatif de "
"code à exécuter si la condition évalue à `false`. Si vous ne fournissez pas "
"une expression \"else` et la condition est `false`, le programme va juste "
"sauter le bloc `if` et passer au prochain bit de code."

#: src/ch02-05-control-flow.md:27
msgid "Try running this code; you should see the following output:"
msgstr "Essayez d'exécuter ce code ; vous devriez voir la sortie suivante :"

#: src/ch02-05-control-flow.md:39
msgid ""
"Let’s try changing the value of `number` to a value that makes the condition "
"`true` to see what happens:"
msgstr ""
"Laissez-nous essayer de changer la valeur de `nombre` en une valeur qui rend "
"la condition `vraie` pour voir ce qui se passe:"

#: src/ch02-05-control-flow.md:51
msgid ""
"It’s also worth noting that the condition in this code must be a `bool`. If "
"the condition isn’t a `bool`, we’ll get an error. For example, try running "
"the following code:"
msgstr ""
"Il est également intéressant de noter que la condition dans ce code doit "
"être un «bool». Si la condition n'est pas un «bool», nous allons obtenir une "
"erreur. Par exemple, essayez d'exécuter le code suivant:"

#: src/ch02-05-control-flow.md:58
msgid "\"number was three\""
msgstr "\"le nombre était trois\""

#: src/ch02-05-control-flow.md:63
msgid ""
"The `if` condition evaluates to a value of 3 this time, and Cairo throws an "
"error:"
msgstr ""
"La condition `si` évalue à une valeur de 3 cette fois, et le Caire lance une "
"erreur:"

#: src/ch02-05-control-flow.md:77
msgid ""
"The error indicates that Cairo inferred the type of `number` to be a `bool` "
"based on its later use as a condition of the `if` statement. It tries to "
"create a `bool` from the value `3`, but Cairo doesn't support instantiating "
"a `bool` from a numeric literal anyway - you can only use `true` or `false` "
"to create a `bool`. Unlike languages such as Ruby and JavaScript, Cairo will "
"not automatically try to convert non-Boolean types to a Boolean. If we want "
"the `if` code block to run only when a number is not equal to 0, for "
"example, we can change the if expression to the following:"
msgstr ""
"L'erreur indique que le Caire a déduit le type de `nombre` comme étant un "
"`bool` en fonction de son utilisation ultérieure comme condition de "
"l'instruction `si`. Il essaie de créer un `bool` à partir de la valeur `3`, "
"mais le Caire ne supporte pas d'actualiser un `bool` à partir d'une "
"littérale numérique de toute façon - vous ne pouvez utiliser `true` ou "
"`false` pour créer un `bool`. Contrairement à des langages tels que Ruby et "
"JavaScript, le Caire n'essaiera pas automatiquement de convertir des types "
"non booléens en booléen. Si nous voulons que le bloc de code `if` ne "
"s'exécute que lorsqu'un nombre n'est pas égal à 0, par exemple, nous pouvons "
"modifier l'expression si elle est la suivante:"

#: src/ch02-05-control-flow.md:91
msgid "\"number was something other than zero\""
msgstr "\"Le nombre était autre chose que zéro\""

#: src/ch02-05-control-flow.md:97
msgid "Running this code will print `number was something other than zero`."
msgstr ""
"Exécuter ce code va imprimer `numéro était quelque chose d'autre que zéro`."

#: src/ch02-05-control-flow.md:99
msgid "Handling Multiple Conditions with `else if`"
msgstr "Manipulation de plusieurs conditions avec `else if`"

#: src/ch02-05-control-flow.md:101
msgid ""
"You can use multiple conditions by combining `if` and `else` in an `else if` "
"expression. For example:"
msgstr ""
"Vous pouvez utiliser plusieurs conditions en combinant `if` et `else` dans "
"une expression `else if`. Par exemple:"

#: src/ch02-05-control-flow.md:108
msgid "\"number is 12\""
msgstr "\"le nombre est 12\""

#: src/ch02-05-control-flow.md:110
msgid "\"number is 3\""
msgstr "\"le nombre est 3\""

#: src/ch02-05-control-flow.md:112
msgid "\"number minus 2 is 1\""
msgstr "\"le nombre moins 2 est 1\""

#: src/ch02-05-control-flow.md:114
msgid "\"number not found\""
msgstr "\"nombre non trouvé\""

#: src/ch02-05-control-flow.md:119
msgid ""
"This program has four possible paths it can take. After running it, you "
"should see the following output:"
msgstr ""
"Ce programme a quatre chemins possibles qu'il peut prendre. Après l'avoir "
"exécuté, vous devriez voir la sortie suivante:"

#: src/ch02-05-control-flow.md:131
msgid ""
"When this program executes, it checks each `if` expression in turn and "
"executes the first body for which the condition evaluates to `true`. Note "
"that even though `number - 2 == 1` is `true`, we don’t see the output "
"`number minus 2 is 1` nor do we see the `number not found` text from the "
"`else` block. That’s because Cairo only executes the block for the first "
"true condition, and once it finds one, it doesn’t even check the rest. Using "
"too many `else if` expressions can clutter your code, so if you have more "
"than one, you might want to refactor your code. [Chapter 6](./ch06-02-the-"
"match-control-flow-construct.md) describes a powerful Cairo branching "
"construct called `match` for these cases."
msgstr ""
"Lorsque ce programme s'exécute, il vérifie chaque expression `if` à son tour "
"et exécute le premier corps pour lequel la condition évalue à `true`. Notez "
"que même si `number - 2 == 1` est `true`, nous ne voyons pas la sortie "
"`number moins 2 est 1` ni le `number not found` text du bloc `else`. Cela "
"parce que le Caire n'exécute que le bloc pour la première condition vraie, "
"et une fois qu'il en trouve un, il ne vérifie même pas le reste. En "
"utilisant trop d'expressions `else if` peut encombrer votre code, donc si "
"vous en avez plus d'un, vous pourriez vouloir refactorer votre code. "
"[Chapitre 6](./ch06-02-the-match-control-flow-construct.md) décrit une "
"puissante construction de branchement du Caire appelée `match` pour ces cas."

#: src/ch02-05-control-flow.md:135
msgid "Using `if` in a `let` Statement"
msgstr "Utilisation de `si` dans une déclaration `let`"

#: src/ch02-05-control-flow.md:137
msgid ""
"Because `if` is an expression, we can use it on the right side of a `let` "
"statement to assign the outcome to a variable."
msgstr ""
"Parce que `si` est une expression, nous pouvons l'utiliser sur le côté droit "
"d'une instruction `let` pour attribuer le résultat à une variable."

#: src/ch02-05-control-flow.md:149
msgid "\"condition was true and number is {}\""
msgstr "\"la condition était vraie et le nombre est {}\""

#: src/ch02-05-control-flow.md:164
msgid ""
"The `number` variable will be bound to a value based on the outcome of the "
"`if` expression, which will be 5 here."
msgstr ""
"La variable `nombre` sera liée à une valeur basée sur le résultat de "
"l'expression `si`, qui sera 5 ici."

#: src/ch02-05-control-flow.md:166
msgid "Repetition with Loops"
msgstr "Répétition avec boucles"

#: src/ch02-05-control-flow.md:168
msgid ""
"It’s often useful to execute a block of code more than once. For this task, "
"Cairo provides a simple loop syntax, which will run through the code inside "
"the loop body to the end and then start immediately back at the beginning. "
"To experiment with loops, let’s create a new project called _loops_."
msgstr ""
"Il est souvent utile d'exécuter un bloc de code plus d'une fois. Pour cette "
"tâche, Le Caire fournit une syntaxe de boucle simple, qui va passer à "
"travers le code à l'intérieur du corps de la boucle jusqu'à la fin et puis "
"commencer immédiatement à revenir au début."

#: src/ch02-05-control-flow.md:170
msgid "Cairo has two kinds of loops: `loop` and `while`."
msgstr "Le Caire dispose de deux types de boucles : la boucle et le temps."

#: src/ch02-05-control-flow.md:172
msgid "Repeating Code with `loop`"
msgstr "Répéter le code avec `loop`"

#: src/ch02-05-control-flow.md:174
msgid ""
"The `loop` keyword tells Cairo to execute a block of code over and over "
"again forever or until you explicitly tell it to stop."
msgstr ""
"Le mot-clé `loop` dit au Caire d'exécuter un bloc de code encore et encore "
"pour toujours ou jusqu'à ce que vous lui disiez explicitement de s'arrêter."

#: src/ch02-05-control-flow.md:176
msgid ""
"As an example, change the _src/lib.cairo_ file in your _loops_ directory to "
"look like this:"
msgstr ""
"Par exemple, changez le fichier _src/lib.cairo_ dans votre répertoire "
"_loops_ pour ressembler à ceci :"

#: src/ch02-05-control-flow.md:181
msgid "\"again!\""
msgstr "\"encore!\""

#: src/ch02-05-control-flow.md:189
msgid ""
"Note: This program would not compile without a break condition. For the "
"purpose of the example, we added a `break` statement that will never be "
"reached, but satisfies the compiler."
msgstr ""
"Note: Ce programme ne serait pas compilé sans une condition de rupture. Aux "
"fins de l'exemple, nous avons ajouté une déclaration de rupture qui ne sera "
"jamais atteinte, mais qui satisfait le compilateur."

#: src/ch02-05-control-flow.md:191
msgid ""
"When we run this program, we’ll see `again!` printed over and over "
"continuously until either the program runs out of gas or we stop the program "
"manually. Most terminals support the keyboard shortcut ctrl-c to interrupt a "
"program that is stuck in a continual loop. Give it a try:"
msgstr ""
"Lorsque nous exécutons ce programme, nous allons voir `à nouveau!` imprimé "
"en continu jusqu'à ce que le programme soit épuisé ou que nous arrêtions le "
"programme manuellement. La plupart des terminaux prennent en charge le "
"raccourci clavier ctrl-c pour interrompre un programme qui est coincé dans "
"une boucle continue."

#: src/ch02-05-control-flow.md:193
msgid ""
"```shell\n"
"$ scarb cairo-run --available-gas=20000000\n"
"   Compiling loops v0.1.0 (file:///projects/loops)\n"
"    Finished release target(s) in 0 seconds\n"
"     Running loops\n"
"again!\n"
"again!\n"
"again!\n"
"^Cagain!\n"
"```"
msgstr ""
"```shell $ scarb cairo-run --available-gas=20000000 Compilation loops v0.1.0 "
"(fichier:///projects/loops) Finis la sortie cible(s) en 0 secondes Running "
"loops de nouveau!! regain! ^Cagain! ``"

#: src/ch02-05-control-flow.md:204
msgid ""
"The symbol `^C` represents where you pressed ctrl-c. You may or may not see "
"the word `again!` printed after the ^C, depending on where the code was in "
"the loop when it received the interrupt signal."
msgstr ""
"Le symbole `^C` représente l'endroit où vous avez appuyé sur ctrl-c. Vous "
"pouvez voir ou non le mot `à nouveau!` imprimé après le ^C, selon l'endroit "
"où le code était dans la boucle quand il a reçu le signal d'interruption."

#: src/ch02-05-control-flow.md:206
msgid ""
"Note: Cairo prevents us from running program with infinite loops by "
"including a gas meter. The gas meter is a mechanism that limits the amount "
"of computation that can be done in a program. By setting a value to the `--"
"available-gas` flag, we can set the maximum amount of gas available to the "
"program. Gas is a unit of measurement that expresses the computation cost of "
"an instruction. When the gas meter runs out, the program will stop. In the "
"previous case, we set the gas limit high enough for the program to run for "
"quite some time."
msgstr ""
"Note: Le Caire nous empêche de lancer un programme avec des boucles infinies "
"en incluant un compteur de gaz. Le compteur de gaz est un mécanisme qui "
"limite la quantité de calcul qui peut être fait dans un programme. En "
"définissant une valeur au drapeau `--disponible-gaz`, nous pouvons définir "
"la quantité maximale de gaz disponible au programme. Le gaz est une unité de "
"mesure qui exprime le coût de calcul d'une instruction. Lorsque le compteur "
"de gaz s'épuise, le programme s'arrêtera. Dans le cas précédent, nous "
"définissons la limite de gaz suffisamment élevée pour que le programme "
"fonctionne pendant un certain temps."

#: src/ch02-05-control-flow.md:208
msgid ""
"It is particularly important in the context of smart contracts deployed on "
"Starknet, as it prevents from running infinite loops on the network. If "
"you're writing a program that needs to run a loop, you will need to execute "
"it with the `--available-gas` flag set to a value that is large enough to "
"run the program."
msgstr ""
"Il est particulièrement important dans le contexte des contrats intelligents "
"déployés sur Starknet, car il empêche d'exécuter des boucles infinies sur le "
"réseau. Si vous écrivez un programme qui doit exécuter une boucle, vous "
"devrez l'exécuter avec le drapeau `--available-gas` défini à une valeur "
"suffisamment grande pour exécuter le programme."

#: src/ch02-05-control-flow.md:211
msgid ""
"Now, try running the same program again, but this time with the `--available-"
"gas` flag set to `200000` instead of `2000000000000`. You will see the "
"program only prints `again!` 3 times before it stops, as it ran out of gas "
"to keep executing the loop."
msgstr ""
"Maintenant, essayez d'exécuter le même programme à nouveau, mais cette fois "
"avec le drapeau `--available-gas` défini à `200000` au lieu de "
"`2000000000000`. Vous verrez le programme imprime seulement `à nouveau!` 3 "
"fois avant qu'il s'arrête, car il est épuisé de gaz pour continuer à "
"exécuter la boucle."

#: src/ch02-05-control-flow.md:213
msgid ""
"Fortunately, Cairo also provides a way to break out of a loop using code. "
"You can place the `break` keyword within the loop to tell the program when "
"to stop executing the loop."
msgstr ""
"Heureusement, Cairo fournit également un moyen de sortir d'une boucle en "
"utilisant le code. Vous pouvez placer le mot clé `break` dans la boucle pour "
"indiquer au programme quand arrêter d'exécuter la boucle."

#: src/ch02-05-control-flow.md:222 src/ch02-05-control-flow.md:242
msgid "\"i = {}\""
msgstr "\"i = {}\""

#: src/ch02-05-control-flow.md:228
msgid ""
"The `continue` keyword tells the program to go to the next iteration of the "
"loop and to skip the rest of the code in this iteration. Let's add a "
"`continue` statement to our loop to skip the `println!` statement when `i` "
"is equal to `5`."
msgstr ""
"Le mot-clé `continue` indique au programme d'aller à la prochaine itération "
"de la boucle et de sauter le reste du code dans cette itération. Ajoutons "
"une instruction `continue` à notre boucle pour sauter l'instruction `println!"
"` quand `i` est égal à `5`."

#: src/ch02-05-control-flow.md:248
msgid ""
"Executing this program will not print the value of `i` when it is equal to "
"`5`."
msgstr ""
"L'exécution de ce programme n'impressionnera pas la valeur de `i` "
"lorsqu'elle est égale à `5`."

#: src/ch02-05-control-flow.md:250
msgid "Returning Values from Loops"
msgstr "Retour des valeurs des boucles"

#: src/ch02-05-control-flow.md:252
msgid ""
"One of the uses of a `loop` is to retry an operation you know might fail, "
"such as checking whether an operation has succeeded. You might also need to "
"pass the result of that operation out of the loop to the rest of your code. "
"To do this, you can add the value you want returned after the `break` "
"expression you use to stop the loop; that value will be returned out of the "
"loop so you can use it, as shown here:"
msgstr ""
"Une des utilisations d'une boucle est de réessayer une opération que vous "
"connaissez pourrait échouer, comme vérifier si une opération a réussi. Vous "
"pourriez également avoir besoin de passer le résultat de cette opération "
"hors de la boucle au reste de votre code. Pour ce faire, vous pouvez ajouter "
"la valeur que vous souhaitez retournée après l'expression `break` que vous "
"utilisez pour arrêter la boucle; cette valeur sera renvoyée hors de la "
"boucle afin que vous puissiez l'utiliser, comme indiqué ici:"

#: src/ch02-05-control-flow.md:270
msgid "\"The result is {}\""
msgstr "\"Le résultat est {}\""

#: src/ch02-05-control-flow.md:274
msgid ""
"Before the loop, we declare a variable named `counter` and initialize it to "
"`0`. Then we declare a variable named `result` to hold the value returned "
"from the loop. On every iteration of the loop, we check whether the "
"`counter` is equal to `10`, and then add `1` to the `counter` variable. When "
"the condition is met, we use the `break` keyword with the value `counter * "
"2`. After the loop, we use a semicolon to end the statement that assigns the "
"value to `result`. Finally, we print the value in `result`, which in this "
"case is `20`."
msgstr ""
"Avant la boucle, nous déclarons une variable nommée `counter` et "
"l'initialisons à `0`. Ensuite, nous déclarons une variable nommée `result` "
"pour tenir la valeur retournée de la boucle. À chaque itération de la "
"boucle, nous vérifions si la `counter` est égale à `10`, puis ajoutons `1` à "
"la variable `counter`. Lorsque la condition est remplie, nous utilisons le "
"mot-clé `break` avec la valeur `counter * 2`. Après la boucle, nous "
"utilisons un point-virgule pour terminer l'instruction qui attribue la "
"valeur à `result`. Enfin, nous imprimons la valeur dans `result`, qui dans "
"ce cas est `20`."

#: src/ch02-05-control-flow.md:281
msgid "Conditional Loops with `while`"
msgstr "Boucles conditionnelles avec `temps`"

#: src/ch02-05-control-flow.md:283
msgid ""
"A program will often need to evaluate a condition within a loop. While the "
"condition is `true`, the loop runs. When the condition ceases to be `true`, "
"the program calls `break`, stopping the loop. It’s possible to implement "
"behavior like this using a combination of `loop`, `if`, `else`, and `break`; "
"you could try that now in a program, if you’d like. However, this pattern is "
"so common that Cairo has a built-in language construct for it, called a "
"`while` loop."
msgstr ""
"Un programme aura souvent besoin d'évaluer une condition dans une boucle. "
"Bien que la condition soit `true`, la boucle tourne. Lorsque la condition "
"cesse d'être `true`, le programme appelle `break`, arrêtant la boucle. Il "
"est possible d'implémenter un comportement comme ceci en utilisant une "
"combinaison de `loop`, `if`, `else` et `break`; vous pouvez essayer cela "
"maintenant dans un programme, si vous voulez. Cependant, ce modèle est "
"tellement commun que le Caire a une construction de langage intégré pour "
"elle, appelé une `bilan`."

#: src/ch02-05-control-flow.md:289
msgid ""
"In Listing 2-2, we use `while` to loop the program three times, counting "
"down each time after printing the value of `number`, and then, after the "
"loop, print a message and exit."
msgstr ""
"Dans Listing 2-2, nous utilisons `When` pour boucler le programme trois "
"fois, en comptant à chaque fois après avoir imprimé la valeur de `number`, "
"puis, après la boucle, imprimer un message et sortir."

#: src/ch02-05-control-flow.md:296
msgid "\"{number}!\""
msgstr "\"{numéro}!\""

#: src/ch02-05-control-flow.md:300
msgid "\"LIFTOFF!!!\""
msgstr "\"LIFTOFF!!!\""

#: src/ch02-05-control-flow.md:304
msgid ""
"<span class=\"caption\">Listing 2-2: Using a `while` loop to run code while "
"a condition holds `true`.</span>"
msgstr ""
"<span class=\"caption\">Liste 2-2: Utilisation d'une boucle `time` pour "
"exécuter le code alors qu'une condition contient `true`.</span>"

#: src/ch02-05-control-flow.md:306
msgid ""
"This construct eliminates a lot of nesting that would be necessary if you "
"used `loop`, `if`, `else`, and `break`, and it’s clearer. While a condition "
"evaluates to `true`, the code runs; otherwise, it exits the loop."
msgstr ""
"Cette construction élimine beaucoup de nidification qui serait nécessaire si "
"vous utilisez `loop`, `if`, `else`, et `break`, et il est plus clair. Bien "
"qu'une condition évalue à `true`, le code fonctionne; sinon, il sort de la "
"boucle."

#: src/ch02-05-control-flow.md:309
msgid "{{#quiz ../quizzes/ch02-05-control-flow.toml}}"
msgstr "{{#quiz../quizes/ch02-05-control-flow.toml}}"

#: src/ch02-05-control-flow.md:313
msgid ""
"You made it! This was a sizable chapter: you learned about variables, data "
"types, functions, comments, `if` expressions and loops! To practice with the "
"concepts discussed in this chapter, try building programs to do the "
"following:"
msgstr ""
"Vous l'avez fait! C'était un chapitre important: vous avez appris sur les "
"variables, les types de données, les fonctions, les commentaires, les "
"expressions `si` et les boucles! Pour pratiquer avec les concepts discutés "
"dans ce chapitre, essayez de construire des programmes pour faire ce qui "
"suit:"

#: src/ch02-05-control-flow.md:317
msgid "Generate the _n_\\-th Fibonacci number."
msgstr "Générer le numéro de _n_\\-th Fibonacci."

#: src/ch02-05-control-flow.md:318
msgid "Compute the factorial of a number _n_."
msgstr "Calculer la factorielle d'un nombre _n_."

#: src/ch02-05-control-flow.md:320
msgid ""
"Now, we’ll review the common collection types in Cairo in the next chapter."
msgstr ""
"Maintenant, nous allons examiner les types de collection communs au Caire "
"dans le prochain chapitre."

#: src/ch03-00-common-collections.md
msgid ""
"Cairo provides a set of common collection types that can be used to store "
"and manipulate data. These collections are designed to be efficient, "
"flexible, and easy to use. This section introduces the primary collection "
"types available in Cairo: Arrays and Dictionaries."
msgstr ""
"Le Caire fournit un ensemble de types de collecte communs qui peuvent être "
"utilisés pour stocker et manipuler des données. Ces collections sont conçues "
"pour être efficaces, flexibles et faciles à utiliser. Cette section présente "
"les principaux types de collecte disponibles au Caire: Arrays et "
"Dictionnaires."

#: src/ch03-01-arrays.md:3
msgid ""
"An array is a collection of elements of the same type. You can create and "
"use array methods by using the `ArrayTrait` trait from the core library."
msgstr ""
"Un tableau est une collection d'éléments du même type. Vous pouvez créer et "
"utiliser des méthodes de tableau en utilisant le caractère `ArrayTrait` de "
"la bibliothèque centrale."

#: src/ch03-01-arrays.md:5
msgid ""
"An important thing to note is that arrays have limited modification options. "
"Arrays are, in fact, queues whose values can't be modified. This has to do "
"with the fact that once a memory slot is written to, it cannot be "
"overwritten, but only read from it. You can only append items to the end of "
"an array and remove items from the front."
msgstr ""
"Une chose importante à noter est que les tableaux ont des options de "
"modification limitées. Les tableaux sont, en fait, des files d'attente dont "
"les valeurs ne peuvent pas être modifiées. Cela a à voir avec le fait qu'une "
"fois qu'une fente de mémoire est écrite, elle ne peut pas être écrasée, mais "
"seulement lue d'elle. Vous pouvez seulement ajouter des éléments à la fin "
"d'un tableau et supprimer des éléments de l'avant."

#: src/ch03-01-arrays.md:8
msgid "Creating an Array"
msgstr "Création d'un tableau"

#: src/ch03-01-arrays.md:10
msgid ""
"Creating an array is done with the `ArrayTrait::new()` call. Here's an "
"example of creating an array and appending 3 elements to it::"
msgstr ""
"Créer un tableau est fait avec l'appel `ArrayTrait::new()`. Voici un exemple "
"de création d'un tableau et d'ajout de 3 éléments à celui-ci:"

#: src/ch03-01-arrays.md:21
msgid ""
"When required, you can pass the expected type of items inside the array when "
"instantiating the array like this, or explicitly define the type of the "
"variable."
msgstr ""
"Si nécessaire, vous pouvez passer le type d'éléments attendu à l'intérieur "
"du tableau lors de l'activation du tableau comme ceci, ou définir "
"explicitement le type de la variable."

#: src/ch03-01-arrays.md:31
msgid "Updating an Array"
msgstr "Mise à jour d'un tableau"

#: src/ch03-01-arrays.md:33
msgid "Adding Elements"
msgstr "Ajout d'éléments"

#: src/ch03-01-arrays.md:35
msgid ""
"To add an element to the end of an array, you can use the `append()` method:"
msgstr ""
"Pour ajouter un élément à la fin d'un tableau, vous pouvez utiliser la "
"méthode `append()`:"

#: src/ch03-01-arrays.md:46
msgid "Removing Elements"
msgstr "Suppression des éléments"

#: src/ch03-01-arrays.md:48
msgid ""
"You can only remove elements from the front of an array by using the "
"`pop_front()` method. This method returns an `Option` that can be unwrapped, "
"containing the removed element, or `Option::None` if the array is empty."
msgstr ""
"Vous ne pouvez supprimer des éléments de l'avant d'un tableau qu'en "
"utilisant la méthode `pop_front()`. Cette méthode renvoie une `Option` qui "
"peut être déballée, contenant l'élément supprimé, ou `Option::Aucun` si le "
"tableau est vide."

#: src/ch03-01-arrays.md:59
msgid "\"The first value is {}\""
msgstr "\"La première valeur est {}\""

#: src/ch03-01-arrays.md:63
msgid ""
"The above code will print `The first value is 10` as we remove the first "
"element that was added."
msgstr ""
"Le code ci-dessus va imprimer `La première valeur est 10` que nous "
"supprimons le premier élément qui a été ajouté."

#: src/ch03-01-arrays.md:65
msgid ""
"In Cairo, memory is immutable, which means that it is not possible to modify "
"the elements of an array once they've been added. You can only add elements "
"to the end of an array and remove elements from the front of an array. These "
"operations do not require memory mutation, as they involve updating pointers "
"rather than directly modifying the memory cells."
msgstr ""
"Au Caire, la mémoire est immuable, ce qui signifie qu'il n'est pas possible "
"de modifier les éléments d'un tableau une fois qu'ils ont été ajoutés. Vous "
"ne pouvez ajouter des éléments à la fin d'un tableau et supprimer des "
"éléments de l'avant d'un tableau. Ces opérations ne nécessitent pas de "
"mutation de mémoire, car elles impliquent la mise à jour des pointeurs "
"plutôt que de modifier directement les cellules de mémoire."

#: src/ch03-01-arrays.md:67
msgid "Reading Elements from an Array"
msgstr "Éléments de lecture d'un tableau"

#: src/ch03-01-arrays.md:69
msgid ""
"To access array elements, you can use `get()` or `at()` array methods that "
"return different types. Using `arr.at(index)` is equivalent to using the "
"subscripting operator `arr[index]`."
msgstr ""
"Pour accéder aux éléments de tableau, vous pouvez utiliser `get()` ou `at()` "
"des méthodes de tableau qui renvoient différents types. L'utilisation de "
"`arr.at(index)` est équivalente à l'utilisation de l'opérateur d'abonnement "
"`arr[index]`."

#: src/ch03-01-arrays.md:71
msgid "`get()` Method"
msgstr "`get()` Méthode"

#: src/ch03-01-arrays.md:73
msgid ""
"The `get` function returns an `Option<Box<@T>>`, which means it returns an "
"option to a Box type (Cairo's smart-pointer type) containing a snapshot to "
"the element at the specified index if that element exists in the array. If "
"the element doesn't exist, `get` returns `None`. This method is useful when "
"you expect to access indices that may not be within the array's bounds and "
"want to handle such cases gracefully without panics. Snapshots will be "
"explained in more detail in the [\"References and Snapshots\"](./ch04-02-"
"references-and-snapshots.md#snapshots) chapter."
msgstr ""
"La fonction `get` retourne un `Option<Box<@T>>`, ce qui signifie qu'il "
"retourne une option à un type de boîte (type de pointeur intelligent du "
"Caire) contenant un instantané à l'élément de l'index spécifié si cet "
"élément n'existe pas dans le tableau. Si l'élément n'existe pas, `get` "
"retourne `Aucun`. Cette méthode est utile lorsque vous vous attendez à "
"accéder à des indices qui ne sont pas dans les limites du tableau et veulent "
"gérer ces cas gracieusement sans panique. Les snapshots seront expliqués "
"plus en détail dans le chapitre [\"Références et snapshots\"](./ch04-02-"
"references-and-snapshots.md#snapshots)."

#: src/ch03-01-arrays.md:75
msgid "Here is an example with the `get()` method:"
msgstr "Voici un exemple avec la méthode `get()`:"

#: src/ch03-01-arrays.md:82
msgid ""
"// Change this value to see different results, what would happen if the "
"index doesn't exist?\n"
msgstr ""
"// Modifier cette valeur pour voir différents résultats, que se passerait-il "
"si l'index n'existait pas?\n"

#: src/ch03-01-arrays.md:86
msgid ""
"// Don't worry about * for now, if you are curious see Chapter 4.2 #desnap "
"operator\n"
"        // It basically means \"transform what get(idx) returned into a real "
"value\"\n"
msgstr ""
"// Ne vous inquiétez pas * pour l'instant, si vous êtes curieux voir le "
"chapitre 4.2 #desnap opérateur // Cela signifie fondamentalement "
"\"transformer ce que get(idx) retourné dans une valeur réelle\"\n"

#: src/ch03-01-arrays.md:89
msgid "\"out of bounds\""
msgstr "\"hors limites\""

#: src/ch03-01-arrays.md:96
msgid "`at()` Method"
msgstr "`at()` Méthode"

#: src/ch03-01-arrays.md:98
msgid ""
"The `at` function, on the other hand, directly returns a snapshot to the "
"element at the specified index using the `unbox()` operator to extract the "
"value stored in a box. If the index is out of bounds, a panic error occurs. "
"You should only use `at` when you want the program to panic if the provided "
"index is out of the array's bounds, which can prevent unexpected behavior."
msgstr ""
"Par contre, la fonction `at` renvoie directement un instantané à l'élément "
"de l'index spécifié en utilisant l'opérateur `unbox()` pour extraire la "
"valeur stockée dans une boîte. Si l'index est hors limites, une erreur de "
"panique se produit. Vous ne devriez utiliser `at` que lorsque vous voulez "
"que le programme panique si l'index fourni est hors limites du tableau, ce "
"qui peut empêcher un comportement inattendu."

#: src/ch03-01-arrays.md:100
msgid "Here is an example with the `at()` method:"
msgstr "Voici un exemple avec la méthode `at()`:"

#: src/ch03-01-arrays.md:113
msgid ""
"In this example, the variable named `first` will get the value `0` because "
"that is the value at index `0` in the array. The variable named `second` "
"will get the value `1` from index `1` in the array."
msgstr ""
"Dans cet exemple, la variable nommée `first` obtiendra la valeur `0` parce "
"que c'est la valeur de l'index `0` dans le tableau. La variable nommée "
"`second` obtiendra la valeur `1` de l'index `1` dans le tableau."

#: src/ch03-01-arrays.md:117
msgid ""
"If you want to use the subscripting operator `arr[index]`, you will need to "
"explicitly define the type of the elements of the array, otherwise it will "
"not compile. For example:"
msgstr ""
"Si vous souhaitez utiliser l'opérateur d'abonnement `arr[index]`, vous "
"devrez définir explicitement le type d'éléments du tableau, sinon il ne sera "
"pas compilé. Par exemple:"

#: src/ch03-01-arrays.md:130
msgid ""
"In summary, use `at` when you want to panic on out-of-bounds access "
"attempts, and use `get` when you prefer to handle such cases gracefully "
"without panicking."
msgstr ""
"En résumé, utilisez `at` quand vous voulez paniquer sur les tentatives "
"d'accès hors de la frontière, et utilisez `get` quand vous préférez gérer "
"ces cas gracieusement sans paniquer."

#: src/ch03-01-arrays.md:132
msgid "Size-related Methods"
msgstr "Méthodes liées à la taille"

#: src/ch03-01-arrays.md:134
msgid ""
"To determine the number of elements in an array, use the `len()` method. The "
"return value is of type `usize`."
msgstr ""
"Pour déterminer le nombre d'éléments dans un tableau, utilisez la méthode "
"`len()`. La valeur de retour est de type `usize`."

#: src/ch03-01-arrays.md:136
msgid ""
"If you want to check if an array is empty or not, you can use the "
"`is_empty()` method, which returns `true` if the array is empty and `false` "
"otherwise."
msgstr ""
"Si vous voulez vérifier si un tableau est vide ou non, vous pouvez utiliser "
"la méthode `is_vide()`, qui retourne `true` si le tableau est vide et "
"`false` autrement."

#: src/ch03-01-arrays.md:138 src/ch11-05-macros.md:25
msgid "`array!` Macro"
msgstr "\"array!\" Macro"

#: src/ch03-01-arrays.md:140
msgid ""
"Sometimes, we need to create arrays with values that are already known at "
"compile time. The basic way of doing that is redundant. You would first "
"declare the array and then append each value one by one. `array!` is a "
"simpler way of doing this task by combining the two steps. At compile-time, "
"the compiler will expand the macro to generate the code that appends the "
"items sequentially."
msgstr ""
"Parfois, nous avons besoin de créer des tableaux avec des valeurs qui sont "
"déjà connues au moment de la compilation. La manière de base de faire cela "
"est redondant. Vous déclareriez d'abord le tableau et ensuite ajouteriez "
"chaque valeur un par un. `array!` est une façon plus simple de faire cette "
"tâche en combinant les deux étapes. Au moment de la compilation, le "
"compilateur va élargir la macro pour générer le code qui append les éléments "
"séquentiellement."

#: src/ch03-01-arrays.md:143
msgid "Without `array!`:"
msgstr "Sans 'array! ':"

#: src/ch03-01-arrays.md:154
msgid "With `array!`:"
msgstr "Avec \"array!\":"

#: src/ch03-01-arrays.md:160
msgid "Storing Multiple Types with Enums"
msgstr "Stockage de types multiples avec des enums"

#: src/ch03-01-arrays.md:162
msgid ""
"If you want to store elements of different types in an array, you can use an "
"`Enum` to define a custom data type that can hold multiple types. Enums will "
"be explained in more detail in the [\"Enums and Pattern Matching\"](./"
"ch06-00-enums-and-pattern-matching.md) chapter."
msgstr ""
"Si vous souhaitez stocker des éléments de différents types dans un tableau, "
"vous pouvez utiliser un `Enum` pour définir un type de données personnalisé "
"qui peut contenir plusieurs types. Les enums seront expliqués plus en détail "
"dans le chapitre [\"Enums and Pattern Matching\"](./ch06-00-enums-and-"
"pattern-matching.md)."

#: src/ch03-01-arrays.md:182
msgid "Span"
msgstr "Épanouissement"

#: src/ch03-01-arrays.md:184
msgid ""
"`Span` is a struct that represents a snapshot of an `Array`. It is designed "
"to provide safe and controlled access to the elements of an array without "
"modifying the original array. Span is particularly useful for ensuring data "
"integrity and avoiding borrowing issues when passing arrays between "
"functions or when performing read-only operations, as introduced in "
"[\"References and Snapshots\"](./ch04-02-references-and-snapshots.md)."
msgstr ""
"`Span` est une structure qui représente un instantané d'un `Array`. Il est "
"conçu pour fournir un accès sûr et contrôlé aux éléments d'un tableau sans "
"modifier le tableau d'origine. Span est particulièrement utile pour assurer "
"l'intégrité des données et éviter les problèmes d'emprunt lors du passage de "
"tableaux entre les fonctions ou lors de l'exécution d'opérations en lecture "
"seule, comme introduit dans [\"Références et Snapshots\"](./ch04-02-"
"références-and-snapshots.md)."

#: src/ch03-01-arrays.md:186
msgid ""
"All methods provided by `Array` can also be used with `Span`, except for the "
"`append()` method."
msgstr ""
"Toutes les méthodes fournies par `Array` peuvent également être utilisées "
"avec `Span`, à l'exception de la méthode `append()`."

#: src/ch03-01-arrays.md:190
msgid "Turning an Array into Span"
msgstr "Transformer un tableau en spand"

#: src/ch03-01-arrays.md:192
msgid "To create a `Span` of an `Array`, call the `span()` method:"
msgstr "Pour créer une `Span` d'une `Array`, appelez la méthode `span()`:"

#: src/ch03-01-arrays.md:201
msgid "{{#quiz ../quizzes/ch03-01-arrays.toml}}"
msgstr "{{#quiz../quizes/ch03-01-arrays.toml}}"

#: src/ch03-02-dictionaries.md:3
msgid ""
"Cairo provides in its core library a dictionary-like type. The "
"`Felt252Dict<T>` data type represents a collection of key-value pairs where "
"each key is unique and associated with a corresponding value. This type of "
"data structure is known differently across different programming languages "
"such as maps, hash tables, associative arrays and many others."
msgstr ""
"Le Caire fournit dans sa bibliothèque centrale un type de dictionnaire. Le "
"type de données `Felt252Dict<T>` représente une collection de paires de "
"valeurs clés où chaque clé est unique et associée à une valeur "
"correspondante. Ce type de structure de données est connu différemment dans "
"différents langages de programmation tels que les cartes, les tables de "
"hachage, les tableaux associatifs et bien d'autres."

#: src/ch03-02-dictionaries.md:5
msgid ""
"The `Felt252Dict<T>` type is useful when you want to organize your data in a "
"certain way for which using an `Array<T>` and indexing doesn't suffice. "
"Cairo dictionaries also allow the programmer to easily simulate the "
"existence of mutable memory when there is none."
msgstr ""
"Le type `Felt252Dict<T>` est utile lorsque vous voulez organiser vos données "
"d'une certaine manière pour laquelle l'utilisation d'un `Array<T>` et "
"l'indexation ne suffit pas. Les dictionnaires du Caire permettent également "
"au programmeur de simuler facilement l'existence de la mémoire mutable quand "
"il n'y en a pas."

#: src/ch03-02-dictionaries.md:7
msgid "Basic Use of Dictionaries"
msgstr "Utilisation de base des dictionnaires"

#: src/ch03-02-dictionaries.md:9
msgid ""
"It is normal in other languages when creating a new dictionary to define the "
"data types of both key and value. In Cairo, the key type is restricted to "
"`felt252`, leaving only the possibility to specify the value data type, "
"represented by `T` in `Felt252Dict<T>`."
msgstr ""
"Il est normal dans d'autres langues lors de la création d'un nouveau "
"dictionnaire pour définir les types de données à la fois de clé et de "
"valeur. Au Caire, le type de clé est limité à `felt252`, ne laissant que la "
"possibilité de spécifier le type de données de valeur, représenté par `T` "
"dans `Felt252Dict<T>`."

#: src/ch03-02-dictionaries.md:11
msgid ""
"The core functionality of a `Felt252Dict<T>` is implemented in the trait "
"`Felt252DictTrait` which includes all basic operations. Among them we can "
"find:"
msgstr ""
"La fonctionnalité de base d'un `Felt252Dict<T>` est implémentée dans le "
"trait `Felt252DictTrait` qui comprend toutes les opérations de base."

#: src/ch03-02-dictionaries.md:13
msgid "`insert(felt252, T) -> ()` to write values to a dictionary instance and"
msgstr ""
"`insert(felt252, T) -> ()` pour écrire des valeurs dans une instance de "
"dictionnaire et"

#: src/ch03-02-dictionaries.md:14
msgid "`get(felt252) -> T` to read values from it."
msgstr "`get(felt252) -> T` pour lire les valeurs de celui-ci."

#: src/ch03-02-dictionaries.md:16
msgid ""
"These functions allow us to manipulate dictionaries like in any other "
"language. In the following example, we create a dictionary to represent a "
"mapping between individuals and their balance:"
msgstr ""
"Ces fonctions nous permettent de manipuler des dictionnaires comme dans "
"n'importe quelle autre langue. Dans l'exemple suivant, nous créons un "
"dictionnaire pour représenter une cartographie entre les individus et leur "
"équilibre :"

#: src/ch03-02-dictionaries.md:26
msgid "\"Balance is not 100\""
msgstr "\"La balance n'est pas 100\""

#: src/ch03-02-dictionaries.md:29
msgid "\"Balance is not 200\""
msgstr "\"La balance n'est pas 200\""

#: src/ch03-02-dictionaries.md:33
msgid ""
"We can create a new instance of `Felt252Dict<u64>` by using the `default` "
"method of the `Default` trait and add two individuals, each one with their "
"own balance, using the `insert` method. Finally, we check the balance of our "
"users with the `get` method. These methods are defined in the "
"`Felt252DictTrait` trait in the core library."
msgstr ""
"Nous pouvons créer une nouvelle instance de `Felt252Dict<u64>` en utilisant "
"la méthode `default` du trait `Default` et ajouter deux individus, chacun "
"avec son propre équilibre, en utilisant la méthode `insert`. Enfin, nous "
"vérifions le solde de nos utilisateurs avec la méthode `get`. Ces méthodes "
"sont définies dans le trait `Felt252DictTrait` dans la bibliothèque centrale."

#: src/ch03-02-dictionaries.md:35
msgid ""
"Throughout the book we have talked about how Cairo's memory is immutable, "
"meaning you can only write to a memory cell once but the `Felt252Dict<T>` "
"type represents a way to overcome this obstacle. We will explain how this is "
"implemented later on in [\"Dictionaries Underneath\"](./ch03-02-dictionaries."
"md#dictionaries-underneath)."
msgstr ""
"Tout au long du livre, nous avons parlé de la façon dont la mémoire du Caire "
"est immuable, ce qui signifie que vous ne pouvez écrire à une cellule "
"mémoire qu'une seule fois, mais le type `Felt252Dict<T>` représente un moyen "
"de surmonter cet obstacle. Nous allons expliquer comment cela est mis en "
"œuvre plus tard dans [\"Dictionnaires Underneath\"](./ch03-02-dictionaries."
"md#dictionaries-underneath)."

#: src/ch03-02-dictionaries.md:37
msgid ""
"Building upon our previous example, let us show a code example where the "
"balance of the same user changes:"
msgstr ""
"S'appuyant sur notre exemple précédent, montrons un exemple de code où le "
"solde du même utilisateur change :"

#: src/ch03-02-dictionaries.md:43
msgid "// Insert Alex with 100 balance\n"
msgstr "// Insérez Alex avec un solde de 100\n"

#: src/ch03-02-dictionaries.md:45
msgid "// Check that Alex has indeed 100 associated with him\n"
msgstr "// Vérifiez qu'Alex a effectivement 100 associés avec lui\n"

#: src/ch03-02-dictionaries.md:47
msgid "\"Alex balance is not 100\""
msgstr "\"L'équilibre d'Alex n'est pas 100\""

#: src/ch03-02-dictionaries.md:49
msgid "// Insert Alex again, this time with 200 balance\n"
msgstr "// Insérez à nouveau Alex, cette fois avec un solde de 200\n"

#: src/ch03-02-dictionaries.md:51
msgid "// Check the new balance is correct\n"
msgstr "// Vérifier que le nouveau solde est correct\n"

#: src/ch03-02-dictionaries.md:53
msgid "\"Alex balance is not 200\""
msgstr "\"L'équilibre d'Alex n'est pas 200\""

#: src/ch03-02-dictionaries.md:57
msgid ""
"Notice how in this example we added the 'Alex' individual twice, each time "
"using a different balance and each time that we checked for its balance it "
"had the last value inserted! `Felt252Dict<T>` effectively allows us to "
"\"rewrite\" the stored value for any given key."
msgstr ""
"Notez comment dans cet exemple nous avons ajouté l'individu 'Alex' deux "
"fois, à chaque fois en utilisant un solde différent et à chaque fois que "
"nous avons vérifié son solde, il avait la dernière valeur insérée! "
"`Felt252Dict<T>` nous permet effectivement de \"réécrire\" la valeur stockée "
"pour une clé donnée."

#: src/ch03-02-dictionaries.md:59
msgid ""
"Before heading on and explaining how dictionaries are implemented it is "
"worth mentioning that once you instantiate a `Felt252Dict<T>`, behind the "
"scenes all keys have their associated values initialized as zero. This means "
"that if for example, you tried to get the balance of an inexistent user you "
"will get 0 instead of an error or an undefined value. This also means there "
"is no way to delete data from a dictionary. Something to take into account "
"when incorporating this structure into your code."
msgstr ""
"Avant d'entrer en ligne de compte et d'expliquer comment les dictionnaires "
"sont implémentés, il convient de mentionner qu'une fois que vous avez "
"instantané un `Felt252Dict<T>`, dans les coulisses toutes les clés ont leurs "
"valeurs associées initialisées comme zéro. Cela signifie que si par exemple, "
"vous avez essayé d'obtenir l'équilibre d'un utilisateur inexistant, vous "
"obtiendrez 0 au lieu d'une erreur ou d'une valeur non définie. Cela signifie "
"également qu'il n'y a aucun moyen de supprimer des données d'un "
"dictionnaire. Quelque chose à prendre en compte lors de l'incorporation de "
"cette structure dans votre code."

#: src/ch03-02-dictionaries.md:61
msgid ""
"Until this point, we have seen all the basic features of `Felt252Dict<T>` "
"and how it mimics the same behavior as the corresponding data structures in "
"any other language, that is, externally of course. Cairo is at its core a "
"non-deterministic Turing-complete programming language, very different from "
"any other popular language in existence, which as a consequence means that "
"dictionaries are implemented very differently as well!"
msgstr ""
"Jusqu'à ce point, nous avons vu toutes les caractéristiques de base de "
"`Felt252Dict<T>` et comment il imite le même comportement que les structures "
"de données correspondantes dans n'importe quelle autre langue, c'est-à-dire, "
"externement bien sûr. Le Caire est au cœur d'un langage de programmation non "
"déterministe Turing-complet, très différent de tout autre langage populaire "
"existant, ce qui signifie que les dictionnaires sont mis en œuvre très "
"différemment aussi!"

#: src/ch03-02-dictionaries.md:63
msgid ""
"In the following sections, we are going to give some insights about "
"`Felt252Dict<T>` inner mechanisms and the compromises that were taken to "
"make them work. After that, we are going to take a look at how to use "
"dictionaries with other data structures as well as use the `entry` method as "
"another way to interact with them."
msgstr ""
"Dans les sections suivantes, nous allons donner quelques indications sur les "
"mécanismes internes `Felt252Dict<T>` et les compromis qui ont été pris pour "
"les faire fonctionner. Après cela, nous allons examiner comment utiliser des "
"dictionnaires avec d'autres structures de données ainsi que d'utiliser la "
"méthode `entry` comme une autre façon d'interagir avec eux."

#: src/ch03-02-dictionaries.md:67
msgid "Dictionaries Underneath"
msgstr "Dictionnaires sous-jacents"

#: src/ch03-02-dictionaries.md:69
msgid ""
"One of the constraints of Cairo's non-deterministic design is that its "
"memory system is immutable, so in order to simulate mutability, the language "
"implements `Felt252Dict<T>` as a list of entries. Each of the entries "
"represents a time when a dictionary was accessed for reading/updating/"
"writing purposes. An entry has three fields:"
msgstr ""
"Une des contraintes de la conception non déterministe du Caire est que son "
"système de mémoire est immuable, de sorte que pour simuler la mutabilité, le "
"langage implémente `Felt252Dict<T>` comme une liste d'entrées. Chacune des "
"entrées représente un moment où un dictionnaire a été consulté pour la "
"lecture/mise à jour/écriture. Une entrée a trois champs:"

#: src/ch03-02-dictionaries.md:71
msgid ""
"A `key` field that identifies the key for this key-value pair of the "
"dictionary."
msgstr ""
"Un champ `key` qui identifie la clé de cette paire de valeurs clés du "
"dictionnaire."

#: src/ch03-02-dictionaries.md:72
msgid ""
"A `previous_value` field that indicates which previous value was held at "
"`key`."
msgstr ""
"Un champ `previous_value` qui indique quelle valeur précédente était retenue "
"à `key`."

#: src/ch03-02-dictionaries.md:73
msgid "A `new_value` field that indicates the new value that is held at `key`."
msgstr ""
"Un champ `new_value` qui indique la nouvelle valeur qui est conservée à "
"`key`."

#: src/ch03-02-dictionaries.md:75
msgid ""
"If we try implementing `Felt252Dict<T>` using high-level structures we would "
"internally define it as `Array<Entry<T>>` where each `Entry<T>` has "
"information about what key-value pair it represents and the previous and new "
"values it holds. The definition of `Entry<T>` would be:"
msgstr ""
"Si nous essayons de mettre en œuvre `Felt252Dict<T>` en utilisant des "
"structures de haut niveau, nous la définirions en interne comme "
"`Array<Entrée<T>>` où chaque `Entrée<T>` a des informations sur la paire de "
"valeurs clés qu'elle représente et les valeurs précédentes et nouvelles "
"qu'elle détient. La définition de `Entrée<T>` serait:"

#: src/ch03-02-dictionaries.md:85
msgid ""
"For each time we interact with a `Felt252Dict<T>`, a new `Entry<T>` will be "
"registered:"
msgstr ""
"Pour chaque interaction avec un `Felt252Dict<T>`, un nouveau `Entry<T>` sera "
"enregistré:"

#: src/ch03-02-dictionaries.md:87
msgid ""
"A `get` would register an entry where there is no change in state, and "
"previous and new values are stored with the same value."
msgstr ""
"Un `get` enregistrerait une entrée où il n'y a pas de changement d'état, et "
"les valeurs précédentes et nouvelles sont stockées avec la même valeur."

#: src/ch03-02-dictionaries.md:88
msgid ""
"An `insert` would register a new `Entry<T>` where the `new_value` would be "
"the element being inserted, and the `previous_value` the last element "
"inserted before this. In case it is the first entry for a certain key, then "
"the previous value will be zero."
msgstr ""
"Un `insert` enregistrerait un nouvel `Entry<T>` où `new_value` serait "
"l'élément inséré, et le `previous_value` le dernier élément inséré avant "
"cela. Si c'est la première entrée pour une certaine clé, alors la valeur "
"précédente sera zéro."

#: src/ch03-02-dictionaries.md:90
msgid ""
"The use of this entry list shows how there isn't any rewriting, just the "
"creation of new memory cells per `Felt252Dict<T>` interaction. Let's show an "
"example of this using the `balances` dictionary from the previous section "
"and inserting the users 'Alex' and 'Maria':"
msgstr ""
"L'utilisation de cette liste d'entrées montre comment il n'y a pas de "
"réécriture, juste la création de nouvelles cellules mémoire par interaction "
"`Felt252Dict<T>`. Montrons un exemple de ceci en utilisant le dictionnaire "
"`balance` de la section précédente et en insérant les utilisateurs 'Alex' et "
"'Maria':"

#: src/ch03-02-dictionaries.md:108
msgid "These instructions would then produce the following list of entries:"
msgstr "Ces instructions produiraient alors la liste suivante des rubriques:"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "key"
msgstr "clé"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "previous"
msgstr "précédent"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "new"
msgstr "nouveaux"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:114
#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:138
#: src/ch03-02-dictionaries.md:139 src/ch03-02-dictionaries.md:141
#: src/ch03-02-dictionaries.md:147
msgid "Alex"
msgstr "Alex"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:113
#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:135
#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:147
#: src/ch03-02-dictionaries.md:148 src/ch03-02-dictionaries.md:149
msgid "0"
msgstr "0"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:114
#: src/ch03-02-dictionaries.md:135 src/ch03-02-dictionaries.md:137
msgid "100"
msgstr "100"

#: src/ch03-02-dictionaries.md:113 src/ch03-02-dictionaries.md:115
#: src/ch03-02-dictionaries.md:135 src/ch03-02-dictionaries.md:137
#: src/ch03-02-dictionaries.md:140 src/ch03-02-dictionaries.md:148
msgid "Maria"
msgstr "Le Président. — L'ordre du jour appelle le rapport (doc."

#: src/ch03-02-dictionaries.md:113 src/ch03-02-dictionaries.md:115
msgid "50"
msgstr "50 ans"

#: src/ch03-02-dictionaries.md:114
msgid "200"
msgstr "200"

#: src/ch03-02-dictionaries.md:117
msgid ""
"Notice that since 'Alex' was inserted twice, it appears twice and the "
"`previous` and `current` values are set properly. Also reading from 'Maria' "
"registered an entry with no change from previous to current values."
msgstr ""
"Notez que puisque 'Alex' a été inséré deux fois, il apparaît deux fois et "
"les valeurs `précédente` et `current` sont correctement définies. Aussi, la "
"lecture de 'Maria' a enregistré une entrée sans changement des valeurs "
"antérieures aux valeurs actuelles."

#: src/ch03-02-dictionaries.md:119
msgid ""
"This approach to implementing `Felt252Dict<T>` means that for each read/"
"write operation, there is a scan for the whole entry list in search of the "
"last entry with the same `key`. Once the entry has been found, its "
"`new_value` is extracted and used on the new entry to be added as the "
"`previous_value`. This means that interacting with `Felt252Dict<T>` has a "
"worst-case time complexity of `O(n)` where `n` is the number of entries in "
"the list."
msgstr ""
"Cette approche pour mettre en œuvre `Felt252Dict<T>` signifie que pour "
"chaque opération de lecture/écriture, il y a un balayage pour toute la liste "
"d'entrée dans la recherche de la dernière entrée avec la même `key`. Une "
"fois que l'entrée a été trouvée, sa `new_value` est extraite et utilisée sur "
"la nouvelle entrée pour être ajoutée comme `previous_value`. Cela signifie "
"que l'interaction avec `Felt252Dict<T>` a une complexité temporelle pire de "
"`O(n)` où `n` est le nombre d'entrées dans la liste."

#: src/ch03-02-dictionaries.md:121
msgid ""
"If you pour some thought into alternate ways of implementing "
"`Felt252Dict<T>` you'd surely find them, probably even ditching completely "
"the need for a `previous_value` field, nonetheless, since Cairo is not your "
"normal language this won't work. One of the purposes of Cairo is, with the "
"STARK proof system, to generate proofs of computational integrity. This "
"means that you need to verify that program execution is correct and inside "
"the boundaries of Cairo restrictions. One of those boundary checks consists "
"of \"dictionary squashing\" and that requires information on both previous "
"and new values for every entry."
msgstr ""
"Si vous versez quelques réflexions dans d'autres façons de mettre en œuvre "
"`Felt252Dict<T>` vous les trouveriez sûrement, probablement même en "
"abandonnant complètement le besoin d'un champ `previous_value`, cependant, "
"puisque le Caire n'est pas votre langue normale, cela ne fonctionnera pas. "
"L'un des buts du Caire est, avec le système de preuve STARK, de générer des "
"preuves d'intégrité computationnelle. Cela signifie que vous devez vérifier "
"que l'exécution du programme est correcte et à l'intérieur des limites des "
"restrictions du Caire."

#: src/ch03-02-dictionaries.md:124
msgid "Squashing Dictionaries"
msgstr "Dictionnaires d'écrasement"

#: src/ch03-02-dictionaries.md:126
msgid ""
"To verify that the proof generated by a Cairo program execution that used a "
"`Felt252Dict<T>` is correct, we need to check that there wasn't any illegal "
"tampering with the dictionary. This is done through a method called "
"`squash_dict` that reviews each entry of the entry list and checks that "
"access to the dictionary remains coherent throughout the execution."
msgstr ""
"Pour vérifier que la preuve générée par une exécution de programme du Caire "
"qui a utilisé un `Felt252Dict<T>` est correcte, nous devons vérifier qu'il "
"n'y a pas eu d'altération illégale du dictionnaire. Ceci est fait à l'aide "
"d'une méthode appelée `squash_dict` qui examine chaque entrée de la liste "
"d'entrée et vérifie que l'accès au dictionnaire reste cohérent tout au long "
"de l'exécution."

#: src/ch03-02-dictionaries.md:128
msgid ""
"The process of squashing is as follows: given all entries with certain key "
"`k`, taken in the same order as they were inserted, verify that the ith "
"entry `new_value` is equal to the ith + 1 entry `previous_value`."
msgstr ""
"Le processus d'écrasement est le suivant: étant donné toutes les entrées "
"avec une certaine clé `k`, prises dans le même ordre qu'elles ont été "
"insérées, vérifier que l'entrée `new_value` est égale à l'entrée "
"`previous_value`."

#: src/ch03-02-dictionaries.md:130
msgid "For example, given the following entry list:"
msgstr "Par exemple, compte tenu de la liste d'entrées suivante :"

#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:138
msgid "150"
msgstr ""
"150 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000"

#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:149
msgid "Charles"
msgstr "C'est moi qui l'ai fait."

#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:149
msgid "70"
msgstr "70"

#: src/ch03-02-dictionaries.md:137 src/ch03-02-dictionaries.md:140
msgid "250"
msgstr ""
"250 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000"

#: src/ch03-02-dictionaries.md:138 src/ch03-02-dictionaries.md:139
msgid "40"
msgstr "40"

#: src/ch03-02-dictionaries.md:139 src/ch03-02-dictionaries.md:141
msgid "300"
msgstr "300"

#: src/ch03-02-dictionaries.md:140 src/ch03-02-dictionaries.md:148
msgid "190"
msgstr ""
"190 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 "
"000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000"

#: src/ch03-02-dictionaries.md:141 src/ch03-02-dictionaries.md:147
msgid "90"
msgstr "90 États-Unis d'Amérique"

#: src/ch03-02-dictionaries.md:143
msgid "After squashing, the entry list would be reduced to:"
msgstr "Après l'écrasement, la liste d'entrées serait réduite à :"

#: src/ch03-02-dictionaries.md:151
msgid ""
"In case of a change on any of the values of the first table, squashing would "
"have failed during runtime."
msgstr ""
"En cas de changement sur l'une des valeurs de la première table, "
"l'écrasement aurait échoué pendant l'exécution."

#: src/ch03-02-dictionaries.md:153
msgid "Dictionary Destruction"
msgstr "Destruction du dictionnaire"

#: src/ch03-02-dictionaries.md:155
msgid ""
"If you run the examples from [\"Basic Use of Dictionaries\"](./ch03-02-"
"dictionaries.md#basic-use-of-dictionaries) section, you'd notice that there "
"was never a call to squash dictionary, but the program compiled successfully "
"nonetheless. What happened behind the scene was that squash was called "
"automatically via the `Felt252Dict<T>` implementation of the `Destruct<T>` "
"trait. This call occurred just before the `balance` dictionary went out of "
"scope."
msgstr ""
"Si vous lancez les exemples de la section [./ch03-02-dictionaries.md#basic-"
"use-of-dictionaries), vous remarquerez qu'il n'y a jamais eu d'appel au "
"dictionnaire de squash, mais le programme a néanmoins été compilé avec "
"succès. Ce qui s'est passé derrière la scène, c'est que squash a été appelé "
"automatiquement via l'implémentation `Felt252Dict<T>` du caractère "
"`Destruct<T>`. Cet appel s'est produit juste avant que le dictionnaire "
"`balance` ne soit hors de portée."

#: src/ch03-02-dictionaries.md:157
msgid ""
"The `Destruct<T>` trait represents another way of removing instances out of "
"scope apart from `Drop<T>`. The main difference between these two is that "
"`Drop<T>` is treated as a no-op operation, meaning it does not generate new "
"CASM while `Destruct<T>` does not have this restriction. The only type which "
"actively uses the `Destruct<T>` trait is `Felt252Dict<T>`, for every other "
"type `Destruct<T>` and `Drop<T>` are synonyms. You can read more about these "
"traits in [Drop and Destruct](./appendix-03-derivable-traits.md#drop-and-"
"destruct) section of Appendix C."
msgstr ""
"Le caractère `Destruct<T>` représente une autre façon d'éliminer les "
"instances hors de portée en dehors de `Drop<T>`. La principale différence "
"entre ces deux est que `Drop<T>` est traité comme une opération non-op, ce "
"qui signifie qu'il ne génère pas de nouveaux CASM alors que `Destruct<T>` "
"n'a pas cette restriction. Le seul type qui utilise activement le caractère "
"`Destruct<T>` est `Felt252Dict<T>`, pour chaque autre type `Destruct<T>` et "
"`Drop<T>` sont des synonymes. Vous pouvez en lire plus sur ces "
"caractéristiques dans la section [Drop et Destruct](./appendix-03-derivable-"
"traits.md#drop-and-destruct) de l'appendice C."

#: src/ch03-02-dictionaries.md:159
msgid ""
"Later in [\"Dictionaries as Struct Members\"](./ch11-01-custom-data-"
"structures.html#dictionaries-as-struct-members) section, we will have a "
"hands-on example where we implement the `Destruct<T>` trait for a custom "
"type."
msgstr ""
"Plus tard dans la section [./ch11-01-custom-data-structures."
"html#dictionaries-as-struct-members), nous aurons un exemple pratique où "
"nous implémentons le caractère `Destruct<T>` pour un type personnalisé."

#: src/ch03-02-dictionaries.md:165
msgid "More Dictionaries"
msgstr "Autres dictionnaires"

#: src/ch03-02-dictionaries.md:167
msgid ""
"Up to this point, we have given a comprehensive overview of the "
"functionality of `Felt252Dict<T>` as well as how and why it is implemented "
"in a certain way. If you haven't understood all of it, don't worry because "
"in this section we will have some more examples using dictionaries."
msgstr ""
"Jusqu'à ce point, nous avons donné un aperçu complet de la fonctionnalité de "
"`Felt252Dict<T>` ainsi que comment et pourquoi il est implémenté d'une "
"certaine manière. Si vous n'avez pas tout compris, ne vous inquiétez pas "
"parce que dans cette section nous aurons d'autres exemples utilisant des "
"dictionnaires."

#: src/ch03-02-dictionaries.md:169
msgid ""
"We will start by explaining the `entry` method which is part of a dictionary "
"basic functionality included in `Felt252DictTrait<T>` which we didn't "
"mention at the beginning. Soon after, we will see examples of how to use "
"`Felt252Dict<T>` with other [complex types](./ch03-02-dictionaries."
"md#dictionaries-of-types-not-supported-natively) such as `Array<T>`."
msgstr ""
"Nous commencerons par expliquer la méthode `entry` qui fait partie d'une "
"fonctionnalité de base de dictionnaire incluse dans `Felt252DictTrait<T>` "
"que nous n'avons pas mentionnée au début. Peu après, nous verrons des "
"exemples de la façon d'utiliser `Felt252Dict<T>` avec d'autres [types "
"complexes](./ch03-02-dictionaries.md#dictionaries-of-types-not-supported-"
"natively) comme `Array<T>`."

#: src/ch03-02-dictionaries.md:173
msgid "Entry and Finalize"
msgstr "Entrée et finalisation"

#: src/ch03-02-dictionaries.md:175
msgid ""
"In the [\"Dictionaries Underneath\"](./ch03-02-dictionaries.md#dictionaries-"
"underneath) section, we explained how `Felt252Dict<T>` internally worked. It "
"was a list of entries for each time the dictionary was accessed in any "
"manner. It would first find the last entry given a certain `key` and then "
"update it accordingly to whatever operation it was executing. The Cairo "
"language gives us the tools to replicate this ourselves through the `entry` "
"and `finalize` methods."
msgstr ""
"Dans la section [./ch03-02-dictionaries.md#dictionaries-underneath), nous "
"avons expliqué comment fonctionnait `Felt252Dict<T>` en interne. Il "
"s'agissait d'une liste d'entrées pour chaque fois que le dictionnaire était "
"accessible de quelque manière que ce soit. Il trouverait d'abord la dernière "
"entrée donnée une certaine `clé` et ensuite la mettre à jour en fonction de "
"l'opération qu'il exécute. Le langage du Caire nous donne les outils pour "
"reproduire nous-mêmes à travers les méthodes `entry` et `finalize`."

#: src/ch03-02-dictionaries.md:177
msgid ""
"The `entry` method comes as part of `Felt252DictTrait<T>` with the purpose "
"of creating a new entry given a certain key. Once called, this method takes "
"ownership of the dictionary and returns the entry to update. The method "
"signature is as follows:"
msgstr ""
"La méthode `entry` fait partie de `Felt252DictTrait<T>` dans le but de créer "
"une nouvelle entrée avec une certaine clé. Une fois appelée, cette méthode "
"prend la propriété du dictionnaire et retourne l'entrée à la mise à jour. La "
"signature de la méthode est la suivante:"

#: src/ch03-02-dictionaries.md:183
msgid ""
"The first input parameter takes ownership of the dictionary while the second "
"one is used to create the appropriate entry. It returns a tuple containing a "
"`Felt252DictEntry<T>`, which is the type used by Cairo to represent "
"dictionary entries, and a `T` representing the value held previously. The "
"`nopanic` notation simply indicates that the function is guaranteed to never "
"panic."
msgstr ""
"Le premier paramètre d'entrée prend la propriété du dictionnaire tandis que "
"le second est utilisé pour créer l'entrée appropriée. Il retourne un tuple "
"contenant un `Felt252DictEntry<T>`, qui est le type utilisé par le Caire "
"pour représenter les entrées de dictionnaire, et un `T` représentant la "
"valeur détenue précédemment. La notation `nopanic` indique simplement que la "
"fonction est garantie de ne jamais paniquer."

#: src/ch03-02-dictionaries.md:186
msgid ""
"The next thing to do is to update the entry with the new value. For this, we "
"use the `finalize` method which inserts the entry and returns ownership of "
"the dictionary:"
msgstr ""
"La prochaine chose à faire est de mettre à jour l'entrée avec la nouvelle "
"valeur. Pour cela, nous utilisons la méthode `finalise` qui insère l'entrée "
"et retourne la propriété du dictionnaire:"

#: src/ch03-02-dictionaries.md:192
msgid ""
"This method receives the entry and the new value as parameters, and returns "
"the updated dictionary."
msgstr ""
"Cette méthode reçoit l'entrée et la nouvelle valeur en tant que paramètres, "
"et retourne le dictionnaire mis à jour."

#: src/ch03-02-dictionaries.md:194
msgid ""
"Let us see an example using `entry` and `finalize`. Imagine we would like to "
"implement our own version of the `get` method from a dictionary. We should "
"then do the following:"
msgstr ""
"Voyons un exemple utilisant `entry` et `finalize`. Imaginez que nous "
"aimerions mettre en œuvre notre propre version de la méthode `get` à partir "
"d'un dictionnaire. Nous devrions alors faire ce qui suit:"

#: src/ch03-02-dictionaries.md:196
msgid "Create the new entry to add using the `entry` method."
msgstr "Créez la nouvelle entrée à ajouter en utilisant la méthode `entry`."

#: src/ch03-02-dictionaries.md:197
msgid ""
"Insert back the entry where the `new_value` equals the `previous_value`."
msgstr ""
"Insérer en arrière l'entrée où la valeur `new_value` est égale à la valeur "
"`previous_value`."

#: src/ch03-02-dictionaries.md:198
msgid "Return the value."
msgstr "Retourne la valeur."

#: src/ch03-02-dictionaries.md:200
msgid "Implementing our custom get would look like this:"
msgstr "Mettre en œuvre notre get personnalisé ressemblerait à ceci:"

#: src/ch03-02-dictionaries.md:208 src/ch03-02-dictionaries.md:252
msgid "// Get the new entry and the previous value held at `key`\n"
msgstr "// Obtenez la nouvelle entrée et la valeur précédente à `key`\n"

#: src/ch03-02-dictionaries.md:211 src/ch03-02-dictionaries.md:255
msgid "// Store the value to return\n"
msgstr "// Conservez la valeur à retourner\n"

#: src/ch03-02-dictionaries.md:214 src/ch03-02-dictionaries.md:258
msgid ""
"// Update the entry with `prev_value` and get back ownership of the "
"dictionary\n"
msgstr ""
"// Mettre à jour l'entrée avec `prev_value` et récupérer la propriété du "
"dictionnaire\n"

#: src/ch03-02-dictionaries.md:217 src/ch03-02-dictionaries.md:261
msgid "// Return the read value\n"
msgstr "// Retourne la valeur de lecture\n"

#: src/ch03-02-dictionaries.md:222
msgid ""
"The `ref` keyword means that the ownership of the variable will be given "
"back at the end of the function. This concept will be explained in more "
"detail in the [\"References and Snapshots\"](./ch04-02-references-and-"
"snapshots.md) section."
msgstr ""
"Le mot-clé `ref` signifie que la propriété de la variable sera restituée à "
"la fin de la fonction. Ce concept sera expliqué plus en détail dans la "
"section [\"Références et Snapshots\"](./ch04-02-références-et-snapshots.md)."

#: src/ch03-02-dictionaries.md:225
msgid ""
"Implementing the `insert` method would follow a similar workflow, except for "
"inserting a new value when finalizing. If we were to implement it, it would "
"look like the following:"
msgstr ""
"La mise en œuvre de la méthode `insert` suivrait un flux de travail "
"similaire, à l'exception de l'insertion d'une nouvelle valeur lors de la "
"finalisation. Si nous devions la mettre en œuvre, cela ressemblerait à ce "
"qui suit :"

#: src/ch03-02-dictionaries.md:233
msgid ""
"// Get the last entry associated with `key`\n"
"    // Notice that if `key` does not exist, `_prev_value` will\n"
"    // be the default value of T.\n"
msgstr ""
"// Obtenez la dernière entrée associée à `key` // Notez que si `key` "
"n'existe pas, `_prev_value` sera // la valeur par défaut de T.\n"

#: src/ch03-02-dictionaries.md:238
msgid ""
"// Insert `entry` back in the dictionary with the updated value,\n"
"    // and receive ownership of the dictionary\n"
msgstr ""
"// Insérez `entry` de retour dans le dictionnaire avec la valeur mise à "
"jour, // et recevez la propriété du dictionnaire\n"

#: src/ch03-02-dictionaries.md:244
msgid ""
"As a finalizing note, these two methods are implemented in a similar way to "
"how `insert` and `get` are implemented for `Felt252Dict<T>`. This code shows "
"some example usage:"
msgstr ""
"En guise de conclusion, ces deux méthodes sont mises en œuvre de la même "
"manière que `insert` et `get` sont mises en œuvre pour `Felt252Dict<T>`. Ce "
"code montre un exemple d'utilisation:"

#: src/ch03-02-dictionaries.md:268
msgid "// Get the last entry associated with `key`\n"
msgstr "// Obtenez la dernière entrée associée à `key`\n"

#: src/ch03-02-dictionaries.md:269
msgid "// Notice that if `key` does not exist, `_prev_value` will\n"
msgstr "// Notez que si `key` n'existe pas, `_prev_value` sera\n"

#: src/ch03-02-dictionaries.md:270
msgid "// be the default value of T.\n"
msgstr "// soit la valeur par défaut de T.\n"

#: src/ch03-02-dictionaries.md:273
msgid "// Insert `entry` back in the dictionary with the updated value,\n"
msgstr ""
"// Insérer `entry` de retour dans le dictionnaire avec la valeur mise à "
"jour,\n"

#: src/ch03-02-dictionaries.md:274
msgid "// and receive ownership of the dictionary\n"
msgstr "// et recevoir la propriété du dictionnaire\n"

#: src/ch03-02-dictionaries.md:281 src/ch03-02-dictionaries.md:283
msgid "'0'"
msgstr "'0'"

#: src/ch03-02-dictionaries.md:285
msgid "\"Expecting 100\""
msgstr "\"En attente de 100\""

#: src/ch03-02-dictionaries.md:294
msgid "Dictionaries of Types not Supported Natively"
msgstr "Dictionnaires de types non pris en charge par les Autochtones"

#: src/ch03-02-dictionaries.md:296
msgid ""
"One restriction of `Felt252Dict<T>` that we haven't talked about is the "
"trait `Felt252DictValue<T>`. This trait defines the `zero_default` method "
"which is the one that gets called when a value does not exist in the "
"dictionary. This is implemented by some common data types, such as most "
"unsigned integers, `bool` and `felt252` - but it is not implemented for more "
"complex types such as arrays, structs (including `u256`), and other types "
"from the core library. This means that making a dictionary of types not "
"natively supported is not a straightforward task, because you would need to "
"write a couple of trait implementations in order to make the data type a "
"valid dictionary value type. To compensate this, you can wrap your type "
"inside a `Nullable<T>`."
msgstr ""
"Une restriction de `Felt252Dict<T>` dont nous n'avons pas parlé est le trait "
"`Felt252DictValue<T>`. Ce trait définit la méthode `zero_default` qui est "
"appelée quand une valeur n'existe pas dans le dictionnaire. Ceci est "
"implémenté par certains types de données communs, tels que la plupart des "
"entiers non signés, `bool` et `felt252` - mais il n'est pas implémenté pour "
"des types plus complexes tels que les tableaux, les structures (y compris "
"`u256`), et d'autres types de la bibliothèque centrale. Cela signifie que "
"faire un dictionnaire de types non pris en charge nativement n'est pas une "
"tâche simple, parce que vous auriez besoin d'écrire quelques implémentations "
"de caractères pour faire du type de données un type de valeur de "
"dictionnaire valide. Pour compenser cela, vous pouvez envelopper votre type "
"à l'intérieur d'un `Nullable<T>`."

#: src/ch03-02-dictionaries.md:302
msgid ""
"`Nullable<T>` is a smart pointer type that can either point to a value or be "
"`null` in the absence of value. It is usually used in Object Oriented "
"Programming Languages when a reference doesn't point anywhere. The "
"difference with `Option` is that the wrapped value is stored inside a "
"`Box<T>` data type. The `Box<T>` type is a smart pointer that allows us to "
"use a dedicated `boxed_segment` memory segment for our data, and access this "
"segment using a pointer that can only be manipulated in one place at a time. "
"See [Smart Pointers Chapter](./ch11-02-smart-pointers.md) for more "
"information."
msgstr ""
"`Nullable<T>` est un type de pointeur intelligent qui peut pointer vers une "
"valeur ou être `null` en l'absence de valeur. Il est habituellement utilisé "
"dans les langages de programmation orientés objet lorsqu'une référence ne "
"pointe nulle part. La différence avec `Option` est que la valeur enveloppée "
"est stockée dans un type de données `Box<T>`. Le type `Box<T>` est un "
"pointeur intelligent qui nous permet d'utiliser un segment de mémoire "
"`boxed_segment` dédié pour nos données, et d'accéder à ce segment en "
"utilisant un pointeur qui ne peut être manipulé qu'à un seul endroit à la "
"fois. Voir [Smart Pointers Chapter](./ch11-02-smart-pointers.md) pour plus "
"d'informations."

#: src/ch03-02-dictionaries.md:304
msgid ""
"Let's show using an example. We will try to store a `Span<felt252>` inside a "
"dictionary. For that, we will use `Nullable<T>` and `Box<T>`. Also, we are "
"storing a `Span<T>` and not an `Array<T>` because the latter does not "
"implement the `Copy<T>` trait which is required for reading from a "
"dictionary."
msgstr ""
"Nous allons essayer de stocker un `Span<felt252>` à l'intérieur d'un "
"dictionnaire. Pour cela, nous utiliserons `Nullable<T>` et `Box<T>`. De "
"plus, nous stockons un `Span<T>` et non un `Array<T>` parce que ce dernier "
"n'implémente pas le caractère `Copy<T>` qui est nécessaire pour lire à "
"partir d'un dictionnaire."

#: src/ch03-02-dictionaries.md:310 src/ch03-02-dictionaries.md:359
msgid "// Create the dictionary\n"
msgstr "// Créer le dictionnaire\n"

#: src/ch03-02-dictionaries.md:313 src/ch03-02-dictionaries.md:362
msgid "// Create the array to insert\n"
msgstr "// Créer le tableau à insérer\n"

#: src/ch03-02-dictionaries.md:316 src/ch03-02-dictionaries.md:365
msgid "// Insert it as a `Span`\n"
msgstr "// Insérez-le sous la forme d'une 'Span'\n"

#: src/ch03-02-dictionaries.md:318 src/ch03-02-dictionaries.md:329
msgid "//...\n"
msgstr "//...\n"

#: src/ch03-02-dictionaries.md:322
msgid ""
"In this code snippet, the first thing we did was to create a new dictionary "
"`d`. We want it to hold a `Nullable<Span>`. After that, we created an array "
"and filled it with values."
msgstr ""
"Dans cet extrait de code, la première chose que nous avons faite était de "
"créer un nouveau dictionnaire `d`. Nous voulons qu'il tienne un "
"`Nullable<Span>`. Après cela, nous avons créé un tableau et l'avons rempli "
"de valeurs."

#: src/ch03-02-dictionaries.md:324
msgid ""
"The last step is inserting the array as a span inside the dictionary. Notice "
"that we do this using the `new` function of the `NullableTrait`."
msgstr ""
"La dernière étape consiste à insérer le tableau comme une portée à "
"l'intérieur du dictionnaire. Notez que nous le faisons en utilisant la "
"fonction `new` de la `NullableTrait`."

#: src/ch03-02-dictionaries.md:326
msgid ""
"Once the element is inside the dictionary, and we want to get it, we follow "
"the same steps but in reverse order. The following code shows how to achieve "
"that:"
msgstr ""
"Une fois que l'élément est à l'intérieur du dictionnaire, et que nous "
"voulons l'obtenir, nous suivons les mêmes étapes mais en ordre inverse. Le "
"code suivant montre comment y parvenir :"

#: src/ch03-02-dictionaries.md:331 src/ch03-02-dictionaries.md:368
msgid "// Get value back\n"
msgstr "// Récupérer la valeur\n"

#: src/ch03-02-dictionaries.md:334 src/ch03-02-dictionaries.md:371
msgid "// Search the value and assert it is not null\n"
msgstr "// Rechercher la valeur et l'affirmer n'est pas null\n"

#: src/ch03-02-dictionaries.md:336 src/ch03-02-dictionaries.md:373
msgid "\"No value found\""
msgstr "\"Aucune valeur trouvée\""

#: src/ch03-02-dictionaries.md:340 src/ch03-02-dictionaries.md:377
msgid "// Verify we are having the right values\n"
msgstr "// Vérifier que nous avons les bonnes valeurs\n"

#: src/ch03-02-dictionaries.md:341 src/ch03-02-dictionaries.md:378
msgid "\"Expecting 8\""
msgstr "\"En attente de 8\""

#: src/ch03-02-dictionaries.md:342 src/ch03-02-dictionaries.md:379
msgid "\"Expecting 9\""
msgstr "\"En attente de 9\""

#: src/ch03-02-dictionaries.md:343 src/ch03-02-dictionaries.md:380
msgid "\"Expecting 10\""
msgstr "\"En attente de 10\""

#: src/ch03-02-dictionaries.md:347
msgid "Here we:"
msgstr "Ici, nous:"

#: src/ch03-02-dictionaries.md:349
msgid "Read the value using `get`."
msgstr "Lire la valeur en utilisant `get`."

#: src/ch03-02-dictionaries.md:350
msgid "Verified it is non-null using the `match_nullable` function."
msgstr "Vérifié, il n'est pas null en utilisant la fonction `match_nullable`."

#: src/ch03-02-dictionaries.md:351
msgid "Unwrapped the value inside the box and asserted it was correct."
msgstr ""
"Déballé la valeur à l'intérieur de la boîte et a affirmé qu'elle était "
"correcte."

#: src/ch03-02-dictionaries.md:353
msgid "The complete script would look like this:"
msgstr "Le script complet ressemblerait à ceci:"

#: src/ch03-02-dictionaries.md:385
msgid "Using Arrays inside Dictionaries"
msgstr "Utilisation d'arrays à l'intérieur des dictionnaires"

#: src/ch03-02-dictionaries.md:387
msgid ""
"In the previous section, we explored how to store and retrieve complex types "
"inside a dictionary using `Nullable<T>` and `Box<T>`. Now, let's take a look "
"at how to store an array inside a dictionary and dynamically modify its "
"contents."
msgstr ""
"Dans la section précédente, nous avons exploré comment stocker et récupérer "
"des types complexes à l'intérieur d'un dictionnaire en utilisant "
"`Nullable<T>` et `Box<T>`. Maintenant, regardons comment stocker un tableau "
"à l'intérieur d'un dictionnaire et modifier dynamiquement son contenu."

#: src/ch03-02-dictionaries.md:389
msgid ""
"Storing arrays in dictionaries in Cairo is slightly different from storing "
"other types. This is because arrays are more complex data structures that "
"require special handling to avoid issues with memory copying and references."
msgstr ""
"Le stockage des tableaux dans les dictionnaires du Caire est légèrement "
"différent du stockage d'autres types. C'est parce que les tableaux sont des "
"structures de données plus complexes qui nécessitent une manipulation "
"spéciale pour éviter les problèmes avec la copie de mémoire et les "
"références."

#: src/ch03-02-dictionaries.md:391
msgid ""
"First, let's look at how to create a dictionary and insert an array into it. "
"This process is pretty straightforward and follows a similar pattern to "
"inserting other types of data:"
msgstr ""
"Tout d'abord, examinons comment créer un dictionnaire et y insérer un "
"tableau. Ce processus est assez simple et suit un modèle similaire pour "
"insérer d'autres types de données :"

#: src/ch03-02-dictionaries.md:398
msgid "\"Array inserted successfully.\""
msgstr "\"Array inséré avec succès.\""

#: src/ch03-02-dictionaries.md:402
msgid ""
"However, attempting to read an array from the dictionary using the `get` "
"method will result in a compiler error. This is because `get` tries to copy "
"the array in memory, which is not possible for arrays (as we've already "
"mentioned in the [previous section](./ch03-02-dictionaries.md#dictionaries-"
"of-types-not-supported-natively), `Array<T>` does not implement the "
"`Copy<T>` trait):"
msgstr ""
"Cependant, essayer de lire un tableau à partir du dictionnaire en utilisant "
"la méthode `get` entraînera une erreur de compilateur. C'est parce que `get` "
"essaie de copier le tableau en mémoire, ce qui n'est pas possible pour les "
"tableaux (comme nous l'avons déjà mentionné dans la section précédente](./"
"ch03-02-dictionaries.md#dictionaries-of-types-not-supported-natively), "
"`Array<T>` n'implémente pas le caractère `Copy<T>`):"

#: src/ch03-02-dictionaries.md:411
msgid "\"Array: {:?}\""
msgstr "\"Array: {:?}\""

#: src/ch03-02-dictionaries.md:415
msgid "// This will cause a compiler error\n"
msgstr "// Cela provoquera une erreur de compilateur\n"

#: src/ch03-02-dictionaries.md:417
msgid "\"No value!\""
msgstr "\"Pas de valeur!\""

#: src/ch03-02-dictionaries.md:424
msgid ""
"```shell\n"
"$ scarb cairo-run \n"
"   Compiling no_listing_15_dict_of_array_attempt_get v0.1.0 (listings/ch03-"
"common-collections/no_listing_15_dict_of_array_attempt_get/Scarb.toml)\n"
"error: Trait has no implementation in context: core::traits::Copy::<core::"
"nullable::Nullable::<core::array::Array::<core::integer::u8>>>\n"
" --> listings/ch03-common-collections/"
"no_listing_15_dict_of_array_attempt_get/src/lib.cairo:12:20\n"
"    let val = dict.get(0); // This will cause a compiler error\n"
"                   ^*^\n"
"\n"
"error: could not compile `no_listing_15_dict_of_array_attempt_get` due to "
"previous error\n"
"error: `scarb metadata` exited with error\n"
"\n"
"```"
msgstr ""
"``shell $ scarb cairo-run Compiling no_listing_15_dict_of_array_attempt_get "
"v0.1.0 (listings/ch03-common-collections/"
"no_listing_15_dict_of_array_attempt_get/Scarb.toml) error: Trait n'a pas "
"d'implémentation dans le contexte: core::trats::Copy::<core:::nullable::"
"<core:::array:::Array::<core:::integer::u8>>> --> listings/ch03-common-"
"collections/no_listing_15_dict_of_array_attempt_get/src/lib.cairo:12:20 let "
"val = dict.get(0); // Cela causera une erreur de compilateur ^*^ erreur: ne "
"peut pas compiler `no_listing_15_dict_of_array_attempt_get en raison "
"d'erreur précédente: `scarb`"

#: src/ch03-02-dictionaries.md:437
msgid ""
"To correctly read an array from the dictionary, we need to use dictionary "
"entries. This allows us to get a reference to the array value without "
"copying it:"
msgstr ""
"Pour lire correctement un tableau à partir du dictionnaire, nous devons "
"utiliser les entrées du dictionnaire. Cela nous permet d'obtenir une "
"référence à la valeur du tableau sans le copier :"

#: src/ch03-02-dictionaries.md:449
msgid ""
"Note: We must convert the array to a `Span` before finalizing the entry, "
"because calling `NullableTrait::new(arr)` moves the array, thus making it "
"impossible to return it from the function."
msgstr ""
"Note : Nous devons convertir le tableau en un `Span` avant de finaliser "
"l'entrée, car l'appel `NullableTrait::new(arr)` déplace le tableau, ce qui "
"rend impossible de le renvoyer de la fonction."

#: src/ch03-02-dictionaries.md:451
msgid ""
"To modify the stored array, such as appending a new value, we can use a "
"similar approach. The following `append_value` function demonstrates this:"
msgstr ""
"Pour modifier le tableau stocké, comme l'ajout d'une nouvelle valeur, nous "
"pouvons utiliser une approche similaire. La fonction `append_value` suivante "
"le démontre :"

#: src/ch03-02-dictionaries.md:462
msgid ""
"In the `append_value` function, we access the dictionary entry, dereference "
"the array, append the new value, and finalize the entry with the updated "
"array."
msgstr ""
"Dans la fonction `append_value`, nous accédons à l'entrée du dictionnaire, "
"déréférencer le tableau, ajouter la nouvelle valeur et finaliser l'entrée "
"avec le tableau mis à jour."

#: src/ch03-02-dictionaries.md:464
msgid ""
"Note: Removing an item from a stored array can be implemented in a similar "
"manner."
msgstr ""
"Note: La suppression d'un élément d'un tableau stocké peut être implémentée "
"de la même manière."

#: src/ch03-02-dictionaries.md:466
msgid ""
"Below is the complete example demonstrating the creation, insertion, "
"reading, and modification of an array in a dictionary:"
msgstr ""
"Voici l'exemple complet de la création, de l'insertion, de la lecture et de "
"la modification d'un tableau dans un dictionnaire :"

#: src/ch03-02-dictionaries.md:491
msgid "\"Before insertion: {:?}\""
msgstr "\"Avant insertion: {:?}\""

#: src/ch03-02-dictionaries.md:495
msgid "\"After insertion: {:?}\""
msgstr "\"Après insertion: {:?}\""

#: src/ch03-02-dictionaries.md:499
msgid "{{#quiz ../quizzes/ch03-02-dictionaries.toml}}"
msgstr "{{#quiz../quizes/ch03-02-dictionaries.toml}}"

#: src/ch04-00-understanding-ownership.md
msgid "Understanding Cairo's Ownership system"
msgstr "Comprendre le système de propriété du Caire"

#: src/ch04-00-understanding-ownership.md
msgid ""
"Cairo is a language built around a linear type system that allows us to "
"statically ensure that in every Cairo program, a value is used exactly once. "
"This linear type system helps prevent runtime errors by ensuring that "
"operations that could cause such errors, such as writing twice to a memory "
"cell, are detected at compile time. This is achieved by implementing an "
"ownership system and forbidding copying and dropping values by default. In "
"this chapter, we’ll talk about Cairo's ownership system as well as "
"references and snapshots."
msgstr ""
"Le Caire est un langage construit autour d'un système de type linéaire qui "
"nous permet d'assurer statiquement que dans chaque programme du Caire, une "
"valeur est utilisée exactement une fois. Ce système de type linéaire aide à "
"prévenir les erreurs d'exécution en veillant à ce que les opérations qui "
"pourraient causer de telles erreurs, comme l'écriture deux fois sur une "
"cellule mémoire, soient détectées au moment de la compilation."

#: src/ch04-01-what-is-ownership.md:1
msgid "Ownership Using a Linear Type System"
msgstr "Propriété utilisant un système de type linéaire"

#: src/ch04-01-what-is-ownership.md:3
msgid ""
"Cairo uses a linear type system. In such a type system, any value (a basic "
"type, a struct, an enum) must be used and must only be used once. 'Used' "
"here means that the value is either _destroyed_ or _moved_."
msgstr ""
"Le Caire utilise un système de type linéaire. Dans un tel système de type, "
"toute valeur (un type de base, une structure, un enum) doit être utilisée et "
"ne doit être utilisée qu'une seule fois."

#: src/ch04-01-what-is-ownership.md:5
msgid "_Destruction_ can happen in several ways:"
msgstr "_Destruction_ peut se produire de plusieurs façons :"

#: src/ch04-01-what-is-ownership.md:7
msgid "a variable goes out of scope."
msgstr "une variable est hors champ."

#: src/ch04-01-what-is-ownership.md:8
msgid "a struct is destructured."
msgstr "une structure est déstructurée."

#: src/ch04-01-what-is-ownership.md:9
msgid "explicit destruction using `destruct()`."
msgstr "destruction explicite en utilisant `destruct()`."

#: src/ch04-01-what-is-ownership.md:11
msgid "_Moving_ a value simply means passing that value to another function."
msgstr ""
"_Déplacer_ une valeur signifie simplement passer cette valeur à une autre "
"fonction."

#: src/ch04-01-what-is-ownership.md:13
msgid ""
"This results in somewhat similar constraints to the Rust ownership model, "
"but there are some differences. In particular, the Rust ownership model "
"exists (in part) to avoid data races and concurrent mutable access to a "
"memory value. This is obviously impossible in Cairo since the memory is "
"immutable. Instead, Cairo leverages its linear type system for two main "
"purposes:"
msgstr ""
"Il en résulte des contraintes quelque peu similaires au modèle de propriété "
"Rust, mais il y a quelques différences. En particulier, le modèle de "
"propriété Rust existe (en partie) pour éviter les courses de données et "
"l'accès mutable concomitant à une valeur mémoire. Ceci est évidemment "
"impossible au Caire puisque la mémoire est immuable."

#: src/ch04-01-what-is-ownership.md:17
msgid "Ensuring that all code is provable and thus verifiable."
msgstr "Veiller à ce que tous les codes soient prouvables et donc vérifiables."

#: src/ch04-01-what-is-ownership.md:18
msgid "Abstracting away the immutable memory of the Cairo VM."
msgstr "Abstraction faite de la mémoire immuable du MV du Caire."

#: src/ch04-01-what-is-ownership.md:20
msgid "Ownership"
msgstr "Propriété"

#: src/ch04-01-what-is-ownership.md:22
msgid ""
"In Cairo, ownership applies to _variables_ and not to _values_. A value can "
"safely be referred to by many different variables (even if they are mutable "
"variables), as the value itself is always immutable. Variables however can "
"be mutable, so the compiler must ensure that constant variables aren't "
"accidentally modified by the programmer. This makes it possible to talk "
"about ownership of a variable: the owner is the code that can read (and "
"write if mutable) the variable."
msgstr ""
"Au Caire, la propriété s'applique à _variables_ et non à _valeurs_. Une "
"valeur peut être référencée en toute sécurité par de nombreuses variables "
"différentes (même s'il s'agit de variables mutables), car la valeur elle-"
"même est toujours immuable. Les variables peuvent toutefois être mutables, "
"de sorte que le compilateur doit s'assurer que les variables constantes ne "
"sont pas accidentellement modifiées par le programmeur. Cela permet de "
"parler de propriété d'une variable : le propriétaire est le code qui peut "
"lire (et écrire si mutable) la variable."

#: src/ch04-01-what-is-ownership.md:26
msgid ""
"This means that variables (not values) follow similar rules to Rust values:"
msgstr ""
"Cela signifie que les variables (pas les valeurs) suivent des règles "
"similaires aux valeurs de Rust :"

#: src/ch04-01-what-is-ownership.md:28
msgid "Each variable in Cairo has an owner."
msgstr "Chaque variable au Caire a un propriétaire."

#: src/ch04-01-what-is-ownership.md:29
msgid "There can only be one owner at a time."
msgstr "Il ne peut y avoir qu'un seul propriétaire à la fois."

#: src/ch04-01-what-is-ownership.md:30
msgid "When the owner goes out of scope, the variable is destroyed."
msgstr "Lorsque le propriétaire est hors de portée, la variable est détruite."

#: src/ch04-01-what-is-ownership.md:32
msgid ""
"Now that we’re past basic Cairo syntax, we won’t include all the `fn main() "
"{` code in examples, so if you’re following along, make sure to put the "
"following examples inside a main function manually. As a result, our "
"examples will be a bit more concise, letting us focus on the actual details "
"rather than boilerplate code."
msgstr ""
"Maintenant que nous avons passé la syntaxe de base du Caire, nous n'avons "
"pas inclus tout le code `fn main() {` dans les exemples, donc si vous "
"suivez, assurez-vous de mettre les exemples suivants à l'intérieur d'une "
"fonction principale manuellement. Par conséquent, nos exemples seront un peu "
"plus concis, nous permettant de nous concentrer sur les détails réels plutôt "
"que le code de plaque de chaudière."

#: src/ch04-01-what-is-ownership.md:34
msgid "Variable Scope"
msgstr "Portée variable"

#: src/ch04-01-what-is-ownership.md:36
msgid ""
"As a first example of the linear type system, we’ll look at the _scope_ of "
"some variables. A scope is the range within a program for which an item is "
"valid. Take the following variable:"
msgstr ""
"Comme premier exemple du système de type linéaire, nous allons regarder le "
"_scope_ de certaines variables. Une portée est la plage dans un programme "
"pour lequel un élément est valide. Prenez la variable suivante:"

#: src/ch04-01-what-is-ownership.md:44
msgid ""
"The variable `s` refers to a short string. The variable is valid from the "
"point at which it’s declared until the end of the current _scope_. Listing "
"4-1 shows a program with comments annotating where the variable `s` would be "
"valid."
msgstr ""
"La variable `s` se réfère à une chaîne courte. La variable est valide à "
"partir du point où elle est déclarée jusqu'à la fin du _scope_ courant. "
"Listing 4-1 affiche un programme avec des commentaires annotant où la "
"variable `s` serait valide."

#: src/ch04-01-what-is-ownership.md:49
msgid "//TAG: ignore_fmt\n"
msgstr "//TAG: ignore_fmt\n"

#: src/ch04-01-what-is-ownership.md:51
msgid "// s is not valid here, it’s not yet declared\n"
msgstr "// s n'est pas valide ici, il n'est pas encore déclaré\n"

#: src/ch04-01-what-is-ownership.md:52
msgid ""
"// s is valid from this point forward\n"
"    // do stuff with s\n"
msgstr ""
"// s est valide à partir de ce point vers l'avant // faire des choses avec "
"s\n"

#: src/ch04-01-what-is-ownership.md:54
msgid "// this scope is now over, and s is no longer valid\n"
msgstr "// cette portée est maintenant terminée, et s n'est plus valide\n"

#: src/ch04-01-what-is-ownership.md:58
msgid ""
"<span class=\"caption\">Listing 4-1: A variable and the scope in which it is "
"valid</span>"
msgstr ""
"<span class=\"caption\">Liste 4-1: Une variable et la portée dans laquelle "
"elle est valide</span>"

#: src/ch04-01-what-is-ownership.md:60
msgid "In other words, there are two important points in time here:"
msgstr "En d'autres termes, il y a deux points importants dans le temps :"

#: src/ch04-01-what-is-ownership.md:62
msgid "When `s` comes _into_ scope, it is valid."
msgstr "Quand `s` vient _into_ scope, il est valide."

#: src/ch04-01-what-is-ownership.md:63
msgid "It remains valid until it goes _out of_ scope."
msgstr "Il reste valide jusqu'à ce qu'il soit _ hors de_ portée."

#: src/ch04-01-what-is-ownership.md:65
msgid ""
"At this point, the relationship between scopes and when variables are valid "
"is similar to that in other programming languages. Now we’ll build on top of "
"this understanding by using the `Array` type we introduced in the previous "
"[\"Arrays\"](./ch03-01-arrays.md) section."
msgstr ""
"À ce stade, la relation entre les champs et quand les variables sont valides "
"est similaire à celle d'autres langages de programmation. Maintenant, nous "
"allons construire sur le dessus de cette compréhension en utilisant le type "
"`Array` que nous avons introduit dans la section précédente [\"Arrays\"](../"
"ch03-01-arrays.md)."

#: src/ch04-01-what-is-ownership.md:69
msgid "Moving values"
msgstr "Valeurs mobiles"

#: src/ch04-01-what-is-ownership.md:71
msgid ""
"As said earlier, _moving_ a value simply means passing that value to another "
"function. When that happens, the variable referring to that value in the "
"original scope is destroyed and can no longer be used, and a new variable is "
"created to hold the same value."
msgstr ""
"Comme nous l'avons dit plus tôt, _moving_ une valeur signifie simplement "
"passer cette valeur à une autre fonction. Lorsque cela se produit, la "
"variable se référant à cette valeur dans la portée d'origine est détruite et "
"ne peut plus être utilisée, et une nouvelle variable est créée pour tenir la "
"même valeur."

#: src/ch04-01-what-is-ownership.md:73
msgid ""
"Arrays are an example of a complex type that is moved when passing it to "
"another function. Here is a short reminder of what an array looks like:"
msgstr ""
"Les tableaux sont un exemple d'un type complexe qui est déplacé lors du "
"passage à une autre fonction. Voici un bref rappel de ce à quoi ressemble un "
"tableau:"

#: src/ch04-01-what-is-ownership.md:84
msgid ""
"How does the type system ensure that the Cairo program never tries to write "
"to the same memory cell twice? Consider the following code, where we try to "
"remove the front of the array twice:"
msgstr ""
"Comment le système de type s'assure-t-il que le programme Cairo n'essaie "
"jamais d'écrire dans la même cellule mémoire deux fois? Considérez le code "
"suivant, où nous essayons de supprimer le devant du tableau deux fois:"

#: src/ch04-01-what-is-ownership.md:99
msgid ""
"In this case, we try to pass the same value (the array in the `arr` "
"variable) to both function calls. This means our code tries to remove the "
"first element twice, which would try to write to the same memory cell twice "
"- which is forbidden by the Cairo VM, leading to a runtime error. "
"Thankfully, this code does not actually compile. Once we have passed the "
"array to the `foo` function, the variable `arr` is no longer usable. We get "
"this compile-time error, telling us that we would need Array to implement "
"the Copy Trait:"
msgstr ""
"Dans ce cas, nous essayons de passer la même valeur (le tableau dans la "
"variable `arr`) aux deux appels de fonction. Cela signifie que notre code "
"essaie de supprimer le premier élément deux fois, ce qui essaie d'écrire "
"dans la même cellule mémoire deux fois - ce qui est interdit par la VM du "
"Caire, conduisant à une erreur d'exécution. Heureusement, ce code ne compile "
"pas réellement. Une fois que nous avons passé le tableau à la fonction "
"`foo`, la variable `arr` n'est plus utilisable. Nous obtenons cette erreur "
"de compilation-temps, nous disant que nous aurions besoin d'Array pour "
"implémenter le Copy Trait:"

#: src/ch04-01-what-is-ownership.md:125
msgid "The `Copy` Trait"
msgstr "Le \"Copier\""

#: src/ch04-01-what-is-ownership.md:127
msgid ""
"If a type implements the `Copy` trait, passing a value of that type to a "
"function does not move the value. Instead, a new variable is created, "
"referring to the same value. The important thing to note here is that this "
"is a completely free operation because variables are a Cairo abstraction "
"only and because _values_ in Cairo are always immutable. This, in "
"particular, conceptually differs from the Rust version of the `Copy` trait, "
"where the value is potentially copied in memory."
msgstr ""
"Si un type implémente le caractère `Copy`, passer une valeur de ce type à "
"une fonction ne déplace pas la valeur. Au lieu de cela, une nouvelle "
"variable est créée, se référant à la même valeur. La chose importante à "
"noter ici est qu'il s'agit d'une opération totalement libre parce que les "
"variables ne sont qu'une abstraction du Caire et parce que _values_ au Caire "
"sont toujours immuables. Ceci, en particulier, diffère conceptuellement de "
"la version Rust du caractère `Copy`, où la valeur est potentiellement copiée "
"en mémoire."

#: src/ch04-01-what-is-ownership.md:130
msgid ""
"All basic types previously described in [\"Data Types\"](./ch02-02-data-"
"types.md) implement by default the `Copy` trait."
msgstr ""
"Tous les types de base décrits précédemment dans [\"Types de données\"](./"
"ch02-02-data-types.md) implémentent par défaut le caractère `Copy`."

#: src/ch04-01-what-is-ownership.md:132
msgid ""
"While Arrays and Dictionaries can't be copied, custom types that don't "
"contain either of them can be. You can implement the `Copy` trait on your "
"type by adding the `#[derive(Copy)]` annotation to your type definition. "
"However, Cairo won't allow a type to be annotated with Copy if the type "
"itself or any of its components doesn't implement the Copy trait."
msgstr ""
"Vous pouvez implémenter le caractère `Copy` sur votre type en ajoutant "
"l'annotation `#[derive(Copy)]` à votre définition de type. Cependant, le "
"Caire ne permettra pas qu'un type soit annoté avec Copie si le type lui-même "
"ou l'un de ses composants n'implémente pas le caractère Copie."

#: src/ch04-01-what-is-ownership.md:148
msgid "// do something with p\n"
msgstr "// faire quelque chose avec p\n"

#: src/ch04-01-what-is-ownership.md:152
msgid ""
"In this example, we can pass `p1` twice to the foo function because the "
"`Point` type implements the `Copy` trait. This means that when we pass `p1` "
"to `foo`, we are actually passing a copy of `p1`, so `p1` remains valid. In "
"ownership terms, this means that the ownership of `p1` remains with the "
"`main` function. If you remove the `Copy` trait derivation from the `Point` "
"type, you will get a compile-time error when trying to compile the code."
msgstr ""
"Dans cet exemple, nous pouvons passer `p1` deux fois à la fonction foo parce "
"que le type `Point` implémente le caractère `Copy`. Cela signifie que "
"lorsque nous passons `p1` à `foo`, nous passons en fait une copie de `p1`, "
"de sorte que `p1` reste valide. En termes de propriété, cela signifie que la "
"propriété de `p1` reste avec la fonction `main`. Si vous supprimez le dérivé "
"`Copy` du type `Point`, vous obtiendrez une erreur de compilation lorsque "
"vous essayez de compiler le code."

#: src/ch04-01-what-is-ownership.md:155
msgid ""
"_Don't worry about the `Struct` keyword. We will introduce this in [Chapter "
"5](./ch05-00-using-structs-to-structure-related-data.md)._"
msgstr ""
"_Ne vous inquiétez pas du mot-clé `Struct`. Nous le présenterons dans "
"[Chapitre 5](./ch05-00-using-structs-to-structure-related-data.md)._"

#: src/ch04-01-what-is-ownership.md:160
msgid "Destroying Values - Example with FeltDict"
msgstr "Détruire des valeurs - Exemple avec FeltDict"

#: src/ch04-01-what-is-ownership.md:162
msgid ""
"The other way linear types can be _used_ is by being destroyed. Destruction "
"must ensure that the 'resource' is now correctly released. In Rust, for "
"example, this could be closing the access to a file, or locking a mutex. In "
"Cairo, one type that has such behaviour is `Felt252Dict`. For provability, "
"dicts must be 'squashed' when they are destructed. This would be very easy "
"to forget, so it is enforced by the type system and the compiler."
msgstr ""
"Dans Rust, par exemple, cela pourrait être de fermer l'accès à un fichier, "
"ou de verrouiller un mutex. Au Caire, un type qui a un tel comportement est "
"`Felt252Dict`. Pour la provabilité, les dicts doivent être 'écrasés' "
"lorsqu'ils sont destructés. Ce serait très facile à oublier, donc il est "
"appliqué par le système de type et le compilateur."

#: src/ch04-01-what-is-ownership.md:166
msgid "No-op Destruction: the `Drop` Trait"
msgstr "No-op Destruction: le trait \"Drop\""

#: src/ch04-01-what-is-ownership.md:168
msgid ""
"You may have noticed that the `Point` type in the previous example also "
"implements the `Drop` trait. For example, the following code will not "
"compile, because the struct `A` is not moved or destroyed before it goes out "
"of scope:"
msgstr ""
"Vous avez peut-être remarqué que le type `Point` dans l'exemple précédent "
"implémente également le caractère `Drop`. Par exemple, le code suivant ne "
"sera pas compilé, car la structure `A` n'est pas déplacée ou détruite avant "
"qu'elle ne soit hors de portée:"

#: src/ch04-01-what-is-ownership.md:175
msgid "// error: Variable not dropped.\n"
msgstr "// Erreur : Variable non supprimée.\n"

#: src/ch04-01-what-is-ownership.md:179
msgid ""
"However, types that implement the `Drop` trait are automatically destroyed "
"when going out of scope. This destruction does nothing, it is a no-op - "
"simply a hint to the compiler that this type can safely be destroyed once "
"it's no longer useful. We call this \"dropping\" a value."
msgstr ""
"Cependant, les types qui implémentent le caractère `Drop` sont "
"automatiquement détruits en sortant de la portée. Cette destruction ne fait "
"rien, c'est une non-op - tout simplement un indice pour le compilateur que "
"ce type peut être détruit en toute sécurité une fois qu'il n'est plus utile."

#: src/ch04-01-what-is-ownership.md:181
msgid ""
"At the moment, the `Drop` implementation can be derived for all types, "
"allowing them to be dropped when going out of scope, except for dictionaries "
"(`Felt252Dict`) and types containing dictionaries. For example, the "
"following code compiles:"
msgstr ""
"À l'heure actuelle, l'implémentation `Drop` peut être dérivée pour tous les "
"types, ce qui permet de les supprimer en cas de sortie de portée, à "
"l'exception des dictionnaires (`Felt252Dict`) et des types contenant des "
"dictionnaires. Par exemple, le code suivant compile:"

#: src/ch04-01-what-is-ownership.md:189
msgid "// Now there is no error.\n"
msgstr "// Il n'y a plus d'erreur.\n"

#: src/ch04-01-what-is-ownership.md:193
msgid "Destruction with a Side-effect: the `Destruct` Trait"
msgstr "Destruction avec un effet secondaire: le \"Destruct\""

#: src/ch04-01-what-is-ownership.md:195
msgid ""
"When a value is destroyed, the compiler first tries to call the `drop` "
"method on that type. If it doesn't exist, then the compiler tries to call "
"`destruct` instead. This method is provided by the `Destruct` trait."
msgstr ""
"Quand une valeur est détruite, le compilateur essaie d'abord d'appeler la "
"méthode `drop` sur ce type. S'il n'existe pas, alors le compilateur essaie "
"d'appeler `destruct` à la place. Cette méthode est fournie par le caractère "
"`Destruct`."

#: src/ch04-01-what-is-ownership.md:197
msgid ""
"As said earlier, dictionaries in Cairo are types that must be \"squashed\" "
"when destructed, so that the sequence of access can be proven. This is easy "
"for developers to forget, so instead dictionaries implement the `Destruct` "
"trait to ensure that all dictionaries are _squashed_ when going out of "
"scope. As such, the following example will not compile:"
msgstr ""
"Comme nous l'avons déjà dit, les dictionnaires du Caire sont des types qui "
"doivent être \"écrasés\" lors de la destruction, de sorte que la séquence "
"d'accès peut être prouvée. Ceci est facile pour les développeurs à oublier, "
"donc les dictionnaires implémentent plutôt le caractère `Destruct` pour "
"s'assurer que tous les dictionnaires sont _écrasés_ lors de la sortie de la "
"portée. Ainsi, l'exemple suivant ne sera pas compilé:"

#: src/ch04-01-what-is-ownership.md:210
msgid "If you try to run this code, you will get a compile-time error:"
msgstr ""
"Si vous essayez d'exécuter ce code, vous obtiendrez une erreur de "
"compilation-temps:"

#: src/ch04-01-what-is-ownership.md:227
msgid ""
"When `A` goes out of scope, it can't be dropped as it implements neither the "
"`Drop` (as it contains a dictionary and can't `derive(Drop)`) nor the "
"`Destruct` trait. To fix this, we can derive the `Destruct` trait "
"implementation for the `A` type:"
msgstr ""
"Lorsque `A` est hors de portée, il ne peut pas être abandonné car il "
"n'implémente ni le `Drop` (car il contient un dictionnaire et ne peut pas "
"`derive(Drop)`) ni le caractère `Destruct`. Pour corriger cela, nous pouvons "
"dériver l'implémentation de caractère `Destruct` pour le type `A`:"

#: src/ch04-01-what-is-ownership.md:236
msgid "// No error here\n"
msgstr "// Aucune erreur ici\n"

#: src/ch04-01-what-is-ownership.md:240
msgid ""
"Now, when `A` goes out of scope, its dictionary will be automatically "
"`squashed`, and the program will compile."
msgstr ""
"Maintenant, quand `A` est hors de portée, son dictionnaire sera "
"automatiquement `squashed`, et le programme sera compilé."

#: src/ch04-01-what-is-ownership.md:242
msgid "Copy Array Data with `clone`"
msgstr "Copier les données d'array avec `clone`"

#: src/ch04-01-what-is-ownership.md:244
msgid ""
"If we _do_ want to deeply copy the data of an `Array`, we can use a common "
"method called `clone`. We’ll discuss method syntax in a dedicated section in "
"[Chapter 5](./ch05-03-method-syntax.md), but because methods are a common "
"feature in many programming languages, you’ve probably seen them before."
msgstr ""
"Si nous _do_ voulons copier profondément les données d'un `Array`, nous "
"pouvons utiliser une méthode commune appelée `clone`. Nous allons discuter "
"de la syntaxe des méthodes dans une section dédiée dans [Chapitre 5](./"
"ch05-03-method-syntax.md), mais parce que les méthodes sont une "
"fonctionnalité commune dans de nombreux langages de programmation, vous les "
"avez probablement vus auparavant."

#: src/ch04-01-what-is-ownership.md:246
msgid "Here’s an example of the `clone` method in action."
msgstr "Voici un exemple de la méthode \"clone\" en action."

#: src/ch04-01-what-is-ownership.md:255
msgid ""
"When you see a call to `clone`, you know that some arbitrary code is being "
"executed and that code may be expensive. It’s a visual indicator that "
"something different is going on. In this case, the _value_ `arr1` refers to "
"is being copied, resulting in new memory cells being used, and a new "
"_variable_ `arr2` is created, referring to the new copied value."
msgstr ""
"Lorsque vous voyez un appel à `clone`, vous savez que certains codes "
"arbitraires sont en cours d'exécution et que ce code peut être coûteux. "
"C'est un indicateur visuel que quelque chose de différent se passe. Dans ce "
"cas, la _value_ `arr1` se réfère à est copiée, ce qui entraîne l'utilisation "
"de nouvelles cellules de mémoire, et une nouvelle _variable_ `arr2` est "
"créée, se référant à la nouvelle valeur copiée."

#: src/ch04-01-what-is-ownership.md:260
msgid "Return Values and Scope"
msgstr "Valeurs de retour et portée"

#: src/ch04-01-what-is-ownership.md:262
msgid ""
"Returning values is equivalent to _moving_ them. Listing 4-2 shows an "
"example of a function that returns some value, with similar annotations as "
"those in Listing 4-1."
msgstr ""
"Les valeurs de retour sont équivalentes à _moving_ them. Listing 4-2 montre "
"un exemple de fonction qui renvoie une certaine valeur, avec des annotations "
"similaires à celles de Listing 4-1."

#: src/ch04-01-what-is-ownership.md:272
msgid ""
"// gives_ownership moves its return\n"
"                                          // value into a1\n"
msgstr "// donne_propriété déplace son retour // valeur dans a1\n"

#: src/ch04-01-what-is-ownership.md:275
msgid "// a2 comes into scope\n"
msgstr "// a2 entre dans le champ d'application\n"

#: src/ch04-01-what-is-ownership.md:277
msgid ""
"// a2 is moved into\n"
"                                          // takes_and_gives_back, which "
"also\n"
"                                          // moves its return value into a3\n"
msgstr ""
"// a2 est déplacé dans // takes_and_gives_back, qui aussi // déplace sa "
"valeur de retour dans a3\n"

#: src/ch04-01-what-is-ownership.md:281
msgid ""
"// Here, a3 goes out of scope and is dropped. a2 was moved, so nothing\n"
"  // happens. a1 goes out of scope and is dropped.\n"
msgstr ""
"// Ici, a3 sort du champ d'application et est abandonné. a2 a été déplacé, "
"donc rien // ne se passe. a1 sort du champ d'application et est abandonné.\n"

#: src/ch04-01-what-is-ownership.md:284
msgid ""
"// gives_ownership will move its\n"
"                                          // return value into the function\n"
"                                          // that calls it\n"
msgstr ""
"// donne_ownership déplacera sa valeur // retour dans la fonction // qui "
"l'appelle\n"

#: src/ch04-01-what-is-ownership.md:288 src/ch04-01-what-is-ownership.md:296
msgid "// some_a comes into scope\n"
msgstr "// some_a entre dans le champ d'application\n"

#: src/ch04-01-what-is-ownership.md:290
msgid ""
"// some_a is returned and\n"
"                                          // moves ownership to the calling\n"
"                                          // function\n"
msgstr ""
"// some_a est retourné et // déplace la propriété vers la fonction "
"appelante //\n"

#: src/ch04-01-what-is-ownership.md:294
msgid "// This function takes an instance some_a of A and returns it\n"
msgstr "// Cette fonction prend une instance some_a de A et la renvoie\n"

#: src/ch04-01-what-is-ownership.md:298
msgid ""
"// some_a is returned and \n"
"                                          // moves ownership to the calling\n"
"                                          // function\n"
msgstr ""
"// some_a est retourné et // déplace la propriété vers la fonction "
"appelante //\n"

#: src/ch04-01-what-is-ownership.md:304
msgid "<span class=\"caption\">Listing 4-2: Moving return values</span>"
msgstr ""
"<span class=\"caption\">Liste 4-2: Valeurs de retour en mouvement</span>"

#: src/ch04-01-what-is-ownership.md:306
msgid ""
"While this works, moving into and out of every function is a bit tedious. "
"What if we want to let a function use a value but not move the value? It’s "
"quite annoying that anything we pass in also needs to be passed back if we "
"want to use it again, in addition to any data resulting from the body of the "
"function that we might want to return as well."
msgstr ""
"Alors que cela fonctionne, se déplacer dans et hors de chaque fonction est "
"un peu fastidieux. Et si nous voulons laisser une fonction utiliser une "
"valeur mais pas déplacer la valeur? Il est assez ennuyeux que tout ce que "
"nous passons dans doit également être refoulé si nous voulons l'utiliser à "
"nouveau, en plus de toutes les données résultant du corps de la fonction que "
"nous pourrions vouloir retourner aussi bien."

#: src/ch04-01-what-is-ownership.md:308
msgid ""
"Cairo does let us return multiple values using a tuple, as shown in Listing "
"4-3."
msgstr ""
"Le Caire nous permet de retourner plusieurs valeurs à l'aide d'un tuple, "
"comme indiqué dans Listing 4-3."

#: src/ch04-01-what-is-ownership.md:320
msgid "// len() returns the length of an array\n"
msgstr "// len() retourne la longueur d'un tableau\n"

#: src/ch04-01-what-is-ownership.md:326
msgid "<span class=\"caption\">Listing 4-3: Returning many values</span>"
msgstr ""
"<span class=\"caption\">Liste 4-3: Retournant de nombreuses valeurs</span>"

#: src/ch04-01-what-is-ownership.md:328
msgid ""
"But this is too much ceremony and a lot of work for a concept that should be "
"common. Luckily for us, Cairo has two features for passing a value without "
"destroying or moving it, called _references_ and _snapshots_."
msgstr ""
"Mais c'est trop de cérémonie et beaucoup de travail pour un concept qui "
"devrait être commun. Heureusement pour nous, Le Caire a deux "
"caractéristiques pour passer une valeur sans la détruire ou le déplacer, "
"appelé _références_ et _snapshots_."

#: src/ch04-02-references-and-snapshots.md:3
msgid ""
"The issue with the tuple code in previous Listing 4-3 is that we have to "
"return the `Array` to the calling function so we can still use the `Array` "
"after the call to `calculate_length`, because the `Array` was moved into "
"`calculate_length`."
msgstr ""
"Le problème avec le code de tuple dans le Listing précédent 4-3 est que nous "
"devons retourner le `Array` à la fonction appelante afin que nous puissions "
"toujours utiliser le `Array` après l'appel à `calculate_length`, parce que "
"le `Array` a été déplacé dans `calculate_length`."

#: src/ch04-02-references-and-snapshots.md:8
msgid "Snapshots"
msgstr "Captures instantanées"

#: src/ch04-02-references-and-snapshots.md:10
msgid ""
"In the previous chapter, we talked about how Cairo's ownership system "
"prevents us from using a variable after we've moved it, protecting us from "
"potentially writing twice to the same memory cell. However, it's not very "
"convenient. Let's see how we can retain ownership of the variable in the "
"calling function using snapshots."
msgstr ""
"Dans le chapitre précédent, nous avons parlé de la façon dont le système de "
"propriété du Caire nous empêche d'utiliser une variable après l'avoir "
"déplacée, en nous protégeant d'écrire potentiellement deux fois dans la même "
"cellule mémoire. Cependant, ce n'est pas très pratique. Voyons comment nous "
"pouvons conserver la propriété de la variable dans la fonction appelante en "
"utilisant des instantanés."

#: src/ch04-02-references-and-snapshots.md:15
msgid ""
"In Cairo, a snapshot is an immutable view of a value at a certain point in "
"time. Recall that memory is immutable, so modifying a value actually creates "
"a new memory cell. The old memory cell still exists, and snapshots are "
"variables that refer to that \"old\" value. In this sense, snapshots are a "
"view \"into the past\"."
msgstr ""
"Au Caire, un instantané est une vue immuable d'une valeur à un certain "
"moment dans le temps. Rappelez-vous que la mémoire est immuable, donc "
"modifier une valeur crée en fait une nouvelle cellule mémoire. L'ancienne "
"cellule mémoire existe toujours, et les instantanés sont des variables qui "
"se réfèrent à cette \"vieille\" valeur. En ce sens, les instantanés sont une "
"vue \"dans le passé\"."

#: src/ch04-02-references-and-snapshots.md:20
msgid ""
"Here is how you would define and use a `calculate_length` function that "
"takes a snapshot of an array as a parameter instead of taking ownership of "
"the underlying value. In this example, the `calculate_length` function "
"returns the length of the array passed as a parameter. As we're passing it "
"as a snapshot, which is an immutable view of the array, we can be sure that "
"the `calculate_length` function will not mutate the array, and ownership of "
"the array is kept in the `main` function."
msgstr ""
"Voici comment vous définiriez et utiliseriez une fonction `calculate_length` "
"qui prend un instantané d'un tableau comme paramètre au lieu de prendre la "
"propriété de la valeur sous-jacente. Dans cet exemple, la fonction "
"`calculate_length` renvoie la longueur du tableau passé comme paramètre. "
"Comme nous le passons comme un instantané, qui est une vue immuable du "
"tableau, nous pouvons être sûrs que la fonction `calculate_length` ne va pas "
"muter le tableau, et la propriété du tableau est conservée dans la fonction "
"`main`."

#: src/ch04-02-references-and-snapshots.md:31
msgid "// Take a snapshot of `arr1` at this point in time\n"
msgstr "// Prenez un instantané de `arr1` à ce moment-là\n"

#: src/ch04-02-references-and-snapshots.md:32
msgid "// Mutate `arr1` by appending a value\n"
msgstr "// Muter `arr1` en ajoutant une valeur\n"

#: src/ch04-02-references-and-snapshots.md:35
msgid "// Calculate the length of the array when the snapshot was taken\n"
msgstr "// Calculer la longueur du tableau lorsque l'instantané a été pris\n"

#: src/ch04-02-references-and-snapshots.md:36
#: src/ch04-02-references-and-snapshots.md:67
msgid "// Calculate the current length of the array\n"
msgstr "// Calculer la longueur actuelle du tableau\n"

#: src/ch04-02-references-and-snapshots.md:37
msgid "\"The length of the array when the snapshot was taken is {}\""
msgstr "\"La longueur du tableau lorsque l'instantané a été pris est {}\""

#: src/ch04-02-references-and-snapshots.md:38
msgid "\"The current length of the array is {}\""
msgstr "\"La longueur actuelle du tableau est {}\""

#: src/ch04-02-references-and-snapshots.md:46
msgid ""
"Note: it is only possible to call the `len()` method on an array snapshot "
"because it is defined as such in the `ArrayTrait` trait. If you try to call "
"a method that is not defined for snapshots on a snapshot, you will get a "
"compilation error. However, you can call methods expecting a snapshot on non-"
"snapshot types."
msgstr ""
"Remarque : il est seulement possible d'appeler la méthode `len()` sur un "
"instantané de tableau parce qu'elle est définie comme telle dans le "
"caractère `ArrayTrait`. Si vous essayez d'appeler une méthode qui n'est pas "
"définie pour les instantanés sur un instantané, vous obtiendrez une erreur "
"de compilation. Cependant, vous pouvez appeler des méthodes qui attendent un "
"instantané sur des types non-snapshot."

#: src/ch04-02-references-and-snapshots.md:48
msgid "The output of this program is:"
msgstr "La sortie de ce programme est:"

#: src/ch04-02-references-and-snapshots.md:61
msgid ""
"First, notice that all the tuple code in the variable declaration and the "
"function return value is gone. Second, note that we pass `@arr1` into "
"`calculate_length` and, in its definition, we take `@Array<u128>` rather "
"than `Array<u128>`."
msgstr ""
"Tout d'abord, remarquez que tout le code de tuple dans la déclaration "
"variable et la valeur de retour de la fonction est parti. Deuxièmement, "
"notez que nous passons `@arr1` dans `calculate_length` et, dans sa "
"définition, nous prenons `@Array<u128>` plutôt que `Array<u128>`."

#: src/ch04-02-references-and-snapshots.md:64
msgid "Let’s take a closer look at the function call here:"
msgstr "Laissez-nous regarder de plus près l'appel de la fonction ici:"

#: src/ch04-02-references-and-snapshots.md:70
msgid ""
"The `@arr1` syntax lets us create a snapshot of the value in `arr1`. Because "
"a snapshot is an immutable view of a value at a specific point in time, the "
"usual rules of the linear type system are not enforced. In particular, "
"snapshot variables always implement the `Drop` trait, never the `Destruct` "
"trait, even dictionary snapshots."
msgstr ""
"La syntaxe `@arr1` nous permet de créer un instantané de la valeur dans "
"`arr1`. Parce qu'un instantané est une vue immuable d'une valeur à un moment "
"précis, les règles habituelles du système de type linéaire ne sont pas "
"appliquées. En particulier, les variables d'instantané implémentent toujours "
"le caractère `Drop`, jamais le caractère `Destruct`, même les instantanés de "
"dictionnaire."

#: src/ch04-02-references-and-snapshots.md:72
msgid ""
"Similarly, the signature of the function uses `@` to indicate that the type "
"of the parameter `arr` is a snapshot. Let’s add some explanatory annotations:"
msgstr ""
"De même, la signature de la fonction utilise `@` pour indiquer que le type "
"du paramètre `arr` est un instantané."

#: src/ch04-02-references-and-snapshots.md:76
msgid "// array_snapshot is a snapshot of an Array\n"
msgstr "// array_snapshot est un instantané d'un tableau\n"

#: src/ch04-02-references-and-snapshots.md:79
msgid ""
"// Here, array_snapshot goes out of scope and is dropped.\n"
"// However, because it is only a view of what the original array `arr` "
"contains, the original `arr` can still be used.\n"
msgstr ""
"// Ici, array_snapshot sort de la portée et est supprimé. // Cependant, "
"parce que ce n'est qu'une vue de ce que contient le tableau original `arr`, "
"le `arr` original peut encore être utilisé.\n"

#: src/ch04-02-references-and-snapshots.md:83
msgid ""
"The scope in which the variable `array_snapshot` is valid is the same as any "
"function parameter’s scope, but the underlying value of the snapshot is not "
"dropped when `array_snapshot` stops being used. When functions have "
"snapshots as parameters instead of the actual values, we won’t need to "
"return the values in order to give back ownership of the original value, "
"because we never had it."
msgstr ""
"La portée dans laquelle la variable `array_snapshot` est valide est la même "
"que celle de n'importe quel paramètre de fonction, mais la valeur sous-"
"jacente de l'instantané n'est pas supprimée lorsque `array_snapshot` cesse "
"d'être utilisé. Lorsque les fonctions ont des instantanés comme paramètres "
"au lieu des valeurs réelles, nous n'avons pas besoin de retourner les "
"valeurs afin de redonner la propriété de la valeur originale, parce que nous "
"ne l'avons jamais eu."

#: src/ch04-02-references-and-snapshots.md:85
msgid "Desnap Operator"
msgstr "Opérateur de désenclenchement"

#: src/ch04-02-references-and-snapshots.md:87
msgid ""
"To convert a snapshot back into a regular variable, you can use the `desnap` "
"operator `*`, which serves as the opposite of the `@` operator."
msgstr ""
"Pour convertir un snapshot en une variable régulière, vous pouvez utiliser "
"l'opérateur `desnap` `*`, qui sert comme le contraire de l'opérateur `@`."

#: src/ch04-02-references-and-snapshots.md:89
msgid ""
"Only `Copy` types can be desnapped. However, in the general case, because "
"the value is not modified, the new variable created by the `desnap` operator "
"reuses the old value, and so desnapping is a completely free operation, just "
"like `Copy`."
msgstr ""
"Cependant, dans le cas général, parce que la valeur n'est pas modifiée, la "
"nouvelle variable créée par l'opérateur `desnap` réutilise l'ancienne "
"valeur, de sorte que le desnaping est une opération totalement libre, tout "
"comme `Copy`."

#: src/ch04-02-references-and-snapshots.md:91
msgid ""
"In the following example, we want to calculate the area of a rectangle, but "
"we don't want to take ownership of the rectangle in the `calculate_area` "
"function, because we might want to use the rectangle again after the "
"function call. Since our function doesn't mutate the rectangle instance, we "
"can pass the snapshot of the rectangle to the function, and then transform "
"the snapshots back into values using the `desnap` operator `*`."
msgstr ""
"Dans l'exemple suivant, nous voulons calculer la zone d'un rectangle, mais "
"nous ne voulons pas prendre la propriété du rectangle dans la fonction "
"`calculate_area`, parce que nous pourrions vouloir utiliser le rectangle à "
"nouveau après l'appel de la fonction. Puisque notre fonction ne mute pas "
"l'instance rectangle, nous pouvons passer l'instantané du rectangle à la "
"fonction, puis transformer les instantanés en valeurs en utilisant "
"l'opérateur `desnap` `*`."

#: src/ch04-02-references-and-snapshots.md:103
msgid "\"Area: {}\""
msgstr "\"Zone: {}\""

#: src/ch04-02-references-and-snapshots.md:107
msgid ""
"// As rec is a snapshot to a Rectangle, its fields are also snapshots of the "
"fields types.\n"
"    // We need to transform the snapshots back into values using the desnap "
"operator `*`.\n"
"    // This is only possible if the type is copyable, which is the case for "
"u64.\n"
"    // Here, `*` is used for both multiplying the height and width and for "
"desnapping the snapshots.\n"
msgstr ""
"// Comme rec est un snapshot vers un rectangle, ses champs sont également "
"des snapshots des types de champs. // Nous devons transformer les snapshots "
"en valeurs en utilisant l'opérateur de desnaps `*`. // Ceci n'est possible "
"que si le type est copiable, ce qui est le cas pour u64. // Ici, `*` est "
"utilisé à la fois pour multiplier la hauteur et la largeur et pour desnapper "
"les snapshots.\n"

#: src/ch04-02-references-and-snapshots.md:115
msgid ""
"But, what happens if we try to modify something we’re passing as a snapshot? "
"Try the code in Listing 4-4. Spoiler alert: it doesn’t work!"
msgstr ""
"Mais, que se passe-t-il si nous essayons de modifier quelque chose que nous "
"passons comme un instantané? Essayez le code dans Listing 4-4. Alerte "
"Spoiler : cela ne fonctionne pas!"

#: src/ch04-02-references-and-snapshots.md:140
msgid ""
"<span class=\"caption\">Listing 4-4: Attempting to modify a snapshot value</"
"span>"
msgstr ""
"<span class=\"caption\">Liste 4-4: Tentative de modification d'une valeur "
"d'instantané</span>"

#: src/ch04-02-references-and-snapshots.md:142
msgid "Here’s the error:"
msgstr "Voici l'erreur :"

#: src/ch04-02-references-and-snapshots.md:162
msgid "The compiler prevents us from modifying values associated to snapshots."
msgstr ""
"Le compilateur nous empêche de modifier les valeurs associées aux "
"instantanés."

#: src/ch04-02-references-and-snapshots.md:164
msgid "Mutable References"
msgstr "Références mutables"

#: src/ch04-02-references-and-snapshots.md:166
msgid ""
"We can achieve the behavior we want in Listing 4-4 by using a _mutable "
"reference_ instead of a snapshot. Mutable references are actually mutable "
"values passed to a function that are implicitly returned at the end of the "
"function, returning ownership to the calling context. By doing so, they "
"allow you to mutate the value passed while keeping ownership of it by "
"returning it automatically at the end of the execution. In Cairo, a "
"parameter can be passed as _mutable reference_ using the `ref` modifier."
msgstr ""
"Nous pouvons réaliser le comportement que nous voulons dans Listing 4-4 en "
"utilisant une référence _mutable_ au lieu d'un instantané. Les références "
"mutables sont en fait des valeurs mutables transmises à une fonction qui "
"sont implicitement retournées à la fin de la fonction, en retournant la "
"propriété au contexte d'appel. Ce faisant, elles vous permettent de muter la "
"valeur passée tout en conservant la propriété en la renvoyant "
"automatiquement à la fin de l'exécution. Au Caire, un paramètre peut être "
"passé comme référence _mutable_ en utilisant le modificateur `ref`."

#: src/ch04-02-references-and-snapshots.md:169
msgid ""
"**Note**: In Cairo, a parameter can only be passed as _mutable reference_ "
"using the `ref` modifier if the variable is declared as mutable with `mut`."
msgstr ""
"**Note**: Au Caire, un paramètre ne peut être passé que comme référence "
"_mutable en utilisant le modificateur `ref` si la variable est déclarée "
"mutable avec `mut`."

#: src/ch04-02-references-and-snapshots.md:171
msgid ""
"In Listing 4-5, we use a mutable reference to modify the value of the "
"`height` and `width` fields of the `Rectangle` instance in the `flip` "
"function."
msgstr ""
"Dans Listing 4-5, nous utilisons une référence mutable pour modifier la "
"valeur des champs `hauteur` et `largeur` de l'instance `Rectangle` dans la "
"fonction `flip`."

#: src/ch04-02-references-and-snapshots.md:183
msgid "\"height: {}, width: {}\""
msgstr "\"hauteur: {}, largeur: {}\""

#: src/ch04-02-references-and-snapshots.md:193
msgid ""
"<span class=\"caption\">Listing 4-5: Use of a mutable reference to modify a "
"value</span>"
msgstr ""
"<span class=\"caption\">Liste 4-5: Utilisation d'une référence mutable pour "
"modifier une valeur</span>"

#: src/ch04-02-references-and-snapshots.md:195
msgid ""
"First, we change `rec` to be `mut`. Then we pass a mutable reference of "
"`rec` into `flip` with `ref rec`, and update the function signature to "
"accept a mutable reference with `ref rec: Rectangle`. This makes it very "
"clear that the `flip` function will mutate the value of the `Rectangle` "
"instance passed as parameter."
msgstr ""
"Tout d'abord, nous changeons `rec` pour être `mut`. Ensuite, nous passons "
"une référence mutable de `rec` dans `flip` avec `ref rec`, et mettons à jour "
"la signature de la fonction pour accepter une référence mutable avec `ref "
"rec: Rectangle`. Cela indique très clairement que la fonction `flip` va "
"muter la valeur de l'instance `Rectangle` passée en paramètre."

#: src/ch04-02-references-and-snapshots.md:197
msgid "The output of the program is:"
msgstr "La sortie du programme est :"

#: src/ch04-02-references-and-snapshots.md:209
msgid ""
"As expected, the `height` and `width` fields of the `rec` variable have been "
"swapped."
msgstr ""
"Comme prévu, les champs `hauteur` et `largeur` de la variable `rec` ont été "
"échangés."

#: src/ch04-02-references-and-snapshots.md:211
msgid "{{#quiz ../quizzes/ch04-02-references-and-snapshots.toml}}"
msgstr "{{#quiz../quizes/ch04-02-references-and-snapshots.toml}}"

#: src/ch04-02-references-and-snapshots.md:213
msgid "Small Recap"
msgstr "Petite récapitulation"

#: src/ch04-02-references-and-snapshots.md:215
msgid ""
"Let’s recap what we’ve discussed about the linear type system, ownership, "
"snapshots, and references:"
msgstr ""
"Laissez-nous récapituler ce que nous avons discuté sur le système de type "
"linéaire, la propriété, les instantanés et les références:"

#: src/ch04-02-references-and-snapshots.md:217
msgid "At any given time, a variable can only have one owner."
msgstr "À tout moment, une variable ne peut avoir qu'un seul propriétaire."

#: src/ch04-02-references-and-snapshots.md:218
msgid ""
"You can pass a variable by-value, by-snapshot, or by-reference to a function."
msgstr ""
"Vous pouvez passer une variable par valeur, par snapshot ou par référence à "
"une fonction."

#: src/ch04-02-references-and-snapshots.md:219
msgid ""
"If you pass-by-value, ownership of the variable is transferred to the "
"function."
msgstr ""
"Si vous passez par la valeur, la propriété de la variable est transférée à "
"la fonction."

#: src/ch04-02-references-and-snapshots.md:220
msgid ""
"If you want to keep ownership of the variable and know that your function "
"won’t mutate it, you can pass it as a snapshot with `@`."
msgstr ""
"Si vous voulez garder la propriété de la variable et savoir que votre "
"fonction ne la mute pas, vous pouvez la passer comme un instantané avec `@`."

#: src/ch04-02-references-and-snapshots.md:221
msgid ""
"If you want to keep ownership of the variable and know that your function "
"will mutate it, you can pass it as a mutable reference with `ref`."
msgstr ""
"Si vous voulez garder la propriété de la variable et savoir que votre "
"fonction va la muter, vous pouvez la passer comme une référence mutable avec "
"`ref`."

#: src/ch05-00-using-structs-to-structure-related-data.md
msgid ""
"A struct, or structure, is a custom data type that lets you package together "
"and name multiple related values that make up a meaningful group. If you’re "
"familiar with an object-oriented language, a struct is like an object’s data "
"attributes. In this chapter, we’ll compare and contrast tuples with structs "
"to build on what you already know and demonstrate when structs are a better "
"way to group data."
msgstr ""
"Un struct, ou structure, est un type de données personnalisé qui vous permet "
"d'emballer ensemble et de nommer plusieurs valeurs apparentées qui composent "
"un groupe significatif. Si vous êtes familier avec un langage orienté objet, "
"un struct est comme un objet. Dans ce chapitre, nous allons comparer et "
"contraster des tuples avec des structs pour construire sur ce que vous "
"connaissez déjà et démontrer quand les structs sont un meilleur moyen de "
"grouper des données."

#: src/ch05-00-using-structs-to-structure-related-data.md
msgid ""
"We’ll demonstrate how to define and instantiate structs. We’ll discuss how "
"to define associated functions, especially the kind of associated functions "
"called methods, to specify behavior associated with a struct type. Structs "
"and enums (discussed in the [next chapter](ch06-01-enums.md)) are the "
"building blocks for creating new types in your program’s domain to take full "
"advantage of Cairo's compile-time type checking."
msgstr ""
"Nous allons discuter de la façon de définir les fonctions associées, en "
"particulier le type de fonctions associées appelées méthodes, pour spécifier "
"le comportement associé à un type de struct. Les structures et les enums "
"(examinés dans le [chapitre suivant](ch06-01-enums.md)) sont les éléments de "
"construction pour créer de nouveaux types dans votre domaine de programme."

#: src/ch05-01-defining-and-instantiating-structs.md:3
msgid ""
"Structs are similar to tuples, discussed in the [Data Types](ch02-02-data-"
"types.md) section, in that both hold multiple related values. Like tuples, "
"the pieces of a struct can be different types. Unlike with tuples, in a "
"struct you’ll name each piece of data so it’s clear what the values mean. "
"Adding these names means that structs are more flexible than tuples: you "
"don’t have to rely on the order of the data to specify or access the values "
"of an instance."
msgstr ""
"Les structures sont similaires aux tuples, discutées dans la section [Types "
"de données](ch02-02-data-types.md), en ce sens que les deux contiennent "
"plusieurs valeurs liées. Comme les tuples, les morceaux d'une structure "
"peuvent être différents types. Contrairement aux tuples, dans une structure "
"vous nommez chaque morceau de données de sorte qu'il soit clair ce que "
"signifient les valeurs. Ajouter ces noms signifie que les structures sont "
"plus flexibles que les tuples: vous n'avez pas à compter sur l'ordre des "
"données pour spécifier ou accéder aux valeurs d'une instance."

#: src/ch05-01-defining-and-instantiating-structs.md:5
msgid ""
"To define a struct, we enter the keyword `struct` and name the entire "
"struct. A struct’s name should describe the significance of the pieces of "
"data being grouped together. Then, inside curly brackets, we define the "
"names and types of the pieces of data, which we call fields. For example, "
"Listing 5-1 shows a struct that stores information about a user account."
msgstr ""
"Pour définir une structure, nous entrons le mot clé `struct` et nommons la "
"structure entière. Un nom de structure doit décrire la signification des "
"éléments de données groupés. Ensuite, à l'intérieur des crochets, nous "
"définissons les noms et les types des éléments de données, que nous appelons "
"les champs. Par exemple, Listing 5-1 montre une structure qui stocke des "
"informations sur un compte utilisateur."

#: src/ch05-01-defining-and-instantiating-structs.md:20
msgid "<span class=\"caption\">Listing 5-1: A `User` struct definition</span>"
msgstr ""
"<span class=\"caption\">Liste 5-1: Une définition de structure `User`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:22
msgid ""
"To use a struct after we’ve defined it, we create an _instance_ of that "
"struct by specifying concrete values for each of the fields. We create an "
"instance by stating the name of the struct and then add curly brackets "
"containing _key: value_ pairs, where the keys are the names of the fields "
"and the values are the data we want to store in those fields. We don’t have "
"to specify the fields in the same order in which we declared them in the "
"struct. In other words, the struct definition is like a general template for "
"the type, and instances fill in that template with particular data to create "
"values of the type."
msgstr ""
"Pour utiliser une struct après que nous l'avons définie, nous créons une "
"_instance_ de cette struct en spécifiant des valeurs concrètes pour chacun "
"des champs. Nous créons une instance en indiquant le nom de la struct et "
"puis ajoutons des crochets bouclés contenant _key: value_ paires, où les "
"clés sont les noms des champs et les valeurs sont les données que nous "
"voulons stocker dans ces champs. Nous n'avons pas à spécifier les champs "
"dans le même ordre dans lequel nous les avons déclarés dans la struct. En "
"d'autres termes, la définition de struct est comme un modèle général pour le "
"type, et les instances remplissent ce modèle avec des données particulières "
"pour créer des valeurs du type."

#: src/ch05-01-defining-and-instantiating-structs.md:25
msgid ""
"For example, we can declare two particular users as shown in Listing 5-2."
msgstr ""
"Par exemple, nous pouvons déclarer deux utilisateurs particuliers comme "
"indiqué dans Listing 5-2."

#: src/ch05-01-defining-and-instantiating-structs.md:40
#: src/ch05-01-defining-and-instantiating-structs.md:43
#: src/ch05-01-defining-and-instantiating-structs.md:65
#: src/ch05-01-defining-and-instantiating-structs.md:101
#: src/ch05-01-defining-and-instantiating-structs.md:137
#: src/ch05-01-defining-and-instantiating-structs.md:182
#: src/ch05-01-defining-and-instantiating-structs.md:219
msgid "\"someusername123\""
msgstr "\"quelque nom d'utilisateur123\""

#: src/ch05-01-defining-and-instantiating-structs.md:40
#: src/ch05-01-defining-and-instantiating-structs.md:43
#: src/ch05-01-defining-and-instantiating-structs.md:65
#: src/ch05-01-defining-and-instantiating-structs.md:101
#: src/ch05-01-defining-and-instantiating-structs.md:137
#: src/ch05-01-defining-and-instantiating-structs.md:182
#: src/ch05-01-defining-and-instantiating-structs.md:219
msgid "\"someone@example.com\""
msgstr "\"quelqu'un@exemple.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:49
msgid ""
"<span class=\"caption\">Listing 5-2: Creating two instances of the `User` "
"struct</span>"
msgstr ""
"<span class=\"caption\">Liste 5-2: Création de deux instances de la "
"structure `User`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:51
msgid ""
"To get a specific value from a struct, we use dot notation. For example, to "
"access `user1`'s email address, we use `user1.email`. If the instance is "
"mutable, we can change a value by using the dot notation and assigning into "
"a particular field. Listing 5-3 shows how to change the value in the `email` "
"field of a mutable `User` instance."
msgstr ""
"Pour obtenir une valeur spécifique à partir d'un struct, nous utilisons la "
"notation dot. Par exemple, pour accéder à l'adresse e-mail de `user1`, nous "
"utilisons `user1.email`. Si l'instance est mutable, nous pouvons modifier "
"une valeur en utilisant la notation dot et en assignant dans un champ "
"particulier. Listing 5-3 montre comment modifier la valeur dans le champ "
"`email` d'une instance `User` mutable."

#: src/ch05-01-defining-and-instantiating-structs.md:67
#: src/ch05-01-defining-and-instantiating-structs.md:103
#: src/ch05-01-defining-and-instantiating-structs.md:139
msgid "\"anotheremail@example.com\""
msgstr "\"anotheremail@exemple.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:81
msgid ""
"<span class=\"caption\">Listing 5-3: Changing the value in the email field "
"of a `User` instance</span>"
msgstr ""
"<span class=\"caption\">Liste 5-3: Modification de la valeur dans le champ "
"de courriel d'une instance `User`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:83
msgid ""
"Note that the entire instance must be mutable; Cairo doesn’t allow us to "
"mark only certain fields as mutable."
msgstr ""
"Notez que toute l'instance doit être mutable ; Le Caire ne nous permet pas "
"de marquer seulement certains champs comme mutables."

#: src/ch05-01-defining-and-instantiating-structs.md:85
msgid ""
"As with any expression, we can construct a new instance of the struct as the "
"last expression in the function body to implicitly return that new instance."
msgstr ""
"Comme avec n'importe quelle expression, nous pouvons construire une nouvelle "
"instance de la structure comme la dernière expression dans le corps de la "
"fonction pour retourner implicitement cette nouvelle instance."

#: src/ch05-01-defining-and-instantiating-structs.md:87
msgid ""
"Listing 5-4 shows a `build_user` function that returns a `User` instance "
"with the given email and username. The `active` field gets the value of "
"`true`, and the `sign_in_count` gets a value of `1`."
msgstr ""
"Listing 5-4 affiche une fonction `build_user` qui renvoie une instance "
"`User` avec le courriel et le nom d'utilisateur donné. Le champ `active` "
"obtient la valeur de `true`, et le `sign_in_count` obtient une valeur de `1`."

#: src/ch05-01-defining-and-instantiating-structs.md:117
msgid ""
"<span class=\"caption\">Listing 5-4: A `build_user` function that takes an "
"email and username and returns a `User` instance.</span>"
msgstr ""
"<span class=\"caption\">Liste 5-4: Une fonction `build_user` qui prend un "
"courriel et un nom d`utilisateur et retourne une instance `User`.</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:119
msgid ""
"It makes sense to name the function parameters with the same name as the "
"struct fields, but having to repeat the `email` and `username` field names "
"and variables is a bit tedious. If the struct had more fields, repeating "
"each name would get even more annoying. Luckily, there’s a convenient "
"shorthand!"
msgstr ""
"Il est logique de nommer les paramètres de fonction avec le même nom que les "
"champs struct, mais devoir répéter les noms de champ `email` et `username` "
"est un peu fastidieux. Si la structure avait plus de champs, répéter chaque "
"nom serait encore plus ennuyeux. Heureusement, il ya un raccourci pratique!"

#: src/ch05-01-defining-and-instantiating-structs.md:121
msgid "Using the Field Init Shorthand"
msgstr "Utilisation du champ Init Shorthand"

#: src/ch05-01-defining-and-instantiating-structs.md:123
msgid ""
"Because the parameter names and the struct field names are exactly the same "
"in Listing 5-4, we can use the field init shorthand syntax to rewrite "
"`build_user` so it behaves exactly the same but doesn’t have the repetition "
"of `username` and `email`, as shown in Listing 5-5."
msgstr ""
"Comme les noms de paramètres et les noms de champs de struct sont exactement "
"les mêmes dans Listing 5-4, nous pouvons utiliser le champ init syntaxe "
"shorthand pour réécrire `build_user` de sorte qu'il se comporte exactement "
"le même mais n'a pas la répétition de `username` et `email`, comme indiqué "
"dans Listing 5-5."

#: src/ch05-01-defining-and-instantiating-structs.md:153
msgid ""
"<span class=\"caption\">Listing 5-5: A `build_user` function that uses field "
"init shorthand because the `username` and `email` parameters have the same "
"name as struct fields.</span>"
msgstr ""
"<span class=\"caption\">Liste 5-5: Une fonction `build_user` qui utilise le "
"champ init shorthand parce que les paramètres `username` et `email` ont le "
"même nom que les champs struct.</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:155
msgid ""
"Here, we’re creating a new instance of the `User` struct, which has a field "
"named `email`. We want to set the `email` field’s value to the value in the "
"`email` parameter of the `build_user` function. Because the `email` field "
"and the `email` parameter have the same name, we only need to write `email` "
"rather than `email: email`."
msgstr ""
"Ici, nous créons une nouvelle instance de la structure `User`, qui a un "
"champ nommé `email`. Nous voulons définir la valeur `email`s à la valeur "
"dans le paramètre `email` de la fonction `build_user`. Parce que le champ "
"`email` et le paramètre `email` ont le même nom, nous avons seulement besoin "
"d'écrire `email` plutôt que `email: email`."

#: src/ch05-01-defining-and-instantiating-structs.md:157
msgid "Creating Instances from Other Instances with Struct Update Syntax"
msgstr ""
"Création d'instances à partir d'autres instances avec Struct Update Syntax"

#: src/ch05-01-defining-and-instantiating-structs.md:159
msgid ""
"It’s often useful to create a new instance of a struct that includes most of "
"the values from another instance, but changes some. You can do this using "
"_struct update syntax_."
msgstr ""
"Il est souvent utile de créer une nouvelle instance d'une structure qui "
"inclut la plupart des valeurs d'une autre instance, mais en modifie "
"certains. Vous pouvez le faire en utilisant _struct update syntaxe_."

#: src/ch05-01-defining-and-instantiating-structs.md:163
msgid ""
"First, in Listing 5-6 we show how to create a new `User` instance in `user2` "
"regularly, without the update syntax. We set a new value for `email` but "
"otherwise use the same values from `user1` that we created in Listing 5-2."
msgstr ""
"Tout d'abord, dans Listing 5-6, nous montrons comment créer une nouvelle "
"instance `User` dans `user2` régulièrement, sans la syntaxe de mise à jour. "
"Nous avons défini une nouvelle valeur pour `email` mais autrement utiliser "
"les mêmes valeurs de `user1` que nous avons créé dans Listing 5-2."

#: src/ch05-01-defining-and-instantiating-structs.md:179
#: src/ch05-01-defining-and-instantiating-structs.md:216
msgid "// --snip--\n"
msgstr "// --snip--\n"

#: src/ch05-01-defining-and-instantiating-structs.md:188
#: src/ch05-01-defining-and-instantiating-structs.md:222
msgid "\"another@example.com\""
msgstr "\"un autre@exemple.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:197
msgid ""
"<span class=\"caption\">Listing 5-6: Creating a new `User` instance using "
"all but one of the values from `user1`</span>"
msgstr ""
"<span class=\"caption\">Liste 5-6: Création d'une nouvelle instance `User` "
"en utilisant toutes les valeurs sauf une de `user1`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:199
msgid ""
"Using struct update syntax, we can achieve the same effect with less code, "
"as shown in Listing 5-7. The syntax `..` specifies that the remaining fields "
"not explicitly set should have the same value as the fields in the given "
"instance."
msgstr ""
"En utilisant la syntaxe struct update, nous pouvons obtenir le même effet "
"avec moins de code, comme indiqué dans Listing 5-7. La syntaxe `..` spécifie "
"que les champs restants non explicitement définis doivent avoir la même "
"valeur que les champs dans l'instance donnée."

#: src/ch05-01-defining-and-instantiating-structs.md:229
msgid ""
"<span class=\"caption\">Listing 5-7: Using struct update syntax to set a new "
"`email` value for a `User` instance but to use the rest of the values from "
"`user1`</span>"
msgstr ""
"<span class=\"caption\">Liste 5-7: Utiliser la syntaxe de mise à jour de "
"struct pour définir une nouvelle valeur `email` pour une instance `User` "
"mais pour utiliser le reste des valeurs de `user1`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:232
msgid ""
"The code in Listing 5-7 also creates an instance of `user2` that has a "
"different value for `email` but has the same values for the `username`, "
"`active`, and `sign_in_count` fields as `user1`. The `..user1` part must "
"come last to specify that any remaining fields should get their values from "
"the corresponding fields in `user1`, but we can choose to specify values for "
"as many fields as we want in any order, regardless of the order of the "
"fields in the struct’s definition."
msgstr ""
"Le code dans Listing 5-7 crée également une instance de `user2` qui a une "
"valeur différente pour `email` mais qui a les mêmes valeurs pour les champs "
"`username`, `active` et `sign_in_count` comme `user1`. La partie `.user1` "
"doit venir en dernier pour spécifier que tous les champs restants devraient "
"obtenir leurs valeurs à partir des champs correspondants dans `user1`, mais "
"nous pouvons choisir de spécifier des valeurs pour autant de champs que nous "
"voulons dans n'importe quel ordre, quel que soit l'ordre des champs dans la "
"définition de struct=s."

#: src/ch05-01-defining-and-instantiating-structs.md:240
msgid ""
"Note that the struct update syntax uses `=` like an assignment; this is "
"because it moves the data, just as we saw in the [\"Moving Values\"](ch04-01-"
"what-is-ownership.md#moving-values)<!-- ignore --> section. In this example, "
"we can no longer use `user1` as a whole after creating `user2` because the "
"`ByteArray` in the `username` field of `user1` was moved into `user2`. If we "
"had given `user2` new `ByteArray` values for both `email` and `username`, "
"and thus only used the `active` and `sign_in_count` values from `user1`, "
"then `user1` would still be valid after creating `user2`. Both `active` and "
"`sign_in_count` are types that implement the `Copy` trait, so the behavior "
"we discussed in the [\"`Copy` Trait\"](ch04-01-what-is-ownership.md#the-copy-"
"trait)<!-- ignore --> section would apply."
msgstr ""
"Notez que la syntaxe de mise à jour de structure utilise `=` comme une "
"affectation; c'est parce qu'elle déplace les données, comme nous l'avons vu "
"dans la section [\"Moving Values\"](ch04-01- what-is-ownership.md#moving-"
"values)<!-- ignore -->. Dans cet exemple, nous ne pouvons plus utiliser "
"`user1` dans son ensemble après la création de `user2` parce que le "
"`ByteArray` dans le champ `username` de `user1` a été déplacé dans `user2`. "
"Si nous avions donné `user2` nouvelles `ByteArray` pour `email` et "
"`username`, et donc seulement les valeurs `active` et `sign_in_count` de "
"`user1`, alors `user1` serait toujours valide après la création de `user2`. "
"Les deux types `active` et `sign_in_count` sont des types qui implémentent "
"le trait `Copy`, de sorte que le comportement que nous avons discuté dans le "
"[\"Copier`\"](ch04-01-is-ownership)<."

#: src/ch05-01-defining-and-instantiating-structs.md:249
msgid "{{#quiz ../quizzes/ch05-01-defining-and-instantiating-structs.toml}}"
msgstr "{{#quiz../quizes/ch05-01-définissant-et-instantiant-structs.toml}}"

#: src/ch05-02-an-example-program-using-structs.md:3
msgid ""
"To understand when we might want to use structs, let’s write a program that "
"calculates the area of a rectangle. We’ll start by using single variables, "
"and then refactor the program until we’re using structs instead."
msgstr ""
"Pour comprendre quand nous pourrions vouloir utiliser des structs, laissez-"
"nous écrire un programme qui calcule la zone d'un rectangle. Nous allons "
"commencer par utiliser des variables uniques, puis refactorer le programme "
"jusqu'à ce que nous utilisions des structs à la place."

#: src/ch05-02-an-example-program-using-structs.md:5
msgid ""
"Let’s make a new project with Scarb called _rectangles_ that will take the "
"width and height of a rectangle specified in pixels and calculate the area "
"of the rectangle. Listing 5-8 shows a short program with one way of doing "
"exactly that in our project’s _src/lib.cairo_."
msgstr ""
"Laissez faire un nouveau projet avec Scarb appelé _rectangles_ qui prendra "
"la largeur et la hauteur d'un rectangle spécifié dans les pixels et "
"calculera la zone du rectangle. Listing 5-8 affiche un programme court avec "
"une façon de faire exactement cela dans notre projet_src/lib.cairo_."

#: src/ch05-02-an-example-program-using-structs.md:14
#: src/ch05-02-an-example-program-using-structs.md:56
#: src/ch05-02-an-example-program-using-structs.md:86
#: src/ch05-03-method-syntax.md:28 src/ch05-03-method-syntax.md:70
msgid "\"Area is {}\""
msgstr "\"La zone est {}\""

#: src/ch05-02-an-example-program-using-structs.md:22
msgid ""
"<span class=\"caption\">Listing 5-8: Calculating the area of a rectangle "
"specified by separate width and height variables.</span>"
msgstr ""
"<span class=\"caption\">Liste 5-8: Calcul de la surface d'un rectangle "
"spécifié par des variables de largeur et de hauteur distinctes.</span>"

#: src/ch05-02-an-example-program-using-structs.md:24
msgid "Now run the program with `scarb cairo-run`:"
msgstr "Maintenant exécutez le programme avec `scarb cairo-run`:"

#: src/ch05-02-an-example-program-using-structs.md:36
msgid ""
"This code succeeds in figuring out the area of the rectangle by calling the "
"`area` function with each dimension, but we can do more to make this code "
"clear and readable."
msgstr ""
"Ce code réussit à déterminer la zone du rectangle en appelant la fonction "
"`area` avec chaque dimension, mais nous pouvons faire plus pour rendre ce "
"code clair et lisible."

#: src/ch05-02-an-example-program-using-structs.md:38
msgid "The issue with this code is evident in the signature of `area`:"
msgstr "La question de ce code est évidente dans la signature de la zone:"

#: src/ch05-02-an-example-program-using-structs.md:44
msgid ""
"The `area` function is supposed to calculate the area of one rectangle, but "
"the function we wrote has two parameters, and it’s not clear anywhere in our "
"program that the parameters are related. It would be more readable and more "
"manageable to group width and height together. We’ve already discussed one "
"way we might do that in the [Tuple Section of Chapter 2](ch02-02-data-types."
"html#the-tuple-type)."
msgstr ""
"La fonction `area` est censée calculer la zone d'un rectangle, mais la "
"fonction que nous avons écrite a deux paramètres, et il n'est pas clair "
"nulle part dans notre programme que les paramètres sont liés. Il serait plus "
"lisible et plus gérable pour grouper la largeur et la hauteur ensemble. Nous "
"avons déjà discuté d'une manière que nous pourrions faire dans la [Section "
"Tuple du Chapitre 2](ch02-02-data-types.html#the-tuple-type)."

#: src/ch05-02-an-example-program-using-structs.md:46
msgid "Refactoring with Tuples"
msgstr "Refacturation avec Tuples"

#: src/ch05-02-an-example-program-using-structs.md:48
msgid "Listing 5-9 shows another version of our program that uses tuples."
msgstr ""
"Listing 5-9 montre une autre version de notre programme qui utilise des "
"tuples."

#: src/ch05-02-an-example-program-using-structs.md:65
msgid ""
"<span class=\"caption\">Listing 5-9: Specifying the width and height of the "
"rectangle with a tuple.</span>"
msgstr ""
"<span class=\"caption\">Liste 5-9: Spécifier la largeur et la hauteur du "
"rectangle avec un tuple.</span>"

#: src/ch05-02-an-example-program-using-structs.md:67
msgid ""
"In one way, this program is better. Tuples let us add a bit of structure, "
"and we’re now passing just one argument. But in another way, this version is "
"less clear: tuples don’t name their elements, so we have to index into the "
"parts of the tuple, making our calculation less obvious."
msgstr ""
"D'une manière, ce programme est meilleur. Tuples ajoutons un peu de "
"structure, et nous passons maintenant un seul argument. Mais d'une autre "
"manière, cette version est moins claire: tuples ne nomment pas leurs "
"éléments, donc nous devons indexer dans les parties du tuple, rendant notre "
"calcul moins évident."

#: src/ch05-02-an-example-program-using-structs.md:69
msgid ""
"Mixing up the width and height wouldn’t matter for the area calculation, but "
"if we want to calculate the difference, it would matter! We would have to "
"keep in mind that `width` is the tuple index `0` and `height` is the tuple "
"index `1`. This would be even harder for someone else to figure out and keep "
"in mind if they were to use our code. Because we haven’t conveyed the "
"meaning of our data in our code, it’s now easier to introduce errors."
msgstr ""
"Mélanger la largeur et la hauteur n'aurait pas d'importance pour le calcul "
"de la zone, mais si nous voulons calculer la différence, cela aurait de "
"l'importance! Nous devrions garder à l'esprit que `largeur` est l'indice de "
"tuple `0` et `hauteur` est l'indice de tuple `1`. Cela serait encore plus "
"difficile pour quelqu'un d'autre de comprendre et de garder à l'esprit s'ils "
"devaient utiliser notre code. Parce que nous n'avons pas transmis le sens de "
"nos données dans notre code, il est maintenant plus facile d'introduire des "
"erreurs."

#: src/ch05-02-an-example-program-using-structs.md:71
msgid "Refactoring with Structs: Adding More Meaning"
msgstr "Refactoring avec des structures : ajouter plus de signification"

#: src/ch05-02-an-example-program-using-structs.md:73
msgid ""
"We use structs to add meaning by labeling the data. We can transform the "
"tuple we’re using into a struct with a name for the whole as well as names "
"for the parts."
msgstr ""
"Nous utilisons des structures pour ajouter du sens en étiquetant les "
"données. Nous pouvons transformer le tuple que nous utilisons en une "
"structure avec un nom pour l'ensemble ainsi que des noms pour les parties."

#: src/ch05-02-an-example-program-using-structs.md:94
msgid ""
"<span class=\"caption\">Listing 5-10: Defining a `Rectangle` struct.</span>"
msgstr ""
"<span class=\"caption\">Liste 5-10: Définition d`une structure `Rectangle`.</"
"span>"

#: src/ch05-02-an-example-program-using-structs.md:96
msgid ""
"Here we’ve defined a struct and named it `Rectangle`. Inside the curly "
"brackets, we defined the fields as `width` and `height`, both of which have "
"type `u64`. Then, in `main`, we created a particular instance of `Rectangle` "
"that has a width of `30` and a height of `10`. Our `area` function is now "
"defined with one parameter, which we’ve named `rectangle` which is of type "
"`Rectangle` struct. We can then access the fields of the instance with dot "
"notation, and it gives descriptive names to the values rather than using the "
"tuple index values of `0` and `1`."
msgstr ""
"Ici, nous avons défini une structure et l'avons nommée `Rectangle`. À "
"l'intérieur des crochets, nous avons défini les champs comme `largeur` et "
"`hauteur`, tous deux ayant le type `u64`. Ensuite, dans `main`, nous avons "
"créé une instance particulière de `Rectangle` qui a une largeur de `30` et "
"une hauteur de `10`. Notre fonction `area` est maintenant définie avec un "
"paramètre, que nous avons nommé `rectangle` qui est de type `Rectangle` "
"struct. Nous pouvons alors accéder aux champs de l'instance avec la "
"notation, et il donne des noms descriptifs aux valeurs plutôt que d'utiliser "
"les valeurs de l'index de tuple `0` et `1`."

#: src/ch05-02-an-example-program-using-structs.md:98
msgid "{{#quiz ../quizzes/ch05-02-an-example-program-using-structs.toml}}"
msgstr "{{#quiz../quizes/ch05-02-an-example-program-use-structs.toml}}"

#: src/ch05-03-method-syntax.md:3
msgid ""
"_Methods_ are similar to functions: we declare them with the `fn` keyword "
"and a name, they can have parameters and a return value, and they contain "
"some code that’s run when the method is called from somewhere else. Unlike "
"functions, methods are defined within the context of a struct (or an enum "
"which we cover in [Chapter 6](./ch06-01-enums.md)), and their first "
"parameter is always `self`, which represents the instance of the type the "
"method is being called on."
msgstr ""
"_Methods_ sont similaires aux fonctions : nous les déclarons avec le mot-clé "
"`fn` et un nom, ils peuvent avoir des paramètres et une valeur de retour, et "
"ils contiennent un certain code qui s'exécute lorsque la méthode est appelée "
"d'un autre endroit. Contrairement aux fonctions, les méthodes sont définies "
"dans le contexte d'une struct (ou d'un enum que nous couvrons dans [Chapitre "
"6](./ch06-01-enums.md)), et leur premier paramètre est toujours `self`, qui "
"représente l'instance du type sur lequel la méthode est appelée."

#: src/ch05-03-method-syntax.md:5
msgid "Defining Methods"
msgstr "Définition des méthodes"

#: src/ch05-03-method-syntax.md:7
msgid ""
"Let’s change the `area` function that has a `Rectangle` instance as a "
"parameter and instead make an `area` method defined on the `Rectangle` "
"struct, as shown in Listing 5-11"
msgstr ""
"Permet de modifier la fonction `area` qui a une instance `Rectangle` comme "
"paramètre et de faire plutôt une méthode `area` définie sur la structure "
"`Rectangle`, comme indiqué dans Listing 5-11"

#: src/ch05-03-method-syntax.md:32
msgid "Listing 5-11: Defining an `area` method on the `Rectangle` struct."
msgstr ""
"Liste 5-11: Définition d'une méthode `area` sur la structure `Rectangle`."

#: src/ch05-03-method-syntax.md:34
msgid ""
"To define the function within the context of `Rectangle`, we start an `impl` "
"(implementation) block for a trait `RectangleTrait` that defines the methods "
"that can be called on a `Rectangle` instance. As impl blocks can only be "
"defined for traits and not types, we need to define this trait first - but "
"it's not meant to be used for anything else."
msgstr ""
"Pour définir la fonction dans le contexte de `Rectangle`, nous commençons un "
"bloc `impl` (implémentation) pour un trait `RectangleTrait` qui définit les "
"méthodes qui peuvent être appelées sur une instance `Rectangle`. Comme les "
"blocs impl ne peuvent être définis que pour les caractères et non pour les "
"types, nous devons d'abord définir ce trait - mais il n'est pas destiné à "
"être utilisé pour autre chose."

#: src/ch05-03-method-syntax.md:36
msgid ""
"Everything within this `impl` block will be associated with the `Rectangle` "
"type. Then we move the `area` function within the `impl` curly brackets and "
"change the first (and in this case, only) parameter to be `self` in the "
"signature and everywhere within the body. In `main`, where we called the "
"`area` function and passed `rect1` as an argument, we can instead use "
"_method syntax_ to call the `area` method on our `Rectangle` instance. The "
"method syntax goes after an instance: we add a dot followed by the method "
"name, parentheses, and any arguments."
msgstr ""
"Tout dans ce bloc `impl` sera associé au type `Rectangle`. Ensuite, nous "
"déplaçons la fonction `area` dans les crochets `impl` et changeons le "
"premier (et dans ce cas, seulement) paramètre pour être `self` dans la "
"signature et partout dans le corps. Dans `main`, où nous avons appelé la "
"fonction `area` et passé `rect1` comme argument, nous pouvons plutôt "
"utiliser _method syntaxe_ pour appeler la méthode `area` sur notre instance "
"`Rectangle`. La syntaxe de la méthode va après une instance: nous ajoutons "
"un point suivi par le nom de la méthode, les parenthèses et tous les "
"arguments."

#: src/ch05-03-method-syntax.md:38
msgid ""
"In the signature for `area`, we use `self: @Rectangle` instead of "
"`rectangle: @Rectangle`. Methods must have a parameter named `self`, for "
"their first parameter, and the type of `self` indicates the type that method "
"can be called on. Methods can take ownership of `self`, but `self` can also "
"be passed by snapshot or by reference, just like any other parameter."
msgstr ""
"Dans la signature pour `area`, nous utilisons `self: @Rectangle` au lieu de "
"`rectangle: @Rectangle`. Les méthodes doivent avoir un paramètre nommé "
"`self`, pour leur premier paramètre, et le type de `self` indique le type "
"sur lequel la méthode peut être appelée. Les méthodes peuvent prendre la "
"propriété de `self`, mais `self` peut également être passé par instantané ou "
"par référence, comme tout autre paramètre."

#: src/ch05-03-method-syntax.md:41
msgid ""
"There is no direct link between a type and a trait. Only the type of the "
"`self` parameter of a method defines the type from which this method can be "
"called. That means, it is technically possible to define methods on multiple "
"types in a same trait (mixing `Rectangle` and `Circle` methods, for "
"example). But **this is not a recommended practice** as it can lead to "
"confusion."
msgstr ""
"Il n'y a pas de lien direct entre un type et un trait. Seul le type de "
"paramètre `self` d'une méthode définit le type à partir duquel cette méthode "
"peut être appelée. Cela signifie qu'il est techniquement possible de définir "
"des méthodes sur plusieurs types dans un même trait (mélanger les méthodes "
"`Rectangle` et `Circle`, par exemple)."

#: src/ch05-03-method-syntax.md:43
msgid ""
"The main reason for using methods instead of functions, in addition to "
"providing method syntax, is for organization. We’ve put all the things we "
"can do with an instance of a type in one `impl` block rather than making "
"future users of our code search for capabilities of `Rectangle` in various "
"places in the library we provide."
msgstr ""
"La principale raison d'utiliser des méthodes au lieu de fonctions, en plus "
"de fournir la syntaxe des méthodes, est pour l'organisation. Nous avons mis "
"toutes les choses que nous pouvons faire avec une instance d'un type dans un "
"bloc `impl` plutôt que de faire de futurs utilisateurs de notre recherche de "
"code des capacités de `Rectangle` dans différents endroits dans la "
"bibliothèque que nous fournissons."

#: src/ch05-03-method-syntax.md:45
msgid "The `generate_trait` Attribute"
msgstr "L'attribut `generate_trait`"

#: src/ch05-03-method-syntax.md:47
msgid ""
"If you are familiar with Rust, you may find Cairo's approach confusing "
"because methods cannot be defined directly on types. Instead, you must "
"define a [trait](./ch08-02-traits-in-cairo.md) and an implementation of this "
"trait associated with the type for which the method is intended. However, "
"defining a trait and then implementing it to define methods on a specific "
"type is verbose, and unnecessary: the trait itself will not be reused."
msgstr ""
"Si vous connaissez Rust, vous trouverez peut-être l'approche du Caire "
"confuse parce que les méthodes ne peuvent pas être définies directement sur "
"les types. Au lieu de cela, vous devez définir un [caractère](./ch08-02-"
"trats-in-cairo.md) et une implémentation de ce trait associé au type auquel "
"la méthode est destinée. Cependant, définir un trait et ensuite le mettre en "
"œuvre pour définir des méthodes sur un type spécifique est verbeux, et "
"inutile : le trait lui-même ne sera pas réutilisé."

#: src/ch05-03-method-syntax.md:50
msgid ""
"So, to avoid defining useless traits, Cairo provides the `#[generate_trait]` "
"attribute to add above a trait implementation, which tells to the compiler "
"to generate the corresponding trait definition for you, and let's you focus "
"on the implementation only. Both approaches are equivalent, but it's "
"considered a best practice to not explicitly define traits in this case."
msgstr ""
"Donc, pour éviter de définir des traits inutiles, le Caire fournit "
"l'attribut `#[generate_trait]` à ajouter au-dessus d'une implémentation de "
"caractères, qui dit au compilateur de générer la définition de caractères "
"correspondante pour vous, et vous laissez vous concentrer sur "
"l'implémentation seulement. Les deux approches sont équivalentes, mais il "
"est considéré comme une meilleure pratique de ne pas définir explicitement "
"des caractères dans ce cas."

#: src/ch05-03-method-syntax.md:52
msgid "The previous example can also be written as follows:"
msgstr "L'exemple précédent peut également être écrit comme suit:"

#: src/ch05-03-method-syntax.md:75
msgid ""
"Let's use this `#[generate_trait]` in the following chapters to make our "
"code cleaner."
msgstr ""
"Utilisons ce `#[generate_trait]` dans les chapitres suivants pour rendre "
"notre code plus propre."

#: src/ch05-03-method-syntax.md:77
msgid "Snapshots and References"
msgstr "Snapshots et références"

#: src/ch05-03-method-syntax.md:79
msgid ""
"As the `area` method does not modify the calling instance, `self` is "
"declared as a snapshot of a `Rectangle` instance with the `@` snapshot "
"operator. But, of course, we can also define some methods receiving a "
"mutable reference of this instance, to be able to modify it."
msgstr ""
"Comme la méthode `area` ne modifie pas l'instance d'appel, `self` est "
"déclaré comme un instantané d'une instance `Rectangle` avec l'opérateur `@` "
"snapshot. Mais, bien sûr, nous pouvons également définir certaines méthodes "
"recevant une référence mutable de cette instance, pour pouvoir la modifier."

#: src/ch05-03-method-syntax.md:81
msgid ""
"Let's write a new method `scale` which resizes a rectangle of a `factor` "
"given as parameter:"
msgstr ""
"Écrivons une nouvelle méthode `scale` qui redimensionne un rectangle d'un "
"`facteur` donné en paramètre:"

#: src/ch05-03-method-syntax.md:98
msgid "\"The new size is (width: {}, height: {})\""
msgstr "\"La nouvelle taille est (largeur: {}, hauteur: {})\""

#: src/ch05-03-method-syntax.md:102
msgid ""
"It is also possible to define a method which takes ownership of the instance "
"by using just `self` as the first parameter but it is rare. This technique "
"is usually used when the method transforms `self` into something else and "
"you want to prevent the caller from using the original instance after the "
"transformation."
msgstr ""
"Il est également possible de définir une méthode qui prend la propriété de "
"l'instance en utilisant simplement `self` comme premier paramètre mais il "
"est rare. Cette technique est habituellement utilisée lorsque la méthode se "
"transforme en quelque chose d'autre et vous voulez empêcher l'appelant "
"d'utiliser l'instance originale après la transformation."

#: src/ch05-03-method-syntax.md:104
msgid ""
"Look at the [Understanding Ownership](ch04-00-understanding-ownership.md) "
"chapter for more details about these important notions."
msgstr ""
"Consultez le chapitre [Comprendre la propriété](ch04-00-comprendre la "
"propriété.md) pour plus de détails sur ces notions importantes."

#: src/ch05-03-method-syntax.md:106
msgid "Methods with Several Parameters"
msgstr "Méthodes avec plusieurs paramètres"

#: src/ch05-03-method-syntax.md:108
msgid ""
"Let’s practice using methods by implementing another method on the "
"`Rectangle` struct. This time we want to write the method `can_hold` which "
"accepts another instance of `Rectangle` and returns `true` if this rectangle "
"can fit completely within self; otherwise, it should return false."
msgstr ""
"Cette fois, nous voulons écrire la méthode `can_hold` qui accepte une autre "
"instance de `Rectangle` et renvoie `true` si ce rectangle peut s'adapter "
"complètement en soi; sinon, il devrait retourner faux."

#: src/ch05-03-method-syntax.md:132
msgid "\"Can rect1 hold rect2? {}\""
msgstr "\"Peut-on rect1 tenir rect2? {}\""

#: src/ch05-03-method-syntax.md:133
msgid "\"Can rect1 hold rect3? {}\""
msgstr "\"Peut-on rect1 tenir rect3? {}\""

#: src/ch05-03-method-syntax.md:137
msgid "Here, we expect that `rect1` can hold `rect2` but not `rect3`."
msgstr ""
"Ici, nous nous attendons à ce que `rect1` puisse tenir `rect2` mais pas "
"`rect3`."

#: src/ch05-03-method-syntax.md:139
msgid "Associated functions"
msgstr "Fonctions associées"

#: src/ch05-03-method-syntax.md:141
msgid ""
"We call _associated functions_ all functions that are defined inside an "
"`impl` block that are associated to a specific type. While this is not "
"enforced by the compiler, it is a good practice to keep associated functions "
"related to the same type in the same `impl` block - for example, all "
"functions related to `Rectangle` will be grouped in the same `impl` block "
"for `RectangleTrait`."
msgstr ""
"Nous appelons les fonctions _associées_ toutes les fonctions qui sont "
"définies à l'intérieur d'un bloc `impl` qui sont associées à un type "
"spécifique. Bien que cela ne soit pas mis en œuvre par le compilateur, c'est "
"une bonne pratique de garder les fonctions associées liées au même type dans "
"le même bloc `impl` - par exemple, toutes les fonctions liées à `Rectangle` "
"seront regroupées dans le même bloc `impl` pour `RectangleTrait`."

#: src/ch05-03-method-syntax.md:143
msgid ""
"Methods are a special kind of associated function, but we can also define "
"associated functions that don’t have `self` as their first parameter (and "
"thus are not methods) because they don’t need an instance of the type to "
"work with, but are still associated with that type."
msgstr ""
"Les méthodes sont un type particulier de fonction associée, mais nous "
"pouvons également définir les fonctions associées qui ne possèdent pas de "
"`self` comme premier paramètre (et ne sont donc pas des méthodes) parce "
"qu'elles n'ont pas besoin d'une instance du type avec lequel travailler, "
"mais sont toujours associées à ce type."

#: src/ch05-03-method-syntax.md:145
msgid ""
"Associated functions that aren’t methods are often used for constructors "
"that will return a new instance of the type. These are often called `new`, "
"but `new` isn’t a special name and isn’t built into the language. For "
"example, we could choose to provide an associated function named `square` "
"that would have one dimension parameter and use that as both width and "
"height, thus making it easier to create a square `Rectangle` rather than "
"having to specify the same value twice:"
msgstr ""
"Les fonctions associées qui sont des méthodes sont souvent utilisées pour "
"les constructeurs qui retourneront une nouvelle instance du type. Elles sont "
"souvent appelées `new`, mais `new` n`est pas un nom spécial et n`est pas "
"intégré dans la langue. Par exemple, nous pourrions choisir de fournir une "
"fonction associée nommée `square` qui aurait un paramètre de dimension et "
"utiliserait cela à la fois comme largeur et hauteur, ce qui rendrait plus "
"facile de créer un carré `Rectangle` plutôt que d`avoir à spécifier la même "
"valeur deux fois:"

#: src/ch05-03-method-syntax.md:153
msgid ""
"Let's create the function `new` which creates a `Rectangle` from a `width` "
"and a `height`, `square` which creates a square `Rectangle` from a `size` "
"and `avg` which computes the average of two `Rectangle` instances:"
msgstr ""
"Créons la fonction `new` qui crée un `Rectangle` à partir d`une `largeur` et "
"un `hauteur`, `carré` qui crée un `Rectangle` carré à partir d`une `size` et "
"`avg` qui calcule la moyenne de deux instances `Rectangle`:"

#: src/ch05-03-method-syntax.md:182
msgid "\"The average Rectangle of {:?} and {:?} is {:?}\""
msgstr "\"Le rectangle moyen de {:?} et {:?} est {:?}\""

#: src/ch05-03-method-syntax.md:190
msgid ""
"To call the `square` associated function, we use the `::` syntax with the "
"struct name; `let sq = Rectangle::square(3);` is an example. This function "
"is namespaced by the struct: the `::` syntax is used for both associated "
"functions and namespaces created by modules. We’ll discuss modules in "
"[Chapter 7](./ch07-02-defining-modules-to-control-scope.md)."
msgstr ""
"Pour appeler la fonction associée `square`, nous utilisons la syntaxe `:` "
"avec le nom de la structure; `let sq = Rectangle::square(3);` est un "
"exemple. Cette fonction est espacée par le nom de la structure: la syntaxe `:"
"` est utilisée pour les fonctions associées et les espaces de noms créés par "
"les modules. Nous allons discuter des modules dans [Chapitre 7](./ch07-02-"
"defining-modules-to-control-scope.md)."

#: src/ch05-03-method-syntax.md:196
msgid ""
"Note that the `avg` function could also be written as a method with `self` "
"as the first rectangle. In this case, instead of using the method with "
"`RectangleTrait::avg(@rect1, @rect2)`, it would be called with `rect1."
"avg(rect2)`."
msgstr ""
"Notez que la fonction `avg` pourrait également être écrite comme une méthode "
"avec `self` comme premier rectangle. Dans ce cas, au lieu d'utiliser la "
"méthode avec `RectangleTrait::avg(@rect1, @rect2)`, elle serait appelée avec "
"`rect1.avg(rect2)`."

#: src/ch05-03-method-syntax.md:198
msgid "Multiple Traits and `impl` Blocks"
msgstr "Blocks à caractères multiples et \"impl`"

#: src/ch05-03-method-syntax.md:200
msgid ""
"Each struct is allowed to have multiple `trait` and `impl` blocks. For "
"example, the following code is equivalent to the code shown in the _Methods "
"with several parameters_ section, which has each method in its own `trait` "
"and `impl` blocks."
msgstr ""
"Chaque structure est autorisée à avoir plusieurs blocs `trait` et `impl`. "
"Par exemple, le code suivant est équivalent au code affiché dans les "
"_Méthods avec plusieurs paramètres_ section, qui a chaque méthode dans ses "
"propres blocs `trait` et `impl`."

#: src/ch05-03-method-syntax.md:219
msgid ""
"There’s no strong reason to separate these methods into multiple `trait` and "
"`impl` blocks here, but this is valid syntax."
msgstr ""
"Il n'y a pas de raison forte de séparer ces méthodes en plusieurs blocs "
"\"trait\" et \"impl\" ici, mais c'est une syntaxe valide."

#: src/ch05-03-method-syntax.md:222
msgid "{{#quiz ../quizzes/ch05-03-method-syntax.toml}}"
msgstr "{{#quiz../quizes/ch05-03-method-syntax.toml}}"

#: src/ch06-00-enums-and-pattern-matching.md
msgid ""
"In this chapter, we’ll look at _enumerations_, also referred to as _enums_. "
"Enums allow you to define a type by enumerating its possible _variants_. "
"First, we’ll define and use an enum to show how an enum can encode meaning "
"along with data. Next, we’ll explore a particularly useful enum, called "
"`Option`, which expresses that a value can be either something or nothing. "
"Finally, we’ll look at how pattern matching in the `match` expression makes "
"it easy to run different code for different values of an enum."
msgstr ""
"Dans ce chapitre, nous allons regarder _énumérations_, également appelé "
"_enums_. Les enums vous permettent de définir un type en énumérant ses "
"possibles _variants_. D'abord, nous allons définir et utiliser un enum pour "
"montrer comment un enum peut encoder la signification avec les données. "
"Ensuite, nous allons explorer un enum particulièrement utile, appelé "
"`Option`, qui exprime qu'une valeur peut être quelque chose ou rien. Enfin, "
"nous allons regarder comment la correspondance des motifs dans l'expression "
"`match` permet d'exécuter facilement un code différent pour différentes "
"valeurs d'un enum."

#: src/ch06-01-enums.md:3
msgid ""
"Enums, short for \"enumerations,\" are a way to define a custom data type "
"that consists of a fixed set of named values, called _variants_. Enums are "
"useful for representing a collection of related values where each value is "
"distinct and has a specific meaning."
msgstr ""
"Les Enums, abrégés pour les \"énumérations\", sont un moyen de définir un "
"type de données personnalisé qui consiste en un ensemble fixe de valeurs "
"nommées, appelé _variants_. Les Enums sont utiles pour représenter une "
"collection de valeurs liées où chaque valeur est distincte et a une "
"signification spécifique."

#: src/ch06-01-enums.md:5
msgid "Enum Variants and Values"
msgstr "Variantes et valeurs de l'Enum"

#: src/ch06-01-enums.md:7
msgid "Here's a simple example of an enum:"
msgstr "Voici un exemple simple d'un enum:"

#: src/ch06-01-enums.md:19
msgid ""
"In this example, we've defined an enum called `Direction` with four "
"variants: `North`, `East`, `South`, and `West`. The naming convention is to "
"use PascalCase for enum variants. Each variant represents a distinct value "
"of the `Direction` type. In this particular example, variants don't have any "
"associated value. One variant can be instantiated using this syntax:"
msgstr ""
"Dans cet exemple, nous avons défini un enum appelé `Direction` avec quatre "
"variantes: `North`, `East`, `South` et `West`. La convention de nommage est "
"d'utiliser PascalCase pour les variantes enum. Chaque variante représente "
"une valeur distincte du type `Direction`. Dans cet exemple particulier, les "
"variantes n'ont aucune valeur associée. Une variante peut être instantanée "
"en utilisant cette syntaxe:"

#: src/ch06-01-enums.md:36
msgid ""
"Now let's imagine that our variants have associated values, that store the "
"exact degree of the direction. We can define a new `Direction` enum:"
msgstr ""
"Imaginons maintenant que nos variantes ont des valeurs associées, qui "
"stockent le degré exact de la direction. Nous pouvons définir un nouvel enum "
"`Direction`:"

#: src/ch06-01-enums.md:52
msgid "and instantiate it as follows:"
msgstr "et l'actualiser comme suit:"

#: src/ch06-01-enums.md:68
msgid ""
"In this code, each variant is associated with a `u128` value, representing "
"the direction in degrees. In the next example, we will see that it is also "
"possible to associate different data types with each variant."
msgstr ""
"Dans ce code, chaque variante est associée à une valeur \"u128`, "
"représentant la direction en degrés. Dans l'exemple suivant, nous verrons "
"qu'il est également possible d'associer différents types de données à chaque "
"variante."

#: src/ch06-01-enums.md:70
msgid ""
"It's easy to write code that acts differently depending on the variant of an "
"enum instance, in this example to run specific code according to a "
"direction. You can learn more about it in the [Match Control Flow Construct]"
"(./ch06-02-the-match-control-flow-construct.md) section."
msgstr ""
"Il est facile d'écrire un code qui agit différemment selon la variante d'une "
"instance enum, dans cet exemple pour exécuter un code spécifique selon une "
"direction. Vous pouvez en apprendre plus à ce sujet dans la section [Match "
"Control Flow Construct](./ch06-02-the-match-control-flow-construct.md)."

#: src/ch06-01-enums.md:74
msgid "Enums Combined with Custom Types"
msgstr "Enums combinés avec des types personnalisés"

#: src/ch06-01-enums.md:76
msgid ""
"Enums can also be used to store more interesting custom data associated with "
"each variant. For example:"
msgstr ""
"Les enums peuvent également être utilisés pour stocker des données "
"personnalisées plus intéressantes associées à chaque variante. Par exemple:"

#: src/ch06-01-enums.md:87
msgid ""
"In this example, the `Message` enum has three variants: `Quit`, `Echo`, and "
"`Move`, all with different types:"
msgstr ""
"Dans cet exemple, l'enum `Message` a trois variantes: `Quit`, `Echo` et "
"`Move`, toutes avec différents types:"

#: src/ch06-01-enums.md:89
msgid "`Quit` doesn't have any associated value."
msgstr "`Quit` n'a aucune valeur associée."

#: src/ch06-01-enums.md:90
msgid "`Echo` is a single `felt252`."
msgstr "`Echo` est un seul `felt252`."

#: src/ch06-01-enums.md:91
msgid "`Move` is a tuple of two `u128` values."
msgstr "`Move` est une tuple de deux valeurs 'u128`."

#: src/ch06-01-enums.md:93
msgid ""
"You could even use a Struct or another enum you defined inside one of your "
"enum variants."
msgstr ""
"Vous pourriez même utiliser un Struct ou un autre enum que vous avez défini "
"à l'intérieur d'une de vos variantes d'enum."

#: src/ch06-01-enums.md:95
msgid "Trait Implementations for Enums"
msgstr "Implémentations de caractères pour les Enums"

#: src/ch06-01-enums.md:97
msgid ""
"In Cairo, you can define traits and implement them for your custom enums. "
"This allows you to define methods and behaviors associated with the enum. "
"Here's an example of defining a trait and implementing it for the previous "
"`Message` enum:"
msgstr ""
"Au Caire, vous pouvez définir des traits et les implémenter pour vos enums "
"personnalisés. Cela vous permet de définir des méthodes et des comportements "
"associés à l'enum. Voici un exemple de définir un trait et de l'implémenter "
"pour le précédent `Message` enum:"

#: src/ch06-01-enums.md:107 src/ch06-01-enums.md:133
msgid "\"quitting\""
msgstr "\"soutir\""

#: src/ch06-01-enums.md:108 src/ch06-01-enums.md:134
msgid "\"echoing {}\""
msgstr "\"choisir {}\""

#: src/ch06-01-enums.md:109 src/ch06-01-enums.md:135
msgid "\"moving from {} to {}\""
msgstr "\"déplacement de {} à {}\""

#: src/ch06-01-enums.md:115
msgid ""
"In this example, we implemented the `Processing` trait for `Message`. Here "
"is how it could be used to process a Quit message:"
msgstr ""
"Dans cet exemple, nous avons mis en œuvre le caractère `Processing` pour "
"`Message`. Voici comment il pourrait être utilisé pour traiter un message "
"Quitter:"

#: src/ch06-01-enums.md:147
msgid "Running this code would print `quitting`."
msgstr "L'exécution de ce code serait l'impression d'un \"quitting\"."

#: src/ch06-01-enums.md:149
msgid "The `Option` Enum and Its Advantages"
msgstr "L'Enum \"Option\" et ses avantages"

#: src/ch06-01-enums.md:151
msgid ""
"The `Option` enum is a standard Cairo enum that represents the concept of an "
"optional value. It has two variants: `Some: T` and `None`. `Some: T` "
"indicates that there's a value of type `T`, while `None` represents the "
"absence of a value."
msgstr ""
"L'enum `Option` est un enum standard du Caire qui représente le concept "
"d'une valeur optionnelle. Il a deux variantes: `Some: T` et `None`. `Some: "
"T` indique qu'il y a une valeur de type `T`, alors que `None` représente "
"l'absence d'une valeur."

#: src/ch06-01-enums.md:160
msgid ""
"The `Option` enum is helpful because it allows you to explicitly represent "
"the possibility of a value being absent, making your code more expressive "
"and easier to reason about. Using `Option` can also help prevent bugs caused "
"by using uninitialized or unexpected `null` values."
msgstr ""
"L'enum `Option` est utile car il vous permet de représenter explicitement la "
"possibilité qu'une valeur soit absente, ce qui rend votre code plus "
"expressif et plus facile à raisonner. L'utilisation de `Option` peut "
"également aider à prévenir les bogues causés par l'utilisation de valeurs "
"`null` non initialisées ou inattendues."

#: src/ch06-01-enums.md:162
msgid ""
"To give you an example, here is a function which returns the index of the "
"first element of an array with a given value, or `None` if the element is "
"not present."
msgstr ""
"Pour vous donner un exemple, voici une fonction qui renvoie l'index du "
"premier élément d'un tableau avec une valeur donnée, ou `Aucun` si l'élément "
"n'est pas présent."

#: src/ch06-01-enums.md:164
msgid "We are demonstrating two approaches for the above function:"
msgstr "Nous démontrons deux approches pour la fonction ci-dessus:"

#: src/ch06-01-enums.md:166
msgid "Recursive approach with `find_value_recursive`."
msgstr "Approche récursive avec `find_value_recursive`."

#: src/ch06-01-enums.md:167
msgid "Iterative approach with `find_value_iterative`."
msgstr "Approche itérative avec `find_value_iterative`."

#: src/ch06-01-enums.md:199
msgid ""
"Enums can be useful in many situations, especially when using the `match` "
"flow construct that we just used. We will describe it in the next section."
msgstr ""
"Les enums peuvent être utiles dans de nombreuses situations, en particulier "
"lors de l'utilisation de la construction de flux `match` que nous venons "
"d'utiliser. Nous allons le décrire dans la section suivante."

#: src/ch06-01-enums.md:201
msgid ""
"Other enums are used very often, such as the `Result` enum, allowing to "
"handle errors gracefully. We will explain the `Result` enum in detail in the "
"[\"Error Handling\"](./ch09-02-recoverable-errors.md#the-result-enum) "
"chapter."
msgstr ""
"D'autres enums sont utilisés très souvent, comme le `Result` enum, "
"permettant de gérer les erreurs gracieusement. Nous allons expliquer le "
"`Result` enum en détail dans le chapitre [\"Error Handling\"](./ch09-02-"
"recoverable-errors.md#the-result-enum)."

#: src/ch06-01-enums.md:203
msgid "{{#quiz ../quizzes/ch06-01-enums.toml}}"
msgstr "{{#quiz../quizes/ch06-01-enums.toml}}"

#: src/ch06-02-the-match-control-flow-construct.md:3
msgid ""
"Cairo has an extremely powerful control flow construct called `match` that "
"allows you to compare a value against a series of patterns and then execute "
"code based on which pattern matches. Patterns can be made up of literal "
"values, variable names, wildcards, and many other things. The power of "
"`match` comes from the expressiveness of the patterns and the fact that the "
"compiler confirms that all possible cases are handled."
msgstr ""
"Le Caire dispose d'une construction de flux de contrôle extrêmement "
"puissante appelée `match` qui vous permet de comparer une valeur à une série "
"de motifs et d'exécuter le code basé sur lequel les motifs correspondent. "
"Patterns peuvent être constitués de valeurs littérales, noms de variables, "
"wildcards, et beaucoup d'autres choses. La puissance de `match` vient de "
"l'expressivité des motifs et le fait que le compilateur confirme que tous "
"les cas possibles sont traités."

#: src/ch06-02-the-match-control-flow-construct.md:5
msgid ""
"Think of a `match` expression as being like a coin-sorting machine: coins "
"slide down a track with variously sized holes along it, and each coin falls "
"through the first hole it encounters that it fits into. In the same way, "
"values go through each pattern in a match, and at the first pattern the "
"value “fits”, the value falls into the associated code block to be used "
"during execution."
msgstr ""
"Pensez à une expression `match` comme étant une machine de tri de pièces: "
"les pièces glissent sur une piste avec des trous de différentes tailles le "
"long, et chaque pièce tombe à travers le premier trou qu'il rencontre qu'il "
"s'intègre. De la même manière, les valeurs passent par chaque motif dans un "
"match, et au premier motif la valeur --fits--, la valeur tombe dans le bloc "
"de code associé à utiliser pendant l'exécution."

#: src/ch06-02-the-match-control-flow-construct.md:7
msgid ""
"Speaking of coins, let’s use them as an example using `match`! We can write "
"a function that takes an unknown US coin and, in a similar way as the "
"counting machine, determines which coin it is and returns its value in "
"cents, as shown in Listing 6-1."
msgstr ""
"En parlant de pièces de monnaie, nous pouvons les utiliser comme un exemple "
"en utilisant `match`! Nous pouvons écrire une fonction qui prend une pièce "
"américaine inconnue et, de la même manière que la machine de comptage, "
"détermine quelle pièce il est et retourne sa valeur en cents, comme indiqué "
"dans Listing 6-1."

#: src/ch06-02-the-match-control-flow-construct.md:27
msgid ""
"<span class=\"caption\">Listing 6-1: An enum and a `match` expression that "
"has the variants of the enum as its patterns</span>"
msgstr ""
"<span class=\"caption\">Liste 6-1: Un enum et une expression `match` qui a "
"les variantes de l'enum comme ses motifs</span>"

#: src/ch06-02-the-match-control-flow-construct.md:29
msgid ""
"Let’s break down the `match` expression in the `value_in_cents` function. "
"First, we list the `match` keyword followed by an expression, which in this "
"case is the value `coin`. This seems very similar to a conditional "
"expression used with the `if` statement, but there’s a big difference: with "
"`if`, the condition needs to evaluate to a boolean value, but here it can be "
"any type. The type of `coin` in this example is the `Coin` enum that we "
"defined on the first line."
msgstr ""
"Tout d'abord, nous listons le mot-clé `match` suivi d'une expression, qui "
"dans ce cas est la valeur `coin`. Cela semble très similaire à une "
"expression conditionnelle utilisée avec l'instruction `if`, mais il ya une "
"grande différence: avec `if`, la condition doit évaluer à une valeur "
"booléenne, mais ici il peut être n'importe quel type. Le type de `coin` dans "
"cet exemple est l'enum `Coin` que nous avons défini sur la première ligne."

#: src/ch06-02-the-match-control-flow-construct.md:31
msgid ""
"Next are the `match` arms. An arm has two parts: a pattern and some code. "
"The first arm here has a pattern that is the value `Coin::Penny` and then "
"the `=>` operator that separates the pattern and the code to run. The code "
"in this case is just the value `1`. Each arm is separated from the next with "
"a comma."
msgstr ""
"Ensuite, les bras `match`. Un bras a deux parties: un motif et un code. Le "
"premier bras ici a un motif qui est la valeur `Coin::Penny` et puis "
"l'opérateur `=>` qui sépare le motif et le code à exécuter. Le code dans ce "
"cas est juste la valeur `1`. Chaque bras est séparé du suivant avec une "
"virgule."

#: src/ch06-02-the-match-control-flow-construct.md:33
msgid ""
"When the `match` expression executes, it compares the resultant value "
"against the pattern of each arm, in the order they are given. If a pattern "
"matches the value, the code associated with that pattern is executed. If "
"that pattern doesn’t match the value, execution continues to the next arm, "
"much as in a coin-sorting machine. We can have as many arms as we need: in "
"the above example, our `match` has four arms."
msgstr ""
"Lorsque l'expression `match` s'exécute, elle compare la valeur résultante au "
"motif de chaque bras, dans l'ordre où ils sont donnés. Si un motif "
"correspond à la valeur, le code associé à ce motif est exécuté. Si ce motif "
"ne correspond pas à la valeur, l'exécution continue au bras suivant, tout "
"comme dans une machine de tri de pièces. Nous pouvons avoir autant d'armes "
"que nous avons besoin: dans l'exemple ci-dessus, notre `match` a quatre bras."

#: src/ch06-02-the-match-control-flow-construct.md:35
msgid ""
"The code associated with each arm is an expression, and the resultant value "
"of the expression in the matching arm is the value that gets returned for "
"the entire match expression."
msgstr ""
"Le code associé à chaque bras est une expression, et la valeur résultante de "
"l'expression dans le bras correspondant est la valeur qui est retournée pour "
"l'expression de match entière."

#: src/ch06-02-the-match-control-flow-construct.md:37
msgid ""
"We don’t typically use curly brackets if the `match` arm code is short, as "
"it is in our example where each arm just returns a value. If you want to run "
"multiple lines of code in a `match` arm, you must use curly brackets, with a "
"comma following the arm. For example, the following code prints “Lucky "
"penny!” every time the method is called with a `Coin::Penny`, but still "
"returns the last value of the block, `1`:"
msgstr ""
"Nous n'utilisons généralement pas des crochets bouclés si le code de bras "
"`match` est court, comme c'est le cas dans notre exemple où chaque bras "
"retourne juste une valeur. Si vous voulez exécuter plusieurs lignes de code "
"dans un bras `match`, vous devez utiliser des crochets bouclés, avec une "
"virgule qui suit le bras. Par exemple, le code suivant imprime un penny de "
"Lucky!"

#: src/ch06-02-the-match-control-flow-construct.md:43
msgid "\"Lucky penny!\""
msgstr "\"Penny Lucky!\""

#: src/ch06-02-the-match-control-flow-construct.md:53
msgid "Patterns That Bind to Values"
msgstr "Les modèles qui s'attachent aux valeurs"

#: src/ch06-02-the-match-control-flow-construct.md:55
msgid ""
"Another useful feature of `match` arms is that they can bind to the parts of "
"the values that match the pattern. This is how we can extract values out of "
"enum variants."
msgstr ""
"Une autre caractéristique utile des bras `match` est qu'ils peuvent se lier "
"aux parties des valeurs qui correspondent au motif. C'est ainsi que nous "
"pouvons extraire des valeurs des variantes d'enum."

#: src/ch06-02-the-match-control-flow-construct.md:57
msgid ""
"As an example, let’s change one of our enum variants to hold data inside it. "
"From 1999 through 2008, the United States minted quarters with different "
"designs for each of the 50 states on one side. No other coins got state "
"designs, so only quarters have this extra value. We can add this information "
"to our `enum` by changing the `Quarter` variant to include a `UsState` value "
"stored inside it, which we’ve done in Listing 6-2."
msgstr ""
"De 1999 à 2008, les États-Unis ont modifié les quartiers avec des "
"conceptions différentes pour chacun des 50 états d'un côté. Aucune autre "
"pièce n'a obtenu des conceptions d'état, donc seuls les quartiers ont cette "
"valeur supplémentaire. Nous pouvons ajouter cette information à notre `enum` "
"en changeant la variante `Quarter` pour inclure une valeur `UsState` stockée "
"à l'intérieur, ce que nous avons fait dans la liste 6-2."

#: src/ch06-02-the-match-control-flow-construct.md:61
msgid "// Debug so we can inspect the state in a minute\n"
msgstr "// Déboguer pour que nous puissions inspecter l'état dans une minute\n"

#: src/ch06-02-the-match-control-flow-construct.md:76
msgid ""
"<span class=\"caption\">Listing 6-2: A `Coin` enum in which the `Quarter` "
"variant also holds a `UsState` value</span>"
msgstr ""
"<span class=\"caption\">Liste 6-2: Un enum `Coin` dans lequel la variante "
"`Quarter` détient également une valeur `UsState`</span>"

#: src/ch06-02-the-match-control-flow-construct.md:78
msgid ""
"Let’s imagine that a friend is trying to collect all 50 state quarters. "
"While we sort our loose change by coin type, we’ll also call out the name of "
"the state associated with each quarter so that if it’s one our friend "
"doesn’t have, they can add it to their collection."
msgstr ""
"Imaginons qu'un ami essaie de rassembler les 50 quartiers de l'état. Alors "
"que nous trions notre changement lâche par type de pièce, nous appellerons "
"aussi le nom de l'état associé à chaque quartier de sorte que si il est un "
"de nos amis n'ont pas, ils peuvent l'ajouter à leur collection."

#: src/ch06-02-the-match-control-flow-construct.md:80
msgid ""
"In the `match` expression for this code, we add a variable called `state` to "
"the pattern that matches values of the variant `Coin::Quarter`. When a "
"`Coin::Quarter` matches, the `state` variable will bind to the value of that "
"quarter’s state. Then we can use `state` in the code for that arm, like so:"
msgstr ""
"Dans l'expression `match` pour ce code, nous ajoutons une variable appelée "
"`state` au motif qui correspond aux valeurs de la variante `Coin::Quarter`. "
"Lorsqu'une `Coin::Quarter` correspond, la variable `state` se lie à la "
"valeur de cet état de quart. Ensuite, nous pouvons utiliser `state` dans le "
"code pour ce bras, comme ceci:"

#: src/ch06-02-the-match-control-flow-construct.md:89
msgid "\"State quarter from {:?}!\""
msgstr "\"Quartier d'État de {:?}!\""

#: src/ch06-02-the-match-control-flow-construct.md:96
msgid ""
"Because `state` is an `UsState` enum which implements the `Debug` trait, we "
"can print `state` value with `println!` macro."
msgstr ""
"Parce que `state` est un enum `UsState` qui implémente le caractère `Debug`, "
"nous pouvons imprimer `state` valeur avec `println!` macro."

#: src/ch06-02-the-match-control-flow-construct.md:98
msgid ""
"Note: `{:?}` is a special formatting syntax that allows to print a debug "
"form of the parameter passed to the `println!` macro. You can find more "
"information about it in [Appendix C](./appendix-03-derivable-traits."
"html#debug-for-printing-and-debugging)."
msgstr ""
"Note : `{:?}` est une syntaxe de formatage spéciale qui permet d'imprimer "
"une forme de débogage du paramètre passé à la macro `println!`. Vous pouvez "
"trouver plus d'informations à ce sujet dans [Appendix C](./appendix-03-"
"derivable-traits.html#debug-for-printing-and-debugging)."

#: src/ch06-02-the-match-control-flow-construct.md:100
msgid ""
"If we were to call `value_in_cents(Coin::Quarter(UsState::Alaska))`, `coin` "
"would be `Coin::Quarter(UsState::Alaska)`. When we compare that value with "
"each of the match arms, none of them match until we reach `Coin::"
"Quarter(state)`. At that point, the binding for `state` will be the value "
"`UsState::Alaska`. We can then use that binding in `println!` macro, thus "
"getting the inner state value out of the `Coin` enum variant for `Quarter`."
msgstr ""
"Si nous devions appeler `value_in_cents(Coin::Quarter(UsState::Alaska)`, "
"`coin` serait `Coin::Quarter(UsState::Alaska)`. Lorsque nous comparons cette "
"valeur avec chacun des bras de correspondance, aucun d'entre eux ne "
"correspond jusqu'à ce que nous atteignions `Coin::Quarter(state)`. À ce "
"moment, la liaison pour `state` sera la valeur `UsState:::Alaska`. Nous "
"pouvons alors utiliser cette liaison dans la macro `println!`, afin "
"d'obtenir la valeur de l'état intérieur de la variante `Coin` enum pour "
"`Quarter`."

#: src/ch06-02-the-match-control-flow-construct.md:104
msgid "Matching with `Option<T>`"
msgstr "Correspondance avec `Option<T>`"

#: src/ch06-02-the-match-control-flow-construct.md:106
msgid ""
"In the previous section, we wanted to get the inner `T` value out of the "
"`Some` case when using `Option<T>`; we can also handle `Option<T>` using "
"`match`, as we did with the `Coin` enum! Instead of comparing coins, we’ll "
"compare the variants of `Option<T>`, but the way the `match` expression "
"works remains the same."
msgstr ""
"Dans la section précédente, nous voulions obtenir la valeur `T` intérieure "
"de l`affaire `Some` en utilisant `Option<T>`; nous pouvons également gérer "
"`Option<T>` en utilisant `match`, comme nous l`avons fait avec l`enum "
"`Coin`! Au lieu de comparer les pièces, nous comparerons les variantes de "
"`Option<T>`, mais la façon dont l`expression `match` fonctionne reste la "
"même."

#: src/ch06-02-the-match-control-flow-construct.md:108
msgid ""
"Let’s say we want to write a function that takes an `Option<u8>` and, if "
"there’s a value inside, adds `1` to that value. If there is no value inside, "
"the function should return the `None` value and not attempt to perform any "
"operations."
msgstr ""
"On dit que nous voulons écrire une fonction qui prend une `Option<u8>` et, "
"s'il y a une valeur à l'intérieur, ajoute `1` à cette valeur. S'il n'y a pas "
"de valeur à l'intérieur, la fonction doit renvoyer la valeur `Aucune` et ne "
"pas essayer d'effectuer des opérations."

#: src/ch06-02-the-match-control-flow-construct.md:110
msgid ""
"This function is very easy to write, thanks to `match`, and will look like "
"Listing 6-3."
msgstr ""
"Cette fonction est très facile à écrire, grâce à `match`, et ressemblera à "
"Listing 6-3."

#: src/ch06-02-the-match-control-flow-construct.md:127
msgid ""
"<span class=\"caption\">Listing 6-3: A function that uses a `match` "
"expression on an `Option<u8>`</span>"
msgstr ""
"<span class=\"caption\">Liste 6-3: Une fonction qui utilise une expression "
"`match` sur une `Option<u8>`</span>"

#: src/ch06-02-the-match-control-flow-construct.md:129
msgid ""
"Let’s examine the first execution of `plus_one` in more detail. When we call "
"`plus_one(five)`, the variable `x` in the body of `plus_one` will have the "
"value `Some(5)`. We then compare that against each `match` arm:"
msgstr ""
"Lorsque nous appelons `plus_un(cinq)`, la variable `x` dans le corps de "
"`plus_un` aura la valeur `Some(5)`. Nous comparons ensuite cela avec chaque "
"bras `match`:"

#: src/ch06-02-the-match-control-flow-construct.md:135
msgid ""
"Does `Option::Some(5)` value match the pattern `Option::Some(val)`? It does! "
"We have the same variant. The `val` binds to the value contained in `Option::"
"Some`, so `val` takes the value `5`. The code in the `match` arm is then "
"executed, so we add `1` to the value of `val` and create a new `Option::"
"Some` value with our total `6` inside. Because the first arm matched, no "
"other arms are compared."
msgstr ""
"La valeur `Option::Some(5)` correspond-elle au motif `Option::Some(val)`? "
"Nous avons la même variante. La `val` se lie à la valeur contenue dans "
"`Option::Some`, donc `val` prend la valeur `5`. Le code dans le bras `match` "
"est alors exécuté, nous ajoutons `1` à la valeur `val` et créons une "
"nouvelle `Option::Some` valeur avec notre `6` total à l'intérieur. Parce que "
"le premier bras correspond, aucun autre bras n'est comparé."

#: src/ch06-02-the-match-control-flow-construct.md:137
msgid ""
"Now let’s consider the second call of `plus_one` in our main function, where "
"`x` is `Option::None`. We enter the `match` and compare to the first arm:"
msgstr ""
"Maintenant, considérons le deuxième appel de `plus_one` dans notre fonction "
"principale, où `x` est `Option::None`. Nous entrons dans le `match` et nous "
"nous comparons au premier bras:"

#: src/ch06-02-the-match-control-flow-construct.md:143
msgid ""
"The `Option::Some(val)` value doesn’t match the pattern `Option::None`, so "
"we continue to the next arm:"
msgstr ""
"La valeur `Option::Some(val)` ne correspond pas au motif `Option::None`, "
"donc nous continuons vers le bras suivant:"

#: src/ch06-02-the-match-control-flow-construct.md:149
msgid ""
"It matches! There’s no value to add to, so the matching construct ends and "
"returns the `Option::None` value on the right side of `=>`."
msgstr ""
"Il correspond! Il n'y a aucune valeur à ajouter, de sorte que la "
"construction correspondante se termine et renvoie la valeur `Option::Aucun` "
"sur le côté droit de `=>`."

#: src/ch06-02-the-match-control-flow-construct.md:151
msgid ""
"Combining `match` and enums is useful in many situations. You’ll see this "
"pattern a lot in Cairo code: `match` against an enum, bind a variable to the "
"data inside, and then execute code based on it. It’s a bit tricky at first, "
"but once you get used to it, you’ll wish you had it in all languages. It’s "
"consistently a user favorite."
msgstr ""
"Combiner `match` et enums est utile dans de nombreuses situations. Vous "
"allez voir ce modèle beaucoup dans le code du Caire: `match` contre un enum, "
"lier une variable à l'intérieur des données, puis exécuter le code basé sur "
"elle. Il est un peu difficile au début, mais une fois que vous vous habituez "
"à elle, vous souhaitez que vous l'ayez dans toutes les langues. Il est "
"toujours un favori de l'utilisateur."

#: src/ch06-02-the-match-control-flow-construct.md:153
msgid "Matches Are Exhaustive"
msgstr "Les matches sont exhaustifs"

#: src/ch06-02-the-match-control-flow-construct.md:155
msgid ""
"There’s one other aspect of `match` we need to discuss: the arms’ patterns "
"must cover all possibilities. Consider this version of our `plus_one` "
"function, which has a bug and won’t compile:"
msgstr ""
"Il y a un autre aspect de `match` que nous devons discuter: les modèles "
"arms= doivent couvrir toutes les possibilités. Considérez cette version de "
"notre fonction `plus_one`, qui a un bug et won=t compiler:"

#: src/ch06-02-the-match-control-flow-construct.md:165
msgid ""
"We didn’t handle the `None` case, so this code will cause a bug. Luckily, "
"it’s a bug Cairo knows how to catch. If we try to compile this code, we’ll "
"get this error:"
msgstr ""
"Nous n'avons pas géré l'affaire `Aucune`, donc ce code va causer un bug. "
"Heureusement, il est un bug Le Caire sait comment attraper. Si nous essayons "
"de compiler ce code, nous allons obtenir cette erreur:"

#: src/ch06-02-the-match-control-flow-construct.md:181
msgid ""
"Cairo knows that we didn’t cover every possible case, and even knows which "
"pattern we forgot! Matches in Cairo are exhaustive: we must exhaust every "
"last possibility in order for the code to be valid. Especially in the case "
"of `Option<T>`, when Cairo prevents us from forgetting to explicitly handle "
"the `None` case, it protects us from assuming that we have a value when we "
"might have null, thus making the [billion-dollar mistake](https://en."
"wikipedia.org/wiki/Null_pointer#History) discussed earlier impossible."
msgstr ""
"Le Caire sait que nous n'avons pas couvert tous les cas possibles, et sait "
"même quel modèle nous avons oublié! Les correspondances au Caire sont "
"exhaustives: nous devons épuiser toutes les dernières possibilités pour que "
"le code soit valide. Surtout dans le cas de `Option<T>`, lorsque le Caire "
"nous empêche d'oublier de gérer explicitement le cas `Aucun`, il nous "
"protège de supposer que nous avons une valeur quand nous pourrions avoir "
"nul, rendant ainsi impossible la [milliard-dollar erreur] (https://en."
"wikipedia.org/wiki/Null_pointer#History) discutée précédemment."

#: src/ch06-02-the-match-control-flow-construct.md:185
msgid "Catch-all with the `_` Placeholder"
msgstr "Catch-all avec le porte-place `_`"

#: src/ch06-02-the-match-control-flow-construct.md:187
msgid ""
"Using enums, we can also take special actions for a few particular values, "
"but for all other values take one default action. `_` is a special pattern "
"that matches any value and does not bind to that value. You can use it by "
"simply adding a new arm with `_` as the pattern for the last arm of the "
"`match` expression."
msgstr ""
"En utilisant des enums, nous pouvons également prendre des actions spéciales "
"pour quelques valeurs particulières, mais pour toutes les autres valeurs "
"prendre une action par défaut. `_` est un motif spécial qui correspond à "
"n'importe quelle valeur et ne se lie pas à cette valeur. Vous pouvez "
"l'utiliser en ajoutant simplement un nouveau bras avec `_` comme motif pour "
"le dernier bras de l'expression `match`."

#: src/ch06-02-the-match-control-flow-construct.md:191
msgid ""
"Imagine we have a vending machine that only accepts Dime coins. We want to "
"have a function that processes inserted coins and returns `true` only if the "
"coin is accepted."
msgstr ""
"Imaginez que nous avons un distributeur automatique qui n'accepte que les "
"pièces Dime. Nous voulons avoir une fonction qui traite les pièces insérées "
"et retourne `true` seulement si la pièce est acceptée."

#: src/ch06-02-the-match-control-flow-construct.md:194
msgid "Here's a `vending_machine_accept` function that implements this logic:"
msgstr ""
"Voici une fonction `vending_machine_accept` qui implémente cette logique :"

#: src/ch06-02-the-match-control-flow-construct.md:205
msgid ""
"This example also meets the exhaustiveness requirement because we’re "
"explicitly ignoring all other values in the last arm; we haven’t forgotten "
"anything."
msgstr ""
"Cet exemple répond également à l'exigence d'exhaustivité parce que nous "
"sommes explicitement ignorants de toutes les autres valeurs dans le dernier "
"bras; nous n'avons rien oublié."

#: src/ch06-02-the-match-control-flow-construct.md:207
msgid ""
"There's no catch-all pattern in Cairo that allows you to use the value of "
"the pattern."
msgstr ""
"Il n'y a pas de motif de capture au Caire qui vous permet d'utiliser la "
"valeur du motif."

#: src/ch06-02-the-match-control-flow-construct.md:213
msgid "Multiple Patterns with the `|` Operator"
msgstr "Patterns multiples avec l`opérateur `=\""

#: src/ch06-02-the-match-control-flow-construct.md:215
msgid ""
"In `match` expressions, you can match multiple patterns using the `|` "
"syntax, which is the pattern _or_ operator."
msgstr ""
"Dans les expressions `match`, vous pouvez faire correspondre plusieurs "
"patrons en utilisant la syntaxe `=\" qui est l'opérateur_ou_ patron."

#: src/ch06-02-the-match-control-flow-construct.md:217
msgid ""
"For example, in the following code we modified the `vending_machine_accept` "
"function to accept both `Dime` and `Quarter` coins in a single arm:"
msgstr ""
"Par exemple, dans le code suivant, nous avons modifié la fonction "
"`vending_machine_accept` pour accepter les pièces `Dime` et `Quarter` dans "
"un seul bras:"

#: src/ch06-02-the-match-control-flow-construct.md:228
msgid "Matching Tuples"
msgstr "Tuples assortis"

#: src/ch06-02-the-match-control-flow-construct.md:230
msgid "It is possible to match tuples. Let's introduce a new `DayType` enum:"
msgstr ""
"Il est possible de faire correspondre des tuples. Introduisons un nouvel "
"enum `DayType`:"

#: src/ch06-02-the-match-control-flow-construct.md:242
msgid ""
"Now, let's suppose that our vending machine accepts any coin on weekdays, "
"but only accepts quarters and dimes on weekends and holidays. We can modify "
"the `vending_machine_accept` function to accept a tuple of a `Coin` and a "
"`Weekday` and return `true` only if the given coin is accepted on the "
"specified day:"
msgstr ""
"Maintenant, supposons que notre distributeur accepte n'importe quelle pièce "
"en semaine, mais n'accepte que les quartiers et les dimes le week-end et les "
"jours fériés. Nous pouvons modifier la fonction `vending_machine_accept` "
"pour accepter une tuple d'une `Coin` et d'une `Weekday` et retourner `true` "
"seulement si la pièce donnée est acceptée le jour spécifié:"

#: src/ch06-02-the-match-control-flow-construct.md:255
msgid ""
"Writing `(_, _)` for the last arm of a tuple matching pattern might feel "
"superfluous. Hence, we can use the `_ =>` syntax if we want, for example, "
"that our vending machine only accepts quarters on weekdays:"
msgstr ""
"Par conséquent, nous pouvons utiliser la syntaxe `_ =>` si nous voulons, par "
"exemple, que notre distributeur n'accepte que les quartiers en semaine :"

#: src/ch06-02-the-match-control-flow-construct.md:266
msgid "Matching `felt252` and Integer Variables"
msgstr "Correspondance entre les variables \"felt252\" et \"entier\""

#: src/ch06-02-the-match-control-flow-construct.md:268
msgid ""
"You can also match `felt252` and integer variables. This is useful when you "
"want to match against a range of values. However, there are some "
"restrictions:"
msgstr ""
"Vous pouvez également correspondre à des variables `felt252` et integer. "
"Ceci est utile lorsque vous voulez correspondre à une plage de valeurs. "
"Cependant, il y a quelques restrictions:"

#: src/ch06-02-the-match-control-flow-construct.md:271
msgid ""
"Only integers that fit into a single `felt252` are supported (i.e. `u256` is "
"not supported)."
msgstr ""
"Seuls les nombres entiers qui entrent dans un seul \"felt252\" sont pris en "
"charge (c'est-à-dire \"u256\" n'est pas pris en charge)."

#: src/ch06-02-the-match-control-flow-construct.md:272
msgid "The first arm must be 0."
msgstr "Le premier bras doit être 0."

#: src/ch06-02-the-match-control-flow-construct.md:273
msgid "Each arm must cover a sequential segment, contiguously with other arms."
msgstr ""
"Chaque bras doit couvrir un segment séquentiel, contiguëment avec d'autres "
"bras."

#: src/ch06-02-the-match-control-flow-construct.md:275
msgid ""
"Imagine we’re implementing a game where you roll a six-sided die to get a "
"number between 0 and 5. If you have 0, 1 or 2 you win. If you have 3, you "
"can roll again. For all other values you lose."
msgstr ""
"Imaginez que nous implémentons un jeu où vous roulez une matrice à six côtés "
"pour obtenir un nombre entre 0 et 5. Si vous avez 0, 1 ou 2 vous gagnez. Si "
"vous avez 3, vous pouvez rouler à nouveau. Pour toutes les autres valeurs "
"que vous perdez."

#: src/ch06-02-the-match-control-flow-construct.md:278
msgid "Here's a match that implements that logic:"
msgstr "Voici une correspondance qui implémente cette logique :"

#: src/ch06-02-the-match-control-flow-construct.md:283
msgid "\"you won!\""
msgstr "\"Tu as gagné!\""

#: src/ch06-02-the-match-control-flow-construct.md:284
msgid "\"you can roll again!\""
msgstr "\"Tu peux encore rouler!\""

#: src/ch06-02-the-match-control-flow-construct.md:285
msgid "\"you lost...\""
msgstr "\"tu as perdu...\""

#: src/ch06-02-the-match-control-flow-construct.md:290
msgid "{{#quiz ../quizzes/ch06-02-match.toml}}"
msgstr "{{#quiz../quizes/ch06-02-match.toml}}"

#: src/ch06-02-the-match-control-flow-construct.md:292
msgid ""
"These restrictions are planned to be relaxed in future versions of Cairo."
msgstr ""
"Ces restrictions devraient être assouplies dans les futures versions du "
"Caire."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:3
msgid "`if let`"
msgstr "'si l'on le laisse'"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:5
msgid ""
"The `if let` syntax lets you combine `if` and `let` into a less verbose way "
"to handle values that match one pattern while ignoring the rest. Consider "
"the program in Listing 6-4 that matches on an `Option::Some<u8>` value in "
"the `config_max` variable but only wants to execute code if the value is "
"`Option::Some` variant."
msgstr ""
"La syntaxe `si let` vous permet de combiner `if` et `let` dans une manière "
"moins verbeuse de gérer les valeurs qui correspondent à un motif tout en "
"ignorant le reste. Considérez le programme dans Listing 6-4 qui correspond à "
"une valeur `Option::Some<u8>` dans la variable `config_max` mais veut "
"seulement exécuter le code si la valeur est `Option::Some`."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:11
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:33
msgid "\"The maximum is configured to be {}\""
msgstr "\"Le maximum est configuré pour être {}\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:17
msgid ""
"<span class=\"caption\">Listing 6-4: A `match` that only cares about "
"executing code when the value is `Option::Some`</span>"
msgstr ""
"<span class=\"caption\">Liste 6-4: Un `match` qui se soucie seulement de "
"l'exécution du code lorsque la valeur est `Option::Some`</span>"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:20
msgid ""
"If the value is `Option::Some`, we print out the value in the `Option::Some` "
"variant by binding the value to the variable `max` in the pattern. We don’t "
"want to do anything with the `None` value. To satisfy the `match` "
"expression, we have to add `_ => ()` after processing just one variant, "
"which is annoying boilerplate code to add."
msgstr ""
"Si la valeur est `Option::Some`, nous imprimons la valeur dans la variante "
"`Option::Some` en liant la valeur à la variable `max` dans le motif. Nous ne "
"voulons pas faire quoi que ce soit avec la valeur `None`. Pour satisfaire "
"l'expression `match`, nous devons ajouter `_ => ()` après avoir traité une "
"seule variante, qui est un code de plaque de chaudière ennuyeux à ajouter."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:26
msgid ""
"Instead, we could write this in a shorter way using `if let`. The following "
"code behaves the same as the `match` in Listing 6-4:"
msgstr ""
"Au lieu de cela, nous pourrions écrire ceci d'une manière plus courte en "
"utilisant `si let`. Le code suivant se comporte comme le `match` dans "
"Listing 6-4:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:39
msgid ""
"The syntax `if let` takes a pattern and an expression separated by an equal "
"sign. It works the same way as a `match`, where the expression is given to "
"the `match` and the pattern is its first arm. In this case, the pattern is "
"`Option::Some(max)`, and `max` binds to the value inside `Option::Some`. We "
"can then use `max` in the body of the `if let` block in the same way we used "
"`max` in the corresponding `match` arm. The code in the `if let` block isn’t "
"run if the value doesn’t match the pattern."
msgstr ""
"La syntaxe `si let` prend un motif et une expression séparées par un signe "
"égal. Elle fonctionne de la même manière qu'un `match`, où l'expression est "
"donnée à l'`match` et le motif est son premier bras. Dans ce cas, le motif "
"est `Option::Some(max)`, et `max` se lie à la valeur à l'intérieur de "
"`Option::Some`. Nous pouvons alors utiliser `max` dans le corps du bloc `if "
"let` de la même manière que nous avons utilisé `max` dans le bras `match` "
"correspondant. Le code dans le bloc `if let` n'est pas exécuté si la valeur "
"ne correspond pas au motif."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:47
msgid ""
"Using `if let` means less typing, less indentation, and less boilerplate "
"code. However, you lose the exhaustive checking that `match` enforces. "
"Choosing between `match` and `if let` depends on what you’re doing in your "
"particular situation and whether gaining conciseness is an appropriate trade-"
"off for losing exhaustive checking."
msgstr ""
"L'utilisation de `si let` signifie moins de frappe, moins d'indentation et "
"moins de code de plaque de chaudière. Cependant, vous perdez la vérification "
"exhaustive que `match` force. Choisir entre `match` et `si let` dépend de ce "
"que vous faites dans votre situation particulière et si gagner la concision "
"est un compromis approprié pour perdre la vérification exhaustive."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:53
msgid ""
"In other words, you can think of `if let` as syntactic sugar for a `match` "
"that runs code when the value matches one pattern and then ignores all other "
"values."
msgstr ""
"En d'autres termes, vous pouvez penser à `si let` comme sucre syntaxique "
"pour un `match` qui exécute le code lorsque la valeur correspond à un motif, "
"puis ignore toutes les autres valeurs."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:56
msgid ""
"We can include an `else` with an `if let`. The block of code that goes with "
"`else` is the same as the block of code that would go with the `_` case in "
"the `match` expression. Recall the `Coin` enum definition in Listing 6-2, "
"where the `Quarter` variant also held a `UsState` value. If we wanted to "
"count all non-quarter coins we see while also announcing the state of the "
"quarters, we could do that with a `match` expression, like this:"
msgstr ""
"Nous pouvons inclure un 'else` avec un 'if let`. Le bloc de code qui va avec "
"`else` est le même que le bloc de code qui irait avec le cas `_` dans "
"l'expression `match`. Rappelez-vous la définition `Coin` enum dans Listing "
"6-2, où la variante `Quarter` contenait également une valeur `UsState`. Si "
"nous voulions compter toutes les pièces non-quartier que nous voyons en "
"annonçant également l'état des quartiers, nous pourrions le faire avec une "
"expression `match`, comme ceci:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:76
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:97
msgid "\"You got a quarter!\""
msgstr "\"Tu as un quart!\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:82
msgid "Or we could use an `if let` and `else` expression, like this:"
msgstr ""
"Ou nous pourrions utiliser une expression `si let` et `else`, comme ceci:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:101
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:120
#: src/ch11-08-printing.md:59 src/ch11-08-printing.md:112
#: src/ch11-08-printing.md:130 src/ch11-08-printing.md:156
msgid "\"{}\""
msgstr "\"{}\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:106
msgid ""
"If you have a situation in which your program has logic that is too verbose "
"to express using `match`, remember that `if let` is in your Cairo toolbox as "
"well."
msgstr ""
"Si vous avez une situation dans laquelle votre programme a une logique qui "
"est trop verbeuse pour exprimer en utilisant `match`, rappelez-vous que `si "
"let` est aussi dans votre boîte à outils Cairo."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:109
msgid "`while let`"
msgstr "\"tout en laissant\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:111
msgid ""
"The `while let` syntax is similar to the `if let` syntax, but it allows you "
"to loop over a collection of values and execute a block of code for each "
"value that matches a specified pattern. In the case below, the pattern is "
"`Option::Some(x)`, which matches any `Some` variant of the `Option` enum."
msgstr ""
"La syntaxe `While let` est similaire à la syntaxe `if let`, mais elle vous "
"permet de boucler une collection de valeurs et d'exécuter un bloc de code "
"pour chaque valeur qui correspond à un motif spécifié. Dans le cas ci-"
"dessous, le motif est `Option::Some(x)`, qui correspond à n'importe quelle "
"variante `Some` de l'enum `Option`."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:124
msgid ""
"Using `while let` provides a more concise and idiomatic way of writing this "
"loop compared to a traditional `while` loop with explicit pattern matching "
"or handling of the `Option` type. However, as with `if let`, you lose the "
"exhaustive checking that a `match` expression provides, so you need to be "
"careful to handle any remaining cases outside the `while let` loop if "
"necessary."
msgstr ""
"L'utilisation de `While let` fournit une façon plus concise et idiomatique "
"d'écrire cette boucle par rapport à une boucle traditionnelle `While` avec "
"correspondance explicite des motifs ou la manipulation du type `Option`. "
"Cependant, comme avec `si let`, vous perdez la vérification exhaustive "
"qu'une expression `match` fournit, de sorte que vous devez être prudent pour "
"traiter tous les cas restants en dehors de la boucle `While let` si "
"nécessaire."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"As you write large programs, organizing your code will become increasingly "
"important. By grouping related functionality and separating code with "
"distinct features, you’ll clarify where to find code that implements a "
"particular feature and where to go to change how a feature works."
msgstr ""
"Lorsque vous écrivez de grands programmes, l'organisation de votre code "
"deviendra de plus en plus importante. En regroupant les fonctionnalités "
"liées et en séparant le code avec des fonctionnalités distinctes, vous allez "
"clarifier où trouver le code qui implémente une fonctionnalité particulière "
"et où aller pour changer comment une fonctionnalité fonctionne."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"The programs we’ve written so far have been in one module in one file. As a "
"project grows, you should organize code by splitting it into multiple "
"modules and then multiple files. As a package grows, you can extract parts "
"into separate crates that become external dependencies. This chapter covers "
"all these techniques."
msgstr ""
"Les programmes que nous avons écrits jusqu'à présent ont été en un seul "
"module dans un seul fichier. À mesure qu'un projet grandit, vous devriez "
"organiser le code en le divisant en plusieurs modules puis en plusieurs "
"fichiers. À mesure qu'un paquet grandit, vous pouvez extraire des parties "
"dans des caisses séparées qui deviennent des dépendances externes. Ce "
"chapitre couvre toutes ces techniques."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"We’ll also discuss encapsulating implementation details, which lets you "
"reuse code at a higher level: once you’ve implemented an operation, other "
"code can call your code without having to know how the implementation works."
msgstr ""
"Nous allons également discuter de l'encapsulation des détails de "
"l'implémentation, ce qui vous permet de réutiliser le code à un niveau "
"supérieur : une fois que vous avez implémenté une opération, d'autres codes "
"peuvent appeler votre code sans avoir à savoir comment fonctionne "
"l'implémentation."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"A related concept is scope: the nested context in which code is written has "
"a set of names that are defined as “in scope”. When reading, writing, and "
"compiling code, programmers and compilers need to know whether a particular "
"name at a particular spot refers to a variable, function, struct, enum, "
"module, constant, or other item and what that item means. You can create "
"scopes and change which names are in or out of scope. You can’t have two "
"items with the same name in the same scope."
msgstr ""
"Un concept connexe est le champ d'application : le contexte imbriqué dans "
"lequel le code est écrit a un ensemble de noms qui sont définis comme \"en "
"champ d'application\". Lors de la lecture, de l'écriture et de la "
"compilation de code, les programmeurs et compilateurs doivent savoir si un "
"nom particulier à un endroit particulier se réfère à une variable, fonction, "
"struct, enum, module, constante ou autre élément et ce que signifie cet "
"élément. Vous pouvez créer des champs d'applications et modifier quels noms "
"sont dans ou hors champ d'application. Vous ne pouvez pas avoir deux "
"éléments avec le même nom dans la même champ d'application."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"Cairo has a number of features that allow you to manage your code’s "
"organization. These features, sometimes collectively referred to as the "
"_module system_, include:"
msgstr ""
"Le Caire dispose d'un certain nombre de fonctionnalités qui vous permettent "
"de gérer votre organisation de code. Ces fonctionnalités, parfois "
"collectivement appelées le _module system_, comprennent :"

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Packages:** A Scarb feature that lets you build, test, and share crates."
msgstr ""
"**Packages:** Une fonction Scarb qui vous permet de construire, tester et "
"partager des caisses."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Crates:** A tree of modules that corresponds to a single compilation unit. "
"It has a root directory, and a root module defined at the _lib.cairo_ file "
"under this directory."
msgstr ""
"**Crates:** Arbre de modules qui correspond à une seule unité de "
"compilation. Il a un répertoire racine, et un module racine défini dans le "
"fichier _lib.cairo_ sous ce répertoire."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Modules** and **use:** Let you control the organization and scope of items."
msgstr ""
"**Modules** et **Utilisation :** Laissez-vous contrôler l'organisation et la "
"portée des articles."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Paths:** A way of naming an item, such as a struct, function, or module."
msgstr ""
"**Paths:** Une façon de nommer un élément, comme une structure, une fonction "
"ou un module."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"In this chapter, we’ll cover all these features, discuss how they interact, "
"and explain how to use them to manage scope. By the end, you should have a "
"solid understanding of the module system and be able to work with scopes "
"like a pro!"
msgstr ""
"Dans ce chapitre, nous allons couvrir toutes ces fonctionnalités, discuter "
"comment elles interagissent, et expliquer comment les utiliser pour gérer la "
"portée. D'ici la fin, vous devriez avoir une compréhension solide du système "
"de module et être en mesure de travailler avec des champs comme un pro!"

#: src/ch07-01-packages-and-crates.md:3
msgid "What is a Crate?"
msgstr "Qu'est-ce qu'une caisse?"

#: src/ch07-01-packages-and-crates.md:5
msgid ""
"A crate is a subset of a package that is used in the actual Cairo "
"compilation. This includes:"
msgstr ""
"Une caisse est un sous-ensemble d'un paquet qui est utilisé dans la "
"compilation réelle du Caire."

#: src/ch07-01-packages-and-crates.md:7
msgid ""
"The package source code, identified by the package name and the crate root, "
"which is the main entry point of the package."
msgstr ""
"Le code source du paquet, identifié par le nom du paquet et la racine de "
"caisse, qui est le point d'entrée principal du paquet."

#: src/ch07-01-packages-and-crates.md:8
msgid ""
"A subset of the package metadata that identifies crate-level settings of the "
"Cairo compiler, for example, the `edition` field in the _Scarb.toml_ file."
msgstr ""
"Un sous-ensemble des métadonnées de paquet qui identifie les paramètres de "
"niveau de caisse du compilateur du Caire, par exemple, le champ `édition` "
"dans le fichier _scarb.toml_."

#: src/ch07-01-packages-and-crates.md:10
msgid ""
"Crates can contain modules, and the modules may be defined in other files "
"that get compiled with the crate, as will be discussed in the subsequent "
"sections."
msgstr ""
"Les caisses peuvent contenir des modules, et les modules peuvent être "
"définis dans d'autres fichiers qui sont compilés avec la caisse, comme on le "
"verra dans les sections suivantes."

#: src/ch07-01-packages-and-crates.md:12
msgid "What is the Crate Root?"
msgstr "Qu'est-ce que la racine de la grille?"

#: src/ch07-01-packages-and-crates.md:14
msgid ""
"The crate root is the _lib.cairo_ source file that the Cairo compiler starts "
"from and makes up the root module of your crate. We’ll explain modules in "
"depth in the [\"Defining Modules to Control Scope\"](./ch07-02-defining-"
"modules-to-control-scope.md) chapter."
msgstr ""
"La racine de la caisse est le fichier source _lib.cairo_ que le compilateur "
"du Caire commence à partir et constitue le module racine de votre caisse. "
"Nous allons expliquer les modules en profondeur dans le chapitre "
"[\"Définition des modules à la portée de contrôle\"](./ch07-02-defining-"
"modules-to-control-scope.md)."

#: src/ch07-01-packages-and-crates.md:18
msgid "What is a Package?"
msgstr "Qu'est-ce qu'un paquet?"

#: src/ch07-01-packages-and-crates.md:20
msgid "A Cairo package is a directory (or equivalent) containing:"
msgstr "Un paquet Cairo est un répertoire (ou équivalent) contenant:"

#: src/ch07-01-packages-and-crates.md:22
msgid "A _Scarb.toml_ manifest file with a `[package]` section."
msgstr "Un fichier manifeste _scarb.toml_ avec une section `[package]`."

#: src/ch07-01-packages-and-crates.md:23
msgid "Associated source code."
msgstr "Code source associé."

#: src/ch07-01-packages-and-crates.md:25
msgid ""
"This definition implies that a package might contain other packages, with a "
"corresponding _Scarb.toml_ file for each package."
msgstr ""
"Cette définition implique qu'un paquet peut contenir d'autres paquets, avec "
"un fichier _Scarb.toml_ correspondant pour chaque paquet."

#: src/ch07-01-packages-and-crates.md:27
msgid "Creating a Package with Scarb"
msgstr "Création d'un paquet avec Scarb"

#: src/ch07-01-packages-and-crates.md:29
msgid ""
"You can create a new Cairo package using the Scarb command-line tool. To "
"create a new package, run the following command:"
msgstr ""
"Vous pouvez créer un nouveau paquet Cairo à l'aide de la ligne de commande "
"Scarb. Pour créer un nouveau paquet, lancez la commande suivante :"

#: src/ch07-01-packages-and-crates.md:35
msgid ""
"This command will generate a new package directory named _my_package_ with "
"the following structure:"
msgstr ""
"Cette commande générera un nouveau répertoire de paquets nommé _my_package_ "
"avec la structure suivante :"

#: src/ch07-01-packages-and-crates.md:44
msgid ""
"_src/_ is the main directory where all the Cairo source files for the "
"package will be stored."
msgstr ""
"_src/_ est le répertoire principal où tous les fichiers source du Caire pour "
"le paquet seront stockés."

#: src/ch07-01-packages-and-crates.md:45
msgid ""
"_lib.cairo_ is the default root module of the crate, which is also the main "
"entry point of the package."
msgstr ""
"_lib.cairo_ est le module racine par défaut de la caisse, qui est également "
"le point d'entrée principal du paquet."

#: src/ch07-01-packages-and-crates.md:46
msgid ""
"_Scarb.toml_ is the package manifest file, which contains metadata and "
"configuration options for the package, such as dependencies, package name, "
"version, and authors. You can find documentation about it on the [Scarb "
"reference](https://docs.swmansion.com/scarb/docs/reference/manifest.html)."
msgstr ""
"_Scarb.toml_ est le fichier de manifeste de paquets, qui contient des "
"métadonnées et des options de configuration pour le paquet, comme les "
"dépendances, le nom du paquet, la version et les auteurs. Vous pouvez "
"trouver la documentation à ce sujet sur le [Scarb reference](https://docs."
"swmansion.com/scarb/docs/reference/manifest.html)."

#: src/ch07-01-packages-and-crates.md:48
msgid ""
"```toml\n"
"[package]\n"
"name = \"my_package\"\n"
"version = \"0.1.0\"\n"
"edition = \"2023_11\"\n"
"\n"
"[dependencies]\n"
"# foo = { path = \"vendor/foo\" }\n"
"```"
msgstr ""
"```toml [package] name = \"my_package\" version = \"0.1.0\" édition = "
"\"2023_11\" [dependances] # foo = { chemin = \"vendor/foo\" } ``"

#: src/ch07-01-packages-and-crates.md:58
msgid ""
"As you develop your package, you may want to organize your code into "
"multiple Cairo source files. You can do this by creating additional _.cairo_ "
"files within the _src_ directory or its subdirectories."
msgstr ""
"Au fur et à mesure que vous développez votre paquetage, vous pouvez "
"organiser votre code en plusieurs fichiers sources du Caire. Vous pouvez le "
"faire en créant des fichiers supplémentaires _.cairo_ dans le répertoire "
"_src_ ou ses sous-répertoires."

#: src/ch07-01-packages-and-crates.md:60
msgid "{{#quiz ../quizzes/ch07-01-packages-crates.toml}}"
msgstr "{{#quiz../quizes/ch07-01-packages-crates.toml}}"

#: src/ch07-02-defining-modules-to-control-scope.md:3
msgid ""
"In this section, we’ll talk about modules and other parts of the module "
"system, namely _paths_ that allow you to name items and the `use` keyword "
"that brings a path into scope."
msgstr ""
"Dans cette section, nous allons parler de modules et d'autres parties du "
"système de modules, à savoir _paths_ qui vous permettent de nommer des "
"éléments et le mot-clé `use` qui apporte un chemin dans la portée."

#: src/ch07-02-defining-modules-to-control-scope.md:7
msgid ""
"First, we’re going to start with a list of rules for easy reference when "
"you’re organizing your code in the future. Then we’ll explain each of the "
"rules in detail."
msgstr ""
"Tout d'abord, nous allons commencer par une liste de règles pour une "
"référence facile lorsque vous organiserez votre code à l'avenir. Ensuite, "
"nous allons expliquer chacune des règles en détail."

#: src/ch07-02-defining-modules-to-control-scope.md:11
msgid "Modules Cheat Sheet"
msgstr "Modules Feuille de chaleur"

#: src/ch07-02-defining-modules-to-control-scope.md:13
msgid ""
"Here we provide a quick reference on how modules, paths and the `use` "
"keyword work in the compiler, and how most developers organize their code. "
"We’ll be going through examples of each of these rules throughout this "
"chapter, but this is a great place to refer to as a reminder of how modules "
"work. You can create a new Scarb project with `scarb new backyard` to follow "
"along."
msgstr ""
"Ici, nous fournissons une référence rapide sur la façon dont les modules, "
"les chemins et le mot-clé `use` fonctionnent dans le compilateur, et comment "
"la plupart des développeurs organisent leur code. Nous allons passer par des "
"exemples de chacune de ces règles tout au long de ce chapitre, mais c'est un "
"endroit idéal pour désigner comme un rappel du fonctionnement des modules. "
"Vous pouvez créer un nouveau projet Scarb avec `scarb new backyard` à suivre."

#: src/ch07-02-defining-modules-to-control-scope.md:19
msgid ""
"**Start from the crate root**: When compiling a crate, the compiler first "
"looks in the crate root file (_src/lib.cairo_) for code to compile."
msgstr ""
"**Démarrer à partir de la racine de caisse**: Lors de la compilation d'une "
"caisse, le compilateur regarde d'abord dans le fichier racine de caisse "
"(_src/lib.cairo_) pour que le code compile."

#: src/ch07-02-defining-modules-to-control-scope.md:21
msgid ""
"**Declaring modules**: In the crate root file, you can declare new modules; "
"say, you declare a “garden” module with `mod garden;`. The compiler will "
"look for the module’s code in these places:"
msgstr ""
"**Modèles de déclaration**: Dans le fichier racine de caisse, vous pouvez "
"déclarer de nouveaux modules; par exemple, vous déclarez un module \"Jardin "
"de mode\" avec `mod book;`. Le compilateur cherchera le code du module dans "
"ces endroits:"

#: src/ch07-02-defining-modules-to-control-scope.md:25
msgid ""
"Inline, within curly brackets that replace the semicolon following `mod "
"garden`."
msgstr ""
"En ligne, à l'intérieur des crochets qui remplacent le point-virgule après "
"le mot «mode jardin»."

#: src/ch07-02-defining-modules-to-control-scope.md:28
msgid "// crate root file (src/lib.cairo)\n"
msgstr "// fichier racine de caisse (src/lib.cairo)\n"

#: src/ch07-02-defining-modules-to-control-scope.md:30
msgid "// code defining the garden module goes here\n"
msgstr "// code définissant le module jardin va ici\n"

#: src/ch07-02-defining-modules-to-control-scope.md:34
msgid "In the file _src/garden.cairo_."
msgstr "Dans le fichier _src/garden.cairo_."

#: src/ch07-02-defining-modules-to-control-scope.md:36
msgid ""
"**Declaring submodules**: In any file other than the crate root, you can "
"declare submodules. For example, you might declare `mod vegetables;` in _src/"
"garden.cairo_. The compiler will look for the submodule’s code within the "
"directory named for the parent module in these places:"
msgstr ""
"**Déclarer les sous-modules**: Dans n'importe quel fichier autre que la "
"racine de caisse, vous pouvez déclarer les sous-modules. Par exemple, vous "
"pouvez déclarer `mod légumes;` dans _src/garden.cairo_. Le compilateur "
"cherchera le code des sous-modules dans le répertoire nommé pour le module "
"parent dans ces endroits:"

#: src/ch07-02-defining-modules-to-control-scope.md:41
msgid ""
"Inline, directly following `mod vegetables`, within curly brackets instead "
"of the semicolon."
msgstr ""
"En ligne, en suivant directement `mod légumes`, entre crochets à la place du "
"point-virgule."

#: src/ch07-02-defining-modules-to-control-scope.md:45
msgid "// src/garden.cairo file\n"
msgstr "// src/garden.cairo fichier\n"

#: src/ch07-02-defining-modules-to-control-scope.md:47
msgid "// code defining the vegetables submodule goes here\n"
msgstr "// code définissant le sous-module des légumes va ici\n"

#: src/ch07-02-defining-modules-to-control-scope.md:51
msgid "In the file _src/garden/vegetables.cairo_."
msgstr "Dans le fichier _src/garden/vegetables.cairo_."

#: src/ch07-02-defining-modules-to-control-scope.md:53
msgid ""
"**Paths to code in modules**: Once a module is part of your crate, you can "
"refer to code in that module from anywhere else in that same crate, using "
"the path to the code. For example, an `Asparagus` type in the `vegetables` "
"submodule would be found at `backyard::garden::vegetables::Asparagus`."
msgstr ""
"**Paths to code in modules**: Une fois qu'un module fait partie de votre "
"caisse, vous pouvez vous référer au code dans ce module à partir de "
"n'importe où dans la même caisse, en utilisant le chemin vers le code. Par "
"exemple, un type `Asparagus` dans le sous-module `vegetables` serait trouvé "
"à `backyard::garden::vegetables::Asparagus`."

#: src/ch07-02-defining-modules-to-control-scope.md:57
msgid ""
"**Private vs public**: Code within a module is private from its parent "
"modules by default. This means that it may only be accessed by the current "
"module and its descendants. To make a module public, declare it with `pub "
"mod` instead of `mod`. To make items within a public module public as well, "
"use `pub` before their declarations. Cairo also provides the `pub(crate)` "
"keyword, allowing an item or module to be only visible within the crate in "
"which the definition is included."
msgstr ""
"**Private vs public**: Le code dans un module est privé à partir de ses "
"modules parent par défaut, ce qui signifie qu'il ne peut être consulté que "
"par le module actuel et ses descendants. Pour rendre un module public, "
"déclarez-le avec `pub mod` au lieu de `mod`. Pour rendre les éléments d'un "
"module public aussi bien, utilisez `pub` avant leurs déclarations. Le Caire "
"fournit également le mot-clé `pub(crate)`, permettant qu'un élément ou un "
"module ne soit visible que dans la caisse dans laquelle la définition est "
"incluse."

#: src/ch07-02-defining-modules-to-control-scope.md:59
msgid ""
"**The `use` keyword**: Within a scope, the `use` keyword creates shortcuts "
"to items to reduce repetition of long paths. In any scope that can refer to "
"`backyard::garden::vegetables::Asparagus`, you can create a shortcut with "
"`use backyard::garden::vegetables::Asparagus;` and from then on you only "
"need to write `Asparagus` to make use of that type in the scope."
msgstr ""
"**Le mot-clé `use`**: Dans une portée, le mot-clé `use` crée des raccourcis "
"vers des éléments pour réduire la répétition de longs chemins. Dans toute "
"portée qui peut se référer à `backyard::garden::vegetables::Asparagus`, vous "
"pouvez créer un raccourci avec `use backyard::garden::vegetables::Asparagus;"
"` et à partir de là, vous devez seulement écrire `Asparagus` pour utiliser "
"ce type dans la portée."

#: src/ch07-02-defining-modules-to-control-scope.md:65
msgid ""
"Here we create a crate named `backyard` that illustrates these rules. The "
"crate’s directory, also named `backyard`, contains these files and "
"directories:"
msgstr ""
"Ici, nous créons une caisse nommée `backyard` qui illustre ces règles. Le "
"répertoire de caisse, également nommé `backyard`, contient ces fichiers et "
"répertoires:"

#: src/ch07-02-defining-modules-to-control-scope.md:78
msgid "The crate root file in this case is _src/lib.cairo_, and it contains:"
msgstr ""
"Le fichier racine de caisse dans ce cas est _src/lib.cairo_, et il contient :"

#: src/ch07-02-defining-modules-to-control-scope.md:88
msgid "\"I'm growing {:?}!\""
msgstr "\"Je grandis {:?}!\""

#: src/ch07-02-defining-modules-to-control-scope.md:92
msgid ""
"The `pub mod garden;` line imports the `garden` module. Using `pub` to make "
"`garden` publicly accessible, or `pub(crate)` if you really want to make "
"`garden` only available for your crate, is optional to run our program here, "
"as the `main` function resides in the same module as `pub mod garden;` "
"declaration. Nevertheless, not declaring `garden` as `pub` will make it not "
"accessible from any other package. This line tells the compiler to include "
"the code it finds in _src/garden.cairo_, which is:"
msgstr ""
"La ligne `pub mod Garden;` importe le module `garden`. L`utilisation de "
"`pub` pour rendre `garden` accessible au public, ou `pub(create)` si vous "
"voulez vraiment rendre `garden` disponible uniquement pour votre caisse, est "
"facultative pour exécuter notre programme ici, car la fonction `main` réside "
"dans le même module que `pub mod Garden;` déclaration. Néanmoins, ne pas "
"déclarer `garden` comme `pub` ne le rendra pas accessible à partir d`un "
"autre paquet. Cette ligne indique au compilateur d`inclure le code qu`il "
"trouve dans _src/garden.cairo_, qui est:"

#: src/ch07-02-defining-modules-to-control-scope.md:95
msgid "<span class=\"filename\">Filename: src/garden.cairo</span>"
msgstr "<span class=\"filename\">Nom du fichier: src/garden.cairo</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:101
msgid ""
"Here, `pub mod vegetables;` means the code in _src/garden/vegetables."
"cairo_ is included too. That code is:"
msgstr ""
"Ici, `pub mod légumes;` signifie le code dans _src/garden/végétables.cairo_ "
"est également inclus. Ce code est:"

#: src/ch07-02-defining-modules-to-control-scope.md:108
msgid ""
"The line `use garden::vegetables::Asparagus;` lets us bring the `Asparagus` "
"type into scope, so we can use it in the `main` function."
msgstr ""
"La ligne `utiliser jardin::végétables::Asparagus;` nous permet d'apporter le "
"type `Asparagus` dans la portée, afin que nous puissions l'utiliser dans la "
"fonction `main`."

#: src/ch07-02-defining-modules-to-control-scope.md:111
msgid ""
"Now let’s get into the details of these rules and demonstrate them in action!"
msgstr ""
"Maintenant, laissez-nous entrer dans les détails de ces règles et de les "
"démontrer en action!"

#: src/ch07-02-defining-modules-to-control-scope.md:113
msgid "Grouping Related Code in Modules"
msgstr "Grouper le code associé dans les modules"

#: src/ch07-02-defining-modules-to-control-scope.md:115
msgid ""
"_Modules_ let us organize code within a crate for readability and easy "
"reuse. Modules also allow us to control the privacy of items, because code "
"within a module is private by default. Private items are internal "
"implementation details not available for outside use. We can choose to make "
"modules and the items within them public, which exposes them to allow "
"external code to use and depend on them."
msgstr ""
"_Modules_ Organisons le code dans une caisse pour une lisibilité et une "
"réutilisation facile. Les modules nous permettent également de contrôler la "
"confidentialité des éléments, car le code dans un module est privé par "
"défaut. Les éléments privés sont des détails d'implémentation interne non "
"disponibles pour une utilisation externe. Nous pouvons choisir de rendre les "
"modules et les éléments qui les composent publics, ce qui les expose pour "
"permettre l'utilisation du code externe et en dépendre."

#: src/ch07-02-defining-modules-to-control-scope.md:121
msgid ""
"As an example, let’s write a library crate that provides the functionality "
"of a restaurant. We’ll define the signatures of functions but leave their "
"bodies empty to concentrate on the organization of the code, rather than the "
"implementation of a restaurant."
msgstr ""
"À titre d'exemple, nous allons écrire une caisse de bibliothèque qui fournit "
"la fonctionnalité d'un restaurant. Nous allons définir les signatures des "
"fonctions mais laisser leur corps vide pour se concentrer sur l'organisation "
"du code, plutôt que l'implémentation d'un restaurant."

#: src/ch07-02-defining-modules-to-control-scope.md:126
msgid ""
"In the restaurant industry, some parts of a restaurant are referred to as "
"_front of house_ and others as _back of house_. Front of house is where "
"customers are; this encompasses where the hosts seat customers, servers take "
"orders and payment, and bartenders make drinks. Back of house is where the "
"chefs and cooks work in the kitchen, dishwashers clean up, and managers do "
"administrative work."
msgstr ""
"Dans l'industrie de la restauration, certaines parties d'un restaurant sont "
"appelées _front de maison_ et d'autres comme _back de maison_. Le devant de "
"la maison est où se trouvent les clients; cela comprend où les clients de "
"siège d'hôte, les serveurs prennent les commandes et le paiement, et les "
"barmans font des boissons."

#: src/ch07-02-defining-modules-to-control-scope.md:133
msgid ""
"To structure our crate in this way, we can organize its functions into "
"nested modules. Create a new package named _restaurant_ by running `scarb "
"new restaurant`; then enter the code in Listing 7-1 into _src/lib.cairo_ to "
"define some modules and function signatures. Here’s the front of house "
"section:"
msgstr ""
"Pour structurer notre caisse de cette façon, nous pouvons organiser ses "
"fonctions en modules imbriqués. Créez un nouveau paquet nommé _restaurant_ "
"en exécutant `scarb new restaurant`; puis entrez le code dans Listing 7-1 "
"dans _src/lib.cairo_ pour définir certains modules et signatures de "
"fonctions. Voici la section avant de la maison:"

#: src/ch07-02-defining-modules-to-control-scope.md:157
msgid ""
"<span class=\"caption\">Listing 7-1: A `front_of_house` module containing "
"other modules that then contain functions</span>"
msgstr ""
"<span class=\"caption\">Liste 7-1: Un module `front_of_house` contenant "
"d'autres modules qui contiennent ensuite des fonctions</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:159
msgid ""
"We define a module with the `mod` keyword followed by the name of the module "
"(in this case, `front_of_house`). The body of the module then goes inside "
"curly brackets. Inside modules, we can place other modules, as in this case "
"with the modules `hosting` and `serving`. Modules can also hold definitions "
"for other items, such as structs, enums, constants, traits, and functions."
msgstr ""
"Nous définissons un module avec le mot-clé `mod` suivi du nom du module "
"(dans ce cas, `front_of_house`). Le corps du module entre ensuite entre "
"crochets. À l'intérieur des modules, nous pouvons placer d'autres modules, "
"comme dans ce cas avec les modules `hosting` et `serving`. Les modules "
"peuvent également contenir des définitions pour d'autres éléments, tels que "
"structs, enums, constantes, traits et fonctions."

#: src/ch07-02-defining-modules-to-control-scope.md:165
msgid ""
"By using modules, we can group related definitions together and name why "
"they’re related. Programmers using this code can navigate the code based on "
"the groups rather than having to read through all the definitions, making it "
"easier to find the definitions relevant to them. Programmers adding new "
"functionality to this code would know where to place the code to keep the "
"program organized."
msgstr ""
"En utilisant des modules, nous pouvons regrouper les définitions liées et "
"nommer pourquoi elles sont liées. Les programmeurs utilisant ce code peuvent "
"naviguer sur le code basé sur les groupes plutôt que d'avoir à lire toutes "
"les définitions, ce qui facilite la recherche des définitions qui leur sont "
"pertinentes. Les programmeurs ajoutant de nouvelles fonctionnalités à ce "
"code sauront où placer le code pour garder le programme organisé."

#: src/ch07-02-defining-modules-to-control-scope.md:171
msgid ""
"Earlier, we mentioned that _src/lib.cairo_ is called the crate root. The "
"reason for this name is that the content of this file forms a module named "
"after the crate name at the root of the crate’s module structure, known as "
"the _module tree_."
msgstr ""
"Plus tôt, nous avons mentionné que _src/lib.cairo_ est appelé la racine de "
"la caisse. La raison de ce nom est que le contenu de ce fichier forme un "
"module nommé d'après le nom de la caisse à la racine de la structure du "
"module de la caisse, connue sous le nom d'arborescence de _module_."

#: src/ch07-02-defining-modules-to-control-scope.md:174
msgid "Listing 7-2 shows the module tree for the structure in Listing 7-1."
msgstr ""
"Listing 7-2 montre l'arborescence du module pour la structure dans Listing "
"7-1."

#: src/ch07-02-defining-modules-to-control-scope.md:188
msgid ""
"<span class=\"caption\">Listing 7-2: The module tree for the code in Listing "
"7-1</span>"
msgstr ""
"<span class=\"caption\">Liste 7-2: L'arborescence du module pour le code "
"dans Listing 7-1</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:190
msgid ""
"This tree shows how some of the modules nest inside one another; for "
"example, `hosting` nests inside `front_of_house`. The tree also shows that "
"some modules are _siblings_ to each other, meaning they’re defined in the "
"same module; `hosting` and `serving` are siblings defined within "
"`front_of_house`. If module A is contained inside module B, we say that "
"module A is the _child_ of module B and that module B is the _parent_ of "
"module A. Notice that the entire module tree is rooted under the explicit "
"name of the crate _restaurant_."
msgstr ""
"Cet arbre montre comment certains modules se nichent l'un dans l'autre; par "
"exemple, `hosting` nids à l'intérieur `front_of_house`. L'arbre montre "
"également que certains modules sont _siblings_ l'un à l'autre, ce qui "
"signifie qu'ils sont définis dans le même module; `hosting` et `serving` "
"sont des frères et sœurs définis dans `front_of_house`. Si le module A est "
"contenu à l'intérieur du module B, nous disons que le module A est le "
"_enfant_ du module B et que le module B est le _parent_ du module A. Notez "
"que l'arborescence entière du module est enracinée sous le nom explicite de "
"_restaurant_."

#: src/ch07-02-defining-modules-to-control-scope.md:198
msgid ""
"The module tree might remind you of the filesystem’s directory tree on your "
"computer; this is a very apt comparison! Just like directories in a "
"filesystem, you use modules to organize your code. And just like files in a "
"directory, we need a way to find our modules."
msgstr ""
"L'arborescence des modules pourrait vous rappeler l'arborescence des "
"répertoires de filesystems sur votre ordinateur; c'est une comparaison très "
"appropriée! Tout comme les répertoires d'un système de fichiers, vous "
"utilisez des modules pour organiser votre code. Et tout comme les fichiers "
"d'un répertoire, nous avons besoin d'un moyen de trouver nos modules."

#: src/ch07-02-defining-modules-to-control-scope.md:203
msgid "{{#quiz ../quizzes/ch07-02-defining-modules-to-control-scope.toml}}"
msgstr "{{#quiz../quizes/ch07-02-defining-modules-to-control-scope.toml}}"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:3
msgid ""
"To show Cairo where to find an item in a module tree, we use a path in the "
"same way we use a path when navigating a filesystem. To call a function, we "
"need to know its path."
msgstr ""
"Pour montrer au Caire où trouver un élément dans un arbre de modules, nous "
"utilisons un chemin de la même manière que nous utilisons un chemin pour "
"naviguer dans un système de fichiers. Pour appeler une fonction, nous devons "
"connaître son chemin."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:5
msgid "A path can take two forms:"
msgstr "Un chemin peut prendre deux formes:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:7
msgid ""
"An _absolute path_ is the full path starting from a crate root. The absolute "
"path begins with the crate name."
msgstr ""
"Un chemin _absolue_ est le chemin complet à partir d'une racine de caisse. "
"Le chemin absolu commence par le nom de caisse."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:8
msgid "A _relative path_ starts from the current module."
msgstr "Un chemin _relatif_ commence à partir du module actuel."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:10
msgid ""
"Both absolute and relative paths are followed by one or more identifiers "
"separated by double colons (`::`)."
msgstr ""
"Les chemins absolus et relatifs sont suivis d'un ou plusieurs identifiants "
"séparés par des doubles côlons (`:`)."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:12
msgid ""
"To illustrate this notion let's take back our example Listing 7-1 for the "
"restaurant we used in the last chapter. We have a crate named _restaurant_ "
"in which we have a module named `front_of_house` that contains a module "
"named `hosting`. The `hosting` module contains a function named "
"`add_to_waitlist`. We want to call the `add_to_waitlist` function from the "
"`eat_at_restaurant` function. We need to tell Cairo the path to the "
"`add_to_waitlist` function so it can find it."
msgstr ""
"Nous avons une caisse nommée _restaurant_ dans laquelle nous avons un module "
"nommé `front_of_house` qui contient un module nommé `hosting`. Le module "
"`hosting` contient une fonction nommée `add_to_waitlist`. Nous voulons "
"appeler la fonction `add_to_waitlist` de la fonction `eat_at_restaurant`. "
"Nous devons dire au Caire le chemin vers la fonction `add_to_waitlist` pour "
"qu'il puisse la trouver."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:35
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:100
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:126
msgid "// Absolute path\n"
msgstr "// Chemin absolu\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:38
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:103
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:129
msgid "// Relative path\n"
msgstr "// Chemin relatif\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:43
msgid ""
"<span class=\"caption\">Listing 7-3: Calling the `add_to_waitlist` function "
"using absolute and relative paths</span>"
msgstr ""
"<span class=\"caption\">Liste 7-3: Appel à la fonction `add_to_waitlist` en "
"utilisant des chemins absolus et relatifs</span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:45
msgid ""
"The `eat_at_restaurant` function is part of our library's public API, so we "
"mark it with the `pub` keyword. We’ll go into more detail about `pub` in "
"the [\"Exposing Paths with the `pub` Keyword\"](./ch07-03-paths-for-"
"referring-to-an-item-in-the-module-tree.md#exposing-paths-with-the-pub-"
"keyword) section."
msgstr ""
"La fonction `eat_at_restaurant` fait partie de l'API publique de notre "
"bibliothèque, donc nous la marquons avec le mot-clé `pub`. Nous allons "
"entrer plus de détails sur `pub` dans la section [\"Exposer les chemins avec "
"le mot-clé `pub`\"](./ch07-03-paths-for-referencering-to-an-item-in-the-"
"module-tree.md#exposer les chemins-with-pub-keyword)."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:47
msgid ""
"The first time we call the `add_to_waitlist` function in "
"`eat_at_restaurant`, we use an absolute path. The `add_to_waitlist` function "
"is defined in the same crate as `eat_at_restaurant`. In Cairo, absolute "
"paths start from the crate root, which you need to refer to by using the "
"crate name. You can imagine a filesystem with the same structure: we’d "
"specify the path _/front_of_house/hosting/add_to_waitlist_ to run the "
"_add_to_waitlist_ program; using the crate name to start from the crate root "
"is like using a slash (`/`) to start from the filesystem root in your shell."
msgstr ""
"La première fois que nous appelons la fonction `add_to_waitlist` dans "
"`eat_at_restaurant`, nous utilisons un chemin absolu. La fonction "
"`add_to_waitlist` est définie dans la même caisse que `eat_at_restaurant`. "
"Au Caire, les chemins absolus commencent à partir de la racine de la caisse, "
"à laquelle vous devez vous référer en utilisant le nom de la caisse. Vous "
"pouvez imaginer un système de fichiers avec la même structure : nous avons "
"spécifié le chemin _/front_of_house/hosting/add_to_waitlist_ pour exécuter "
"le programme _add_to_waitlist_; utiliser le nom de la caisse pour démarrer à "
"partir de la racine de la caisse est comme utiliser une barre oblique (`/`) "
"pour démarrer à partir de la racine du système de fichiers dans votre shell."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:51
msgid ""
"The second time we call `add_to_waitlist`, we use a relative path. The path "
"starts with `front_of_house`, the name of the module defined at the same "
"level of the module tree as `eat_at_restaurant`. Here the filesystem "
"equivalent would be using the path _./front_of_house/hosting/"
"add_to_waitlist_. Starting with a module name means that the path is "
"relative to the current module."
msgstr ""
"La deuxième fois que nous appelons `add_to_waitlist`, nous utilisons un "
"chemin relatif. Le chemin commence par `front_of_house`, le nom du module "
"défini au même niveau de l'arborescence du module que `eat_at_restaurant`. "
"Ici, l'équivalent du système de fichiers utiliserait le chemin _./"
"front_of_house/hosting/add_to_waitlist_. En commençant par un nom de module, "
"le chemin est relatif au module courant."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:53
msgid ""
"Let’s try to compile Listing 7-3 and find out why it won’t compile yet! We "
"get the following error:"
msgstr ""
"Essayez de compiler Listing 7-3 et découvrez pourquoi il n'a pas encore "
"compilé! Nous obtenons l'erreur suivante:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:78
msgid ""
"The error messages say that module `hosting` and the `add_to_waitlist` "
"function are not visible. In other words, we have the correct paths for the "
"`hosting` module and the `add_to_waitlist` function, but Cairo won’t let us "
"use them because it doesn’t have access to them. In Cairo, all items "
"(functions, methods, structs, enums, modules, and constants) are private to "
"parent modules by default. If you want to make an item like a function or "
"struct private, you put it in a module."
msgstr ""
"Les messages d'erreur indiquent que le module `hosting` et la fonction "
"`add_to_waitlist` ne sont pas visibles. En d'autres termes, nous avons les "
"chemins corrects pour le module `hosting` et la fonction `add_to_waitlist`, "
"mais le Caire n'a pas laissé nous les utiliser parce qu'il n'a pas accès à "
"eux. Au Caire, tous les éléments (fonctions, méthodes, structs, enums, "
"modules et constantes) sont privés aux modules parent par défaut."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:80
msgid ""
"Items in a parent module can’t use the private items inside child modules, "
"but items in child modules can use the items in their ancestor modules. This "
"is because child modules wrap and hide their implementation details, but the "
"child modules can see the context in which they’re defined. To continue with "
"our metaphor, think of the privacy rules as being like the back office of a "
"restaurant: what goes on in there is private to restaurant customers, but "
"office managers can see and do everything in the restaurant they operate."
msgstr ""
"Les éléments d'un module parent ne peuvent pas utiliser les éléments privés "
"à l'intérieur des modules enfants, mais les éléments des modules enfants "
"peuvent utiliser les éléments de leurs modules ancêtres. C'est parce que les "
"modules enfants enveloppent et cachent leurs détails d'implémentation, mais "
"les modules enfants peuvent voir le contexte dans lequel ils sont définis. "
"Pour continuer avec notre métaphore, pensez aux règles de confidentialité "
"comme étant le back office d'un restaurant : ce qui se passe là-bas est "
"privé pour les clients du restaurant, mais les gestionnaires de bureau "
"peuvent voir et faire tout ce qui se passe dans le restaurant qu'ils "
"exploitent."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:82
msgid ""
"Cairo chose to have the module system function this way so that hiding inner "
"implementation details is the default. That way, you know which parts of the "
"inner code you can change without breaking outer code. However, Cairo does "
"give you the option to expose inner parts of child modules’ code to outer "
"ancestor modules by using the `pub` keyword to make an item public."
msgstr ""
"Le Caire a choisi de faire fonctionner le système de module de cette façon "
"afin que les détails de l'implémentation interne soient cachés par défaut. "
"De cette façon, vous savez quelles parties du code intérieur vous pouvez "
"changer sans casser le code extérieur. Cependant, Le Caire vous donne la "
"possibilité d'exposer les parties intérieures des modules enfants de code "
"aux modules de l'ancêtre externe en utilisant le mot-clé `pub` pour rendre "
"un article public."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:86
msgid "Exposing Paths with the `pub` Keyword"
msgstr "Exposer les chemins avec le mot-clé `pub`"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:88
msgid ""
"Let’s return to the previous error that told us the `hosting` module and the "
"`add_to_waitlist` function are not visible. We want the `eat_at_restaurant` "
"function in the parent module to have access to the `add_to_waitlist` "
"function in the child module, so we mark the `hosting` module with the `pub` "
"keyword, as shown in Listing 7-4."
msgstr ""
"Revenez à l'erreur précédente qui nous a dit que le module `hosting` et la "
"fonction `add_to_waitlist` ne sont pas visibles. Nous voulons que la "
"fonction `eat_at_restaurant` dans le module parent ait accès à la fonction "
"`add_to_waitlist` dans le module enfant, de sorte que nous marquions le "
"module `hosting` avec le mot-clé `pub`, comme indiqué dans Listing 7-4."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:108
msgid ""
"<span class=\"caption\">Listing 7-4: Declaring the `hosting` module as `pub` "
"to use it from `eat_at_restaurant`</span>"
msgstr ""
"<span class=\"caption\">Liste 7-4: Déclaration du module `hosting` comme "
"`pub` pour l'utiliser à partir de `eat_at_restaurant`</span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:110
msgid "Unfortunately, the code in Listing 7-4 still results in an error."
msgstr ""
"Malheureusement, le code dans Listing 7-4 entraîne toujours une erreur."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:112
msgid ""
"What happened? Adding the `pub` keyword in front of `mod hosting;` makes the "
"module public. With this change, if we can access `front_of_house`, we can "
"access `hosting`. But the contents of `hosting` are still private; making "
"the module public doesn’t make its contents public. The `pub` keyword on a "
"module only lets code in its ancestor modules refer to it, not access its "
"inner code. Because modules are containers, there’s not much we can do by "
"only making the module public; we need to go further and choose to make one "
"or more of the items within the module public as well."
msgstr ""
"Avec ce changement, si nous pouvons accéder à `front_of_house`, nous pouvons "
"accéder à `hosting`. Mais le contenu de `hosting` sont toujours privés; "
"rendre le module public ne rend pas son contenu public. Le mot-clé `pub` sur "
"un module permet seulement le code dans ses modules d'ancêtres, ne pas "
"accéder à son code intérieur. Parce que les modules sont des conteneurs, il "
"n'y a pas grand chose que nous pouvons faire en rendant le module public; "
"nous devons aller plus loin et choisir de rendre un ou plusieurs des "
"éléments dans le module public aussi."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:114
msgid ""
"Let’s also make the `add_to_waitlist` function public by adding the `pub` "
"keyword before its definition, as in Listing 7-5."
msgstr ""
"Les lecteurs rendent également publique la fonction `add_to_waitlist` en "
"ajoutant le mot-clé `pub` avant sa définition, comme dans Listing 7-5."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:127
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:130
msgid "// ✅ Compiles\n"
msgstr "// -Compilés\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:134
msgid ""
"<span class=\"caption\">Listing 7-5: Declaring the `hosting` module as `pub` "
"to use it from `eat_at_restaurant`</span>"
msgstr ""
"<span class=\"caption\">Liste 7-5: Déclaration du module `hosting` comme "
"`pub` pour l'utiliser à partir de `eat_at_restaurant`</span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:136
msgid ""
"Now the code will compile! To see why adding the `pub` keyword lets us use "
"these paths in `add_to_waitlist` with respect to the privacy rules, let’s "
"look at the absolute and the relative paths."
msgstr ""
"Maintenant le code va compiler! Pour voir pourquoi ajouter le mot-clé `pub` "
"nous permet d'utiliser ces chemins dans `add_to_waitlist` en ce qui concerne "
"les règles de confidentialité, let=s regardez les chemins absolus et "
"relatifs."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:138
msgid ""
"In the absolute path, we start with the crate root, the root of our crate’s "
"module tree. The `front_of_house` module is defined in the crate root. While "
"`front_of_house` isn’t public, because the `eat_at_restaurant` function is "
"defined in the same module as `front_of_house` (that is, `front_of_house` "
"and `eat_at_restaurant` are siblings), we can refer to `front_of_house` from "
"`eat_at_restaurant`. Next is the `hosting` module marked with `pub`. We can "
"access the parent module of `hosting`, so we can access `hosting` itself. "
"Finally, the `add_to_waitlist` function is marked with `pub` and we can "
"access its parent module, so this function call works!"
msgstr ""
"Le module `front_of_house` est défini dans la racine de la caisse. Alors que "
"`front_of_house` n`est pas public, parce que la fonction `eat_at_restaurant` "
"est définie dans le même module que `front_of_house` (c`est-à-dire "
"`front_of_house` et `eat_at_restaurant` sont des frères et sœurs), nous "
"pouvons nous référer à `front_of_house` de `eat_at_restaurant`. Ensuite est "
"le module `hosting` marqué avec `pub`. Nous pouvons accéder au module parent "
"de `hosting`, afin que nous puissions accéder à `hosting` lui-même. Enfin, "
"la fonction `add_to_waitlist` est marquée avec `pub` et nous pouvons accéder "
"à son module parent, de sorte que cet appel de fonction fonctionne!"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:140
msgid ""
"In the relative path, the logic is the same as the absolute path except for "
"the first step: rather than starting from the crate root, the path starts "
"from `front_of_house`. The `front_of_house` module is defined within the "
"same module as `eat_at_restaurant`, so the relative path starting from the "
"module in which `eat_at_restaurant` is defined works. Then, because "
"`hosting` and `add_to_waitlist` are marked with `pub`, the rest of the path "
"works, and this function call is valid!"
msgstr ""
"Dans le chemin relatif, la logique est la même que le chemin absolu sauf "
"pour la première étape: plutôt que de partir de la racine de caisse, le "
"chemin commence par `front_of_house`. Le module `front_of_house` est défini "
"dans le même module que `eat_at_restaurant`, de sorte que le chemin relatif "
"commençant par le module dans lequel `eat_at_restaurant` est défini "
"fonctionne. Ensuite, parce que `hosting` et `add_to_waitlist` sont marqués "
"par `pub`, le reste du chemin fonctionne, et cet appel de fonction est "
"valide!"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:142
msgid "{{#quiz ../quizzes/ch07-03-paths-in-module-tree-1.toml}}"
msgstr "{{#quiz../quizes/ch07-03-paths-in-module-tree-1.toml}}"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:144
msgid "Starting Relative Paths with `super`"
msgstr "Début des chemins relatifs avec `super`"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:146
msgid ""
"We can construct relative paths that begin in the parent module, rather than "
"the current module or the crate root, by using `super` at the start of the "
"path. This is like starting a filesystem path with the `..` syntax. Using "
"`super` allows us to reference an item that we know is in the parent module, "
"which can make rearranging the module tree easier when the module is closely "
"related to the parent, but the parent might be moved elsewhere in the module "
"tree someday."
msgstr ""
"Nous pouvons construire des chemins relatifs qui commencent dans le module "
"parent, plutôt que le module courant ou la racine de caisse, en utilisant "
"`super` au début du chemin. C'est comme démarrer un chemin du système de "
"fichiers avec la syntaxe `..`. L'utilisation de `super` nous permet de "
"référencer un élément que nous savons dans le module parent, ce qui peut "
"rendre plus facile la réorganisation de l'arborescence du module lorsque le "
"module est étroitement lié au parent, mais le parent pourrait être déplacé "
"ailleurs dans l'arborescence du module un jour."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:148
msgid ""
"Consider the code in Listing 7-6 that models the situation in which a chef "
"fixes an incorrect order and personally brings it out to the customer. The "
"function `fix_incorrect_order` defined in the `back_of_house` module calls "
"the function `deliver_order` defined in the parent module by specifying the "
"path to `deliver_order` starting with `super`:"
msgstr ""
"Considérez le code dans Listing 7-6 qui modélise la situation dans laquelle "
"un chef corrige un ordre incorrect et l'apporte personnellement au client. "
"La fonction `fix_incorred_order` définie dans le module `back_of_house` "
"appelle la fonction `deliver_order` définie dans le module parent en "
"spécifiant le chemin vers `deliver_order` en commençant par `super`:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:165
msgid ""
"<span class=\"caption\">Listing 7-6: Calling a function using a relative "
"path starting with `super`</span>"
msgstr ""
"<span class=\"caption\">Liste 7-6: Appeler une fonction en utilisant un "
"chemin relatif commençant par `super`</span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:167
msgid ""
"Here you can see directly that you access a parent's module easily using "
"`super`, which wasn't the case previously. Note that the `back_of_house` is "
"kept private, as external users are not supposed to interact with the back "
"of house directly."
msgstr ""
"Ici, vous pouvez voir directement que vous accédez au module d'un parent "
"facilement en utilisant `super`, ce qui n'était pas le cas auparavant. Notez "
"que le `back_of_house` est gardé privé, car les utilisateurs externes ne "
"sont pas censés interagir directement avec l'arrière de la maison."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:170
msgid "Making Structs and Enums Public"
msgstr "Faire en sorte que les structures et les Enums soient publics"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:172
msgid ""
"We can also use `pub` to designate structs and enums as public, but there "
"are a few extra details to consider when using `pub` with structs and enums."
msgstr ""
"Nous pouvons également utiliser `pub` pour désigner les structures et les "
"enums comme publics, mais il y a quelques détails supplémentaires à "
"considérer lors de l'utilisation de `pub` avec des structures et des enums."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:174
msgid ""
"If we use `pub` before a struct definition, we make the struct public, but "
"the struct’s fields will still be private. We can make each field public or "
"not on a case-by-case basis."
msgstr ""
"Si nous utilisons `pub` avant une définition de structure, nous rendons la "
"structure publique, mais les champs de structure seront encore privés. Nous "
"pouvons rendre chaque champ public ou non au cas par cas."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:175
msgid ""
"In contrast, if we make an enum public, all of its variants are then public. "
"We only need the `pub` before the `enum` keyword."
msgstr ""
"En revanche, si nous rendons un enum public, toutes ses variantes sont alors "
"publiques. Nous avons seulement besoin du `pub` avant le mot-clé `enum`."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:177
msgid ""
"There’s one more situation involving `pub` that we haven’t covered, and that "
"is our last module system feature: the `use` keyword. We’ll cover `use` by "
"itself first, and then we’ll show how to combine `pub` and `use`."
msgstr ""
"Il ya une autre situation impliquant `pub` que nous n'avons pas couvert, et "
"c'est notre dernière fonctionnalité de système de module: le mot-clé `use`. "
"Nous allons couvrir `use` d'abord, puis nous allons montrer comment combiner "
"`pub` et `use`."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:179
msgid "{{#quiz ../quizzes/ch07-03-paths-in-module-tree-2.toml}}"
msgstr "{{#quiz../quizes/ch07-03-paths-in-module-tree-2.toml}}"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:3
msgid ""
"Having to write out the paths to call functions can feel inconvenient and "
"repetitive. Fortunately, there’s a way to simplify this process: we can "
"create a shortcut to a path with the `use` keyword once, and then use the "
"shorter name everywhere else in the scope."
msgstr ""
"Le fait d'écrire les chemins des fonctions d'appel peut sembler gênant et "
"répétitif. Heureusement, il y a un moyen de simplifier ce processus : nous "
"pouvons créer un raccourci vers un chemin avec le mot-clé `use` une fois, "
"puis utiliser le nom plus court partout ailleurs dans la portée."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:5
msgid ""
"In Listing 7-7, we bring the `restaurant::front_of_house::hosting` module "
"into the scope of the `eat_at_restaurant` function so we only have to "
"specify `hosting::add_to_waitlist` to call the `add_to_waitlist` function in "
"`eat_at_restaurant`."
msgstr ""
"Dans Listing 7-7, nous apportons le module `restaurant::front_of_house::"
"hosting` dans la portée de la fonction `eat_at_restaurant` de sorte que nous "
"n'avons qu'à spécifier `hosting::add_to_waitlist` pour appeler la fonction "
"`add_to_waitlist` dans `eat_at_restaurant`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:13
msgid ""
"// Assuming \"front_of_house\" module is contained in a crate called "
"\"restaurant\", as mentioned in the section \"Defining Modules to Control "
"Scope\"\n"
"// If the path is created in the same crate, \"restaurant\" is optional in "
"the use statement\n"
msgstr ""
"// En supposant que le module \"front_of_house\" soit contenu dans une "
"caisse appelée \"restaurant\", comme mentionné dans la section \"Définition "
"des modules pour contrôler la portée\" // Si le chemin est créé dans la même "
"caisse, \"restaurant\" est optionnel dans la déclaration d'utilisation\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:25
msgid "// ✅ Shorter path\n"
msgstr "// -Shorter le chemin\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:29
msgid ""
"<span class=\"caption\">Listing 7-7: Bringing a module into scope with "
"`use`</span>"
msgstr ""
"<span class=\"caption\">Liste 7-7: Apporter un module dans la portée avec "
"`use`</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:31
msgid ""
"Adding `use` and a path in a scope is similar to creating a symbolic link in "
"the filesystem. By adding `use restaurant::front_of_house::hosting;` in the "
"crate root, `hosting` is now a valid name in that scope, just as though the "
"`hosting` module had been defined in the crate root."
msgstr ""
"Ajouter `use` et un chemin dans une portée est similaire à créer un lien "
"symbolique dans le système de fichiers. En ajoutant `use restaurant::"
"front_of_house::hosting;` dans la racine de caisse, `hosting` est maintenant "
"un nom valide dans cette portée, tout comme si le module `hosting` avait été "
"défini dans la racine de caisse."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:33
msgid ""
"Note that `use` only creates the shortcut for the particular scope in which "
"the `use` occurs. Listing 7-8 moves the `eat_at_restaurant` function into a "
"new child module named `customer`, which is then a different scope than the "
"`use` statement, so the function body won’t compile:"
msgstr ""
"Notez que `use` crée seulement le raccourci pour la portée particulière dans "
"laquelle se produit `use`. Listing 7-8 déplace la fonction "
"`eat_at_restaurant` dans un nouveau module enfant nommé `client`, qui est "
"alors une portée différente de l'instruction `use`, de sorte que le corps de "
"la fonction n'a pas compilé:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:54
msgid ""
"<span class=\"caption\">Listing 7-8: A `use` statement only applies in the "
"scope it’s in.</span>"
msgstr ""
"<span class=\"caption\">Liste 7-8: Une mention `use` ne s'applique que dans "
"le champ d'application où elle se trouve.</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:56
msgid ""
"The compiler error shows that the shortcut no longer applies within the "
"`customer` module:"
msgstr ""
"L'erreur du compilateur montre que le raccourci ne s'applique plus dans le "
"module `client`:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:75
msgid "Creating Idiomatic `use` Paths"
msgstr "Créer des chemins d'utilisation idiomatiques"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:77
msgid ""
"In Listing 7-7, you might have wondered why we specified `use restaurant::"
"front_of_house::hosting` and then called `hosting::add_to_waitlist` in "
"`eat_at_restaurant` rather than specifying the `use` path all the way out to "
"the `add_to_waitlist` function to achieve the same result, as in Listing 7-9."
msgstr ""
"Dans Listing 7-7, vous vous êtes peut-être demandé pourquoi nous avons "
"spécifié `use restaurant::front_of_house::hosting` et ensuite appelé "
"`hosting::add_to_waitlist` dans `eat_at_restaurant` plutôt que de spécifier "
"le chemin `use` jusqu`à la fonction `add_to_waitlist` pour obtenir le même "
"résultat, comme dans Listing 7-9."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:97
msgid ""
"<span class=\"caption\">Listing 7-9: Bringing the `add_to_waitlist` function "
"into scope with `use`, which is unidiomatic</span>"
msgstr ""
"<span class=\"caption\">Liste 7-9: Apporter la fonction `add_to_waitlist` "
"dans la portée avec `use`, qui est unidiomatique</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:99
msgid ""
"Although both Listing 7-7 and 7-9 accomplish the same task, Listing 7-7 is "
"the idiomatic way to bring a function into scope with `use`. Bringing the "
"function’s parent module into scope with `use` means we have to specify the "
"parent module when calling the function. Specifying the parent module when "
"calling the function makes it clear that the function isn’t locally defined "
"while still minimizing repetition of the full path. The code in Listing 7-9 "
"is unclear as to where `add_to_waitlist` is defined."
msgstr ""
"Bien que les deux Listing 7-7 et 7-9 accomplissent la même tâche, Listing "
"7-7 est la manière idiomatique d'introduire une fonction dans la portée avec "
"`use`. Apporter le module parent de la fonction dans la portée avec `use` "
"signifie que nous devons spécifier le module parent lors de l'appel de la "
"fonction. Spécifier le module parent lors de l'appel de la fonction indique "
"clairement que la fonction n'est pas localement définie tout en minimisant "
"la répétition du chemin complet. Le code dans Listing 7-9 n'est pas clair "
"quant à l'endroit où `add_to_waitlist` est défini."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:107
msgid ""
"On the other hand, when bringing in structs, enums, traits, and other items "
"with `use`, it’s idiomatic to specify the full path. Listing 7-10 shows the "
"idiomatic way to bring the core library’s `BitSize` trait into the scope, "
"allowing to call `bits` method to retrieve the size in bits of a type."
msgstr ""
"D'autre part, lors de l'introduction de structures, enums, traits, et "
"d'autres éléments avec `use`, il est idiomatique pour spécifier le chemin "
"complet. Listing 7-10 montre la manière idiomatique d'introduire le "
"caractère de base de bibliothèque `BitSize` dans la portée, permettant "
"d'appeler la méthode `bits` pour récupérer la taille en bits d'un type."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:114
msgid "\"A u8 variable has {} bits\""
msgstr "\"Une variable u8 a {} bits\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:118
msgid ""
"<span class=\"caption\">Listing 7-10: Bringing `BitSize` trait into scope in "
"an idiomatic way</span>"
msgstr ""
"<span class=\"caption\">Liste 7-10: Porter le caractère `BitSize` dans la "
"portée d'une manière idiomatique</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:120
msgid ""
"There’s no strong reason behind this idiom: it’s just the convention that "
"has emerged in the Rust community, and folks have gotten used to reading and "
"writing Rust code this way. As Cairo shares many idioms with Rust, we follow "
"this convention as well."
msgstr ""
"Il n'y a pas de raison forte derrière cet idiome: c'est juste la convention "
"qui a émergé dans la communauté Rust, et les gens se sont habitués à lire et "
"écrire le code Rust de cette façon. Comme le Caire partage beaucoup "
"d'idiomes avec Rust, nous suivons cette convention aussi."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:124
msgid ""
"The exception to this idiom is if we’re bringing two items with the same "
"name into scope with `use` statements, because Cairo doesn’t allow that."
msgstr ""
"L'exception à cet idiome est si nous apportons deux éléments avec le même "
"nom dans la portée avec des déclarations d'utilisation, parce que le Caire "
"ne le permet pas."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:127
msgid "Providing New Names with the `as` Keyword"
msgstr "Fournir de nouveaux noms avec le mot-clé `as`"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:129
msgid ""
"There’s another solution to the problem of bringing two types of the same "
"name into the same scope with `use`: after the path, we can specify `as` and "
"a new local name, or _alias_, for the type. Listing 7-11 shows how you can "
"rename an import with `as`:"
msgstr ""
"Il ya une autre solution au problème d'amener deux types de même nom dans la "
"même portée avec `use`: après le chemin, nous pouvons spécifier `as` et un "
"nouveau nom local, ou _alias_, pour le type. Listing 7-11 montre comment "
"vous pouvez renommer une importation avec `as`:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:139
msgid "// ArrayTrait was renamed to Arr\n"
msgstr "// ArrayTrait a été rebaptisé Arr\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:144
msgid ""
"<span class=\"caption\">Listing 7-11: Renaming a trait when it’s brought "
"into scope with the `as` keyword</span>"
msgstr ""
"<span class=\"caption\">Liste 7-11: Renaming a trait when it=\"s introduit "
"dans la portée avec le mot-clé `as`</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:146
msgid ""
"Here, we brought `ArrayTrait` into scope with the alias `Arr`. We can now "
"access the trait's methods with the `Arr` identifier."
msgstr ""
"Ici, nous avons mis la portée `ArrayTrait` avec l'alias `Arr`. Nous pouvons "
"maintenant accéder aux méthodes du trait avec l'identificateur `Arr`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:148
msgid "Importing Multiple Items from the Same Module"
msgstr "Importation de plusieurs éléments du même module"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:150
msgid ""
"When you want to import multiple items (like functions, structs or enums) "
"from the same module in Cairo, you can use curly braces `{}` to list all of "
"the items that you want to import. This helps to keep your code clean and "
"easy to read by avoiding a long list of individual `use` statements."
msgstr ""
"Lorsque vous voulez importer plusieurs éléments (comme des fonctions, des "
"structures ou des enums) du même module au Caire, vous pouvez utiliser des "
"accessoires bouclés `{}` pour lister tous les éléments que vous voulez "
"importer. Cela permet de garder votre code propre et facile à lire en "
"évitant une longue liste de déclarations individuelles d'utilisation."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:155
msgid ""
"The general syntax for importing multiple items from the same module is:"
msgstr ""
"La syntaxe générale pour importer plusieurs éléments du même module est :"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:161
msgid ""
"Here is an example where we import three structures from the same module:"
msgstr "Voici un exemple où nous importons trois structures du même module :"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:164
msgid ""
"// Assuming we have a module called `shapes` with the structures `Square`, "
"`Circle`, and `Triangle`.\n"
msgstr ""
"// Supposons que nous ayons un module appelé `shapes` avec les structures "
"`Square`, `Circle` et `Triangle`.\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:182
msgid ""
"// We can import the structures `Square`, `Circle`, and `Triangle` from the "
"`shapes` module like this:\n"
msgstr ""
"// Nous pouvons importer les structures `Square`, `Circle` et `Triangle` à "
"partir du module `shapes` comme ceci:\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:185
msgid ""
"// Now we can directly use `Square`, `Circle`, and `Triangle` in our code.\n"
msgstr ""
"// Nous pouvons maintenant utiliser directement `Square`, `Circle` et "
"`Triangle` dans notre code.\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:190
#: src/ch17-01-general-recommendations.md:143
#: src/ch17-01-general-recommendations.md:148
msgid "// ...\n"
msgstr "//...\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:195
msgid ""
"<span class=\"caption\">Listing 7-12: Importing multiple items from the same "
"module</span>"
msgstr ""
"<span class=\"caption\">Liste 7-12: Importation de plusieurs éléments du "
"même module</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:197
msgid "Re-exporting Names in Module Files"
msgstr "Réexportation de noms dans des fichiers de modules"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:199
msgid ""
"When we bring a name into scope with the `use` keyword, the name available "
"in the new scope can be imported as if it had been defined in that code’s "
"scope. This technique is called _re-exporting_ because we’re bringing an "
"item into scope, but also making that item available for others to bring "
"into their scope, with the `pub` keyword."
msgstr ""
"Lorsque nous apportons un nom dans la portée avec le mot-clé `use`, le nom "
"disponible dans la nouvelle portée peut être importé comme s'il avait été "
"défini dans la portée de ce code. Cette technique est appelée _re-exporting_ "
"parce que nous apportons un élément dans la portée, mais aussi rendre cet "
"élément disponible pour les autres à apporter dans leur portée, avec le mot-"
"clé `pub`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:204
msgid ""
"For example, let's re-export the `add_to_waitlist` function in the "
"restaurant example:"
msgstr ""
"Par exemple, réexportons la fonction `add_to_waitlist` dans l'exemple du "
"restaurant :"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:222
msgid ""
"<span class=\"caption\">Listing 7-13: Making a name available for any code "
"to use from a new scope with `pub use`</span>"
msgstr ""
"<span class=\"caption\">Liste 7-13: Rendre disponible un nom pour tout code "
"à utiliser à partir d'une nouvelle portée avec `pub use`</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:224
msgid ""
"Before this change, external code would have to call the `add_to_waitlist` "
"function by using the path `restaurant::front_of_house::hosting::"
"add_to_waitlist()`. Now that this `pub use` has re-exported the `hosting` "
"module from the root module, external code can now use the path `restaurant::"
"hosting::add_to_waitlist()` instead."
msgstr ""
"Avant ce changement, le code externe devrait appeler la fonction "
"`add_to_waitlist` en utilisant le chemin `restaurant::front_of_house::"
"hosting::add_to_waitlist()`. Maintenant que ce `pub use` a réexporté le "
"module `hosting` du module racine, le code externe peut désormais utiliser "
"le chemin `restaurant::hosting::add_to_waitlist()`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:229
msgid ""
"Re-exporting is useful when the internal structure of your code is different "
"from how programmers calling your code would think about the domain. For "
"example, in this restaurant metaphor, the people running the restaurant "
"think about “front of house” and “back of house.” But customers visiting a "
"restaurant probably won’t think about the parts of the restaurant in those "
"terms. With `pub use`, we can write our code with one structure but expose a "
"different structure. Doing so makes our library well organized for "
"programmers working on the library and programmers calling the library."
msgstr ""
"La réexportation est utile lorsque la structure interne de votre code est "
"différente de la façon dont les programmeurs appelant votre code penseraient "
"au domaine. Par exemple, dans cette métaphore de restaurant, les gens qui "
"dirigent le restaurant pensent à \"front de maison\" et \"back of house.\" "
"Mais les clients visitant un restaurant n'ont probablement pas pensé aux "
"parties du restaurant en ces termes. Avec \"pub use\", nous pouvons écrire "
"notre code avec une seule structure mais exposer une structure différente."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:238
msgid "Using External Packages in Cairo with Scarb"
msgstr "Utilisation de paquets externes au Caire avec écharpe"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:240
msgid ""
"You might need to use external packages to leverage the functionality "
"provided by the community. Scarb allows you to use dependencies by cloning "
"packages from their Git repositories. To use an external package in your "
"project with Scarb, simply declare the Git repository URL of the dependency "
"you want to add in a dedicated `[dependencies]` section in your _Scarb.toml_ "
"configuration file. Note that the URL might correspond to the main branch, "
"or any specific commit, branch or tag. For this, you will have to pass an "
"extra `rev`, `branch`, or `tag` field, respectively. For example, the "
"following code imports the main branch of _alexandria_math_ crate from "
"_alexandria_ package:"
msgstr ""
"Pour utiliser un paquet externe dans votre projet avec Scarb, il suffit de "
"déclarer l'URL du dépôt Git de la dépendance que vous souhaitez ajouter dans "
"une section dédiée `[dependences]` dans votre fichier de configuration "
"_scarb.toml_. Notez que l'URL peut correspondre à la branche principale, ou "
"à tout commit, branche ou balise spécifique. Pour cela, vous devrez passer "
"un champ supplémentaire `rev`, `branch` ou `tag`, respectivement. Par "
"exemple, le code suivant importe la branche principale de _alexandria_math_ "
"crate à partir du paquet _alexandria_:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:244
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:251
msgid "\"https://github.com/keep-starknet-strange/alexandria.git\""
msgstr "\"https://github.com/keep-starknet-strange/alexandria.git\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:247
msgid ""
"while the following code imports a specific branch (which is deprecated and "
"should not be used):"
msgstr ""
"tandis que le code suivant importe une branche spécifique (qui est dépréciée "
"et ne doit pas être utilisée):"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:251
msgid "\"cairo-v2.3.0-rc0\""
msgstr "\"cairo-v2,3.0-rc0\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:254
msgid ""
"If you want to import multiple packages in your project, you need to create "
"only one `[dependencies]` section and list all the desired packages beneath "
"it. You can also specify development dependencies by declaring a `[dev-"
"dependencies]` section."
msgstr ""
"Si vous voulez importer plusieurs paquets dans votre projet, vous devez "
"créer une seule section `[dependences]` et lister tous les paquets souhaités "
"sous elle. Vous pouvez également spécifier les dépendances de développement "
"en déclarant une section `[dev-dependences]`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:256
msgid ""
"After that, simply run `scarb build` to fetch all external dependencies and "
"compile your package with all the dependencies included."
msgstr ""
"Après cela, lancez simplement `scarb build` pour récupérer toutes les "
"dépendances externes et compiler votre paquet avec toutes les dépendances "
"incluses."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:258
msgid ""
"Note that it is also possible to add dependencies with the `scarb add` "
"command, which will automatically edit the _Scarb.toml_ file for you. For "
"development dependencies, just use the `scarb add --dev` command."
msgstr ""
"Notez qu'il est également possible d'ajouter des dépendances avec la "
"commande `scarb add`, qui va automatiquement modifier le fichier _Scarb."
"toml_ pour vous. Pour les dépendances de développement, utilisez simplement "
"la commande `scarb add --dev`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:260
msgid ""
"To remove a dependency, simply remove the corresponding line from your "
"_Scarb.toml_ file, or use the `scarb rm` command."
msgstr ""
"Pour supprimer une dépendance, il suffit de supprimer la ligne "
"correspondante de votre fichier _Scarb.toml_ ou d'utiliser la commande "
"`scarb rm`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:262
msgid "{{#quiz ../quizzes/ch07-04-bringing-paths-into-scope.toml}}"
msgstr "{{#quiz../quizes/ch07-04-portant-chemins-dans-scope.toml}}"

#: src/ch07-05-separating-modules-into-different-files.md:3
msgid ""
"So far, all the examples in this chapter defined multiple modules in one "
"file. When modules get large, you might want to move their definitions to a "
"separate file to make the code easier to navigate."
msgstr ""
"Jusqu'à présent, tous les exemples de ce chapitre définissaient plusieurs "
"modules dans un seul fichier. Lorsque les modules deviennent grands, vous "
"pourriez vouloir déplacer leurs définitions dans un fichier séparé pour "
"rendre le code plus facile à naviguer."

#: src/ch07-05-separating-modules-into-different-files.md:7
msgid ""
"For example, let’s start from the code in Listing 7-7 that had multiple "
"restaurant modules. We’ll extract modules into files instead of having all "
"the modules defined in the crate root file. In this case, the crate root "
"file is _src/lib.cairo_."
msgstr ""
"Par exemple, on commence à partir du code dans Listing 7-7 qui avait "
"plusieurs modules de restaurant. On extrait des modules dans des fichiers au "
"lieu d'avoir tous les modules définis dans le fichier racine de caisse. Dans "
"ce cas, le fichier racine de caisse est _src/lib.cairo_."

#: src/ch07-05-separating-modules-into-different-files.md:12
msgid ""
"First, we’ll extract the `front_of_house` module to its own file. Remove the "
"code inside the curly brackets for the `front_of_house` module, leaving only "
"the `mod front_of_house;` declaration, so that _src/lib.cairo_ contains the "
"code shown in Listing 7-14. Note that this won’t compile until we create the "
"_src/front_of_house.cairo_ file."
msgstr ""
"Tout d'abord, nous allons extraire le module `front_of_house` dans son "
"propre fichier. Supprimez le code à l'intérieur des crochets pour le module "
"`front_of_house`, ne laissant que la déclaration `mod front_of_house;`, de "
"sorte que _src/lib.cairo_ contient le code affiché dans Listing 7-14. Notez "
"que ce won=t compile jusqu'à ce que nous créions le fichier _src/"
"front_of_house.cairo_."

#: src/ch07-05-separating-modules-into-different-files.md:30
msgid ""
"<span class=\"caption\">Listing 7-14: Declaring the `front_of_house` module "
"whose body will be in _src/front_of_house.cairo_</span>"
msgstr ""
"<span class=\"caption\">Liste 7-14: Déclaration du module `front_of_house` "
"dont le corps sera dans _src/front_of_house.cairo_</span>"

#: src/ch07-05-separating-modules-into-different-files.md:32
msgid ""
"Next, place the code that was in the curly brackets into a new file named "
"_src/front_of_house.cairo_, as shown in Listing 7-15. The compiler knows to "
"look in this file because it came across the module declaration in the crate "
"root with the name `front_of_house`."
msgstr ""
"Ensuite, placez le code qui était entre crochets dans un nouveau fichier "
"nommé _src/front_of_house.cairo_, comme indiqué dans Listing 7-15. Le "
"compilateur sait regarder dans ce fichier parce qu'il est tombé sur la "
"déclaration du module dans la racine de caisse avec le nom `front_of_house`."

#: src/ch07-05-separating-modules-into-different-files.md:37
#: src/ch07-05-separating-modules-into-different-files.md:63
msgid "<span class=\"filename\">Filename: src/front_of_house.cairo</span>"
msgstr ""
"<span class=\"filename\">Nom du fichier: src/front_of_house.cairo</span>"

#: src/ch07-05-separating-modules-into-different-files.md:45
msgid ""
"<span class=\"caption\">Listing 7-15: Definitions inside the "
"`front_of_house` module in _src/front_of_house.cairo_</span>"
msgstr ""
"<span class=\"caption\">Liste 7-15: Définitions à l'intérieur du module "
"`front_of_house` dans _src/front_of_house.cairo_</span>"

#: src/ch07-05-separating-modules-into-different-files.md:47
msgid ""
"Note that you only need to load a file using a `mod` declaration _once_ in "
"your module tree. Once the compiler knows the file is part of the project "
"(and knows where in the module tree the code resides because of where you’ve "
"put the `mod` statement), other files in your project should refer to the "
"loaded file’s code using a path to where it was declared, as covered in the "
"[\"Paths for Referring to an Item in the Module Tree\"](./ch07-03-paths-for-"
"referring-to-an-item-in-the-module-tree.md) chapter. In other words, `mod` "
"is _not_ an “include” operation that you may have seen in other programming "
"languages."
msgstr ""
"Notez que vous n'avez qu'à charger un fichier en utilisant une déclaration "
"`mod` _once_ dans l'arborescence de votre module. Une fois que le "
"compilateur sait que le fichier fait partie du projet (et sait où dans "
"l'arborescence de module le code réside en raison de l'endroit où vous avez "
"mis l'instruction `mod`), d'autres fichiers de votre projet doivent se "
"référer au code de fichier chargé en utilisant un chemin jusqu'à l'endroit "
"où il a été déclaré, comme couvert dans le chapitre [\"Paths for "
"Referenceing to an Item in the Module Tree\"](./ch07-03-paths-for-reference-"
"to-an-item-in-the-module-tree.md). En d'autres termes, `mod` est _not_ une "
"opération \"include\" que vous avez peut-être vue dans d'autres langages de "
"programmation."

#: src/ch07-05-separating-modules-into-different-files.md:55
msgid ""
"Next, we’ll extract the `hosting` module to its own file. The process is a "
"bit different because `hosting` is a child module of `front_of_house`, not "
"of the root module. We’ll place the file for `hosting` in a new directory "
"that will be named for its ancestors in the module tree, in this case _src/"
"front_of_house/_."
msgstr ""
"Ensuite, nous allons extraire le module `hosting` dans son propre fichier. "
"Le processus est un peu différent car `hosting` est un module enfant de "
"`front_of_house`, pas du module racine. Nous allons placer le fichier pour "
"`hosting` dans un nouveau répertoire qui sera nommé pour ses ancêtres dans "
"l'arborescence du module, dans ce cas _src/front_of_house/_."

#: src/ch07-05-separating-modules-into-different-files.md:60
msgid ""
"To start moving `hosting`, we change _src/front_of_house.cairo_ to contain "
"only the declaration of the `hosting` module:"
msgstr ""
"Pour commencer à déplacer `hosting`, nous changeons _src/front_of_house."
"cairo_ pour ne contenir que la déclaration du module `hosting`:"

#: src/ch07-05-separating-modules-into-different-files.md:69
msgid ""
"Then we create a _src/front_of_house_ directory and a file _hosting.cairo_ "
"to contain the definitions made in the `hosting` module:"
msgstr ""
"Ensuite, nous créons un répertoire _src/front_of_house_ et un fichier "
"_hosting.cairo_ pour contenir les définitions faites dans le module "
"`hosting`:"

#: src/ch07-05-separating-modules-into-different-files.md:72
msgid ""
"<span class=\"filename\">Filename: src/front_of_house/hosting.cairo</span>"
msgstr ""
"<span class=\"filename\">Nom du fichier: src/front_of_house/hosting.cairo</"
"span>"

#: src/ch07-05-separating-modules-into-different-files.md:78
msgid ""
"If we instead put _hosting.cairo_ in the _src_ directory, the compiler would "
"expect the _hosting.cairo_ code to be in a `hosting` module declared in the "
"crate root, and not declared as a child of the `front_of_house` module. The "
"compiler’s rules for which files to check for which modules’ code means the "
"directories and files more closely match the module tree."
msgstr ""
"Si nous mettons à la place _hosting.cairo_ dans le répertoire _src_, le "
"compilateur s'attendrait à ce que le code _hosting.cairo_ soit dans un "
"module `hosting` déclaré dans la racine de caisse, et non déclaré comme "
"enfant du module `front_of_house`. Les règles compilateur=s pour lesquelles "
"les fichiers doivent vérifier pour quels modules= code signifient que les "
"répertoires et les fichiers correspondent plus étroitement à l'arborescence "
"du module."

#: src/ch07-05-separating-modules-into-different-files.md:84
msgid ""
"We’ve moved each module’s code to a separate file, and the module tree "
"remains the same. The function calls in `eat_at_restaurant` will work "
"without any modification, even though the definitions live in different "
"files. This technique lets you move modules to new files as they grow in "
"size."
msgstr ""
"Nous avons déplacé chaque code de module dans un fichier séparé, et "
"l'arborescence des modules reste la même. La fonction appelle dans "
"`eat_at_restaurant` fonctionnera sans aucune modification, même si les "
"définitions vivent dans des fichiers différents. Cette technique vous permet "
"de déplacer les modules vers de nouveaux fichiers à mesure qu'ils "
"grandissent en taille."

#: src/ch07-05-separating-modules-into-different-files.md:89
msgid ""
"Note that the `use restaurant::front_of_house::hosting;` statement in _src/"
"lib.cairo_ also hasn’t changed, nor does `use` have any impact on what files "
"are compiled as part of the crate. The `mod` keyword declares modules, and "
"Cairo looks in a file with the same name as the module for the code that "
"goes into that module."
msgstr ""
"Notez que le restaurant `use::front_of_house::hosting;` dans _src/lib.cairo_ "
"n'a pas non plus changé, ni `use` n'a aucun impact sur les fichiers compilés "
"dans la caisse. Le mot-clé `mod` déclare les modules, et le Caire regarde "
"dans un fichier avec le même nom que le module pour le code qui va dans ce "
"module."

#: src/ch07-05-separating-modules-into-different-files.md:99
msgid ""
"Cairo lets you split a package into multiple crates and a crate into modules "
"so you can refer to items defined in one module from another module. You can "
"do this by specifying absolute or relative paths. These paths can be brought "
"into scope with a `use` statement so you can use a shorter path for multiple "
"uses of the item in that scope. Module code is **private** by default."
msgstr ""
"Le Caire vous permet de diviser un paquet en plusieurs caisses et une caisse "
"en modules afin que vous puissiez vous référer à des éléments définis dans "
"un module d'un autre module. Vous pouvez le faire en spécifiant des chemins "
"absolus ou relatifs. Ces chemins peuvent être introduits dans la portée avec "
"une instruction `use` afin que vous puissiez utiliser un chemin plus court "
"pour plusieurs utilisations de l'élément dans cette portée. Le code du "
"module est **private** par défaut."

#: src/ch07-05-separating-modules-into-different-files.md:105
msgid "{{#quiz ../quizzes/ch07-05-separate-modules.toml}}"
msgstr "{{#quiz../quizes/ch07-05-separate-modules.toml}}"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Every programming language has tools for effectively handling the "
"duplication of concepts. In Cairo, one such tool is generics: abstract stand-"
"ins for concrete types or other properties. We can express the behavior of "
"generics or how they relate to other generics without knowing what will be "
"in their place when compiling and running the code."
msgstr ""
"Chaque langage de programmation dispose d'outils pour gérer efficacement la "
"duplication des concepts. Au Caire, un tel outil est générique: stand-ins "
"abstraits pour les types de béton ou d'autres propriétés. Nous pouvons "
"exprimer le comportement des génériques ou comment ils se rapportent à "
"d'autres génériques sans savoir ce qui sera à leur place lors de la "
"compilation et de l'exécution du code."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Functions can take parameters of some generic type, instead of a concrete "
"type like `u32` or `bool`, in the same way a function takes parameters with "
"unknown values to run the same code on multiple concrete values. In fact, "
"we’ve already used generics in [Chapter 6](./ch06-01-enums.html#the-option-"
"enum-and-its-advantages) with `Option<T>`."
msgstr ""
"Les fonctions peuvent prendre des paramètres de certains types génériques, "
"au lieu d'un type concret comme `u32` ou `bool`, de la même manière qu'une "
"fonction prend des paramètres avec des valeurs inconnues pour exécuter le "
"même code sur plusieurs valeurs concrètes. En fait, nous avons déjà utilisé "
"des génériques dans [Chapitre 6](./ch06-01-enums.html#the-option-enum-et-ses-"
"avantages) avec `Option<T>`."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"In this chapter, you’ll explore how to define your own types, functions, and "
"traits with generics."
msgstr ""
"Dans ce chapitre, vous explorerez comment définir vos propres types, "
"fonctions et traits avec des génériques."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Generics allow us to replace specific types with a placeholder that "
"represents multiple types to remove code duplication. Upon compilation, the "
"compiler creates a new definition for each concrete type that replaces a "
"generic type, reducing development time for the programmer, but code "
"duplication at compile level still exists. This may be of importance if you "
"are writing Starknet contracts and using a generic for multiple types which "
"will cause contract size to increment."
msgstr ""
"Les génériques nous permettent de remplacer des types spécifiques par un "
"placeholder qui représente plusieurs types pour supprimer la duplication de "
"code. Lors de la compilation, le compilateur crée une nouvelle définition "
"pour chaque type concret qui remplace un type générique, réduisant le temps "
"de développement pour le programmeur, mais la duplication de code au niveau "
"de compilation existe toujours. Cela peut être important si vous écrivez des "
"contrats Starknet et utilisez un générique pour plusieurs types qui fera "
"augmenter la taille du contrat."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Then you’ll learn how to use traits to define behavior in a generic way. You "
"can combine traits with generic types to constrain a generic type to accept "
"only those types that have a particular behavior, as opposed to just any "
"type."
msgstr ""
"Ensuite, vous apprendrez à utiliser des caractères pour définir le "
"comportement d'une manière générique. Vous pouvez combiner des caractères "
"avec des types génériques pour contraindre un type générique à accepter "
"uniquement les types qui ont un comportement particulier, par opposition à "
"n'importe quel type."

#: src/ch08-00-generic-types-and-traits.md
msgid "Removing Duplication by Extracting a Function"
msgstr "Suppression de la duplication par extraction d'une fonction"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Generics allow us to replace specific types with a placeholder that "
"represents multiple types to remove code duplication. Before diving into "
"generics syntax, let’s first look at how to remove duplication in a way that "
"doesn’t involve generic types by extracting a function that replaces "
"specific values with a placeholder that represents multiple values. Then "
"we’ll apply the same technique to extract a generic function! By learning "
"how to identify duplicated code that can be extracted into a function, "
"you'll start to recognize instances where generics can be used to reduce "
"duplication."
msgstr ""
"Les génériques nous permettent de remplacer des types spécifiques par un "
"placeholder qui représente plusieurs types pour supprimer la duplication de "
"code. Avant de plonger dans la syntaxe générique, laissez-nous d'abord "
"examiner comment supprimer la duplication d'une manière qui n'implique pas "
"des types génériques en extrayant une fonction qui remplace des valeurs "
"spécifiques par un placeholder qui représente des valeurs multiples. "
"Ensuite, nous allons appliquer la même technique pour extraire une fonction "
"générique! En apprenant comment identifier le code dupliqué qui peut être "
"extrait dans une fonction, vous commencerez à reconnaître des cas où des "
"génériques peuvent être utilisés pour réduire la duplication."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We begin with a short program that finds the largest number in an array of "
"`u8`:"
msgstr ""
"Nous commençons par un programme court qui trouve le plus grand nombre dans "
"un tableau de `u8`:"

#: src/ch08-00-generic-types-and-traits.md
msgid "\"The largest number is {}\""
msgstr "\"Le plus grand nombre est {}\""

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We store an array of `u8` in the variable `number_list` and extract the "
"first number in the array in a variable named `largest`. We then iterate "
"through all the numbers in the array, and if the current number is greater "
"than the number stored in `largest`, we update the value of `largest`. "
"However, if the current number is less than or equal to the largest number "
"seen so far, the variable doesn’t change, and the code moves on to the next "
"number in the list. After considering all the numbers in the array, "
"`largest` should contain the largest number, which in this case is 100."
msgstr ""
"Nous stockons un tableau de `u8` dans la variable `number_list` et nous en "
"extrayons le premier numéro dans une variable nommée `plus grande`. Nous "
"itérerons alors à travers tous les nombres du tableau, et si le nombre "
"courant est supérieur au nombre stocké dans `plus grande`, nous mettons à "
"jour la valeur de `plus grande`. Cependant, si le nombre courant est "
"inférieur ou égal au nombre le plus grand vu jusqu'ici, la variable ne "
"change pas, et le code passe au nombre suivant dans la liste. Après avoir "
"considéré tous les nombres dans le tableau, `plus grande` devrait contenir "
"le plus grand nombre, qui dans ce cas est 100."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We've now been tasked with finding the largest number in two different "
"arrays of numbers. To do so, we can choose to duplicate the previous code "
"and use the same logic at two different places in the program, as follows:"
msgstr ""
"Nous avons maintenant été chargés de trouver le plus grand nombre dans deux "
"tableaux de nombres différents. Pour ce faire, nous pouvons choisir de "
"dupliquer le code précédent et d'utiliser la même logique à deux endroits "
"différents dans le programme, comme suit:"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Although this code works, duplicating code is tedious and error-prone. We "
"also have to remember to update the code in multiple places when we want to "
"change it."
msgstr ""
"Bien que ce code fonctionne, dupliquer le code est fastidieux et sujet à "
"erreur. Nous devons également nous rappeler de mettre à jour le code en "
"plusieurs endroits lorsque nous voulons le modifier."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"To eliminate this duplication, we’ll create an abstraction by defining a "
"function that operates on any array of `u8` passed in a parameter. This "
"solution makes our code clearer and lets us express the concept of finding "
"the largest number in an array abstractly."
msgstr ""
"Pour éliminer cette duplication, nous allons créer une abstraction en "
"définissant une fonction qui fonctionne sur n'importe quel tableau de `u8` "
"passé dans un paramètre. Cette solution rend notre code plus clair et nous "
"permet d'exprimer le concept de trouver le plus grand nombre dans un tableau "
"de façon abstraite."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"To do that, we extract the code that finds the largest number into a "
"function named `largest`. Then we call the function to find the largest "
"number in the two arrays. We could also use the function on any other array "
"of `u8` values we might have in the future."
msgstr ""
"Pour cela, nous extrayons le code qui trouve le plus grand nombre dans une "
"fonction nommée `plus grand`. Ensuite, nous appelons la fonction pour "
"trouver le plus grand nombre dans les deux tableaux. Nous pourrions "
"également utiliser la fonction sur tout autre tableau de valeurs `u8` que "
"nous pourrions avoir dans le futur."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"The largest function has a parameter called `number_list`, passed by "
"reference, which represents any concrete array of `u8` values we might pass "
"into the function. As a result, when we call the function, the code runs on "
"the specific values that we pass in."
msgstr ""
"La plus grande fonction a un paramètre appelé `number_list`, passé par "
"référence, qui représente n'importe quel tableau concret de valeurs `u8` que "
"nous pourrions passer dans la fonction. Par conséquent, lorsque nous "
"appelons la fonction, le code fonctionne sur les valeurs spécifiques que "
"nous transmettons."

#: src/ch08-00-generic-types-and-traits.md
msgid "In summary, here are the steps we took to change the code:"
msgstr ""
"En résumé, voici les mesures que nous avons prises pour modifier le code :"

#: src/ch08-00-generic-types-and-traits.md
msgid "Identify duplicate code."
msgstr "Identifiez le code dupliqué."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Extract the duplicate code into the body of the function and specify the "
"inputs and return values of that code in the function signature."
msgstr ""
"Extraire le code dupliqué dans le corps de la fonction et spécifier les "
"entrées et les valeurs de retour de ce code dans la signature de la fonction."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Update the two instances of duplicated code to call the function instead."
msgstr ""
"Mettre à jour les deux instances de code dupliqué pour appeler la fonction à "
"la place."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Next, we’ll use these same steps with generics to reduce code duplication. "
"In the same way that the function body can operate on an abstract `Array<T>` "
"instead of specific `u8` values, generics allow code to operate on abstract "
"types."
msgstr ""
"Ensuite, nous utiliserons ces mêmes étapes avec des génériques pour réduire "
"la duplication de code. De la même manière que l'organisme de la fonction "
"peut fonctionner sur un abrégé `Array<T>` au lieu de valeurs spécifiques "
"`u8`, les génériques permettent le code de fonctionner sur des types "
"abstraits."

#: src/ch08-01-generic-data-types.md:3
msgid ""
"We use generics to create definitions for item declarations, such as structs "
"and functions, which we can then use with many different concrete data "
"types. In Cairo, we can use generics when defining functions, structs, "
"enums, traits, implementations and methods. In this chapter, we are going to "
"take a look at how to effectively use generic types with all of them."
msgstr ""
"Au Caire, nous pouvons utiliser des génériques pour définir des fonctions, "
"des structures, des enums, des traits, des implémentations et des méthodes. "
"Dans ce chapitre, nous allons examiner comment utiliser efficacement des "
"types génériques avec tous."

#: src/ch08-01-generic-data-types.md:5
msgid ""
"Generics allow us to write reusable code that works with many types, thus "
"avoiding code duplication, while enhancing code maintainability."
msgstr ""
"Les génériques nous permettent d'écrire du code réutilisable qui fonctionne "
"avec de nombreux types, évitant ainsi la duplication du code, tout en "
"améliorant la maintenance du code."

#: src/ch08-01-generic-data-types.md:7
msgid "Generic Functions"
msgstr "Fonctions génériques"

#: src/ch08-01-generic-data-types.md:9
msgid ""
"Making a function generic means it can operate on different types, avoiding "
"the need for multiple, type-specific implementations. This leads to "
"significant code reduction and increases the flexibility of the code."
msgstr ""
"Faire une fonction générique signifie qu'elle peut fonctionner sur "
"différents types, évitant la nécessité d'implémentations multiples et "
"spécifiques au type, ce qui entraîne une réduction significative du code et "
"augmente la flexibilité du code."

#: src/ch08-01-generic-data-types.md:11
msgid ""
"When defining a function that uses generics, we place the generics in the "
"function signature, where we would usually specify the data types of the "
"parameter and return value. For example, imagine we want to create a "
"function which given two `Array` of items, will return the largest one. If "
"we need to perform this operation for lists of different types, then we "
"would have to redefine the function each time. Luckily we can implement the "
"function once using generics and move on to other tasks."
msgstr ""
"Lors de la définition d'une fonction qui utilise des génériques, nous "
"plaçons les génériques dans la signature de la fonction, où nous spécifions "
"habituellement les types de données du paramètre et la valeur de retour. Par "
"exemple, imaginons que nous voulons créer une fonction qui a donné deux "
"`Array` d'éléments, retournera la plus grande. Si nous avons besoin "
"d'effectuer cette opération pour des listes de différents types, alors nous "
"devrions redéfinir la fonction à chaque fois. Heureusement, nous pouvons "
"implémenter la fonction une fois que nous utilisons des génériques et passer "
"à d'autres tâches."

#: src/ch08-01-generic-data-types.md:14
msgid "// Specify generic type T between the angulars\n"
msgstr "// Spécifier le type générique T entre les angulaires\n"

#: src/ch08-01-generic-data-types.md:27
msgid ""
"// There is no need to specify the concrete type of T because\n"
"    // it is inferred by the compiler\n"
msgstr ""
"// Il n'est pas nécessaire de spécifier le type de béton de T car // il est "
"déduit par le compilateur\n"

#: src/ch08-01-generic-data-types.md:33
msgid ""
"The `largest_list` function compares two lists of the same type and returns "
"the one with more elements and drops the other. If you compile the previous "
"code, you will notice that it will fail with an error saying that there are "
"no traits defined for dropping an array of a generic type. This happens "
"because the compiler has no way to guarantee that an `Array<T>` is droppable "
"when executing the `main` function. In order to drop an array of `T`, the "
"compiler must first know how to drop `T`. This can be fixed by specifying in "
"the function signature of `largest_list` that `T` must implement the `Drop` "
"trait. The correct function definition of `largest_list` is as follows:"
msgstr ""
"Si vous compilez le code précédent, vous remarquerez qu'il échouera avec une "
"erreur en disant qu'il n'y a pas de traits définis pour la suppression d'un "
"tableau d'un type générique. Cela se produit parce que le compilateur n'a "
"aucun moyen de garantir qu'un `Array<T>` est droppable lors de l'exécution "
"de la fonction `main`. Afin de laisser tomber un tableau de `T`, le "
"compilateur doit d'abord savoir comment déposer `T`. Ceci peut être corrigé "
"en spécifiant dans la signature de la fonction `plus important_list` que `T` "
"doit implémenter le trait `Drop`. La définition correcte de la fonction "
"`plus important_list` est la suivante:"

#: src/ch08-01-generic-data-types.md:45
msgid ""
"The new `largest_list` function includes in its definition the requirement "
"that whatever generic type is placed there, it must be droppable. This is "
"what we call _trait bounds_. The `main` function remains unchanged, the "
"compiler is smart enough to deduce which concrete type is being used and if "
"it implements the `Drop` trait."
msgstr ""
"La nouvelle fonction `plus grande_liste` inclut dans sa définition "
"l'exigence que tout type générique y soit placé, il doit être droppable. "
"C'est ce que nous appelons _trait limits_. La fonction `main` reste "
"inchangée, le compilateur est assez intelligent pour déduire quel type de "
"béton est utilisé et s'il implémente le caractère `Drop`."

#: src/ch08-01-generic-data-types.md:47
msgid "Constraints for Generic Types"
msgstr "Contraintes pour les types génériques"

#: src/ch08-01-generic-data-types.md:49
msgid ""
"When defining generic types, it is useful to have information about them. "
"Knowing which traits a generic type implements allows us to use it more "
"effectively in a function's logic at the cost of constraining the generic "
"types that can be used with the function. We saw an example of this "
"previously by adding the `TDrop` implementation as part of the generic "
"arguments of `largest_list`. While `TDrop` was added to satisfy the "
"compiler's requirements, we can also add constraints to benefit our function "
"logic."
msgstr ""
"En définissant des types génériques, il est utile d'avoir des informations à "
"leur sujet. Savoir quels caractères d'un type générique nous permet de "
"l'utiliser plus efficacement dans la logique d'une fonction au prix de "
"restreindre les types génériques qui peuvent être utilisés avec la fonction. "
"Nous avons vu un exemple de cela précédemment en ajoutant l'implémentation "
"`TDrop` dans le cadre des arguments génériques de `plus important_list`. "
"Alors que `TDrop` a été ajouté pour satisfaire les exigences du compilateur, "
"nous pouvons également ajouter des contraintes pour bénéficier de notre "
"logique de fonction."

#: src/ch08-01-generic-data-types.md:51
msgid ""
"Imagine that we want, given a list of elements of some generic type `T`, to "
"find the smallest element among them. Initially, we know that for an element "
"of type `T` to be comparable, it must implement the `PartialOrd` trait. The "
"resulting function would be:"
msgstr ""
"Imaginez que nous voulons, avec une liste d'éléments de certains types "
"génériques `T`, trouver le plus petit élément parmi eux. Initialement, nous "
"savons que pour qu'un élément de type `T` soit comparable, il doit mettre en "
"œuvre le caractère `PartialOrd`. La fonction résultante serait:"

#: src/ch08-01-generic-data-types.md:54
msgid ""
"// Given a list of T get the smallest one\n"
"// The PartialOrd trait implements comparison operations for T\n"
msgstr ""
"// Vu une liste de T obtenir le plus petit // Le caractère PartialOrd "
"implémente des opérations de comparaison pour T\n"

#: src/ch08-01-generic-data-types.md:57
msgid ""
"// This represents the smallest element through the iteration\n"
"    // Notice that we use the desnap (*) operator\n"
msgstr ""
"// Ceci représente l'élément le plus petit à travers l'itération // Notez "
"que nous utilisons l'opérateur desnap (*)\n"

#: src/ch08-01-generic-data-types.md:61
msgid "// The index we will use to move through the list\n"
msgstr "// L'index que nous utiliserons pour passer à travers la liste\n"

#: src/ch08-01-generic-data-types.md:64
msgid "// Iterate through the whole list storing the smallest\n"
msgstr "// Itérer à travers toute la liste en stockant le plus petit\n"

#: src/ch08-01-generic-data-types.md:79
msgid ""
"// We need to specify that we are passing a snapshot of `list` as an "
"argument\n"
msgstr ""
"// Nous devons spécifier que nous passons un instantané de `list` comme "
"argument\n"

#: src/ch08-01-generic-data-types.md:85
msgid ""
"The `smallest_element` function uses a generic type `T` that implements the "
"`PartialOrd` trait, takes a snapshot of an `Array<T>` as a parameter and "
"returns a copy of the smallest element. Because the parameter is of type "
"`@Array<T>`, we no longer need to drop it at the end of the execution and so "
"we are not required to implement the `Drop` trait for `T` as well. Why does "
"it not compile then?"
msgstr ""
"La fonction `smallest_element` utilise un type générique `T` qui implémente "
"le caractère `PartialOrd`, prend un instantané d'un `Array<T>` comme "
"paramètre et retourne une copie du plus petit élément. Parce que le "
"paramètre est de type `@Array<T>`, nous n'avons plus besoin de le déposer à "
"la fin de l'exécution et donc nous ne sommes pas tenus d'implémenter le "
"caractère `Drop` pour `T` aussi bien. Pourquoi ne pas compiler alors?"

#: src/ch08-01-generic-data-types.md:87
msgid ""
"When indexing on `list`, the value results in a snap of the indexed element, "
"and unless `PartialOrd` is implemented for `@T` we need to desnap the "
"element using `*`. The `*` operation requires a copy from `@T` to `T`, which "
"means that `T` needs to implement the `Copy` trait. After copying an element "
"of type `@T` to `T`, there are now variables with type `T` that need to be "
"dropped, requiring `T` to implement the `Drop` trait as well. We must then "
"add both `Drop` and `Copy` traits implementation for the function to be "
"correct. After updating the `smallest_element` function the resulting code "
"would be:"
msgstr ""
"Lors de l'indexation sur `list`, l'opération `*` nécessite une copie de `@T` "
"à `T`, ce qui signifie que `T` doit implémenter le caractère `Copy`. Après "
"avoir copié un élément de type `@T` à `T`, il y a maintenant des variables "
"avec le type `T` qui doivent être supprimées, exigeant `T` pour implémenter "
"le caractère `Drop` aussi. Nous devons ensuite ajouter à la fois "
"l'implémentation `Drop` et `Copy` pour que la fonction soit correcte. Après "
"la mise à jour de la fonction `smallest_element`, le code résultant serait:"

#: src/ch08-01-generic-data-types.md:108
msgid "Anonymous Generic Implementation Parameter (`+` Operator)"
msgstr "Paramètre de mise en œuvre générique anonyme (opérateur`+`)"

#: src/ch08-01-generic-data-types.md:110
msgid ""
"Until now, we have always specified a name for each implementation of the "
"required generic trait: `TPartialOrd` for `PartialOrd<T>`, `TDrop` for "
"`Drop<T>`, and `TCopy` for `Copy<T>`."
msgstr ""
"Jusqu'à présent, nous avons toujours spécifié un nom pour chaque application "
"du caractère générique requis : `TPartialOrd` pour `PartialOrd<T>`, `TDrop` "
"pour `Drop<T>` et `TCopy` pour `Copy<T>`."

#: src/ch08-01-generic-data-types.md:112
msgid ""
"However, most of the time, we don't use the implementation in the function "
"body; we only use it as a constraint. In these cases, we can use the `+` "
"operator to specify that the generic type must implement a trait without "
"naming the implementation. This is referred to as an _anonymous generic "
"implementation parameter_."
msgstr ""
"Cependant, la plupart du temps, nous n'utilisons pas l'implémentation dans "
"le corps de la fonction; nous ne l'utilisons que comme contrainte. Dans ces "
"cas, nous pouvons utiliser l'opérateur `+` pour spécifier que le type "
"générique doit implémenter un trait sans nommer l'implémentation. Ceci est "
"appelé un paramètre d'implémentation générique _anonyme_."

#: src/ch08-01-generic-data-types.md:114
msgid ""
"For example, `+PartialOrd<T>` is equivalent to `impl TPartialOrd: "
"PartialOrd<T>`."
msgstr ""
"Par exemple, `+PartialOrd<T>` est équivalent à `impl TPartialOrd: "
"PartialOrd<T>`."

#: src/ch08-01-generic-data-types.md:116
msgid "We can rewrite the `smallest_element` function signature as follows:"
msgstr ""
"Nous pouvons réécrire la signature de la fonction `smallest_element` comme "
"suit:"

#: src/ch08-01-generic-data-types.md:134
msgid "Structs"
msgstr "Structures"

#: src/ch08-01-generic-data-types.md:136
msgid ""
"We can also define structs to use a generic type parameter for one or more "
"fields using the `<>` syntax, similar to function definitions. First, we "
"declare the name of the type parameter inside the angle brackets just after "
"the name of the struct. Then we use the generic type in the struct "
"definition where we would otherwise specify concrete data types. The next "
"code example shows the definition `Wallet<T>` which has a `balance` field of "
"type `T`."
msgstr ""
"Nous pouvons également définir des structures pour utiliser un paramètre de "
"type générique pour un ou plusieurs champs en utilisant la syntaxe `<>`, "
"similaire aux définitions de fonction. D'abord, nous déclarons le nom du "
"paramètre de type à l'intérieur des crochets d'angle juste après le nom de "
"la structure. Ensuite, nous utilisons le type générique dans la définition "
"de la structure où nous préciserions autrement des types de données "
"concrètes. L'exemple de code suivant montre la définition `Wallet<T>` qui a "
"un champ `balance` de type `T`."

#: src/ch08-01-generic-data-types.md:149
msgid ""
"The above code derives the `Drop` trait for the `Wallet` type automatically. "
"It is equivalent to writing the following code:"
msgstr ""
"Le code ci-dessus dérive le caractère `Drop` pour le type `Wallet` "
"automatiquement. Il est équivalent à l'écriture du code suivant:"

#: src/ch08-01-generic-data-types.md:163
msgid ""
"We avoid using the `derive` macro for `Drop` implementation of `Wallet` and "
"instead define our own `WalletDrop` implementation. Notice that we must "
"define, just like functions, an additional generic type for `WalletDrop` "
"saying that `T` implements the `Drop` trait as well. We are basically saying "
"that the struct `Wallet<T>` is droppable as long as `T` is also droppable."
msgstr ""
"Nous évitons d'utiliser la macro `derive` pour l'implémentation `Drop` de "
"`Wallet` et définissons plutôt notre propre implémentation `WalletDrop`. "
"Notez que nous devons définir, tout comme les fonctions, un type générique "
"supplémentaire pour `WalletDrop` en disant que `T` implémente également le "
"caractère `Drop`. Nous disons essentiellement que la structure `Wallet<T>` "
"est droppable tant que `T` est également droppable."

#: src/ch08-01-generic-data-types.md:165
msgid ""
"Finally, if we want to add a field to `Wallet` representing its address and "
"we want that field to be different than `T` but generic as well, we can "
"simply add another generic type between the `<>`:"
msgstr ""
"Enfin, si nous voulons ajouter un champ à `Wallet` représentant son adresse "
"et que nous voulons que ce champ soit différent de `T` mais aussi générique, "
"nous pouvons simplement ajouter un autre type générique entre le `<>`:"

#: src/ch08-01-generic-data-types.md:179
msgid ""
"We add to the `Wallet` struct definition a new generic type `U` and then "
"assign this type to the new field member `address`. Notice that the `derive` "
"attribute for the `Drop` trait works for `U` as well."
msgstr ""
"Nous ajoutons à la définition de structure `Wallet` un nouveau type "
"générique `U`, puis attribuons ce type au nouveau membre du champ `adresse`. "
"Notez que l'attribut `derive` pour le caractère `Drop` fonctionne aussi pour "
"`U`."

#: src/ch08-01-generic-data-types.md:183
msgid ""
"As we did with structs, we can define enums to hold generic data types in "
"their variants. For example the `Option<T>` enum provided by the Cairo core "
"library:"
msgstr ""
"Comme nous l'avons fait avec les structures, nous pouvons définir des enums "
"pour tenir des types de données génériques dans leurs variantes. Par "
"exemple, l'enum `Option<T>` fourni par la bibliothèque centrale du Caire:"

#: src/ch08-01-generic-data-types.md:192
msgid ""
"The `Option<T>` enum is generic over a type `T` and has two variants: "
"`Some`, which holds one value of type `T` and `None` that doesn't hold any "
"value. By using the `Option<T>` enum, it is possible for us to express the "
"abstract concept of an optional value and because the value has a generic "
"type `T` we can use this abstraction with any type."
msgstr ""
"L'enum `Option<T>` est générique sur un type `T` et possède deux variantes: "
"`Some`, qui contient une valeur de type `T` et `None` qui ne détient aucune "
"valeur. En utilisant l'enum `Option<T>`, il est possible pour nous "
"d'exprimer le concept abstrait d'une valeur optionnelle et parce que la "
"valeur a un type générique `T` nous pouvons utiliser cette abstraction avec "
"n'importe quel type."

#: src/ch08-01-generic-data-types.md:194
msgid ""
"Enums can use multiple generic types as well, like the definition of the "
"`Result<T, E>` enum that the core library provides:"
msgstr ""
"Les enums peuvent également utiliser plusieurs types génériques, comme la "
"définition du enum `Résultat<T, E>` que la bibliothèque centrale fournit:"

#: src/ch08-01-generic-data-types.md:203 src/ch09-02-recoverable-errors.md:16
msgid ""
"The `Result<T, E>` enum has two generic types, `T` and `E`, and two "
"variants: `Ok` which holds the value of type `T` and `Err` which holds the "
"value of type `E`. This definition makes it convenient to use the `Result` "
"enum anywhere we have an operation that might succeed (by returning a value "
"of type `T`) or fail (by returning a value of type `E`)."
msgstr ""
"L'enum `Result<T, E>` comporte deux types génériques, `T` et `E`, et deux "
"variantes: `Ok` qui détient la valeur du type `T` et `Err` qui détient la "
"valeur du type `E`. Cette définition permet d'utiliser l'enum `Result` où "
"que nous ayons une opération qui pourrait réussir (en retournant une valeur "
"du type `T`) ou échouer (en retournant une valeur du type `E`)."

#: src/ch08-01-generic-data-types.md:205
msgid "Generic Methods"
msgstr "Méthodes génériques"

#: src/ch08-01-generic-data-types.md:207
msgid ""
"We can implement methods on structs and enums, and use the generic types in "
"their definitions, too. Using our previous definition of `Wallet<T>` struct, "
"we define a `balance` method for it:"
msgstr ""
"Nous pouvons appliquer des méthodes sur les structures et les enums, et "
"utiliser les types génériques dans leurs définitions, aussi. En utilisant "
"notre définition précédente de `Wallet<T>` struct, nous définissons une "
"méthode `balance` pour elle:"

#: src/ch08-01-generic-data-types.md:231
msgid ""
"We first define `WalletTrait<T>` trait using a generic type `T` which "
"defines a method that returns the value of the field `balance` from "
"`Wallet`. Then we give an implementation for the trait in `WalletImpl<T>`. "
"Note that you need to include a generic type in both definitions of the "
"trait and the implementation."
msgstr ""
"Nous définissons d'abord le caractère `WalletTrait<T>` en utilisant un type "
"générique `T` qui définit une méthode qui renvoie la valeur du champ "
"`balance` de `Wallet`. Ensuite, nous donnons une implémentation pour le "
"caractère dans `WalletImpl<T>`. Notez que vous devez inclure un type "
"générique dans les définitions du caractère et de l'implémentation."

#: src/ch08-01-generic-data-types.md:233
msgid ""
"We can also specify constraints on generic types when defining methods on "
"the type. We could, for example, implement methods only for `Wallet<u128>` "
"instances rather than `Wallet<T>`. In the code example, we define an "
"implementation for wallets which have a concrete type of `u128` for the "
"`balance` field."
msgstr ""
"Nous pouvons également spécifier des contraintes sur les types génériques "
"lors de la définition des méthodes sur le type. Nous pourrions, par exemple, "
"mettre en œuvre des méthodes uniquement pour les instances `Wallet<u128>` "
"plutôt que `Wallet<T>`. Dans l'exemple de code, nous définissons une "
"implémentation pour les portefeuilles qui ont un type concret de `u128` pour "
"le champ `balance`."

#: src/ch08-01-generic-data-types.md:240
msgid "/// Generic trait for wallets\n"
msgstr "/// trait générique pour portefeuilles\n"

#: src/ch08-01-generic-data-types.md:251
msgid "/// Trait for wallets of type u128\n"
msgstr "/// Trait pour portefeuilles de type u128\n"

#: src/ch08-01-generic-data-types.md:272
msgid ""
"The new method `receive` increments the size of `balance` of any instance of "
"a `Wallet<u128>`. Notice that we changed the `main` function making `w` a "
"mutable variable in order for it to be able to update its balance. If we "
"were to change the initialization of `w` by changing the type of `balance` "
"the previous code wouldn't compile."
msgstr ""
"La nouvelle méthode `receive` incréments la taille de `balance` de toute "
"instance d'un `Wallet<u128>`. Notez que nous avons modifié la fonction "
"`main` faisant `w` une variable mutable afin qu'elle puisse mettre à jour "
"son équilibre. Si nous devions changer l'initialisation de `w` en changeant "
"le type de `balance` le code précédent ne serait pas compilé."

#: src/ch08-01-generic-data-types.md:274
msgid ""
"Cairo allows us to define generic methods inside generic traits as well. "
"Using the past implementation from `Wallet<U, V>` we are going to define a "
"trait that picks two wallets of different generic types and creates a new "
"one with a generic type of each. First, let's rewrite the struct definition:"
msgstr ""
"Le Caire nous permet également de définir des méthodes génériques à "
"l'intérieur de caractères génériques. En utilisant l'implémentation passée "
"de `Wallet<U, V>` nous allons définir un trait qui choisit deux "
"portefeuilles de différents types génériques et crée un nouveau avec un type "
"générique de chacun."

#: src/ch08-01-generic-data-types.md:283
msgid ""
"Next, we are going to naively define the mixup trait and implementation:"
msgstr ""
"Ensuite, nous allons naïvement définir le caractère mixup et la mise en "
"œuvre:"

#: src/ch08-01-generic-data-types.md:286
msgid "// This does not compile!\n"
msgstr "// Cela ne compile pas!\n"

#: src/ch08-01-generic-data-types.md:299
msgid ""
"We are creating a trait `WalletMixTrait<T1, U1>` with the `mixup<T2, U2>` "
"method which given an instance of `Wallet<T1, U1>` and `Wallet<T2, U2>` "
"creates a new `Wallet<T1, U2>`. As `mixup` signature specifies, both `self` "
"and `other` are getting dropped at the end of the function, which is why "
"this code does not compile. If you have been following from the start until "
"now you would know that we must add a requirement for all the generic types "
"specifying that they will implement the `Drop` trait for the compiler to "
"know how to drop instances of `Wallet<T, U>`. The updated implementation is "
"as follows:"
msgstr ""
"Nous créons un trait `WalletMixTrait<T1, U1>` avec la méthode `mixup<T2, "
"U2>` qui a donné une instance de `Wallet<T1, U1>` et `Wallet<T2, U2>` crée "
"une nouvelle `Wallet<T1, U2>`. Comme la signature `mixup` le spécifie, à la "
"fois `self` et `other` sont supprimés à la fin de la fonction, c'est "
"pourquoi ce code ne compile pas. Si vous avez suivi depuis le début jusqu'à "
"présent, vous savez que nous devons ajouter une exigence pour tous les types "
"génériques spécifiant qu'ils vont implémenter le trait `Drop` pour que le "
"compilateur sache comment déposer des instances de `Wallet<T, U>`. La mise à "
"jour de l'implémentation est la suivante:"

#: src/ch08-01-generic-data-types.md:317
msgid ""
"We add the requirements for `T1` and `U1` to be droppable on `WalletMixImpl` "
"declaration. Then we do the same for `T2` and `U2`, this time as part of "
"`mixup` signature. We can now try the `mixup` function:"
msgstr ""
"Nous ajoutons les exigences pour `T1` et `U1` pour être droppable sur la "
"déclaration `WalletMixImpl`. Ensuite, nous faisons la même chose pour `T2` "
"et `U2`, cette fois dans le cadre de la signature `mixup`. Nous pouvons "
"maintenant essayer la fonction `mixup`:"

#: src/ch08-01-generic-data-types.md:331
msgid ""
"We first create two instances: one of `Wallet<bool, u128>` and the other of "
"`Wallet<felt252, u8>`. Then, we call `mixup` and create a new `Wallet<bool, "
"u8>` instance."
msgstr ""
"Nous créons d'abord deux instances : l'une de `Wallet<bool, u128>` et "
"l'autre de `Wallet<felt252, u8>`. Ensuite, nous appelons `mixup` et créons "
"une nouvelle instance `Wallet<bool, u8>`."

#: src/ch08-02-traits-in-cairo.md:3
msgid ""
"A trait defines a set of methods that can be implemented by a type. These "
"methods can be called on instances of the type when this trait is "
"implemented. A trait combined with a generic type defines functionality a "
"particular type has and can share with other types. We can use traits to "
"define shared behavior in an abstract way. We can use _trait bounds_ to "
"specify that a generic type can be any type that has certain behavior."
msgstr ""
"Un trait définit un ensemble de méthodes qui peuvent être implémentées par "
"un type. Ces méthodes peuvent être appelées sur des instances du type "
"lorsque ce trait est implémenté. Un trait combiné à un type générique "
"définit les fonctionnalités d'un type particulier et peut être partagé avec "
"d'autres types. Nous pouvons utiliser des caractères pour définir le "
"comportement partagé de manière abstraite. Nous pouvons utiliser _trait "
"limits_ pour spécifier qu'un type générique peut être n'importe quel type "
"qui a un certain comportement."

#: src/ch08-02-traits-in-cairo.md:7
msgid ""
"Note: Traits are similar to a feature often called interfaces in other "
"languages, although with some differences."
msgstr ""
"Note : Les caractères sont similaires à une fonctionnalité souvent appelée "
"interfaces dans d'autres langues, bien qu'avec quelques différences."

#: src/ch08-02-traits-in-cairo.md:9
msgid ""
"While traits can be written to not accept generic types, they are most "
"useful when used with generic types. We already covered generics in the "
"[previous chapter](./ch08-01-generic-data-types.md), and we will use them in "
"this chapter to demonstrate how traits can be used to define shared behavior "
"for generic types."
msgstr ""
"Bien que les caractères puissent être écrits pour ne pas accepter les types "
"génériques, ils sont les plus utiles lorsqu'ils sont utilisés avec les types "
"génériques. Nous avons déjà couvert les génériques dans le [chapitre "
"précédent](./ch08-01-generic-data-types.md), et nous les utiliserons dans ce "
"chapitre pour démontrer comment les caractères peuvent être utilisés pour "
"définir le comportement partagé pour les types génériques."

#: src/ch08-02-traits-in-cairo.md:13
msgid "Defining a Trait"
msgstr "Définition d'un trait"

#: src/ch08-02-traits-in-cairo.md:15
msgid ""
"A type’s behavior consists of the methods we can call on that type. "
"Different types share the same behavior if we can call the same methods on "
"all of those types. Trait definitions are a way to group method signatures "
"together to define a set of behaviors necessary to accomplish some purpose."
msgstr ""
"Un comportement de type est constitué des méthodes que nous pouvons appeler "
"sur ce type. Différents types partagent le même comportement si nous pouvons "
"appeler les mêmes méthodes sur tous ces types. Les définitions de caractères "
"sont un moyen de grouper les signatures des méthodes pour définir un "
"ensemble de comportements nécessaires pour accomplir un certain but."

#: src/ch08-02-traits-in-cairo.md:17
msgid ""
"For example, let’s say we have a struct `NewsArticle` that holds a news "
"story in a particular location. We can define a trait `Summary` that "
"describes the behavior of something that can summarize the `NewsArticle` "
"type."
msgstr ""
"Par exemple, disons que nous avons une structure `NewsArticle` qui contient "
"une histoire de nouvelles dans un endroit particulier. Nous pouvons définir "
"un trait `Sommary` qui décrit le comportement de quelque chose qui peut "
"résumer le type `NewsArticle`."

#: src/ch08-02-traits-in-cairo.md:34
msgid "\"{:?} by {:?} ({:?})\""
msgstr "\"{:?} par {:?} ({:?})\""

#: src/ch08-02-traits-in-cairo.md:41
msgid ""
"Here, we declare a trait using the `trait` keyword and then the trait’s "
"name, which is `Summary` in this case. We’ve also declared the trait as "
"`pub` so that crates depending on this crate can make use of this trait too, "
"as we’ll see in a few examples."
msgstr ""
"Ici, nous déclarons un trait en utilisant le mot-clé `trait` et ensuite le "
"nom de trait's, qui est `Sommary` dans ce cas. Nous avons également déclaré "
"le trait comme `pub` afin que les caisses en fonction de cette caisse "
"puissent utiliser ce trait aussi, comme nous le verrons dans quelques "
"exemples."

#: src/ch08-02-traits-in-cairo.md:44
msgid ""
"Inside the curly brackets, we declare the method signatures that describe "
"the behaviors of the types that implement this trait, which in this case is "
"`fn summarize(self: @NewsArticle) -> ByteArray;`. After the method "
"signature, instead of providing an implementation within curly brackets, we "
"use a semicolon."
msgstr ""
"À l'intérieur des crochets, nous déclarons les signatures de la méthode qui "
"décrivent les comportements des types qui implémentent ce trait, qui dans ce "
"cas est `fn summit(self: @NewsArticle) -> ByteArray;`. Après la signature de "
"la méthode, au lieu de fournir une implémentation entre crochets, nous "
"utilisons un point-virgule."

#: src/ch08-02-traits-in-cairo.md:46
msgid ""
"Note: the `ByteArray` type is the type used to represent strings in Cairo."
msgstr ""
"Note : le type `ByteArray` est le type utilisé pour représenter les chaînes "
"au Caire."

#: src/ch08-02-traits-in-cairo.md:48
msgid ""
"As the trait is not generic, the `self` parameter is not generic either and "
"is of type `@NewsArticle`. This means that the `summarize` method can only "
"be called on instances of `NewsArticle`."
msgstr ""
"Comme le caractère n'est pas générique, le paramètre `self` n'est pas "
"générique non plus et est de type `@NewsArticle`. Cela signifie que la "
"méthode `summarize` ne peut être appelée que sur les instances de "
"`NewsArticle`."

#: src/ch08-02-traits-in-cairo.md:50
msgid ""
"Now, consider that we want to make a media aggregator library crate named "
"_aggregator_ that can display summaries of data that might be stored in a "
"`NewsArticle` or `Tweet` instance. To do this, we need a summary from each "
"type, and we’ll request that summary by calling a summarize method on an "
"instance of that type. By defining the `Summary` trait on generic type `T`, "
"we can implement the `summarize` method on any type we want to be able to "
"summarize."
msgstr ""
"Maintenant, considérez que nous voulons faire une caisse de bibliothèque "
"d'agrégateur de médias nommé _aggregator_ qui peut afficher des résumés de "
"données qui pourraient être stockés dans une instance `NewsArticle` ou "
"`Tweet`. Pour ce faire, nous avons besoin d'un résumé de chaque type, et "
"nous allons demander ce résumé en appelant une méthode de résumé sur une "
"instance de ce type. En définissant le caractère `Summary` sur le type "
"générique `T`, nous pouvons mettre en œuvre la méthode `summarize` sur tout "
"type que nous voulons être en mesure de résumer."

#: src/ch08-02-traits-in-cairo.md:68 src/ch08-02-traits-in-cairo.md:145
#: src/ch08-02-traits-in-cairo.md:222
msgid "\"{} by {} ({})\""
msgstr "\"{} par {} ({})\""

#: src/ch08-02-traits-in-cairo.md:82 src/ch08-02-traits-in-cairo.md:159
#: src/ch08-02-traits-in-cairo.md:236
msgid "\"{}: {}\""
msgstr "\"{}: {}\""

#: src/ch08-02-traits-in-cairo.md:91 src/ch08-02-traits-in-cairo.md:168
#: src/ch08-02-traits-in-cairo.md:245
msgid "\"Cairo has become the most popular language for developers\""
msgstr ""
"\"Le Caire est devenu la langue la plus populaire pour les développeurs\""

#: src/ch08-02-traits-in-cairo.md:92 src/ch08-02-traits-in-cairo.md:169
#: src/ch08-02-traits-in-cairo.md:246
msgid "\"Worldwide\""
msgstr "\"Dans le monde entier\""

#: src/ch08-02-traits-in-cairo.md:93 src/ch08-02-traits-in-cairo.md:170
#: src/ch08-02-traits-in-cairo.md:247
msgid "\"Cairo Digger\""
msgstr "\"Cairo Digger\""

#: src/ch08-02-traits-in-cairo.md:94 src/ch08-02-traits-in-cairo.md:171
#: src/ch08-02-traits-in-cairo.md:248
msgid "\"Cairo is a new programming language for zero-knowledge proofs\""
msgstr ""
"\"Le Caire est un nouveau langage de programmation pour les preuves zéro "
"connaissance\""

#: src/ch08-02-traits-in-cairo.md:98 src/ch08-02-traits-in-cairo.md:175
#: src/ch08-02-traits-in-cairo.md:252
msgid "\"EliBenSasson\""
msgstr "\"EliBenSasson\""

#: src/ch08-02-traits-in-cairo.md:99 src/ch08-02-traits-in-cairo.md:176
#: src/ch08-02-traits-in-cairo.md:253
msgid ""
"\"Crypto is full of short-term maximizing projects. \\n @Starknet and "
"@StarkWareLtd are about long-term vision maximization.\""
msgstr ""
"\"Crypto est plein de projets de maximisation à court terme. \\n @Starknet "
"et @StarkWareLtd sont sur la maximisation de la vision à long terme.\""

#: src/ch08-02-traits-in-cairo.md:102 src/ch08-02-traits-in-cairo.md:179
#: src/ch08-02-traits-in-cairo.md:256
msgid "// Tweet instantiation\n"
msgstr "// Invocation du Tweet\n"

#: src/ch08-02-traits-in-cairo.md:104 src/ch08-02-traits-in-cairo.md:181
#: src/ch08-02-traits-in-cairo.md:258
msgid "\"New article available! {}\""
msgstr "\"Nouveau texte disponible! {}\""

#: src/ch08-02-traits-in-cairo.md:105 src/ch08-02-traits-in-cairo.md:182
#: src/ch08-02-traits-in-cairo.md:259
msgid "\"New tweet! {}\""
msgstr "\"Nouveau tweet! {}\""

#: src/ch08-02-traits-in-cairo.md:111
msgid ""
"<span class=\"caption\">A `Summary` trait that consists of the behavior "
"provided by a `summarize` method</span>"
msgstr ""
"<span class=\"caption\">Un caractère `Sommary` qui se compose du "
"comportement fourni par une méthode `summarize`</span>"

#: src/ch08-02-traits-in-cairo.md:113
msgid ""
"Each type implementing this trait must provide its own custom behavior for "
"the body of the method. The compiler will enforce that any type that "
"implements the `Summary` trait will have the method `summarize` defined with "
"this signature exactly."
msgstr ""
"Chaque type implémentant ce caractère doit fournir son propre comportement "
"personnalisé pour le corps de la méthode. Le compilateur fera en sorte que "
"tout type qui implémente le caractère `Sommary` aura la méthode `summarize` "
"définie avec cette signature exactement."

#: src/ch08-02-traits-in-cairo.md:115
msgid ""
"A trait can have multiple methods in its body: the method signatures are "
"listed one per line and each line ends in a semicolon."
msgstr ""
"Un trait peut avoir plusieurs méthodes dans son corps : les signatures de la "
"méthode sont listées une par ligne et chaque ligne se termine dans un point-"
"virgule."

#: src/ch08-02-traits-in-cairo.md:117
msgid "Implementing a Trait on a Type"
msgstr "Mise en œuvre d'un trait sur un type"

#: src/ch08-02-traits-in-cairo.md:119
msgid ""
"Now that we’ve defined the desired signatures of the `Summary` trait’s "
"methods, we can implement it on the types in our media aggregator. The "
"following code shows an implementation of the `Summary` trait on the "
"`NewsArticle` struct that uses the headline, the author, and the location to "
"create the return value of `summarize`. For the `Tweet` struct, we define "
"`summarize` as the username followed by the entire text of the tweet, "
"assuming that tweet content is already limited to 280 characters."
msgstr ""
"Maintenant que nous avons défini les signatures souhaitées des méthodes "
"`Sommary` trait's, nous pouvons l'appliquer sur les types dans notre "
"agrégateur de médias. Le code suivant montre une implémentation du caractère "
"`Sommary` sur la structure `NewsArticle` qui utilise le titre, l'auteur, et "
"l'emplacement pour créer la valeur de retour de `summarize`. Pour la "
"structure `Tweet`, nous définissons `summarize` comme le nom d'utilisateur "
"suivi par l'ensemble du texte du tweet, en supposant que le contenu du tweet "
"est déjà limité à 280 caractères."

#: src/ch08-02-traits-in-cairo.md:188
msgid ""
"Implementing a trait on a type is similar to implementing regular methods. "
"The difference is that after `impl`, we put a name for the implementation, "
"then use the `of` keyword, and then specify the name of the trait we are "
"writing the implementation for. If the implementation is for a generic type, "
"we place the generic type name in the angle brackets after the trait name."
msgstr ""
"La mise en œuvre d'un caractère sur un type est similaire à la mise en œuvre "
"de méthodes régulières. La différence est qu'après `impl`, nous mettons un "
"nom pour l'implémentation, puis utilisons le mot-clé `of`, puis spécifiez le "
"nom du caractère pour lequel nous écrivons l'implémentation. Si "
"l'implémentation est pour un type générique, nous plaçons le nom de type "
"générique dans les crochets d'angle après le nom du caractère."

#: src/ch08-02-traits-in-cairo.md:193
msgid ""
"Note that for the trait method to be accessible, there must be an "
"implementation of that trait visible from the scope where the method is "
"called. If the trait is `pub` and the implementation is not, and the "
"implementation is not visible in the scope where the trait method is called, "
"this will cause a compilation error."
msgstr ""
"Notez que pour que la méthode des caractères soit accessible, il doit y "
"avoir une mise en œuvre de cette caractéristique visible à partir de la "
"portée où la méthode est appelée. Si la caractéristique est \"pub\" et que "
"la mise en œuvre n'est pas, et que la mise en œuvre n'est pas visible dans "
"la portée où la méthode des caractères est appelée, cela causera une erreur "
"de compilation."

#: src/ch08-02-traits-in-cairo.md:195
msgid ""
"Within the `impl` block, we put the method signatures that the trait "
"definition has defined. Instead of adding a semicolon after each signature, "
"we use curly brackets and fill in the method body with the specific behavior "
"that we want the methods of the trait to have for the particular type."
msgstr ""
"Dans le bloc `impl`, nous mettons les signatures de la méthode que la "
"définition du trait a défini. Au lieu d'ajouter un point-virgule après "
"chaque signature, nous utilisons des crochets bouclés et remplir le corps de "
"la méthode avec le comportement spécifique que nous voulons que les méthodes "
"du trait aient pour le type particulier."

#: src/ch08-02-traits-in-cairo.md:200
msgid ""
"Now that the library has implemented the `Summary` trait on `NewsArticle` "
"and `Tweet`, users of the crate can call the trait methods on instances of "
"`NewsArticle` and `Tweet` in the same way we call regular methods. The only "
"difference is that the user must bring the trait into scope as well as the "
"types. Here’s an example of how a crate could use our `aggregator` crate:"
msgstr ""
"Maintenant que la bibliothèque a mis en œuvre le caractère `Sommary` sur "
"`NewsArticle` et `Tweet`, les utilisateurs de la caisse peuvent appeler les "
"méthodes de caractère sur les instances de `NewsArticle` et `Tweet` de la "
"même manière que nous appelons les méthodes régulières. La seule différence "
"est que l'utilisateur doit apporter le caractère dans la portée ainsi que "
"les types. Voici un exemple de comment une caisse pourrait utiliser notre "
"caisse `agrégator`:"

#: src/ch08-02-traits-in-cairo.md:265
msgid "This code prints the following:"
msgstr "Ce code imprime ce qui suit :"

#: src/ch08-02-traits-in-cairo.md:279
msgid ""
"Other crates that depend on the _aggregator_ crate can also bring the "
"`Summary` trait into scope to implement `Summary` on their own types."
msgstr ""
"D'autres caisses qui dépendent de la caisse _aggregator_ peuvent également "
"apporter le caractère `Sommary` dans la portée pour mettre en œuvre "
"`Sommary` sur leurs propres types."

#: src/ch08-02-traits-in-cairo.md:304
msgid "Managing and Using External Trait"
msgstr "Gestion et utilisation des caractères externes"

#: src/ch08-02-traits-in-cairo.md:306
msgid ""
"To use traits methods, you need to make sure the correct traits/"
"implementation(s) are imported. In some cases you might need to import not "
"only the trait but also the implementation if they are declared in separate "
"modules. If `CircleGeometry` implementation was in a separate module/file "
"named _circle_, then to define `boundary` method on `Circle` struct, we'd "
"need to import `ShapeGeometry` trait in the _circle_ module."
msgstr ""
"Pour utiliser les méthodes de caractères, vous devez vous assurer que les "
"caractères/implémentation(s) correct(s) sont importés. Dans certains cas, "
"vous pourriez avoir besoin d'importer non seulement le caractère mais aussi "
"l'implémentation s'ils sont déclarés dans des modules séparés. Si "
"l'implémentation `CircleGeometry` était dans un module/fichier distinct "
"nommé _circle_, alors pour définir la méthode `boundary` sur la structure "
"`Circle`, nous devons importer le caractère `ShapeGeometry` dans le module "
"_circle_."

#: src/ch08-02-traits-in-cairo.md:309
msgid ""
"If the code was organized into modules like this, where the implementation "
"of a trait was defined in a different module than the trait itself, "
"explicitly importing the relevant trait or implementation is required."
msgstr ""
"Si le code était organisé en modules comme celui-ci, où l'implémentation "
"d'un caractère était définie dans un module différent de celui lui-même, "
"l'importation explicite du caractère ou de l'implémentation concerné est "
"requise."

#: src/ch08-02-traits-in-cairo.md:312
msgid ""
"// Here T is an alias type which will be provided during implementation\n"
msgstr ""
"// Ici T est un type d'alias qui sera fourni pendant la mise en œuvre\n"

#: src/ch08-02-traits-in-cairo.md:319
msgid ""
"// Importing ShapeGeometry is required to implement this trait for "
"Rectangle\n"
msgstr ""
"// Importation de ShapeGeométrie est nécessaire pour implémenter ce trait "
"pour Rectangle\n"

#: src/ch08-02-traits-in-cairo.md:328
msgid ""
"// Implementation RectangleGeometry passes in <Rectangle>\n"
"    // to implement the trait for that type\n"
msgstr ""
"// Implementation RectangleLa géométrie passe dans <Rectangle> // pour "
"implémenter le caractère pour ce type\n"

#: src/ch08-02-traits-in-cairo.md:341
msgid ""
"// Importing ShapeGeometry is required to implement this trait for Circle\n"
msgstr ""
"// Importation de FormeGéométrie est nécessaire pour implémenter ce trait "
"pour Circle\n"

#: src/ch08-02-traits-in-cairo.md:349
msgid ""
"// Implementation CircleGeometry passes in <Circle>\n"
"    // to implement the imported trait for that type\n"
msgstr ""
"// Circle de mise en oeuvreLa géométrie passe dans <Circle> // pour mettre "
"en œuvre le caractère importé pour ce type\n"

#: src/ch08-02-traits-in-cairo.md:366
msgid "\"Rectangle area: {}\""
msgstr "\"Zone du cratangle: {}\""

#: src/ch08-02-traits-in-cairo.md:366
msgid "//35\n"
msgstr "//35 (en milliers de dollars des États-Unis)\n"

#: src/ch08-02-traits-in-cairo.md:367
msgid "\"Rectangle boundary: {}\""
msgstr "\"Lisière du cratangle: {}\""

#: src/ch08-02-traits-in-cairo.md:367
msgid "//24\n"
msgstr "//24\n"

#: src/ch08-02-traits-in-cairo.md:370
msgid "\"Circle area: {}\""
msgstr "\"Zone de circulation: {}\""

#: src/ch08-02-traits-in-cairo.md:370
msgid "//78\n"
msgstr "//78\n"

#: src/ch08-02-traits-in-cairo.md:371
msgid "\"Circle boundary: {}\""
msgstr "\"Circulaire : {}\""

#: src/ch08-02-traits-in-cairo.md:371
msgid "//31\n"
msgstr ""
"Voir aussi la note de bas de page 3 de l'annexe I du règlement (UE) no "
"1308/2013 du Parlement européen et du Conseil du 21 décembre 2013 relatif à "
"l'application de l'article 3 du règlement (UE) no 1308/2013 du Parlement "
"européen et du Conseil du 26 juin 2013 relatif à l'application de l'article "
"3 du règlement (UE) no 1308/2013 du Parlement européen et du Conseil du 26 "
"juin 2013 relatif à l'application de l'article 3 du règlement (UE) no "
"1308/2013 du Parlement européen et du Conseil du 26 juin 2013 relatif à "
"l'application de l'article 3 du règlement (UE) no 1308/2013 du Parlement "
"européen et du Conseil du 26 juin 2013 relatif à l'application de l'article "
"3 du règlement (UE) no 1308/2013 du Parlement européen et du Conseil du 26 "
"juin 2013 relatif à l'application de l'article 3 du règlement (UE) no "
"1308/2013 du Parlement européen et du Conseil du 26 juin 2013 relatif à "
"l'application de l'article 3 du règlement (UE) no 1308/2013 du Parlement "
"européen et du Conseil du 22 juin 2013 relatif à l'application de l'article "
"3 du règlement (UE)\n"

#: src/ch08-02-traits-in-cairo.md:375
msgid ""
"Note that in this example, `CircleGeometry` and `RectangleGeometry` "
"implementations don't need to be declared as `pub`. Indeed, `ShapeGeometry` "
"trait, which is public, is used to print the result in the `main` function. "
"The compiler will find the appropriate implementation for the "
"`ShapeGeometry` public trait, regardless of the implementation visibility."
msgstr ""
"Notez que dans cet exemple, les implémentations `CircleGeometry` et "
"`RectangleGeometry` n'ont pas besoin d'être déclarées comme `pub`. En effet, "
"le caractère `ShapeGeometry`, qui est public, est utilisé pour imprimer le "
"résultat dans la fonction `main`. Le compilateur trouvera l'implémentation "
"appropriée pour le caractère public `ShapeGeometry`, quelle que soit la "
"visibilité de l'implémentation."

#: src/ch08-02-traits-in-cairo.md:377
msgid "Impl Aliases"
msgstr "Impl Aliases"

#: src/ch08-02-traits-in-cairo.md:379
msgid ""
"Implementations can be aliased when imported. This is most useful when you "
"want to instantiate generic implementations with concrete types. For "
"example, let's say we define a trait `Two` that is used to return the value "
"`2` for a type `T`. We can write a trivial generic implementation of `Two` "
"for all types that implement the `One` trait, simply by adding twice the "
"value of `one` and returning it. However, in our public API, we may only "
"want to expose the `Two` implementation for the `u8` and `u128` types."
msgstr ""
"Par exemple, disons que nous définissons un trait `Two` qui est utilisé pour "
"retourner la valeur `2` pour un type `T`. Nous pouvons écrire une "
"implémentation générique triviale de `Two` pour tous les types qui "
"implémentent le trait `One`, simplement en ajoutant deux fois la valeur de "
"`One` et en la renvoyant. Cependant, dans notre API publique, nous pouvons "
"seulement vouloir exposer l'implémentation `Two` pour les types `u8` et "
"`u128`."

#: src/ch08-02-traits-in-cairo.md:400
msgid ""
"<span class=\"caption\"> Listing 8-1: Using impl aliases to instantiate "
"generic impls with concrete types</span>"
msgstr ""
"<span class=\"caption\"> Listage 8-1: Utilisation d'impl alias pour "
"actualiser des impls génériques avec des types de béton</span>"

#: src/ch08-02-traits-in-cairo.md:402
msgid ""
"We can define the generic implementation in a private module, use an impl "
"alias to instantiate the generic implementation for these two concrete "
"types, and make these two implementations public, while keeping the generic "
"implementation private and unexposed. This way, we can avoid code "
"duplication using the generic implementation, while keeping the public API "
"clean and simple."
msgstr ""
"Nous pouvons définir l'implémentation générique dans un module privé, "
"utiliser un alias impl pour actualiser l'implémentation générique pour ces "
"deux types concrets, et rendre ces deux implémentations publiques, tout en "
"maintenant l'implémentation générique privée et non exposée. De cette façon, "
"nous pouvons éviter la duplication de code en utilisant l'implémentation "
"générique, tout en maintenant l'API publique propre et simple."

#: src/ch08-02-traits-in-cairo.md:404
msgid "Negative Impls"
msgstr "Impliqués négatifs"

#: src/ch08-02-traits-in-cairo.md:406
msgid ""
"Note: This is still an experimental feature and can only be used if "
"`experimental-features = [\"negative_impls\"]` is enabled in your _Scarb."
"toml_ file, under the `[package]` section."
msgstr ""
"Note : Ceci est encore une fonctionnalité expérimentale et ne peut être "
"utilisé que si `experimental-features = [\"négatif_impls\"]` est activé dans "
"votre fichier _Scarb.toml_, sous la section `[package]`."

#: src/ch08-02-traits-in-cairo.md:408
msgid ""
"Negative implementations, also known as negative traits or negative bounds, "
"are a mechanism that allows you to express that a type does not implement a "
"certain trait when defining the implementation of a trait over a generic "
"type. Negative impls enable you to write implementations that are applicable "
"only when another implementation does not exist in the current scope."
msgstr ""
"Les implémentations négatives, également appelées caractères négatifs ou "
"limites négatives, sont un mécanisme qui vous permet d'exprimer qu'un type "
"n'implémente pas un certain caractère lors de la définition de "
"l'implémentation d'un caractère sur un type générique. Des impls négatifs "
"vous permettent d'écrire des implémentations qui ne sont applicables que "
"lorsque une autre implémentation n'existe pas dans la portée actuelle."

#: src/ch08-02-traits-in-cairo.md:410
msgid ""
"For example, let's say we have a trait `Producer` and a trait `Consumer`, "
"and we want to define a generic behavior where all types implement the "
"`Consumer` trait by default. However, we want to ensure that no type can be "
"both a `Consumer` and a `Producer`. We can use negative impls to express "
"this restriction."
msgstr ""
"Par exemple, disons que nous avons un trait `Producer` et un trait "
"`Consumer`, et nous voulons définir un comportement générique où tous les "
"types implémentent le caractère `Consumer` par défaut. Cependant, nous "
"voulons nous assurer qu'aucun type ne peut être à la fois un `Consumer` et "
"un `Producer`. Nous pouvons utiliser des impls négatifs pour exprimer cette "
"restriction."

#: src/ch08-02-traits-in-cairo.md:412
msgid ""
"In Listing 8-2, we define a `ProducerType` that implements the `Producer` "
"trait, and two other types, `AnotherType` and `AThirdType`, which do not "
"implement the `Producer` trait. We then use negative impls to create a "
"default implementation of the `Consumer` trait for all types that do not "
"implement the `Producer` trait."
msgstr ""
"Dans la liste 8-2, nous définissons un type de producteur qui implémente le "
"caractère de producteur, et deux autres types, `AnotherType` et "
"`ATroisièmeType`, qui n'implémentent pas le caractère de producteur. Nous "
"utilisons ensuite des implus négatifs pour créer une implémentation par "
"défaut du caractère de consommateur pour tous les types qui n'implémentent "
"pas le caractère de producteur."

#: src/ch08-02-traits-in-cairo.md:440
msgid "\"{:?} consumed value: {}\""
msgstr "\"{:?} valeur consommée: {}\""

#: src/ch08-02-traits-in-cairo.md:450
msgid ""
"// producer.consumer(production); Invalid: ProducerType does not implement "
"Consumer\n"
msgstr ""
"// producteur.consommateur(production); Invalide: producteurType ne met pas "
"en œuvre le consommateur\n"

#: src/ch08-02-traits-in-cairo.md:456
msgid ""
"<span class=\"caption\"> Listing 8-2: Using negative impls to enforce that a "
"type cannot implement both `Producer` and `Consumer` traits simultaneously</"
"span>"
msgstr ""
"<span class=\"caption\"> Listage 8-2: Utilisation d'impls négatifs pour "
"faire respecter qu'un type ne peut implémenter simultanément les caractères "
"`Producer` et `Consumer`</span>"

#: src/ch08-02-traits-in-cairo.md:458
msgid ""
"In the `main` function, we create instances of `ProducerType`, "
"`AnotherType`, and `AThirdType`. We then call the `produce` method on the "
"`producer` instance and pass the result to the `consume` method on the "
"`another_type` and `third_type` instances. Finally, we try to call the "
"`consume` method on the `producer` instance, which results in a compile-time "
"error because `ProducerType` does not implement the `Consumer` trait."
msgstr ""
"Dans la fonction `main`, nous créons des instances de `ProducerType`, "
"`AnotherType` et `ATroisièmeType`. Ensuite, nous appelons la méthode "
"`producte` sur l`instance `producter` et nous transmettons le résultat à la "
"méthode `consume` sur les instances `another_type` et `Troisième_type`. "
"Enfin, nous essayons d`appeler la méthode `consume` sur l`instance "
"`producter`, ce qui donne lieu à une erreur de compilation parce que "
"`ProducerType` n`implémente pas le caractère `Consumer`."

#: src/ch08-02-traits-in-cairo.md:460
msgid "{{#quiz ../quizzes/ch08-02-traits.toml}}"
msgstr "{{#quiz../quizes/ch08-02-traits.toml}}"

#: src/ch09-00-error-handling.md
msgid "Error handling"
msgstr "Gestion des erreurs"

#: src/ch09-00-error-handling.md
msgid ""
"In this chapter, we will explore various error handling techniques provided "
"by Cairo, which not only allow you to address potential issues in your code, "
"but also make it easier to create programs that are adaptable and "
"maintainable. By examining different approaches to managing errors, such as "
"pattern matching with the `Result` enum, using the `?` operator for more "
"ergonomic error propagation, and employing the `unwrap` or `expect` methods "
"for handling recoverable errors, you'll gain a deeper understanding of "
"Cairo's error handling features. These concepts are crucial for building "
"robust applications that can effectively handle unexpected situations, "
"ensuring your code is ready for production."
msgstr ""
"Dans ce chapitre, nous explorerons diverses techniques de gestion des "
"erreurs fournies par le Caire, qui non seulement vous permettent de traiter "
"les problèmes potentiels dans votre code, mais aussi de créer plus "
"facilement des programmes adaptables et pouvant être maintenus. En examinant "
"différentes approches de gestion des erreurs, telles que la correspondance "
"des motifs avec l'enum `Résultat`, en utilisant l'opérateur `?` pour une "
"propagation plus ergonomique des erreurs, et en utilisant les méthodes "
"`unwrap` ou `expect` pour gérer les erreurs récupérables, vous acquerrez une "
"meilleure compréhension des caractéristiques de gestion des erreurs du Caire."

#: src/ch09-01-unrecoverable-errors-with-panic.md:1
msgid "Unrecoverable Errors with `panic`"
msgstr "Erreurs non récupérables avec `panic`"

#: src/ch09-01-unrecoverable-errors-with-panic.md:3
msgid ""
"In Cairo, unexpected issues may arise during program execution, resulting in "
"runtime errors. While the `panic` function from the core library doesn't "
"provide a resolution for these errors, it does acknowledge their occurrence "
"and terminates the program. There are two primary ways that a panic can be "
"triggered in Cairo: inadvertently, through actions causing the code to panic "
"(e.g., accessing an array beyond its bounds), or deliberately, by invoking "
"the `panic` function."
msgstr ""
"Au Caire, des problèmes inattendus peuvent survenir pendant l'exécution du "
"programme, entraînant des erreurs d'exécution. Bien que la fonction `panic` "
"de la bibliothèque centrale ne fournisse pas de résolution pour ces erreurs, "
"elle reconnaît leur occurrence et met fin au programme. Il y a deux façons "
"principales qu'une panique peut être déclenchée au Caire : par inadvertance, "
"par des actions provoquant la panique du code (par exemple, l'accès à un "
"tableau au-delà de ses limites), ou délibérément, en invoquant la fonction "
"`panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:5
msgid ""
"When a panic occurs, it leads to an abrupt termination of the program. The "
"`panic` function takes an array as an argument, which can be used to provide "
"an error message and performs an unwind process where all variables are "
"dropped and dictionaries squashed to ensure the soundness of the program to "
"safely terminate the execution."
msgstr ""
"Lorsqu'une panique se produit, elle conduit à une fin brutale du programme. "
"La fonction `panic` prend un tableau comme argument, qui peut être utilisé "
"pour fournir un message d'erreur et effectue un processus de décompression "
"où toutes les variables sont abandonnées et les dictionnaires écrasés pour "
"assurer la solidité du programme pour mettre fin en toute sécurité à "
"l'exécution."

#: src/ch09-01-unrecoverable-errors-with-panic.md:7
msgid ""
"Here is how we can call `panic` from inside a program and return the error "
"code `2`:"
msgstr ""
"Voici comment nous pouvons appeler `panic` de l'intérieur d'un programme et "
"retourner le code d'erreur `2`:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:18
#: src/ch09-01-unrecoverable-errors-with-panic.md:58
msgid "\"This line isn't reached\""
msgstr "\"Cette ligne n'est pas atteinte\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:22
msgid "Running the program will produce the following output:"
msgstr "L'exécution du programme produira la sortie suivante:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:33
msgid ""
"As you can notice in the output, the call to `println!` macro is never "
"reached, as the program terminates after encountering the `panic` statement."
msgstr ""
"Comme vous pouvez le remarquer dans la sortie, l'appel à `println!` macro "
"n'est jamais atteint, car le programme se termine après avoir rencontré "
"l'instruction `panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:35
msgid ""
"An alternative and more idiomatic approach to panic in Cairo would be to use "
"the `panic_with_felt252` function. This function serves as an abstraction of "
"the array-defining process and is often preferred due to its clearer and "
"more concise expression of intent. By using `panic_with_felt252`, developers "
"can panic in a one-liner by providing a `felt252` error message as an "
"argument, making the code more readable and maintainable."
msgstr ""
"Une approche alternative et plus idiomatique de la panique au Caire serait "
"d'utiliser la fonction `panic_with_felt252`. Cette fonction sert "
"d'abstraction du processus de définition du tableau et est souvent préférée "
"en raison de son expression d'intention plus claire et plus concise. En "
"utilisant `panic_with_felt252`, les développeurs peuvent paniquer dans un "
"liner unique en fournissant un message d'erreur `felt252` comme argument, "
"rendant le code plus lisible et plus durable."

#: src/ch09-01-unrecoverable-errors-with-panic.md:37
msgid "Let's consider an example:"
msgstr "Prenons un exemple :"

#: src/ch09-01-unrecoverable-errors-with-panic.md:47
msgid ""
"Executing this program will yield the same error message as before. In that "
"case, if there is no need for an array and multiple values to be returned "
"within the error, `panic_with_felt252` is a more succinct alternative."
msgstr ""
"Exécuter ce programme donnera le même message d'erreur qu'avant. Dans ce "
"cas, s'il n'est pas nécessaire de renvoyer un tableau et plusieurs valeurs "
"dans l'erreur, `panic_with_felt252` est une alternative plus succincte."

#: src/ch09-01-unrecoverable-errors-with-panic.md:49 src/ch11-05-macros.md:29
msgid "`panic!` Macro"
msgstr "\"panique!\" Macro"

#: src/ch09-01-unrecoverable-errors-with-panic.md:51
msgid ""
"`panic!` macro can be really helpful. The previous example returning the "
"error code `2` shows how convenient `panic!` macro is. There is no need to "
"create an array and pass it as an argument like with the `panic` function."
msgstr ""
"`panic!` macro peut être vraiment utile. L'exemple précédent renvoyant le "
"code d'erreur `2` montre à quel point `panic!` macro est pratique. Il n'est "
"pas nécessaire de créer un tableau et de le passer comme un argument comme "
"avec la fonction `panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:56
msgid "\"2\""
msgstr "\"2\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:62
msgid ""
"Unlike the `panic_with_felt252` function, using `panic!` allows the input, "
"which is ultimately the panic error, to be a literal longer than 31 bytes. "
"This is because `panic!` takes a string as a parameter. For example, the "
"following line of code will successfully compile:"
msgstr ""
"Contrairement à la fonction `panic_with_felt252`, l'utilisation de `panic!` "
"permet à l'entrée, qui est finalement l'erreur de panique, d'être "
"littéralement plus de 31 octets. C'est parce que `panic!` prend une chaîne "
"comme paramètre. Par exemple, la ligne de code suivante sera compilée avec "
"succès:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:65
msgid "\"the error for panic! macro is not limited to 31 characters anymore\""
msgstr "\"l'erreur de panique! macro n'est plus limitée à 31 caractères\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:68
msgid "`nopanic` Notation"
msgstr "Notation «nopanique»"

#: src/ch09-01-unrecoverable-errors-with-panic.md:70
msgid ""
"You can use the `nopanic` notation to indicate that a function will never "
"panic. Only `nopanic` functions can be called in a function annotated as "
"`nopanic`."
msgstr ""
"Vous pouvez utiliser la notation `nopanic` pour indiquer qu'une fonction ne "
"paniquera jamais. Seules les fonctions `nopanic` peuvent être appelées dans "
"une fonction annotée comme `nopanic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:80
msgid ""
"This function will always return `42` and is guaranteed to never panic. "
"Conversely, the following function is not guaranteed to never panic:"
msgstr ""
"Cette fonction retournera toujours `42` et est garantie de ne jamais "
"paniquer. Inversement, la fonction suivante n'est pas garantie de ne jamais "
"paniquer:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:88
msgid ""
"If you try to compile this function that includes code that may panic, you "
"will get the following error:"
msgstr ""
"Si vous essayez de compiler cette fonction qui inclut le code qui peut "
"paniquer, vous obtiendrez l'erreur suivante:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:108
msgid ""
"Note that there are two functions that may panic here, `assert` and equality "
"with `==`. We usually don't use `assert` function in practice and use "
"`assert!` macro instead. We will discuss `assert!` macro in more detail in "
"the [Testing Cairo Programs](./ch10-01-how-to-write-tests.md#checking-"
"results-with-the-assert-macro) chapter."
msgstr ""
"Notez qu'il y a deux fonctions qui peuvent paniquer ici, `assert` et "
"l'égalité avec `==`. Nous n'utilisons généralement pas `assert` fonction "
"dans la pratique et utiliser `assert!` macro à la place. Nous allons "
"discuter `assert!` macro plus en détail dans le chapitre [Testing Cairo "
"Programs](../ch10-01-how-to-write-tests.md#checking-results-with-the-assert-"
"macro)."

#: src/ch09-01-unrecoverable-errors-with-panic.md:112
msgid "`panic_with` Attribute"
msgstr "`panic_with` Attribut"

#: src/ch09-01-unrecoverable-errors-with-panic.md:114
msgid ""
"You can use the `panic_with` attribute to mark a function that returns an "
"`Option` or `Result`. This attribute takes two arguments, which are the data "
"that is passed as the panic reason as well as the name for a wrapping "
"function. It will create a wrapper for your annotated function which will "
"panic if the function returns `None` or `Err`, with the given data as the "
"panic error."
msgstr ""
"Vous pouvez utiliser l'attribut `panic_with` pour marquer une fonction qui "
"renvoie une `Option` ou `Result`. Cet attribut prend deux arguments, qui "
"sont les données qui sont passées comme la raison de panique ainsi que le "
"nom d'une fonction d'emballage. Il créera un wrapper pour votre fonction "
"annotée qui paniquera si la fonction retourne `Aucun` ou `Err`, avec les "
"données données données comme erreur de panique."

#: src/ch09-01-unrecoverable-errors-with-panic.md:116
#: src/appendix-03-derivable-traits.md:38
msgid "Example:"
msgstr "Exemple :"

#: src/ch09-01-unrecoverable-errors-with-panic.md:129
msgid "// this returns None\n"
msgstr "// ce retour n'est pas\n"

#: src/ch09-01-unrecoverable-errors-with-panic.md:130
msgid "// this panics with 'value is 0'\n"
msgstr "// cette panique avec 'valeur est 0'\n"

#: src/ch09-01-unrecoverable-errors-with-panic.md:134
msgid "{{#quiz ../quizzes/ch09-01-unrecoverable-errors-with-panic.toml}}"
msgstr "{{#quiz../quizes/ch09-01-errors-non récupérables-with-panic.toml}}"

#: src/ch09-02-recoverable-errors.md:1
msgid "Recoverable Errors with `Result`"
msgstr "Erreurs récupérables avec `Résultat`"

#: src/ch09-02-recoverable-errors.md:3
msgid ""
"Most errors aren’t serious enough to require the program to stop entirely. "
"Sometimes, when a function fails, it’s for a reason that you can easily "
"interpret and respond to. For example, if you try to add two large integers "
"and the operation overflows because the sum exceeds the maximum "
"representable value, you might want to return an error or a wrapped result "
"instead of causing undefined behavior or terminating the process."
msgstr ""
"La plupart des erreurs ne sont pas assez graves pour exiger que le programme "
"s'arrête complètement. Parfois, quand une fonction échoue, elle s'exécute "
"pour une raison que vous pouvez facilement interpréter et répondre à. Par "
"exemple, si vous essayez d'ajouter deux grands entiers et l'opération "
"déborde parce que la somme dépasse la valeur représentative maximale, vous "
"pourriez vouloir retourner une erreur ou un résultat enveloppé au lieu de "
"causer un comportement non défini ou de terminer le processus."

#: src/ch09-02-recoverable-errors.md:5
msgid "The `Result` Enum"
msgstr "Le thème \"Résultat\""

#: src/ch09-02-recoverable-errors.md:7
msgid ""
"Recall from [Generic data types](./ch08-01-generic-data-types.md#enums) "
"section in Chapter 8 that the `Result` enum is defined as having two "
"variants, `Ok` and `Err`, as follows:"
msgstr ""
"Rappel de la section [types de données génériques](./ch08-01-generic-data-"
"types.md#enums) du chapitre 8 que l'enum `Résultat` est défini comme ayant "
"deux variantes, `Ok` et `Err`, comme suit:"

#: src/ch09-02-recoverable-errors.md:20
msgid "The `ResultTrait`"
msgstr "Le 'RésultatTraitement'"

#: src/ch09-02-recoverable-errors.md:22
msgid ""
"The `ResultTrait` trait provides methods for working with the `Result<T, E>` "
"enum, such as unwrapping values, checking whether the `Result` is `Ok` or "
"`Err`, and panicking with a custom message. The `ResultTraitImpl` "
"implementation defines the logic of these methods."
msgstr ""
"Le caractère `ResultTrait` fournit des méthodes pour travailler avec le "
"`Result<T, E>` enum, comme les valeurs de décomptage, vérifier si le "
"`Result` est `Ok` ou `Err`, et paniquer avec un message personnalisé. "
"L`implémentation `ResultTraitImpl` définit la logique de ces méthodes."

#: src/ch09-02-recoverable-errors.md:40
msgid ""
"The `expect` and `unwrap` methods are similar in that they both attempt to "
"extract the value of type `T` from a `Result<T, E>` when it is in the `Ok` "
"variant. If the `Result` is `Ok(x)`, both methods return the value `x`. "
"However, the key difference between the two methods lies in their behavior "
"when the `Result` is in the `Err` variant. The `expect` method allows you to "
"provide a custom error message (as a `felt252` value) that will be used when "
"panicking, giving you more control and context over the panic. On the other "
"hand, the `unwrap` method panics with a default error message, providing "
"less information about the cause of the panic."
msgstr ""
"Les méthodes `expect` et `unwrap` sont similaires en ce sens qu'elles "
"tentent toutes deux d'extraire la valeur du type `T` d'un `Résultat<T, E>` "
"quand il est dans la variante `Ok`. Si le `Résultat` est `Ok(x)`, les deux "
"méthodes retournent la valeur `x`. Cependant, la différence clé entre les "
"deux méthodes réside dans leur comportement lorsque le `Résultat` est dans "
"la variante `Err`. La méthode `expect` vous permet de fournir un message "
"d'erreur personnalisé (en tant que valeur `felt252`) qui sera utilisé lors "
"de la panique, vous donnant plus de contrôle et de contexte sur la panique. "
"D'autre part, la méthode `unwrap` panique avec un message d'erreur par "
"défaut, fournissant moins d'informations sur la cause de la panique."

#: src/ch09-02-recoverable-errors.md:42
msgid ""
"The `expect_err` and `unwrap_err` methods have the exact opposite behavior. "
"If the `Result` is `Err(x)`, both methods return the value `x`. However, the "
"key difference between the two methods is in case of `Result::Ok()`. The "
"`expect_err` method allows you to provide a custom error message (as a "
"`felt252` value) that will be used when panicking, giving you more control "
"and context over the panic. On the other hand, the `unwrap_err` method "
"panics with a default error message, providing less information about the "
"cause of the panic."
msgstr ""
"Les méthodes `expect_err` et `unwrap_err` ont le comportement opposé exact. "
"Si le `Result` est `Err(x)`, les deux méthodes retournent la valeur `x`. "
"Cependant, la différence clé entre les deux méthodes est dans le cas de "
"`Result::Ok()`. La méthode `expect_err` vous permet de fournir un message "
"d'erreur personnalisé (en tant que valeur `felt252`) qui sera utilisé lors "
"de la panique, vous donnant plus de contrôle et de contexte sur la panique. "
"D'autre part, la méthode `unwrap_err` panique avec un message d'erreur par "
"défaut, fournissant moins d'informations sur la cause de la panique."

#: src/ch09-02-recoverable-errors.md:44
msgid ""
"A careful reader may have noticed the `<+Drop<T>>` and `<+Drop<E>>` in the "
"first four methods signatures. This syntax represents generic type "
"constraints in the Cairo language, as seen in the previous chapter. These "
"constraints indicate that the associated functions require an implementation "
"of the `Drop` trait for the generic types `T` and `E`, respectively."
msgstr ""
"Un lecteur attentif a peut-être remarqué les signatures `<+Drop<T>>` et "
"`<+Drop<E>>` dans les quatre premières méthodes. Cette syntaxe représente "
"des contraintes de type génériques dans la langue du Caire, comme le montre "
"le chapitre précédent. Ces contraintes indiquent que les fonctions associées "
"nécessitent une mise en œuvre du caractère `Drop` pour les types génériques "
"`T` et `E`, respectivement."

#: src/ch09-02-recoverable-errors.md:46
msgid ""
"Finally, the `is_ok` and `is_err` methods are utility functions provided by "
"the `ResultTrait` trait to check the variant of a `Result` enum value."
msgstr ""
"Enfin, les méthodes `is_ok` et `is_err` sont des fonctions d'utilité "
"fournies par le caractère `ResultTrait` pour vérifier la variante d'une "
"valeur `Result` enum."

#: src/ch09-02-recoverable-errors.md:48
msgid ""
"`is_ok` takes a snapshot of a `Result<T, E>` value and returns `true` if the "
"`Result` is the `Ok` variant, meaning the operation was successful. If the "
"`Result` is the `Err` variant, it returns `false`."
msgstr ""
"`is_ok` prend un instantané d`une valeur `Result<T, E>` et retourne `true` "
"si la `Result` est la variante `Ok`, ce qui signifie que l`opération a été "
"réussie. Si la `Result` est la variante `Err`, elle retourne `false`."

#: src/ch09-02-recoverable-errors.md:49
msgid ""
"`is_err` takes a snapshot of a `Result<T, E>` value and returns `true` if "
"the `Result` is the `Err` variant, meaning the operation encountered an "
"error. If the `Result` is the `Ok` variant, it returns `false`."
msgstr ""
"`is_err` prend un instantané d`une valeur `Result<T, E>` et retourne `true` "
"si la `Result` est la variante `Err`, ce qui signifie que l`opération a "
"rencontré une erreur. Si la `Result` est la variante `Ok`, elle retourne "
"`false`."

#: src/ch09-02-recoverable-errors.md:51
msgid ""
"These methods are helpful when you want to check the success or failure of "
"an operation without consuming the `Result` value, allowing you to perform "
"additional operations or make decisions based on the variant without "
"unwrapping it."
msgstr ""
"Ces méthodes sont utiles lorsque vous voulez vérifier le succès ou l'échec "
"d'une opération sans consommer la valeur `Résultat`, vous permettant "
"d'effectuer des opérations supplémentaires ou de prendre des décisions "
"basées sur la variante sans la décompresser."

#: src/ch09-02-recoverable-errors.md:53
msgid ""
"You can find the implementation of the `ResultTrait` [here](https://github."
"com/starkware-libs/cairo/blob/main/corelib/src/result.cairo#L20)."
msgstr ""
"Vous pouvez trouver la mise en œuvre de la `ResultTrait` [ici](https://"
"github.com/starkware-libs/cairo/blob/main/corelib/src/result.cairo#L20)."

#: src/ch09-02-recoverable-errors.md:55
msgid ""
"It is always easier to understand with examples. Have a look at this "
"function signature:"
msgstr ""
"Il est toujours plus facile de comprendre avec des exemples. Jetez un oeil à "
"cette signature de fonction:"

#: src/ch09-02-recoverable-errors.md:61
msgid ""
"It takes two `u128` integers, `a` and `b`, and returns a `Result<u128, "
"u128>` where the `Ok` variant holds the sum if the addition does not "
"overflow, and the `Err` variant holds the overflowed value if the addition "
"does overflow."
msgstr ""
"Il prend deux entiers `u128`, `a` et `b`, et retourne un `Résultat<u128, "
"u128>` où la variante `Ok` tient la somme si l'addition ne déborde pas, et "
"la variante `Err` tient la valeur débordée si l'addition déborde."

#: src/ch09-02-recoverable-errors.md:63
msgid "Now, we can use this function elsewhere. For instance:"
msgstr ""
"Maintenant, nous pouvons utiliser cette fonction ailleurs. Par exemple:"

#: src/ch09-02-recoverable-errors.md:75
msgid ""
"Here, it accepts two `u128` integers, `a` and `b`, and returns an "
"`Option<u128>`. It uses the `Result` returned by `u128_overflowing_add` to "
"determine the success or failure of the addition operation. The `match` "
"expression checks the `Result` from `u128_overflowing_add`. If the result is "
"`Ok(r)`, it returns `Option::Some(r)` containing the sum. If the result is "
"`Err(r)`, it returns `Option::None` to indicate that the operation has "
"failed due to overflow. The function does not panic in case of an overflow."
msgstr ""
"Ici, il accepte deux entiers `u128`, `a` et `b`, et retourne une "
"`Option<u128>`. Il utilise le `Result` retourné par `u128_overflowing_add` "
"pour déterminer le succès ou l'échec de l'opération d'ajout. L'expression "
"`match` vérifie la `Result` de `u128_overflowing_add`. Si le résultat est "
"`Ok(r)`, il retourne `Option::Some(r)` contenant la somme. Si le résultat "
"est `Err(r)`, il retourne `Option::None` pour indiquer que l'opération a "
"échoué en raison d'un débordement. La fonction ne panique pas en cas de "
"débordement."

#: src/ch09-02-recoverable-errors.md:77
msgid "Let's take another example:"
msgstr "Prenons un autre exemple :"

#: src/ch09-02-recoverable-errors.md:88
msgid ""
"In this example, the `parse_u8` function takes a `felt252` and tries to "
"convert it into a `u8` integer using the `try_into` method. If successful, "
"it returns `Result::Ok(value)`, otherwise it returns `Result::Err('Invalid "
"integer')`."
msgstr ""
"Dans cet exemple, la fonction `parse_u8` prend une `felt252` et essaie de la "
"convertir en un entier `u8` en utilisant la méthode `try_into`. Si elle est "
"réussie, elle retourne `Résultat::Ok(value)`, sinon elle retourne `Résultat::"
"Err('Invalid integer')`."

#: src/ch09-02-recoverable-errors.md:90
msgid "Our two test cases are:"
msgstr "Nos deux cas d'essai sont les suivants :"

#: src/ch09-02-recoverable-errors.md:107
msgid "// should not panic\n"
msgstr "// ne devrait pas paniquer\n"

#: src/ch09-02-recoverable-errors.md:115
msgid "// should panic\n"
msgstr "// devrait paniquer\n"

#: src/ch09-02-recoverable-errors.md:123
msgid ""
"Don't worry about the `#[cfg(test)]` attribute for now. We'll explain in "
"more detail its meaning in the next [Testing Cairo Programs](./ch10-01-how-"
"to-write-tests.md) chapter."
msgstr ""
"Ne vous inquiétez pas de l'attribut `#[cfg(test)]` pour le moment. Nous "
"allons expliquer plus en détail sa signification dans le prochain chapitre "
"[Testing Cairo Programs](./ch10-01-how-to-write-tests.md)."

#: src/ch09-02-recoverable-errors.md:125
msgid ""
"`#[test]` attribute means the function is a test function, and "
"`#[should_panic]` attribute means this test will pass if the test execution "
"panics."
msgstr ""
"`#[test]` attribut signifie que la fonction est une fonction de test, et "
"`#[whould_panic]` attribut signifie que ce test passera si l'exécution du "
"test panique."

#: src/ch09-02-recoverable-errors.md:127
msgid ""
"The first one tests a valid conversion from `felt252` to `u8`, expecting the "
"`unwrap` method not to panic. The second test function attempts to convert a "
"value that is out of the `u8` range, expecting the `unwrap` method to panic "
"with the error message `Invalid integer`."
msgstr ""
"Le premier teste une conversion valide de `felt252` à `u8`, en s'attendant à "
"ce que la méthode `unwrap` ne panique pas. La deuxième fonction de test "
"tente de convertir une valeur qui est hors de la gamme `u8`, en s'attendant "
"à ce que la méthode `unwrap` panique avec le message d'erreur `Invalid "
"integer`."

#: src/ch09-02-recoverable-errors.md:132
msgid "The `?` Operator"
msgstr "L'opérateur `?`"

#: src/ch09-02-recoverable-errors.md:134
msgid ""
"The last operator we will talk about is the `?` operator. The `?` operator "
"is used for more idiomatic and concise error handling. When you use the `?` "
"operator on a `Result` or `Option` type, it will do the following:"
msgstr ""
"Le dernier opérateur dont nous parlerons est l'opérateur `?`. L'opérateur `?"
"` est utilisé pour gérer les erreurs plus idiomatiques et concises. Lorsque "
"vous utilisez l'opérateur `?` sur un type `Résultat` ou `Option`, il fera ce "
"qui suit:"

#: src/ch09-02-recoverable-errors.md:136
msgid ""
"If the value is `Result::Ok(x)` or `Option::Some(x)`, it will return the "
"inner value `x` directly."
msgstr ""
"Si la valeur est `Résultat::Ok(x)` ou `Option::Some(x)`, elle retournera "
"directement la valeur intérieure `x`."

#: src/ch09-02-recoverable-errors.md:137
msgid ""
"If the value is `Result::Err(e)` or `Option::None`, it will propagate the "
"error or `None` by immediately returning from the function."
msgstr ""
"Si la valeur est `Résultat::Err(e)` ou `Option::None`, elle propage l'erreur "
"ou `None` en revenant immédiatement de la fonction."

#: src/ch09-02-recoverable-errors.md:139
msgid ""
"The `?` operator is useful when you want to handle errors implicitly and let "
"the calling function deal with them."
msgstr ""
"L'opérateur `?` est utile quand vous voulez gérer les erreurs implicitement "
"et laisser la fonction d'appel traiter avec eux."

#: src/ch09-02-recoverable-errors.md:146 src/ch09-02-recoverable-errors.md:166
msgid "// DO SOMETHING\n"
msgstr "// Faire quelque chose\n"

#: src/ch09-02-recoverable-errors.md:152
msgid ""
"We can see that `do_something_with_parse_u8` function takes a `felt252` "
"value as input and calls `parse_u8` function. The `?` operator is used to "
"propagate the error, if any, or unwrap the successful value."
msgstr ""
"Nous pouvons voir que la fonction `do_something_with_parse_u8` prend une "
"valeur `felt252` comme entrée et appelle `parse_u8` fonction. L'opérateur `?"
"` est utilisé pour propager l'erreur, le cas échéant, ou pour déballer la "
"valeur réussie."

#: src/ch09-02-recoverable-errors.md:154
msgid "And with a little test case:"
msgstr "Et avec un petit cas d'essai :"

#: src/ch09-02-recoverable-errors.md:178
msgid "\"Result: {}\""
msgstr "\"Résultat: {}\""

#: src/ch09-02-recoverable-errors.md:179
msgid "\"Error: {}\""
msgstr "\"Erreur: {}\""

#: src/ch09-02-recoverable-errors.md:186
msgid "The console will print the error `Invalid Integer`."
msgstr "La console va imprimer l'erreur `Invalid Integer`."

#: src/ch09-02-recoverable-errors.md:190
msgid ""
"We saw that recoverable errors can be handled in Cairo using the `Result` "
"enum, which has two variants: `Ok` and `Err`. The `Result<T, E>` enum is "
"generic, with types `T` and `E` representing the successful and error "
"values, respectively. The `ResultTrait` provides methods for working with "
"`Result<T, E>`, such as unwrapping values, checking if the result is `Ok` or "
"`Err`, and panicking with custom messages."
msgstr ""
"Nous avons vu que les erreurs récupérables peuvent être traitées au Caire à "
"l'aide de l'enum `Result`, qui a deux variantes: `Ok` et `Err`. L'enum "
"`Result<T, E>` est générique, avec les types `T` et `E` représentant "
"respectivement les valeurs de succès et d'erreur. L' `ResultTrait` fournit "
"des méthodes pour travailler avec `Result<T, E>`, telles que décompresser "
"des valeurs, vérifier si le résultat est `Ok` ou `Err`, et paniquer avec des "
"messages personnalisés."

#: src/ch09-02-recoverable-errors.md:192
msgid ""
"To handle recoverable errors, a function can return a `Result` type and use "
"pattern matching to handle the success or failure of an operation. The `?` "
"operator can be used to implicitly handle errors by propagating the error or "
"unwrapping the successful value. This allows for more concise and clear "
"error handling, where the caller is responsible for managing errors raised "
"by the called function."
msgstr ""
"Pour gérer les erreurs récupérables, une fonction peut retourner un type "
"`Résultat` et utiliser un modèle correspondant pour gérer le succès ou "
"l'échec d'une opération. L'opérateur `?` peut être utilisé pour gérer "
"implicitement les erreurs en propageant l'erreur ou en décompilant la valeur "
"réussie. Cela permet une gestion plus concise et plus claire des erreurs, où "
"l'appelant est responsable de la gestion des erreurs soulevées par la "
"fonction appelée."

#: src/ch09-02-recoverable-errors.md:194
msgid "{{#quiz ../quizzes/ch09-02-error-handling-result.toml}}"
msgstr "{{#quiz../quizes/ch09-02-manipulation de l'erreur-result.toml}}"

#: src/ch10-00-testing-cairo-programs.md
msgid ""
"Correctness in our programs is the extent to which our code does what we "
"intend it to do. Cairo is designed with a high degree of concern about the "
"correctness of programs, but correctness is complex and not easy to prove. "
"Cairo's linear type system shoulders a huge part of this burden, but the "
"type system cannot catch everything. As such, Cairo includes support for "
"writing tests."
msgstr ""
"L'exactitude dans nos programmes est la mesure dans laquelle notre code fait "
"ce que nous avons l'intention de faire. Le Caire est conçu avec un degré "
"élevé de préoccupation au sujet de l'exactitude des programmes, mais "
"l'exactitude est complexe et pas facile à prouver. Le système de type "
"linéaire du Caire supporte une grande partie de ce fardeau, mais le système "
"de type ne peut pas tout attraper."

#: src/ch10-00-testing-cairo-programs.md
msgid ""
"Testing is a complex skill: although we can’t cover every detail about how "
"to write good tests in one chapter, we’ll discuss the mechanics of Cairo's "
"testing facilities. We’ll talk about the annotations and macros available to "
"you when writing your tests, the default behavior and options provided for "
"running your tests, and how to organize tests into unit tests and "
"integration tests."
msgstr ""
"Tester est une compétence complexe: bien que nous ne puissions pas couvrir "
"tous les détails sur la façon d'écrire de bons tests dans un chapitre, nous "
"allons discuter de la mécanique des installations de test du Caire. Nous "
"allons parler des annotations et macros disponibles pour vous lors de "
"l'écriture de vos tests, le comportement par défaut et les options fournies "
"pour exécuter vos tests, et comment organiser des tests en tests unitaires "
"et des tests d'intégration."

#: src/ch10-01-how-to-write-tests.md:3 src/ch10-01-how-to-write-tests.md:17
msgid "The Anatomy of a Test Function"
msgstr "L'anatomie d'une fonction d'essai"

#: src/ch10-01-how-to-write-tests.md:5
msgid ""
"Tests are Cairo functions that verify that the non-test code is functioning "
"in the expected manner. The bodies of test functions typically perform these "
"three actions:"
msgstr ""
"Les tests sont des fonctions du Caire qui vérifient que le code de non-essai "
"fonctionne de la manière prévue."

#: src/ch10-01-how-to-write-tests.md:7
msgid "Set up any needed data or state."
msgstr "Configurez toutes les données ou l'état nécessaires."

#: src/ch10-01-how-to-write-tests.md:8
msgid "Run the code you want to test."
msgstr "Exécutez le code que vous voulez tester."

#: src/ch10-01-how-to-write-tests.md:9
msgid "Assert the results are what you expect."
msgstr "Assister les résultats sont ce que vous attendez."

#: src/ch10-01-how-to-write-tests.md:11
msgid ""
"Let’s look at the features Cairo provides for writing tests that take these "
"actions, which include:"
msgstr ""
"Regardons les caractéristiques du Caire pour écrire des tests qui prennent "
"ces mesures, qui comprennent:"

#: src/ch10-01-how-to-write-tests.md:13
msgid "`#[test]` attribute."
msgstr "attribut `#[test]`."

#: src/ch10-01-how-to-write-tests.md:14
msgid ""
"`assert!`, `assert_eq!`, `assert_ne!`, `assert_lt!`, `assert_le!`, "
"`assert_gt!` and `assert_ge!` macros."
msgstr ""
"macros `assert!`, `assert_eq!`, `assert_ne!`, `assert_lt!`, `assert_le!`, "
"`assert_gt!` et `assert_ge!`."

#: src/ch10-01-how-to-write-tests.md:15
msgid "`#[should_panic]` attribute."
msgstr "attribut `#[whould_panic]`."

#: src/ch10-01-how-to-write-tests.md:19
msgid ""
"At its simplest, a test in Cairo is a function that’s annotated with the "
"`#[test]` attribute. Attributes are metadata about pieces of Cairo code; one "
"example is the `#[derive()]` attribute we used with structs in [Chapter 5]"
"(ch05-01-defining-and-instantiating-structs.md). To change a function into a "
"test function, add `#[test]` on the line before `fn`. When you run your "
"tests with the `scarb cairo-test` command, Scarb runs Cairo's test runner "
"binary that runs the annotated functions and reports on whether each test "
"function passes or fails."
msgstr ""
"À son plus simple, un test au Caire est une fonction qui est annotée avec "
"l'attribut `#[test]`. Les attributs sont des métadonnées sur des morceaux du "
"code du Caire; un exemple est l'attribut `#[derive()]` que nous avons "
"utilisé avec des structs dans [Chapitre 5](ch05-01-définissant-et-"
"instantiant-structs.md). Pour changer une fonction en fonction de test, "
"ajoutez `#[test]` sur la ligne avant `fn`. Lorsque vous exécutez vos tests "
"avec la commande `scarb cairo-test`, Scarb exécute le binaire du coureur de "
"test du Caire qui exécute les fonctions annotées et indique si chaque "
"fonction de test passe ou échoue."

#: src/ch10-01-how-to-write-tests.md:21
msgid ""
"Let's create a new project called _adder_ using Scarb with the command "
"`scarb new adder`:"
msgstr ""
"Crée un nouveau projet appelé _adder_ en utilisant Scarb avec la commande "
"`scarb new adder`:"

#: src/ch10-01-how-to-write-tests.md:30
msgid ""
"In _lib.cairo_, let's remove the existing content and add a `tests` module "
"containing the first test, as shown in Listing 10-1."
msgstr ""
"Dans _lib.cairo_, supprimons le contenu existant et ajoutons un module "
"`tests` contenant le premier test, comme indiqué dans Listing 10-1."

#: src/ch10-01-how-to-write-tests.md:51
msgid "<span class=\"caption\">Listing 10-1: A simple test function</span>"
msgstr "<span class=\"caption\">Liste 10-1: Une simple fonction d'essai</span>"

#: src/ch10-01-how-to-write-tests.md:53
msgid ""
"Note the `#[test]` annotation: this attribute indicates this is a test "
"function, so the test runner knows to treat this function as a test. We "
"might also have non-test functions to help set up common scenarios or "
"perform common operations, so we always need to indicate which functions are "
"tests."
msgstr ""
"Notez l'annotation `#[test]`: cet attribut indique qu'il s'agit d'une "
"fonction de test, de sorte que le coureur de test sait traiter cette "
"fonction comme un test. Nous pourrions également avoir des fonctions non-"
"test pour aider à définir des scénarios communs ou effectuer des opérations "
"communes, donc nous devons toujours indiquer quelles fonctions sont des "
"tests."

#: src/ch10-01-how-to-write-tests.md:55
msgid ""
"We use the `#[cfg(test)]` attribute for the `tests` module, so that the "
"compiler knows the code it contains needs to be compiled only when running "
"tests. This is actually not an option: if you put a simple test with the "
"`#[test]` attribute in a _lib.cairo_ file, it will not compile. We will talk "
"more about the `#[cfg(test)]` attribute in the next [Testing Organization]"
"(ch10-02-test-organization.md) section."
msgstr ""
"Nous utilisons l'attribut `#[cfg(test)]` pour le module `tests`, afin que le "
"compilateur connaisse le code qu'il contient doit être compilé seulement "
"lors de l'exécution des tests. Ce n'est en fait pas une option: si vous "
"mettez un test simple avec l'attribut `#[test]` dans un fichier _lib.cairo_, "
"il ne sera pas compilé. Nous parlerons plus de l'attribut `#[cfg(test)]` "
"dans la section suivante [Testing Organization](ch10-02-test-organization."
"md)."

#: src/ch10-01-how-to-write-tests.md:57
msgid ""
"The example function body uses the `assert!` macro, which contains the "
"result of adding 2 and 2, which equals 4. This assertion serves as an "
"example of the format for a typical test. We'll explain in more detail how "
"`assert!` works later in this chapter. Let’s run it to see that this test "
"passes."
msgstr ""
"Le corps de la fonction exemple utilise la macro `assert!`, qui contient le "
"résultat de l'ajout de 2 et 2, qui est égal à 4. Cette affirmation sert "
"d'exemple du format pour un test typique. Nous allons expliquer plus en "
"détail comment `assert!` fonctionne plus loin dans ce chapitre."

#: src/ch10-01-how-to-write-tests.md:59
msgid ""
"The `scarb cairo-test` command runs all tests found in our project, and "
"shows the following output:"
msgstr ""
"La commande `scarb cairo-test` exécute tous les tests trouvés dans notre "
"projet, et affiche la sortie suivante:"

#: src/ch10-01-how-to-write-tests.md:69
msgid ""
"`scarb cairo-test` compiled and ran the test. We see the line `running 1 "
"test`. The next line shows the name of the test function, called `it_works`, "
"and that the result of running that test is `ok`. The test runner also "
"provides an estimation of the gas consumption. The overall summary `test "
"result: ok.` means that all the tests passed, and the portion that reads `1 "
"passed; 0 failed` totals the number of tests that passed or failed."
msgstr ""
"La ligne suivante indique le nom de la fonction d'essai, appelée `it_works`, "
"et le résultat de l'exécution de cet essai est `ok`. Le coureur d'essai "
"fournit également une estimation de la consommation de gaz. Le résumé "
"général `résultat d'essai: ok.` signifie que tous les essais ont réussi, et "
"la partie qui se lit `1 réussi; 0 échoué` totalise le nombre d'essais qui "
"ont réussi ou échoué."

#: src/ch10-01-how-to-write-tests.md:71
msgid ""
"It’s possible to mark a test as ignored so it doesn’t run in a particular "
"instance; we’ll cover that in the [Ignoring Some Tests Unless Specifically "
"Requested](#ignoring-some-tests-unless-specifically-requested) section later "
"in this chapter. Because we haven’t done that here, the summary shows `0 "
"ignored`. We can also pass an argument to the `scarb cairo-test` command to "
"run only a test whose name matches a string; this is called filtering and "
"we’ll cover that in the [Running Single Tests](#running-single-tests) "
"section. Since we haven’t filtered the tests being run, the end of the "
"summary shows `0 filtered out`."
msgstr ""
"Il est possible de marquer un test comme ignoré de sorte qu'il n'est pas "
"exécuté dans un cas particulier; nous allons couvrir cela dans la section "
"[Ignorer certains tests à moins que spécifiquement demandé](#ignorer-"
"certains tests-sauf-spécifiquement-requis) plus loin dans ce chapitre. Parce "
"que nous n'avons pas fait cela ici, le résumé montre `0 ignoré`. Nous "
"pouvons également passer un argument à la commande `scarb cairo-test` pour "
"exécuter seulement un test dont le nom correspond à une chaîne; ceci est "
"appelé filtrage et nous allons couvrir cela dans la section [Running Single "
"Tests](#running-single-tests). Puisque nous n'avons pas filtré les tests en "
"cours d'exécution, la fin du résumé montre `0 filtré dehors`."

#: src/ch10-01-how-to-write-tests.md:73
msgid ""
"Let’s start to customize the test to our own needs. First change the name of "
"the `it_works` function to a different name, such as `exploration`, like so:"
msgstr ""
"Laissez-nous commencer à personnaliser le test en fonction de nos propres "
"besoins. Tout d'abord, changez le nom de la fonction `it_works` en un autre "
"nom, tel que `exploration`, comme ceci:"

#: src/ch10-01-how-to-write-tests.md:83
msgid ""
"Then run `scarb cairo-test` again. The output now shows `exploration` "
"instead of `it_works`:"
msgstr ""
"Ensuite lancez à nouveau `scarb cairo-test`. La sortie affiche maintenant "
"`exploration` au lieu de `it_works`:"

#: src/ch10-01-how-to-write-tests.md:93
msgid ""
"Now we’ll add another test, but this time we’ll make a test that fails! "
"Tests fail when something in the test function panics. Each test is run in a "
"new thread, and when the main thread sees that a test thread has died, the "
"test is marked as failed. Enter the new test as a function named `another`, "
"so your _src/lib.cairo_ file looks like in Listing 10-2."
msgstr ""
"Maintenant nous allons ajouter un autre test, mais cette fois nous allons "
"faire un test qui échoue! Les tests échouent quand quelque chose dans la "
"fonction de test panique. Chaque test est exécuté dans un nouveau thread, et "
"quand le thread principal voit qu'un thread de test est mort, le test est "
"marqué comme échoué. Entrez le nouveau test comme une fonction nommée "
"`another`, de sorte que votre fichier _src/lib.cairo_ ressemble à dans "
"Listing 10-2."

#: src/ch10-01-how-to-write-tests.md:109
msgid "\"Make this test fail\""
msgstr "\"Faites échouer ce test\""

#: src/ch10-01-how-to-write-tests.md:115
msgid ""
"<span class=\"caption\">Listing 10-2: Adding a second test in _lib.cairo_ "
"that will fail</span>"
msgstr ""
"<span class=\"caption\">Liste 10-2: Ajout d'un deuxième test dans _lib."
"cairo_ qui échouera</span>"

#: src/ch10-01-how-to-write-tests.md:117
msgid "Run `scarb cairo-test` and you will see the following output:"
msgstr "Exécutez `scarb cairo-test` et vous verrez la sortie suivante:"

#: src/ch10-01-how-to-write-tests.md:119
#, fuzzy
msgid ""
"```shell\n"
"$ scarb cairo-test \n"
"     Running cairo-test listing_08_03\n"
"   Compiling test(listings/ch10-testing-cairo-programs/listing_10_02/Scarb."
"toml)\n"
"    Finished release target(s) in 1 second\n"
"testing listing_08_03 ...\n"
"running 2 tests\n"
"test listing_08_03::tests::exploration ... ok (gas usage est.: 127300)\n"
"test listing_08_03::tests::another ... fail (gas usage est.: 24810)\n"
"failures:\n"
"   listing_08_03::tests::another - Panicked with \"Make this test fail\".\n"
"\n"
"\n"
"```"
msgstr ""
"```shell $ scarb cairo-test Running cairo-test listing_08_03 Compiling "
"test(listings/ch10-test-cairo-programs/listing_10_02/scarb.toml) Fined "
"release cget(s) in 1 second test listing_08_03... running 2 tests test "
"listing_08_03::tests::exploration... ok (utilisation du gaz est.: 22540) "
"test listing_08_03::tests:::un autre... échec (utilisation du gaz est.: "
"24810) échecs: list_08_03::tests::un autre - Panicked with \"Met this test "
"fault\". ```"

#: src/ch10-01-how-to-write-tests.md:134
msgid ""
"Instead of `ok`, the line `adder::another` shows `fail`. A new section "
"appears between the individual results and the summary. It displays the "
"detailed reason for each test failure. In this case, we get the details that "
"`another` failed because it panicked with `\"Make this test fail\"` error."
msgstr ""
"Au lieu de `ok`, la ligne `adder::another` affiche `fail`. Une nouvelle "
"section apparaît entre les résultats individuels et le résumé. Il affiche la "
"raison détaillée de chaque échec de test. Dans ce cas, nous obtenons les "
"détails que `another` a échoué parce qu'il a paniqué avec `\"Make this test "
"fail\"` erreur."

#: src/ch10-01-how-to-write-tests.md:136
msgid ""
"The summary line is displayed at the end: overall, our test result is "
"`FAILED`. We had one test pass and one test fail."
msgstr ""
"La ligne de résumé est affichée à la fin : dans l'ensemble, notre résultat "
"de test est « FAILED ». Nous avons eu une réussite de test et un échec de "
"test."

#: src/ch10-01-how-to-write-tests.md:138
msgid ""
"Now that you’ve seen what the test results look like in different scenarios, "
"let’s look at some functions that are useful in tests."
msgstr ""
"Maintenant que vous avez vu à quoi ressemblent les résultats des tests dans "
"différents scénarios, laissez-nous regarder certaines fonctions qui sont "
"utiles dans les tests."

#: src/ch10-01-how-to-write-tests.md:140
msgid "Checking Results with the `assert!` Macro"
msgstr "Vérification des résultats avec le Macro `assert!`"

#: src/ch10-01-how-to-write-tests.md:142
msgid ""
"The `assert!` macro, provided by Cairo, is useful when you want to ensure "
"that some condition in a test evaluates to `true`. We give the `assert!` "
"macro the first argument that evaluates to a boolean. If the value is "
"`true`, nothing happens and the test passes. If the value is `false`, the "
"`assert!` macro calls `panic()` to cause the test to fail with a message we "
"defined as the second argument. Using the `assert!` macro helps us check "
"that our code is functioning in the way we intended."
msgstr ""
"La macro `assert!`, fournie par le Caire, est utile lorsque vous voulez vous "
"assurer que certaines conditions dans un test évaluent à `true`. Nous "
"donnons la macro `assert!` le premier argument qui évalue à un booléen. Si "
"la valeur est `true`, rien ne se passe et le test passe. Si la valeur est "
"`false`, la macro `assert!` appelle `panic()` pour faire échouer le test "
"avec un message que nous définissons comme étant le deuxième argument. "
"L'utilisation de la macro `assert!` nous aide à vérifier que notre code "
"fonctionne de la manière que nous voulions."

#: src/ch10-01-how-to-write-tests.md:144
msgid ""
"Remember in [Chapter 5](./ch05-03-method-syntax.md), we used a `Rectangle` "
"struct and a `can_hold` method, which are repeated here in Listing 10-3. "
"Let’s put this code in the _src/lib.cairo_ file, then write some tests for "
"it using the `assert!` macro."
msgstr ""
"Rappelez-vous dans [Chapitre 5](./ch05-03-method-syntax.md), nous avons "
"utilisé une struct `Rectangle` et une méthode `can_hold`, qui sont répétés "
"ici dans Listing 10-3. Laissez-nous mettre ce code dans le fichier _src/lib."
"cairo_, puis écrivez quelques tests pour lui en utilisant la macro `assert!`."

#: src/ch10-01-how-to-write-tests.md:166
msgid ""
"<span class=\"caption\">Listing 10-3: Using the `Rectangle` struct and its "
"`can_hold` method from Chapter 5</span>"
msgstr ""
"<span class=\"caption\">Liste 10-3: Utilisation de la structure `Rectangle` "
"et de sa méthode `can_hold` du chapitre 5</span>"

#: src/ch10-01-how-to-write-tests.md:168
msgid ""
"The `can_hold` method returns a `bool`, which means it’s a perfect use case "
"for the `assert!` macro. We can write a test that exercises the `can_hold` "
"method by creating a `Rectangle` instance that has a width of `8` and a "
"height of `7` and asserting that it can hold another `Rectangle` instance "
"that has a width of `5` and a height of `1`."
msgstr ""
"La méthode `can_hold` renvoie un `bool`, ce qui signifie qu`il est un cas "
"d`utilisation parfait pour la macro `assert!`. Nous pouvons écrire un test "
"qui exerce la méthode `can_hold` en créant une instance `Rectangle` qui a "
"une largeur de `8` et une hauteur de `7` et en affirmant qu`elle peut tenir "
"une autre instance `Rectangle` qui a une largeur de `5` et une hauteur de "
"`1`."

#: src/ch10-01-how-to-write-tests.md:197 src/ch10-01-how-to-write-tests.md:210
#: src/ch10-01-how-to-write-tests.md:257 src/ch10-01-how-to-write-tests.md:270
msgid "\"rectangle cannot hold\""
msgstr "\"le rectangle ne peut pas tenir\""

#: src/ch10-01-how-to-write-tests.md:216
msgid ""
"We’ve named our test `larger_can_hold_smaller`, and we’ve created the two "
"`Rectangle` instances that we need. Then we called the `assert!` macro and "
"passed it the result of calling `larger.can_hold(@smaller)`. This expression "
"is supposed to return `true`, so our test should pass. Let’s find out!"
msgstr ""
"Nous avons nommé notre test `larger_can_hold_smaller`, et nous avons créé "
"les deux instances `Rectangle` dont nous avons besoin. Ensuite, nous avons "
"appelé la macro `assert!` et l'avons passé le résultat de l'appel `larger."
"can_hold(@smaller)`. Cette expression est censée retourner `true`, donc "
"notre test doit passer."

#: src/ch10-01-how-to-write-tests.md:226
msgid ""
"It does pass! Let’s add another test, this time asserting that a smaller "
"rectangle cannot hold a larger rectangle:"
msgstr ""
"Il ne passe! Laissez-nous ajouter un autre test, cette fois affirmant qu'un "
"rectangle plus petit ne peut pas tenir un rectangle plus grand:"

#: src/ch10-01-how-to-write-tests.md:276
msgid ""
"<span class=\"caption\">Listing 10-4: Adding another test in _lib.cairo_ "
"that will pass</span>"
msgstr ""
"<span class=\"caption\">Liste 10-4: Ajout d'un autre test dans _lib.cairo_ "
"qui passera</span>"

#: src/ch10-01-how-to-write-tests.md:278
msgid ""
"Because the correct result of the `can_hold` method, in this case, is "
"`false`, we need to negate that result before we pass it to the `assert!` "
"macro. As a result, our test will pass if `can_hold` returns `false`:"
msgstr ""
"Parce que le résultat correct de la méthode `can_hold`, dans ce cas, est "
"`false`, nous devons annuler ce résultat avant de le passer à la macro "
"`assert!`. Par conséquent, notre test passera si `can_hold` retourne `false`:"

#: src/ch10-01-how-to-write-tests.md:294
msgid ""
"Two tests that pass! Now let’s see what happens to our test results when we "
"introduce a bug in our code. We’ll change the implementation of the "
"`can_hold` method by replacing the `>` sign with a `<` sign when it compares "
"the widths:"
msgstr ""
"Nous allons changer l'implémentation de la méthode `can_hold` en remplaçant "
"le signe `>` par un signe `<` lorsqu'il compare les largeurs:"

#: src/ch10-01-how-to-write-tests.md:304
msgid "Running the tests now produces the following:"
msgstr "L'exécution des essais donne désormais les résultats suivants:"

#: src/ch10-01-how-to-write-tests.md:306
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 2 tests\n"
"test adder::tests::larger_can_hold_smaller ... fail (gas usage est.: 57610)\n"
"test adder::tests::smaller_cannot_hold_larger ... ok (gas usage est.: "
"55140)\n"
"failures:\n"
"   adder::larger_can_hold_smaller - Panicked with \"rectangle cannot "
"hold\".\n"
"\n"
"Error: test result: FAILED. 1 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"``shell $ echarb cairo-test tester adder... exécutant 2 tests test adder::"
"tests::larger_can_hold_smaller... failer (utilisation du gaz est.: 57610) "
"test adder::tests::smaller_cannot_hold_larger... ok (utilisation du gaz "
"est.: 55140) failer: adder:larger_can_hold_smaller - Panicked with "
"\"rectangle ne peut pas tenir\". Erreur: test result: FAILED. 1 passé; 1 "
"échoué; 0 ignoré ````"

#: src/ch10-01-how-to-write-tests.md:318
msgid ""
"Our tests caught the bug! Because `larger.width` is `8` and `smaller.width` "
"is `5`, the comparison of the widths in `can_hold` now returns `false` (`8` "
"is not less than `5`) in the `larger_can_hold_smaller` test. Notice that the "
"`smaller_cannot_hold_larger` test still passes: to make this test fail, the "
"height comparison should also be modified in `can_hold` method, replacing "
"the `>` sign with a `<` sign."
msgstr ""
"Nos tests ont attrapé le bug! Parce que `larger.width` est `8` et `smaller."
"width` est `5`, la comparaison des largeurs dans `can_hold` renvoie "
"maintenant `false` (`8` n'est pas moins que `5`) dans le test "
"`larger_can_hold_smaller`. Notez que le test `smaller_cannot_hold_larger` "
"passe toujours: pour faire échouer ce test, la comparaison de hauteur doit "
"également être modifiée dans la méthode `can_hold`, remplaçant le signe `>` "
"par un signe `<`."

#: src/ch10-01-how-to-write-tests.md:322
msgid "Testing Equality and Comparisons with the `assert_xx!` Macros"
msgstr "Tester l'égalité et les comparaisons avec les Macros `assert_xx!`"

#: src/ch10-01-how-to-write-tests.md:324
msgid "`assert_eq!` and `assert_ne!` Macros"
msgstr "`assert_eq!` et `assert_ne!` Macros"

#: src/ch10-01-how-to-write-tests.md:326
msgid ""
"A common way to verify functionality is to test for equality between the "
"result of the code under test and the value you expect the code to return. "
"You could do this using the `assert!` macro and passing it an expression "
"using the `==` operator. However, this is such a common test that the "
"standard library provides a pair of macros — `assert_eq!` and `assert_ne!` — "
"to perform this test more conveniently. These macros compare two arguments "
"for equality or inequality, respectively. They’ll also print the two values "
"if the assertion fails, which makes it easier to see _why_ the test failed; "
"conversely, the `assert!` macro only indicates that it got a `false` value "
"for the `==` expression, without printing the values that led to the `false` "
"value."
msgstr ""
"Une façon courante de vérifier la fonctionnalité est de tester l'égalité "
"entre le résultat du code sous test et la valeur que vous attendez du code à "
"retourner. Vous pouvez le faire en utilisant la macro `assert!` et en lui "
"passant une expression en utilisant l'opérateur `==`. Cependant, il s'agit "
"d'un test si commun que la bibliothèque standard fournit une paire de macros "
"- `assert_eq!` et `assert_ne!` - pour effectuer ce test plus commodément. "
"Ces macros comparent deux arguments pour l'égalité ou l'inégalité, "
"respectivement. Ils vont également imprimer les deux valeurs si "
"l'affirmation échoue, ce qui rend plus facile de voir _Why_ le test a "
"échoué; inversement, la macro `assert!` indique seulement qu'il a obtenu une "
"valeur `false` pour l'expression `==`, sans imprimer les valeurs qui ont "
"conduit à la valeur `false`."

#: src/ch10-01-how-to-write-tests.md:337
msgid ""
"In Listing 10-5, we write a function named `add_two` that adds `2` to its "
"parameter, then we test this function using `assert_eq!` and `assert_ne!` "
"macros."
msgstr ""
"Dans Listing 10-5, nous écrivons une fonction nommée `add_two` qui ajoute "
"`2` à son paramètre, puis nous testons cette fonction en utilisant "
"`assert_eq!` et `assert_ne!` macros."

#: src/ch10-01-how-to-write-tests.md:363
msgid ""
"<span class=\"caption\">Listing 10-5: Testing the function `add_two` using "
"`assert_eq!` and `assert_ne!` macros</span>"
msgstr ""
"<span class=\"caption\">Liste 10-5: Test de la fonction `add_two` en "
"utilisant `assert_eq!` et `assert_ne!` macros</span>"

#: src/ch10-01-how-to-write-tests.md:365
msgid "Let’s check that it passes!"
msgstr "Laissez-nous vérifier qu'il passe!"

#: src/ch10-01-how-to-write-tests.md:376
msgid ""
"In the `it_adds_two` test, we pass `4` as argument to `assert_eq!` macro, "
"which is equal to the result of calling `add_two(2)`. The line for this test "
"is `test adder::tests::it_adds_two ... ok`, and the `ok` text indicates that "
"our test passed."
msgstr ""
"Dans le test `it_adds_two`, nous passons `4` comme argument à `assert_eq!` "
"macro, qui est égal au résultat de l'appel `add_two(2)`. La ligne pour ce "
"test est `test adder::tests::it_adds_two... ok`, et le texte `ok` indique "
"que notre test est passé."

#: src/ch10-01-how-to-write-tests.md:379
msgid ""
"In the `wrong_check` test, we pass `0` as argument to `assert_ne!` macro, "
"which is not equal to the result of calling `add_two(2)`. Tests that use the "
"`assert_ne!` macro will pass if the two values we give it are _not_ equal "
"and fail if they’re equal. This macro is most useful for cases when we’re "
"not sure what a value _will_ be, but we know what the value definitely "
"_shouldn’t_ be. For example, if we’re testing a function that is guaranteed "
"to change its input in some way, but how the input is changed depends on the "
"day of the week that we run our tests, the best thing to assert might be "
"that the output of the function is not equal to the input."
msgstr ""
"Dans le test `wrong_check`, nous passons `0` comme argument à `assert_ne!` "
"macro, ce qui n'est pas égal au résultat de l'appel `add_two(2)`. Tests qui "
"utilisent la macro `assert_ne!` passera si les deux valeurs que nous donnons "
"sont _not_ égales et échouent si elles sont égales. Cette macro est la plus "
"utile dans les cas où nous ne sommes pas sûrs de ce qu'est une valeur "
"_will_, mais nous savons ce que la valeur certainement _devrait_t. Par "
"exemple, si nous testons une fonction qui est garantie de changer son entrée "
"d'une certaine manière, mais comment l'entrée est modifiée dépend du jour de "
"la semaine où nous effectuons nos tests, la meilleure chose à affirmer "
"pourrait être que la sortie de la fonction n'est pas égale à l'entrée."

#: src/ch10-01-how-to-write-tests.md:388
msgid ""
"Let’s introduce a bug into our code to see what `assert_eq!` looks like when "
"it fails. Change the implementation of the `add_two` function to instead add "
"`3`:"
msgstr ""
"Laissez-nous introduire un bug dans notre code pour voir à quoi `assert_eq!` "
"ressemble quand il échoue. Changez l'implémentation de la fonction `add_two` "
"pour ajouter `3`:"

#: src/ch10-01-how-to-write-tests.md:397
msgid "Run the tests again:"
msgstr "Exécutez à nouveau les essais:"

#: src/ch10-01-how-to-write-tests.md:399
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 2 tests\n"
"test adder::tests::wrong_check ... ok (gas usage est.: 132000)\n"
"test adder::tests::it_adds_two ... fail (gas usage est.: 166800)\n"
"failures:\n"
"   adder::tests::it_adds_two - Panicked with \"assertion `4 == add_two(2)` "
"failed.\n"
"4: 4\n"
"add_two(2): 5\".\n"
"\n"
"Error: test result: FAILED. 1 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"``shell $ echarb cairo-test tester adder... exécutant 2 tests test adder::"
"tests::wrong_check... ok (utilisation du gaz est.: 132000) test adder::"
"tests::it_adds_two... fail (utilisation du gaz est.: 166800) failer: adder::"
"tests::it_adds_two - Panicked avec \"affirmation `4 == add_two(2)` échoué. "
"4: 4 add_two(2): 5\". Erreur: résultat du test: FAILED. 1 passé; 1 échoué; 0 "
"ignoré ```"

#: src/ch10-01-how-to-write-tests.md:413
msgid ""
"Our test caught the bug! The `it_adds_two` test failed with the following "
"message: ``Panicked with \"assertion `4 == add_two(2)` failed``. It tells us "
"that the assertion that failed was `` \"assertion `left == right` failed`` "
"and the `left` and `right` values are printed on the next lines as `left: "
"left_value` and `right: right_value`. This helps us start debugging: the "
"`left` argument was `4` but the `right` argument, where we had `add_two(2)`, "
"was `5`. You can imagine that this would be especially helpful when we have "
"a lot of tests going on."
msgstr ""
"Notre test a attrapé le bug! Le test `it_adds_two` a échoué avec le message "
"suivant: ``Panicked with \"assertion `4 == add_two(2)` failed``. Il nous dit "
"que l'affirmation qui a échoué était ``\"assertion `left=\" right`\" et les "
"valeurs `left` et `right` sont imprimées sur les lignes suivantes comme "
"`left: left_value` et `right: left_value`. Cela nous aide à commencer à "
"déboger: l'argument `left` était `4` mais l'argument `right`, où nous avions "
"`add_two(2)`, était `5`. Vous pouvez imaginer que cela serait "
"particulièrement utile lorsque nous avons beaucoup de tests en cours."

#: src/ch10-01-how-to-write-tests.md:421
msgid ""
"Note that in some languages and test frameworks, the parameters for equality "
"assertion functions are called `expected` and `actual`, and the order in "
"which we specify the arguments matters. However, in Cairo, they’re called "
"`left` and `right`, and the order in which we specify the value we expect "
"and the value the code produces doesn’t matter. We could write the assertion "
"in this test as `assert_eq!(add_two(2), 4)`, which would result in the same "
"failure message that displays `` assertion failed: `(left == right)` ``."
msgstr ""
"Notez que dans certains langages et cadres de test, les paramètres des "
"fonctions d'affirmation de l'égalité sont appelés `attendu` et `actual`, et "
"l'ordre dans lequel nous spécifions les arguments est important. Cependant, "
"au Caire, ils sont appelés `left` et `right`, et l'ordre dans lequel nous "
"spécifions la valeur que nous attendons et la valeur produite par le code "
"n'a pas d'importance. Nous pourrions écrire l'affirmation dans ce test comme "
"`assert_eq!(add_two(2), 4)`, ce qui entraînerait le même message d'échec qui "
"afficherait `` assertion échouée: `(left=right)```."

#: src/ch10-01-how-to-write-tests.md:429
msgid ""
"Here is a simple example comparing two structs, showing how to use "
"`assert_eq!` and `assert_ne!` macros:"
msgstr ""
"Voici un exemple simple comparant deux structures, montrant comment utiliser "
"les macros `assert_eq!` et `assert_ne!`:"

#: src/ch10-01-how-to-write-tests.md:446
msgid "\"{:?},{:?} should be equal\""
msgstr "\"{:?},{:?} devrait être égal\""

#: src/ch10-01-how-to-write-tests.md:448
msgid "\"{:?},{:?} should not be equal\""
msgstr "\"{:?},{:?} ne devrait pas être égal\""

#: src/ch10-01-how-to-write-tests.md:452
msgid ""
"Under the surface, `assert_eq!` and `assert_ne!` macros use the operators "
"`==` and `!=`, respectively. They both take snapshots of values as "
"arguments. When the assertions fail, these macros print their arguments "
"using debug formatting (`{:?}` syntax), which means the values being "
"compared must implement `PartialEq` and `Debug` traits. All primitive types "
"and most of the core library types implement these traits. For structs and "
"enums that you define yourself, you’ll need to implement `PartialEq` to "
"assert equality of those types. You’ll also need to implement `Debug` to "
"print the values when the assertion fails. Because both traits are "
"derivable, this is usually as straightforward as adding the `#[derive(Drop, "
"Debug, PartialEq)]` annotation to your struct or enum definition. See "
"[Appendix C](./appendix-03-derivable-traits.md) for more details about these "
"and other derivable traits."
msgstr ""
"Sous la surface, les macros `assert_eq!` et `assert_ne!` utilisent les "
"opérateurs `==` et `!=`, respectivement. Ils prennent tous deux des "
"instantanés de valeurs comme arguments. Lorsque les affirmations échouent, "
"ces macros impriment leurs arguments en utilisant le formatage de débogage "
"(`{:?}` syntaxe), ce qui signifie que les valeurs comparées doivent "
"implémenter les caractères `PartialEq` et `Debug`. Tous les types primitifs "
"et la plupart des types de bibliothèque de base implémentent ces caractères. "
"Pour les structures et les enums que vous définissez vous-même, vous devrez "
"implémenter `PartialEq` pour affirmer l'égalité de ces types. Vous devrez "
"également implémenter `Debug` pour imprimer les valeurs lorsque "
"l'affirmation échoue."

#: src/ch10-01-how-to-write-tests.md:463
msgid "`assert_lt!`, `assert_le!`, `assert_gt!` and `assert_ge!` Macros"
msgstr "`assert_lt!`, `assert_le!`, `assert_gt!` et `assert_ge!` Macros"

#: src/ch10-01-how-to-write-tests.md:465
msgid "Comparisons in tests can be done using the `assert_xx!` macros:"
msgstr ""
"Les comparaisons dans les tests peuvent être faites en utilisant les macros "
"`assert_xx!`:"

#: src/ch10-01-how-to-write-tests.md:467
msgid ""
"`assert_lt!` checks if a given value is lower than another value, and "
"reverts otherwise."
msgstr ""
"`assert_lt!` vérifie si une valeur donnée est inférieure à une autre valeur, "
"et revient autrement."

#: src/ch10-01-how-to-write-tests.md:468
msgid ""
"`assert_le!` checks if a given value is lower or equal than another value, "
"and reverts otherwise."
msgstr ""
"`assert_le!` vérifie si une valeur donnée est inférieure ou égale à une "
"autre valeur, et revient autrement."

#: src/ch10-01-how-to-write-tests.md:469
msgid ""
"`assert_gt!` checks if a given value is greater than another value, and "
"reverts otherwise."
msgstr ""
"`assert_gt!` vérifie si une valeur donnée est supérieure à une autre valeur, "
"et revient autrement."

#: src/ch10-01-how-to-write-tests.md:470
msgid ""
"`assert_ge!` checks if a given value is greater or equal than another value, "
"and reverts otherwise."
msgstr ""
"`assert_ge!` vérifie si une valeur donnée est supérieure ou égale à une "
"autre valeur, et revient autrement."

#: src/ch10-01-how-to-write-tests.md:472
msgid "Listing 10-6 demonstrates how to use these macros:"
msgstr "La liste 10-6 montre comment utiliser ces macros :"

#: src/ch10-01-how-to-write-tests.md:510
msgid "\"{:?},{:?} should be lower or equal\""
msgstr "\"{:?},{:?} devrait être inférieur ou égal\""

#: src/ch10-01-how-to-write-tests.md:515
msgid ""
"<span class=\"caption\">Listing 10-6: Example of tests that use the "
"`assert_xx!` macros for comparisons</span>"
msgstr ""
"<span class=\"caption\">Liste 10-6: Exemple de tests utilisant les macros "
"`assert_xx!` pour les comparaisons</span>"

#: src/ch10-01-how-to-write-tests.md:517
msgid ""
"In this example, we roll a `Dice` struct multiple times and compare the "
"results. We need to manually implement the `PartialOrd` trait for our struct "
"so that we can compare `Dice` instances with `lt`, `le`, `gt` and `ge` "
"functions, which are used by `assert_lt!`, `assert_le!`, `assert_gt!` and "
"`assert_ge!` macros, respectively. We also need to derive the `Copy` trait "
"on our `Dice` struct to use the instantiated structs multiple times, as the "
"comparison functions take ownership of the variables."
msgstr ""
"Nous devons implémenter manuellement le caractère `PartialOrd` pour notre "
"structure afin que nous puissions comparer les instances `Dice` avec les "
"macros `lt`, `le`, `gt` et `ge`, qui sont utilisées par `assert_lt!`, "
"`assert_le!`, `assert_gt!` et `assert_ge!` respectivement. Nous devons "
"également dériver le caractère `Copy` sur notre structure `Dice` pour "
"utiliser les structures instantanées à plusieurs reprises, car les fonctions "
"de comparaison prennent la propriété des variables."

#: src/ch10-01-how-to-write-tests.md:519
msgid "Adding Custom Failure Messages"
msgstr "Ajout de messages d'échec personnalisés"

#: src/ch10-01-how-to-write-tests.md:521
msgid ""
"You can also add a custom message to be printed with the failure message as "
"optional arguments to `assert!`, `assert_eq!`, and `assert_ne!` macros. Any "
"arguments specified after the required arguments are passed along to the "
"`format!` macro (discussed in the [Printing](./ch11-08-printing."
"md#formatting) chapter), so you can pass a format string that contains `{}` "
"placeholders and values to go in those placeholders. Custom messages are "
"useful for documenting what an assertion means; when a test fails, you’ll "
"have a better idea of what the problem is with the code."
msgstr ""
"Vous pouvez également ajouter un message personnalisé à imprimer avec le "
"message d'échec en tant qu'argument optionnel à `assert!`, `assert_eq!` et "
"`assert_ne!` macros. Tout argument spécifié après le passage des arguments "
"requis à la macro `format!` (discuté dans le chapitre [Imprimer](./ch11-08-"
"printing.md#formatting), de sorte que vous pouvez passer une chaîne de "
"format qui contient `{}` placeholders et valeurs pour aller dans ces "
"placeholders. Les messages personnalisés sont utiles pour documenter ce que "
"signifie une assertion; quand un test échoue, vous aurez une meilleure idée "
"du problème avec le code."

#: src/ch10-01-how-to-write-tests.md:529
msgid ""
"Let’s add a custom failure message composed of a format string with a "
"placeholder filled in with the actual value we got from the `add_two` "
"function:"
msgstr ""
"Laissez-nous ajouter un message d'échec personnalisé composé d'une chaîne de "
"format avec un détenteur de place rempli avec la valeur réelle que nous "
"avons obtenue de la fonction `add_two`:"

#: src/ch10-01-how-to-write-tests.md:536
msgid "\"Expected {}, got add_two(2)={}\""
msgstr "\"Expecté {}, obtenu add_two(2)={}\""

#: src/ch10-01-how-to-write-tests.md:540
msgid "Now when we run the test, we’ll get a more informative error message:"
msgstr ""
"Maintenant, quand nous faisons le test, nous allons obtenir un message "
"d'erreur plus informatif:"

#: src/ch10-01-how-to-write-tests.md:542
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 1 test\n"
"test adder::tests::it_adds_two ... fail (gas usage est.: 590230)\n"
"failures:\n"
"   adder::tests::it_adds_two - Panicked with \"assertion `4 == add_two(2)` "
"failed: Expected 4, got add_two(2)=5\n"
"4: 4\n"
"add_two(2): 5\".\n"
"\n"
"Error: test result: FAILED. 0 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"``shell $ écharpe cairo-test test adder... exécutant 1 test adder::tests::"
"it_adds_two... fail (utilisation de gaz est.: 590230) échecs: adder::tests::"
"it_adds_two - Panicked avec \"affirmation `4 == add_two(2)` échoué: Attendu "
"4, obtenu add_two(2)=5 4: 4 add_two(2): 5\". Erreur: résultat du test: "
"FAILED. 0 passé; 1 échoué; 0 ignoré ```"

#: src/ch10-01-how-to-write-tests.md:555
msgid ""
"We can see the value we actually got in the test output, which would help us "
"debug what happened instead of what we were expecting to happen."
msgstr ""
"Nous pouvons voir la valeur que nous avons effectivement obtenue dans la "
"sortie de test, ce qui nous aiderait à déboguer ce qui s'est passé au lieu "
"de ce que nous nous attendions à ce qu'il se passe."

#: src/ch10-01-how-to-write-tests.md:560
msgid "Checking for panics with `should_panic`"
msgstr "Vérifier les paniques avec `should_panic`"

#: src/ch10-01-how-to-write-tests.md:562
msgid ""
"In addition to checking return values, it’s important to check that our code "
"handles error conditions as we expect. For example, consider the `Guess` "
"type in Listing 10-7:"
msgstr ""
"En plus de vérifier les valeurs de retour, il est important de vérifier que "
"notre code gère les conditions d'erreur comme nous nous y attendons. Par "
"exemple, considérez le type `Guess` dans Listing 10-7:"

#: src/ch10-01-how-to-write-tests.md:579 src/ch10-01-how-to-write-tests.md:631
msgid "\"Guess must be >= 1 and <= 100\""
msgstr "\"La guesse doit être >= 1 et <= 100\""

#: src/ch10-01-how-to-write-tests.md:587
msgid ""
"<span class=\"caption\">Listing 10-7: `Guess` struct and its `new` method</"
"span>"
msgstr ""
"<span class=\"caption\">Liste 10-7: \"Guess` struct and its `new` method</"
"span>"

#: src/ch10-01-how-to-write-tests.md:589
msgid ""
"Other code that uses `Guess` depends on the guarantee that `Guess` instances "
"will contain only values between `1` and `100`. We can write a test that "
"ensures that attempting to create a `Guess` instance with a value outside "
"that range panics."
msgstr ""
"Autre code qui utilise `Guess` dépend de la garantie que les instances "
"`Guess` ne contiennent que des valeurs entre `1` et `100`. Nous pouvons "
"écrire un test qui assure que tenter de créer une instance `Guess` avec une "
"valeur en dehors de cette plage panique."

#: src/ch10-01-how-to-write-tests.md:591
msgid ""
"We do this by adding the attribute `should_panic` to our test function. The "
"test passes if the code inside the function panics; the test fails if the "
"code inside the function doesn’t panic."
msgstr ""
"Nous le faisons en ajoutant l'attribut `whould_panic` à notre fonction de "
"test. Le test passe si le code à l'intérieur de la fonction panique; le test "
"échoue si le code à l'intérieur de la fonction ne panique pas."

#: src/ch10-01-how-to-write-tests.md:606
msgid ""
"We place the `#[should_panic]` attribute after the `#[test]` attribute and "
"before the test function it applies to. Let’s look at the result to see that "
"this test passes:"
msgstr ""
"Nous plaçons l'attribut `#[whould_panic]` après l'attribut `#[test]` et "
"avant la fonction de test à laquelle il s'applique."

#: src/ch10-01-how-to-write-tests.md:616
msgid ""
"Looks good! Now let’s introduce a bug in our code by removing the condition "
"that the `new` function will panic if the value is greater than `100`:"
msgstr ""
"Maintenant, laissez-nous introduire un bug dans notre code en supprimant la "
"condition que la fonction `new` paniquera si la valeur est supérieure à "
"`100`:"

#: src/ch10-01-how-to-write-tests.md:641
msgid "When we run the test, it will fail:"
msgstr "Quand nous passerons le test, il échouera :"

#: src/ch10-01-how-to-write-tests.md:654
msgid ""
"We don’t get a very helpful message in this case, but when we look at the "
"test function, we see that it’s annotated with `#[should_panic]` attribute. "
"The failure we got means that the code in the test function did not cause a "
"panic."
msgstr ""
"Nous n'obtenons pas un message très utile dans ce cas, mais quand nous "
"regardons la fonction de test, nous voyons qu'il est annoté avec "
"`#[whould_panic]` attribut. L'échec que nous avons obtenu signifie que le "
"code dans la fonction de test n'a pas causé de panique."

#: src/ch10-01-how-to-write-tests.md:656
msgid ""
"Tests that use `should_panic` can be imprecise. A `should_panic` test would "
"pass even if the test panics for a different reason from the one we were "
"expecting. To make `should_panic` tests more precise, we can add an optional "
"`expected` parameter to the `#[should_panic]` attribute. The test harness "
"will make sure that the failure message contains the provided text. For "
"example, consider the modified code for `GuessImpl` in Listing 10-8 where "
"the `new` function panics with different messages depending on whether the "
"value is too small or too large:"
msgstr ""
"Pour rendre les tests `should_panic` plus précis, nous pouvons ajouter un "
"paramètre optionnel `attendu` à l`attribut `#[should_panic]`. Le harnais de "
"test s`assurera que le message de défaillance contient le texte fourni. Par "
"exemple, considérez le code modifié pour `GuessImpl` dans l`Listing 10-8 où "
"la fonction `new` panique avec différents messages selon que la valeur est "
"trop petite ou trop grande:"

#: src/ch10-01-how-to-write-tests.md:673 src/ch10-01-how-to-write-tests.md:708
msgid "\"Guess must be >= 1\""
msgstr "\"La guesse doit être >= 1\""

#: src/ch10-01-how-to-write-tests.md:675 src/ch10-01-how-to-write-tests.md:687
#: src/ch10-01-how-to-write-tests.md:706 src/ch10-01-how-to-write-tests.md:720
msgid "\"Guess must be <= 100\""
msgstr "\"La guesse doit être <= 100\""

#: src/ch10-01-how-to-write-tests.md:696
msgid ""
"<span class=\"caption\">Listing 10-8: `new` implementation that panics with "
"different error messages</span>"
msgstr ""
"<span class=\"caption\">Liste 10-8: `new` implémentation qui panique avec "
"différents messages d'erreur</span>"

#: src/ch10-01-how-to-write-tests.md:698
msgid ""
"The test will pass because the value we put in the `should_panic` "
"attribute’s `expected` parameter is the string that the `Guess::new` method "
"panics with. We need to specify the entire panic message that we expect."
msgstr ""
"Le test passera parce que la valeur que nous mettons dans l`attribut "
"`whould_panic`s `attendue` est la chaîne avec laquelle la méthode `Guess::"
"new` panique. Nous devons spécifier l`intégralité du message de panique "
"auquel nous nous attendons."

#: src/ch10-01-how-to-write-tests.md:700
msgid ""
"To see what happens when a `should_panic` test with an expected message "
"fails, let’s again introduce a bug into our code by swapping the bodies of "
"the `if value < 1` and the `else if value > 100` blocks:"
msgstr ""
"Pour voir ce qui se passe quand un test `bould_panic` avec un message "
"attendu échoue, laissez-nous introduire un bug dans notre code en échangeant "
"les corps de la valeur `if < 1` et de la valeur `else si > 100` blocs:"

#: src/ch10-01-how-to-write-tests.md:727
msgid "This time when we run the `should_panic` test, it will fail:"
msgstr ""
"Cette fois, lorsque nous exécuterons le test `should_panic`, il échouera :"

#: src/ch10-01-how-to-write-tests.md:729
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing guess ...\n"
"running 1 test\n"
"test guess::tests::greater_than_100 ... fail (gas usage est.: 26690)\n"
"failures:\n"
"   guess::tests::greater_than_100 - Panicked with \"Guess must be >= 1\".\n"
"Error: test result: FAILED. 0 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"```shell $ écharpe cairo-test test test devine... en cours 1 test devine::"
"tests::great_than_100... échec (utilisation du gaz est.: 26690) échecs: "
"devine::tests::great_than_100 - Panicked avec \"Guess doit être >= 1\". "
"Erreur: résultat du test: FAILED. 0 passé; 1 échoué; 0 ignoré ```"

#: src/ch10-01-how-to-write-tests.md:739
msgid ""
"The failure message indicates that this test did indeed panic as we "
"expected, but the panic message did not include the expected string. The "
"panic message that we did get in this case was `Guess must be >= 1`. Now we "
"can start figuring out where our bug is!"
msgstr ""
"Le message d'échec indique que ce test a effectivement paniqué comme prévu, "
"mais le message de panique n'a pas inclus la chaîne attendue. Le message de "
"panique que nous avons obtenu dans ce cas était `Guess doit être >= 1`. "
"Maintenant, nous pouvons commencer à déterminer où est notre bug!"

#: src/ch10-01-how-to-write-tests.md:741
msgid "Running Single Tests"
msgstr "Essais uniques"

#: src/ch10-01-how-to-write-tests.md:743
msgid ""
"Sometimes, running a full test suite can take a long time. If you’re working "
"on code in a particular area, you might want to run only the tests "
"pertaining to that code. You can choose which tests to run by passing `scarb "
"cairo-test` an option `-f` (for \"filter\"), followed by the name of the "
"test you want to run as an argument."
msgstr ""
"Parfois, l'exécution d'une suite complète de tests peut prendre beaucoup de "
"temps. Si vous travaillez sur un code dans une zone donnée, vous pouvez ne "
"lancer que les tests relatifs à ce code. Vous pouvez choisir les tests à "
"exécuter en passant `scarb cairo-test` une option `-f` (pour \"filtre\"), "
"suivie du nom du test que vous voulez exécuter comme argument."

#: src/ch10-01-how-to-write-tests.md:745
msgid ""
"To demonstrate how to run a single test, we’ll first create two test "
"functions, as shown in Listing 10-9, and choose which ones to run."
msgstr ""
"Pour démontrer comment exécuter un seul test, nous allons d'abord créer deux "
"fonctions de test, comme indiqué dans Listing 10-9, et choisir celles à "
"exécuter."

#: src/ch10-01-how-to-write-tests.md:761
msgid "\"result is not 5\""
msgstr "\"le résultat n'est pas 5\""

#: src/ch10-01-how-to-write-tests.md:766
msgid ""
"<span class=\"caption\">Listing 10-9: Two tests with two different names</"
"span>"
msgstr ""
"<span class=\"caption\">Liste 10-9: Deux tests avec deux noms différents</"
"span>"

#: src/ch10-01-how-to-write-tests.md:768
msgid ""
"We can pass the name of any test function to `cairo-test` to run only that "
"test using the `-f` flag:"
msgstr ""
"Nous pouvons passer le nom de n'importe quelle fonction d'essai à `cairo-"
"test` pour exécuter seulement ce test en utilisant le drapeau `-f`:"

#: src/ch10-01-how-to-write-tests.md:778
msgid ""
"Only the test with the name `add_two_and_two` ran; the other test didn’t "
"match that name. The test output lets us know we had one more test that "
"didn’t run by displaying `1 filtered out;` at the end."
msgstr ""
"Seul le test avec le nom `add_two_and_two` est exécuté; l'autre test ne "
"correspond pas à ce nom. La sortie du test nous permet de savoir que nous "
"avons eu un autre test qui n'a pas été exécuté en affichant `1 filtré;` à la "
"fin."

#: src/ch10-01-how-to-write-tests.md:780
msgid ""
"We can also specify part of a test name, and any test whose name contains "
"that value will be run."
msgstr ""
"Nous pouvons également spécifier une partie d'un nom de test, et tout test "
"dont le nom contient cette valeur sera exécuté."

#: src/ch10-01-how-to-write-tests.md:782
msgid "Ignoring Some Tests Unless Specifically Requested"
msgstr "Ignorer certains tests à moins d'avoir été spécifiquement demandé"

#: src/ch10-01-how-to-write-tests.md:784
msgid ""
"Sometimes a few specific tests can be very time-consuming to execute, so you "
"might want to exclude them during most runs of `scarb cairo-test`. Rather "
"than listing as arguments all tests you do want to run, you can instead "
"annotate the time-consuming tests using the `#[ignore]` attribute to exclude "
"them, as shown here:"
msgstr ""
"Parfois, quelques tests spécifiques peuvent prendre beaucoup de temps à "
"exécuter, de sorte que vous pourriez vouloir les exclure lors de la plupart "
"des exécutions de `scarb cairo-test`. Plutôt que de lister comme arguments "
"tous les tests que vous voulez exécuter, vous pouvez au contraire annoter "
"les tests longs en utilisant l`attribut `#[ignore]` pour les exclure, comme "
"montré ici:"

#: src/ch10-01-how-to-write-tests.md:803
msgid "// code that takes an hour to run\n"
msgstr "// code qui prend une heure pour courir\n"

#: src/ch10-01-how-to-write-tests.md:808
msgid ""
"After `#[test]` we add the `#[ignore]` line to the test we want to exclude. "
"Now when we run our tests, `it_works` runs, but `expensive_test` doesn’t:"
msgstr ""
"Après `#[test]` nous ajoutons la ligne `#[ignorer]` au test que nous voulons "
"exclure. Maintenant, quand nous effectuons nos tests, `it_works` tourne, "
"mais `expensive_test` ne fait pas:"

#: src/ch10-01-how-to-write-tests.md:819
msgid "The `expensive_test` function is listed as ignored."
msgstr "La fonction `expensive_test` est listée comme ignorée."

#: src/ch10-01-how-to-write-tests.md:821
msgid ""
"When you’re at a point where it makes sense to check the results of the "
"ignored tests and you have time to wait for the results, you can run `scarb "
"cairo-test --include-ignored` to run all tests, whether they’re ignored or "
"not."
msgstr ""
"Lorsque vous êtes à un point où il est logique de vérifier les résultats des "
"tests ignorés et vous avez le temps d'attendre les résultats, vous pouvez "
"exécuter `scarb cairo-test --include-ignored` pour exécuter tous les tests, "
"qu'ils soient ignorés ou non."

#: src/ch10-01-how-to-write-tests.md:823
msgid "Testing Recursive Functions or Loops"
msgstr "Essai des fonctions récursives ou des boucles"

#: src/ch10-01-how-to-write-tests.md:825
msgid ""
"When testing recursive functions or loops, the test is instantiated by "
"default with a maximum amount of gas that it can consume. This prevents "
"running infinite loops or consuming too much gas, and can help you benchmark "
"the efficiency of your implementations. This value is assumed reasonably "
"large enough, but you can override it by adding the "
"`#[available_gas(<Number>)]` attribute to the test function. The following "
"example shows how to use it:"
msgstr ""
"Lorsque vous testez des fonctions ou des boucles récursives, le test est "
"instantané par défaut avec une quantité maximale de gaz qu'il peut "
"consommer. Cela empêche les boucles infinies ou consomme trop de gaz, et "
"peut vous aider à comparer l'efficacité de vos implémentations. Cette valeur "
"est supposée assez grande, mais vous pouvez la surcharger en ajoutant "
"l'attribut `#[available_gas(<Number>)]` à la fonction de test. L'exemple "
"suivant montre comment l'utiliser :"

#: src/ch10-01-how-to-write-tests.md:846
msgid "\"result is not 55\""
msgstr "\"le résultat n'est pas 55\""

#: src/ch10-01-how-to-write-tests.md:851
msgid "Benchmarking the Gas Usage of a Specific Operation"
msgstr "Analyse comparative de l'utilisation du gaz d'une opération spécifique"

#: src/ch10-01-how-to-write-tests.md:853
msgid ""
"When you want to benchmark the gas usage of a specific operation, you can "
"use the following pattern in your test function."
msgstr ""
"Lorsque vous voulez comparer l'utilisation de gaz d'une opération "
"spécifique, vous pouvez utiliser le modèle suivant dans votre fonction de "
"test."

#: src/ch10-01-how-to-write-tests.md:858 src/ch10-01-how-to-write-tests.md:885
msgid "/// code we want to bench.\n"
msgstr "/// code que nous voulons poser.\n"

#: src/ch10-01-how-to-write-tests.md:859
msgid "\"{}\\n\""
msgstr "\"{}\\n\""

#: src/ch10-01-how-to-write-tests.md:862
msgid ""
"The following example shows how to use it to test the gas function of the "
"`sum_n` function above."
msgstr ""
"L'exemple suivant montre comment l'utiliser pour tester la fonction gaz de "
"la fonction `sum_n` ci-dessus."

#: src/ch10-01-how-to-write-tests.md:887
msgid "\"consumed gas: {}\\n\""
msgstr "\"gaz consommé: {}\\n\""

#: src/ch10-01-how-to-write-tests.md:892
msgid ""
"The value printed when running `scarb cairo-test` is the amount of gas that "
"was consumed by the benchmarked operation."
msgstr ""
"La valeur imprimée lors de l'essai du «carbe cairo» est la quantité de gaz "
"consommée par l'opération de référence."

#: src/ch10-01-how-to-write-tests.md:904
msgid ""
"Here, the gas usage of the `sum_n` function is `80690` (decimal "
"representation of the hex number). The total amount consumed by the test is "
"slightly higher at `140100`, due to some extra steps required to run the "
"entire test function."
msgstr ""
"Ici, l'utilisation de gaz de la fonction `sum_n` est `80690` (représentation "
"décimale du nombre d'hexagones). La quantité totale consommée par l'essai "
"est légèrement plus élevée à `140100`, en raison de certaines étapes "
"supplémentaires nécessaires pour exécuter l'ensemble de la fonction d'essai."

#: src/ch10-01-how-to-write-tests.md:906
msgid "{{#quiz ../quizzes/ch10-01-how_to_write_tests.toml}}"
msgstr "{{#quiz../quizes/ch10-01-how_to_write_tests.toml}}"

#: src/ch10-02-test-organization.md:3
msgid ""
"We'll think about tests in terms of two main categories: unit tests and "
"integration tests. Unit tests are small and more focused, testing one module "
"in isolation at a time, and can test private functions. Integration tests "
"use your code in the same way any other external code would, using only the "
"public interface and potentially exercising multiple modules per test."
msgstr ""
"Les tests unitaires sont petits et plus ciblés, testent un module isolé à la "
"fois, et peuvent tester des fonctions privées. Les tests d'intégration "
"utilisent votre code de la même manière que tout autre code externe, en "
"utilisant uniquement l'interface publique et potentiellement en exerçant "
"plusieurs modules par test."

#: src/ch10-02-test-organization.md:5
msgid ""
"Writing both kinds of tests is important to ensure that the pieces of your "
"library are doing what you expect them to, separately and together."
msgstr ""
"Écrire les deux types de tests est important pour s'assurer que les morceaux "
"de votre bibliothèque font ce que vous attendez d'eux, séparément et "
"ensemble."

#: src/ch10-02-test-organization.md:7
msgid "Unit Tests"
msgstr "Essais unitaires"

#: src/ch10-02-test-organization.md:9
msgid ""
"The purpose of unit tests is to test each unit of code in isolation from the "
"rest of the code to quickly pinpoint where code is and isn’t working as "
"expected. You’ll put unit tests in the `src` directory in each file with the "
"code that they’re testing."
msgstr ""
"Le but des tests unitaires est de tester chaque unité de code isolément du "
"reste du code afin de déterminer rapidement où le code est et ne fonctionne "
"pas comme prévu. Vous allez mettre des tests unitaires dans le répertoire "
"`src` dans chaque fichier avec le code qu'ils sont test."

#: src/ch10-02-test-organization.md:11
msgid ""
"The convention is to create a module named `tests` in each file to contain "
"the test functions and to annotate the module with `#[cfg(test)]` attribute."
msgstr ""
"La convention est de créer un module nommé `tests` dans chaque fichier pour "
"contenir les fonctions de test et pour annoter le module avec `#[cfg(test)]` "
"attribut."

#: src/ch10-02-test-organization.md:13
msgid "The Tests Module and `#[cfg(test)]`"
msgstr "Le module Essais et `#[cfg(test)]`"

#: src/ch10-02-test-organization.md:15
#, fuzzy
msgid ""
"The `#[cfg(test)]` annotation on the tests module tells Cairo to compile and "
"run the test code only when you run `scarb test`, not when you run `scarb "
"build`. This saves compile time when you only want to build the project and "
"saves space in the resulting compiled artifact because the tests are not "
"included. You’ll see that because integration tests go in a different "
"directory, they don’t need the `#[cfg(test)]` annotation. However, because "
"unit tests go in the same files as the code, you’ll use `#[cfg(test)]` to "
"specify that they shouldn’t be included in the compiled result."
msgstr ""
"L'annotation `#[cfg(test)]` sur le module de tests indique au Caire de "
"compiler et d'exécuter le code de test uniquement lorsque vous exécutez "
"`scarb cairo-test`, pas lorsque vous exécutez `scarb cairo-run`. Cela permet "
"d'économiser du temps lorsque vous voulez seulement construire la "
"bibliothèque et d'économiser de l'espace dans l'artefact compilé résultant "
"parce que les tests ne sont pas inclus. Vous verrez que parce que les tests "
"d'intégration vont dans un autre répertoire, ils n'ont pas besoin de "
"l'annotation `#[cfg(test)]`. Cependant, parce que les tests unitaires vont "
"dans les mêmes fichiers que le code, vous allez utiliser `#[cfg(test)]` pour "
"spécifier qu'ils ne devraient pas être inclus dans le résultat compilé."

#: src/ch10-02-test-organization.md:17
#, fuzzy
msgid ""
"Recall that when we created the new `adder` project in the first section of "
"this chapter, we wrote this first test:"
msgstr ""
"Rappelez-vous que lorsque nous avons créé le nouveau projet _adder_ dans la "
"première section de ce chapitre, nous avons écrit ce premier test:"

#: src/ch10-02-test-organization.md:36
#, fuzzy
msgid ""
"The attribute `cfg` stands for _configuration_ and tells Cairo that the "
"following item should only be included given a certain configuration option. "
"In this case, the configuration option is `test`, which is provided by Cairo "
"for compiling and running tests. By using the `cfg` attribute, Cairo "
"compiles our test code only if we actively run the tests with `scarb test`. "
"This includes any helper functions that might be within this module, in "
"addition to the functions annotated with `#[test]`."
msgstr ""
"L'attribut `cfg` signifie configuration et indique au Caire que l'élément "
"suivant ne devrait être inclus qu'avec une certaine option de configuration. "
"Dans ce cas, l'option de configuration est `test`, qui est fournie par le "
"Caire pour compiler et exécuter des tests. En utilisant l'attribut `cfg`, le "
"Caire compile notre code de test seulement si nous effectuons activement les "
"tests avec `scarb cairo-test`. Cela inclut toutes les fonctions d'aide qui "
"pourraient être dans ce module, en plus des fonctions annotées avec "
"`#[test]`."

#: src/ch10-02-test-organization.md:38
#, fuzzy
msgid "Testing Private Functions"
msgstr "3. Fonctions privées"

#: src/ch10-02-test-organization.md:40
msgid ""
"There’s debate within the testing community about whether or not private "
"functions should be tested directly, and other languages make it difficult "
"or impossible to test private functions. Regardless of which testing "
"ideology you adhere to, Cairo's privacy rules do allow you to test private "
"functions. Consider the code below with the private function "
"`internal_adder`."
msgstr ""

#: src/ch10-02-test-organization.md:42 src/ch10-02-test-organization.md:178
msgid "<span class=\"caption\">Filename: src/lib.cairo</span>"
msgstr "<span class=\"caption\">Nom du fichier: src/lib.cairo</span>"

#: src/ch10-02-test-organization.md:64
#, fuzzy
msgid ""
"<span class=\"caption\">Listing 10-10: Testing a private function</span>"
msgstr "<span class=\"caption\">Liste 10-1: Une simple fonction d'essai</span>"

#: src/ch10-02-test-organization.md:66
msgid ""
"Note that the `internal_adder` function is not marked as `pub`. Tests are "
"just Cairo code, and the tests module is just another module. As we "
"discussed in the [\"Paths for Referring to an Item in the Module Tree\"]"
"(ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md) section, "
"items in child modules can use the items in their ancestor modules. In this "
"test, we bring the `tests` module’s parent `internal_adder` into scope with "
"`use super::internal_adder;` and then the test can call `internal_adder`. If "
"you don’t think private functions should be tested, there’s nothing in Cairo "
"that will compel you to do so."
msgstr ""

#: src/ch10-02-test-organization.md:68
msgid "Integration Tests"
msgstr "Essais d'intégration"

#: src/ch10-02-test-organization.md:70
#, fuzzy
msgid ""
"Integration tests use your library in the same way any other code would. "
"Their purpose is to test whether many parts of your library work together "
"correctly. Units of code that work correctly on their own could have "
"problems when integrated, so test coverage of the integrated code is "
"important as well. To create integration tests, you first need a _tests_ "
"directory."
msgstr ""
"Les tests d'intégration utilisent votre bibliothèque de la même manière que "
"n'importe quel autre code. Leur but est de vérifier si de nombreuses parties "
"de votre bibliothèque fonctionnent correctement ensemble. Les unités de code "
"qui fonctionnent correctement par elles-mêmes pourraient avoir des problèmes "
"lorsqu'elles sont intégrées, de sorte que la couverture de test du code "
"intégré est également importante."

#: src/ch10-02-test-organization.md:72
msgid "The _tests_ Directory"
msgstr "Le répertoire _tests_"

#: src/ch10-02-test-organization.md:74
msgid ""
"We create a _tests_ directory at the top level of our project directory, "
"next to _src_. Scarb knows to look for integration test files in this "
"directory. We can then make as many test files as we want, and Scarb will "
"compile each of the files as an individual crate."
msgstr ""

#: src/ch10-02-test-organization.md:76
msgid ""
"Let’s create an integration test. With the code in Listing 10-10 still in "
"the _src/lib.cairo_ file, make a _tests_ directory, and create a new file "
"named _tests/integration_test.cairo_. Your directory structure should look "
"like this:"
msgstr ""

#: src/ch10-02-test-organization.md:89
#, fuzzy
msgid ""
"Enter the code in Listing 10-11 into the _tests/integration_test.cairo_ file:"
msgstr ""
"Enfin, saisissez ce code dans le fichier _src/tests/integration_tests."
"cairo_ :"

#: src/ch10-02-test-organization.md:91 src/ch10-02-test-organization.md:167
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/integration_tests.cairo</span>"
msgstr ""
"<span class=\"caption\">Nom du fichier: src/tests/integration_tests.cairo</"
"span>"

#: src/ch10-02-test-organization.md:102
#, fuzzy
msgid ""
"<span class=\"caption\">Listing 10-11: An integration test of a function in "
"the `adder` crate</span>"
msgstr "<span class=\"caption\">Liste 10-1: Une simple fonction d'essai</span>"

#: src/ch10-02-test-organization.md:104
#, fuzzy
msgid ""
"Each file in the `tests` directory is a separate crate, so we need to bring "
"our library into each test crate’s scope. For that reason we add `use adder::"
"add_two` at the top of the code, which we didn’t need in the unit tests."
msgstr ""
"Pour cette raison, nous ajoutons `use adder::it_adds_two` en haut du code, "
"dont nous n'avions pas besoin dans les tests unitaires."

#: src/ch10-02-test-organization.md:106
msgid ""
"We don’t need to annotate any code in _tests/integration_test.cairo_ with "
"`#[cfg(test)]`. Scarb treats the tests directory specially and compiles "
"files in this directory only when we run `scarb test`. Run `scarb test` now:"
msgstr ""

#: src/ch10-02-test-organization.md:124
msgid ""
"The two sections of output include the unit tests and the integration tests. "
"Note that if any test in a section fails, the following sections will not be "
"run. For example, if a unit test fails, there won’t be any output for "
"integration tests because those tests will only be run if all unit tests are "
"passing."
msgstr ""

#: src/ch10-02-test-organization.md:126
msgid ""
"The first displayed section is for the integration tests. Each integration "
"test file has its own section, so if we add more files in the _tests_ "
"directory, there will be more integration test sections."
msgstr ""

#: src/ch10-02-test-organization.md:129
msgid ""
"The second displayed section is the same as we’ve been seeing: one line for "
"each unit test (one named add that we added just above) and then a summary "
"line for the unit tests."
msgstr ""

#: src/ch10-02-test-organization.md:131
msgid ""
"We can still run a particular integration test function by specifying the "
"test function’s name as an argument of the option -f to `scarb test` like "
"for instance `scarb test -f integration_tests::internal`. To run all the "
"tests in a particular integration test file, we use the same option of "
"`scarb test` but using only the name of the file."
msgstr ""

#: src/ch10-02-test-organization.md:133
#, fuzzy
msgid ""
"Then, to run all of our integration tests, we can just add a filter to only "
"run tests whose path contains _integration_tests_."
msgstr ""
"Ensuite, pour exécuter tous nos tests d'intégration, nous pouvons simplement "
"ajouter un filtre pour n'exécuter que des tests dont le chemin contient "
"\"integration_tests\"."

#: src/ch10-02-test-organization.md:151
msgid ""
"We see that in the second section for the unit tests, 1 has been filtered "
"out because it is not in the _integration_tests_ file."
msgstr ""

#: src/ch10-02-test-organization.md:153
#, fuzzy
msgid "Submodules in Integration Tests"
msgstr "Essais d'intégration"

#: src/ch10-02-test-organization.md:155
msgid ""
"As you add more integration tests, you might want to make more files in the "
"_tests_ directory to help organize them; for example, you can group the test "
"functions by the functionality they’re testing. As mentioned earlier, each "
"file in the tests directory is compiled as its own separate crate, which is "
"useful for creating separate scopes to more closely imitate the way end "
"users will be using your crate. However, this means files in the tests "
"directory don’t share the same behavior as files in _src_ do, as you learned "
"in Chapter 7 regarding how to separate code into modules and files."
msgstr ""

#: src/ch10-02-test-organization.md:157
msgid ""
"The different behavior of tests directory files is most noticeable when you "
"have a set of helper functions to use in multiple integration test files and "
"you try to follow the steps in the [Separating Modules into Different Files]"
"(ch07-05-separating-modules-into-different-files.md) section of Chapter 7 to "
"extract them into a common module. For example, if we create _tests/common."
"cairo_ and place a function named `setup` in it, we can add some code to "
"`setup` that we want to call from multiple test functions in multiple test "
"files:"
msgstr ""

#: src/ch10-02-test-organization.md:159
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/common.cairo</span>"
msgstr "<span class=\"caption\">Nom du fichier: src/tests.cairo</span>"

#: src/ch10-02-test-organization.md:163
msgid "\"Setting up tests...\""
msgstr ""

#: src/ch10-02-test-organization.md:174
msgid "\"internal_adder failed\""
msgstr "\"le _adder interne a échoué\""

#: src/ch10-02-test-organization.md:194
msgid ""
"When we run the tests with `scarb test`, we’ll see a new section in the test "
"output for the _common.cairo_ file, even though this file doesn’t contain "
"any test functions nor did we call the setup function from anywhere:"
msgstr ""

#: src/ch10-02-test-organization.md:218
msgid ""
"To avoid systematically getting a section for each file of the _tests_ "
"folder, we also have the option of making the `tests/` directory behave like "
"a regular crate, by adding a `tests/lib.cairo` file. In that case, the "
"`tests` directory will no longer compile as one crate per file, but as one "
"crate for the whole directory."
msgstr ""

#: src/ch10-02-test-organization.md:220
msgid "Let's create this _tests/lib.cairo_ file :"
msgstr ""

#: src/ch10-02-test-organization.md:222
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/lib.cairo</span>"
msgstr "<span class=\"caption\">Nom du fichier: src/lib.cairo</span>"

#: src/ch10-02-test-organization.md:229
#, fuzzy
msgid "The project directory will now look like this :"
msgstr "Le script complet ressemblerait à ceci:"

#: src/ch10-02-test-organization.md:243
msgid "When we run the `scarb test` command again, here is the output :"
msgstr ""

#: src/ch10-02-test-organization.md:263
msgid ""
"This way, only the test functions will be tested and the `setup` function "
"can be imported without being tested."
msgstr ""

#: src/ch10-02-test-organization.md:267
msgid ""
"Cairo's testing features provide a way to specify how code should function "
"to ensure it continues to work as you expect, even as you make changes. Unit "
"tests exercise different parts of a library separately and can test private "
"implementation details. Integration tests check that many parts of the "
"library work together correctly, and they use the library’s public API to "
"test the code in the same way external code will use it. Even though Cairo's "
"type system and ownership rules help prevent some kinds of bugs, tests are "
"still important to reduce logic bugs having to do with how your code is "
"expected to behave."
msgstr ""

#: src/ch10-02-test-organization.md:269
msgid "{{#quiz ../quizzes/ch10-02-testing-organization.toml}}"
msgstr "{{#quiz../quizes/ch10-02-test-organization.toml}}"

#: src/ch11-00-advanced-features.md
msgid "Advanced Features"
msgstr "Caractéristiques avancées"

#: src/ch11-00-advanced-features.md
msgid "Now, let's learn about more advanced features offered by Cairo."
msgstr ""
"Maintenant, nous allons en apprendre plus sur les fonctionnalités plus "
"avancées offertes par le Caire."

#: src/ch11-01-custom-data-structures.md:3
msgid ""
"When you first start programming in Cairo, you'll likely want to use arrays "
"(`Array<T>`) to store collections of data. However, you will quickly realize "
"that arrays have one big limitation - the data stored in them is immutable. "
"Once you append a value to an array, you can't modify it."
msgstr ""
"Lorsque vous commencerez à programmer au Caire, vous voudrez probablement "
"utiliser des tableaux (`Array<T>`) pour stocker des collections de données. "
"Cependant, vous vous rendrez rapidement compte que les tableaux ont une "
"grande limitation - les données stockées dans eux sont immuables. Une fois "
"que vous ajoutez une valeur à un tableau, vous ne pouvez pas le modifier."

#: src/ch11-01-custom-data-structures.md:8
msgid ""
"This can be frustrating when you want to use a mutable data structure. For "
"example, say you're making a game where the players have a level, and they "
"can level up. You might try to store the level of the players in an array:"
msgstr ""
"Cela peut être frustrant lorsque vous voulez utiliser une structure de "
"données mutable. Par exemple, dites que vous faites un jeu où les joueurs "
"ont un niveau, et ils peuvent le mettre à niveau. Vous pourriez essayer de "
"stocker le niveau des joueurs dans un tableau:"

#: src/ch11-01-custom-data-structures.md:16
msgid ""
"But then you realize you can't increase the level at a specific index once "
"it's set. If a player dies, you cannot remove it from the array unless he "
"happens to be in the first position."
msgstr ""
"Mais alors vous réalisez que vous ne pouvez pas augmenter le niveau à un "
"index spécifique une fois qu'il est réglé. Si un joueur meurt, vous ne "
"pouvez pas le supprimer du tableau à moins qu'il se trouve être dans la "
"première position."

#: src/ch11-01-custom-data-structures.md:20
msgid ""
"Fortunately, Cairo provides a handy built-in [dictionary type](./ch03-02-"
"dictionaries.md) called `Felt252Dict<T>` that allows us to simulate the "
"behavior of mutable data structures. Let's first explore how to create a "
"struct that contains, among others, a `Felt252Dict<T>`."
msgstr ""
"Heureusement, le Caire fournit un [type de dictionnaire] (../ch03-02-"
"dictionaries.md) appelé `Felt252Dict<T>` qui nous permet de simuler le "
"comportement des structures de données mutables. Explorons d'abord comment "
"créer une structure qui contient, entre autres, un `Felt252Dict<T>`."

#: src/ch11-01-custom-data-structures.md:23
msgid ""
"Note: Several concepts used in this chapter were already presented earlier "
"in the book. We recommend checking out the following chapters if you need to "
"revise them: [Structs](ch05-00-using-structs-to-structure-related-data.md), "
"[Methods](./ch05-03-method-syntax.md), [Generic types](./ch08-00-generic-"
"types-and-traits.md), [Traits](./ch08-02-traits-in-cairo.md)."
msgstr ""
"Note : Plusieurs concepts utilisés dans ce chapitre ont déjà été présentés "
"plus tôt dans le livre. Nous recommandons de vérifier les chapitres suivants "
"si vous devez les réviser : [Structs](ch05-00-use-structs-to-structure-"
"related-data.md), [Methods](../ch05-03-method-syntax.md), [Generic types](./"
"ch08-00-generic-types-and-trats.md), [Traits](./ch08-02-trats-in-cairo.md)."

#: src/ch11-01-custom-data-structures.md:29
msgid "Dictionaries as Struct Members"
msgstr "Dictionnaires en tant que membres structurants"

#: src/ch11-01-custom-data-structures.md:31
msgid ""
"Defining dictionaries as struct members is possible in Cairo but correctly "
"interacting with them may not be entirely seamless. Let's try implementing a "
"custom _user database_ that will allow us to add users and query them. We "
"will need to define a struct to represent the new type and a trait to define "
"its functionality:"
msgstr ""
"Il est possible de définir les dictionnaires comme des membres de la "
"structure au Caire, mais l'interaction correcte avec eux peut ne pas être "
"entièrement transparente. Essayons de mettre en œuvre une base de données "
"_user_ personnalisée qui nous permettra d'ajouter des utilisateurs et de les "
"interroger. Nous devrons définir une structure pour représenter le nouveau "
"type et un trait pour définir sa fonctionnalité:"

#: src/ch11-01-custom-data-structures.md:46
msgid ""
"Our new type `UserDatabase<T>` represents a database of users. It is generic "
"over the balances of the users, giving major flexibility to whoever uses our "
"data type. Its two members are:"
msgstr ""
"Notre nouveau type `UserDatabase<T>` représente une base de données "
"d'utilisateurs. Il est générique sur les soldes des utilisateurs, donnant "
"une grande flexibilité à celui qui utilise notre type de données. Ses deux "
"membres sont:"

#: src/ch11-01-custom-data-structures.md:48
msgid "`users_updates`, the number of users updates in the dictionary."
msgstr ""
"`users_updates`, le nombre d'utilisateurs mis à jour dans le dictionnaire."

#: src/ch11-01-custom-data-structures.md:49
msgid "`balances`, a mapping of each user to its balance."
msgstr ""
"\"équilibres\", une cartographie de chaque utilisateur à son équilibre."

#: src/ch11-01-custom-data-structures.md:51
msgid ""
"The database core functionality is defined by `UserDatabaseTrait`. The "
"following methods are defined:"
msgstr ""
"La fonctionnalité de base de données est définie par `UserDatabaseTrait`. "
"Les méthodes suivantes sont définies:"

#: src/ch11-01-custom-data-structures.md:53
msgid "`new` for easily creating new `UserDatabase` types."
msgstr "`new` pour créer facilement de nouveaux types `UserDatabase`."

#: src/ch11-01-custom-data-structures.md:54
msgid "`update_user` to update the balance of users in the database."
msgstr ""
"`update_user` pour mettre à jour le solde des utilisateurs dans la base de "
"données."

#: src/ch11-01-custom-data-structures.md:55
msgid "`get_balance` to find user's balance in the database."
msgstr ""
"`get_balance` pour trouver l'équilibre de l'utilisateur dans la base de "
"données."

#: src/ch11-01-custom-data-structures.md:57
msgid ""
"The only remaining step is to implement each of the methods in "
"`UserDatabaseTrait`, but since we are working with [Generic types](./ch08-00-"
"generic-types-and-traits.md) we also need to correctly establish the "
"requirements of `T` so it can be a valid `Felt252Dict<T>` value type:"
msgstr ""
"La seule étape restante est de mettre en œuvre chacune des méthodes dans "
"`UserDatabaseTrait`, mais puisque nous travaillons avec [Generic types](./"
"ch08-00-generic-types-and-traits.md) nous devons également établir "
"correctement les exigences de `T` afin que cela puisse être un type de "
"valeur `Felt252Dict<T>` valide:"

#: src/ch11-01-custom-data-structures.md:59
msgid ""
"`T` should implement the `Copy<T>` since it's required for getting values "
"from a `Felt252Dict<T>`."
msgstr ""
"`T` devrait implémenter le `Copy<T>` puisqu'il est nécessaire pour obtenir "
"des valeurs d'un `Felt252Dict<T>`."

#: src/ch11-01-custom-data-structures.md:60
msgid ""
"All value types of a dictionary implement the `Felt252DictValue<T>`, our "
"generic type should do as well."
msgstr ""
"Tous les types de valeurs d'un dictionnaire implémentent le "
"`Felt252DictValue<T>`, notre type générique devrait faire aussi bien."

#: src/ch11-01-custom-data-structures.md:61
msgid ""
"To insert values, `Felt252DictTrait<T>` requires all value types to be "
"droppable (implement the `Drop<T>` trait)."
msgstr ""
"Pour insérer des valeurs, `Felt252DictTrait<T>` exige que tous les types de "
"valeurs soient droppables (mise en œuvre du caractère `Drop<T>`)."

#: src/ch11-01-custom-data-structures.md:63
msgid ""
"The implementation, with all restrictions in place, would be as follows:"
msgstr ""
"La mise en œuvre, avec toutes les restrictions en place, serait la suivante :"

#: src/ch11-01-custom-data-structures.md:67
#: src/ch11-01-custom-data-structures.md:112
msgid "// Creates a database\n"
msgstr "// Crée une base de données\n"

#: src/ch11-01-custom-data-structures.md:72
#: src/ch11-01-custom-data-structures.md:117
msgid "// Get the user's balance\n"
msgstr "// Obtenez le solde de l'utilisateur\n"

#: src/ch11-01-custom-data-structures.md:77
#: src/ch11-01-custom-data-structures.md:122
msgid "// Add a user\n"
msgstr "// Ajouter un utilisateur\n"

#: src/ch11-01-custom-data-structures.md:85
msgid ""
"Our database implementation is almost complete, except for one thing: the "
"compiler doesn't know how to make a `UserDatabase<T>` go out of scope, since "
"it doesn't implement the `Drop<T>` trait, nor the `Destruct<T>` trait. Since "
"it has a `Felt252Dict<T>` as a member, it cannot be dropped, so we are "
"forced to implement the `Destruct<T>` trait manually (refer to the "
"[Ownership](ch04-01-what-is-ownership.md#the-drop-trait) chapter for more "
"information). Using `#[derive(Destruct)]` on top of the `UserDatabase<T>` "
"definition won't work because of the use of [Generic types](./ch08-00-"
"generic-types-and-traits.md) in the struct definition. We need to code the "
"`Destruct<T>` trait implementation by ourselves:"
msgstr ""
"Notre implémentation de base de données est presque terminée, sauf pour une "
"chose : le compilateur ne sait pas comment faire une `Base de données "
"utilisateur<T>` sortir de la portée, puisqu'il n'implémente pas le caractère "
"`Drop<T>` ni le caractère `Destruct<T>`. Puisqu'il a un chapitre "
"`Felt252Dict<T>` en tant que membre, il ne peut pas être abandonné, nous "
"sommes donc obligés d'implémenter le caractère `Destruct<T>` manuellement "
"(voir la définition [Ownership](ch04-01- what-is-ownership.md#-the-drop-"
"trait) pour plus d'informations). Utiliser `#[derive(Destruct)]` au-dessus "
"de la `Base de données utilisateur<T>` ne fonctionnera pas en raison de "
"l'utilisation de [types génériques](./ch08-00-generic-types-and-trats.md) "
"dans la définition de structure. Nous devons coder l'implémentation "
"`Destruct<T>`:"

#: src/ch11-01-custom-data-structures.md:97
msgid ""
"Implementing `Destruct<T>` for `UserDatabase` was our last step to get a "
"fully functional database. We can now try it out:"
msgstr ""
"Mettre en œuvre `Destruct<T>` pour `UserDatabase` a été notre dernière étape "
"pour obtenir une base de données entièrement fonctionnelle. Nous pouvons "
"maintenant l'essayer:"

#: src/ch11-01-custom-data-structures.md:147
msgid "\"Expected 40\""
msgstr "\"Pendant 40\""

#: src/ch11-01-custom-data-structures.md:148
msgid "\"Expected 0\""
msgstr "\"Espéré 0\""

#: src/ch11-01-custom-data-structures.md:156
msgid "Simulating a Dynamic Array with Dicts"
msgstr "Simulation d'un tableau dynamique avec des dicts"

#: src/ch11-01-custom-data-structures.md:158
msgid ""
"First, let's think about how we want our mutable dynamic array to behave. "
"What operations should it support?"
msgstr ""
"Tout d'abord, réfléchissons à la façon dont nous voulons que notre tableau "
"dynamique mutable se comporte."

#: src/ch11-01-custom-data-structures.md:161
msgid "It should:"
msgstr "Il devrait:"

#: src/ch11-01-custom-data-structures.md:163
msgid "Allow us to append items at the end."
msgstr "Permettez-nous d'ajouter des éléments à la fin."

#: src/ch11-01-custom-data-structures.md:164
msgid "Let us access any item by index."
msgstr "Accéder à n'importe quel élément par index."

#: src/ch11-01-custom-data-structures.md:165
msgid "Allow setting the value of an item at a specific index."
msgstr "Permettre de définir la valeur d'un élément à un indice spécifique."

#: src/ch11-01-custom-data-structures.md:166
msgid "Return the current length."
msgstr "Retourne la longueur du courant."

#: src/ch11-01-custom-data-structures.md:168
msgid "We can define this interface in Cairo like:"
msgstr "Nous pouvons définir cette interface au Caire comme:"

#: src/ch11-01-custom-data-structures.md:181
msgid ""
"This provides a blueprint for the implementation of our dynamic array. We "
"named it _Vec_ as it is similar to the `Vec<T>` data structure in Rust."
msgstr ""
"Ceci fournit un plan pour l'implémentation de notre tableau dynamique. Nous "
"l'avons nommé _Vec_ comme il est similaire à la structure de données "
"`Vec<T>` dans Rust."

#: src/ch11-01-custom-data-structures.md:184
msgid "Implementing a Dynamic Array in Cairo"
msgstr "Mise en œuvre d'un tableau dynamique au Caire"

#: src/ch11-01-custom-data-structures.md:186
msgid ""
"To store our data, we'll use a `Felt252Dict<T>` which maps index numbers "
"(felts) to values. We'll also store a separate `len` field to track the "
"length."
msgstr ""
"Pour stocker nos données, nous utiliserons un `Felt252Dict<T>` qui "
"cartographie les numéros d'index (felts) aux valeurs. Nous stockerons "
"également un champ `len` séparé pour suivre la longueur."

#: src/ch11-01-custom-data-structures.md:189
msgid ""
"Here is what our struct looks like. We wrap the type `T` inside `Nullable` "
"pointer to allow using any type `T` in our data structure, as explained in "
"the [Dictionaries](./ch03-02-dictionaries.md#dictionaries-of-types-not-"
"supported-natively) section:"
msgstr ""
"Voici à quoi ressemble notre structure. Nous enveloppons le type `T` à "
"l'intérieur du pointeur `Nullable` pour permettre d'utiliser n'importe quel "
"type `T` dans notre structure de données, comme expliqué dans la section "
"[Dictionnaires](./ch03-02-dictionaries.md#dictionaries-of-types-not-"
"supported-natually) :"

#: src/ch11-01-custom-data-structures.md:200
msgid ""
"Since we again have `Felt252Dict<T>` as a struct member, we need to "
"implement the `Destruct<T>` trait to tell the compiler how to make "
"`NullableVec<T>` go out of scope."
msgstr ""
"Puisque nous avons à nouveau `Felt252Dict<T>` en tant que membre de "
"structure, nous devons mettre en œuvre le caractère `Destruct<T>` pour dire "
"au compilateur comment faire `NullableVec<T>` sortir de la portée."

#: src/ch11-01-custom-data-structures.md:210
msgid ""
"The key thing that makes this vector mutable is that we can insert values "
"into the dictionary to set or update values in our data structure. For "
"example, to update a value at a specific index, we do:"
msgstr ""
"La clé qui rend ce vecteur mutable est que nous pouvons insérer des valeurs "
"dans le dictionnaire pour définir ou mettre à jour des valeurs dans notre "
"structure de données. Par exemple, pour mettre à jour une valeur à un index "
"spécifique, nous faisons:"

#: src/ch11-01-custom-data-structures.md:216
#: src/ch11-01-custom-data-structures.md:245
#: src/ch11-01-custom-data-structures.md:254
msgid "\"Index out of bounds\""
msgstr "\"Index hors limites\""

#: src/ch11-01-custom-data-structures.md:221
msgid ""
"This overwrites the previously existing value at that index in the "
"dictionary."
msgstr "Cela écrase la valeur existante à cet indice dans le dictionnaire."

#: src/ch11-01-custom-data-structures.md:223
msgid ""
"While arrays are immutable, dictionaries provide the flexibility we need for "
"modifiable data structures like vectors."
msgstr ""
"Alors que les tableaux sont immuables, les dictionnaires fournissent la "
"flexibilité dont nous avons besoin pour modifier les structures de données "
"comme les vecteurs."

#: src/ch11-01-custom-data-structures.md:226
msgid ""
"The implementation of the rest of the interface is straightforward. The "
"implementation of all the methods defined in our interface can be done as "
"follow :"
msgstr ""
"L'implémentation du reste de l'interface est simple. L'implémentation de "
"toutes les méthodes définies dans notre interface peut se faire comme suit :"

#: src/ch11-01-custom-data-structures.md:263
msgid ""
"The full implementation of the `Vec` structure can be found in the community-"
"maintained library [Alexandria](https://github.com/keep-starknet-strange/"
"alexandria/tree/main/packages/data_structures/src)."
msgstr ""
"La mise en œuvre complète de la structure «Vec» se trouve dans la "
"bibliothèque communautaire [Alexandria] (https://github.com/keep-starknet-"
"strange/alexandria/tree/main/packages/data_structures/src)."

#: src/ch11-01-custom-data-structures.md:268
msgid "Simulating a Stack with Dicts"
msgstr "Simulation d'une pile avec des dicts"

#: src/ch11-01-custom-data-structures.md:270
msgid ""
"We will now look at a second example and its implementation details: a Stack."
msgstr ""
"Nous allons maintenant examiner un deuxième exemple et ses détails de mise "
"en œuvre: un Stack."

#: src/ch11-01-custom-data-structures.md:272
msgid ""
"A Stack is a LIFO (Last-In, First-Out) collection. The insertion of a new "
"element and removal of an existing element takes place at the same end, "
"represented as the top of the stack."
msgstr ""
"Un Stack est une collection LIFO (Last-In, First-Out). L'insertion d'un "
"nouvel élément et la suppression d'un élément existant a lieu à la même "
"extrémité, représentée comme le sommet de la pile."

#: src/ch11-01-custom-data-structures.md:276
msgid "Let us define what operations we need to create a stack:"
msgstr "Définissons quelles opérations nous avons besoin pour créer une pile :"

#: src/ch11-01-custom-data-structures.md:278
msgid "Push an item to the top of the stack."
msgstr "Poussez un objet sur le dessus de la pile."

#: src/ch11-01-custom-data-structures.md:279
msgid "Pop an item from the top of the stack."
msgstr "Déposez un objet du haut de la pile."

#: src/ch11-01-custom-data-structures.md:280
msgid "Check whether there are still any elements in the stack."
msgstr "Vérifiez s'il y a encore des éléments dans la pile."

#: src/ch11-01-custom-data-structures.md:282
msgid "From these specifications we can define the following interface :"
msgstr ""
"A partir de ces spécifications, nous pouvons définir l'interface suivante :"

#: src/ch11-01-custom-data-structures.md:292
msgid "Implementing a Mutable Stack in Cairo"
msgstr "Mise en œuvre d'une pile mutable au Caire"

#: src/ch11-01-custom-data-structures.md:294
msgid ""
"To create a stack data structure in Cairo, we can again use a "
"`Felt252Dict<T>` to store the values of the stack along with a `usize` field "
"to keep track of the length of the stack to iterate over it."
msgstr ""
"Pour créer une structure de données de pile au Caire, nous pouvons à nouveau "
"utiliser un `Felt252Dict<T>` pour stocker les valeurs de la pile avec un "
"champ `usize` pour garder une trace de la longueur de la pile pour itérer "
"dessus."

#: src/ch11-01-custom-data-structures.md:298
msgid "The Stack struct is defined as:"
msgstr "La structure Stack est définie comme suit:"

#: src/ch11-01-custom-data-structures.md:307
msgid ""
"Next, let's see how our main functions `push` and `pop` are implemented."
msgstr ""
"Ensuite, voyons comment nos fonctions principales `push` et `pop` sont mises "
"en œuvre."

#: src/ch11-01-custom-data-structures.md:330
msgid ""
"The code uses the `insert` and `get` methods to access the values in the "
"`Felt252Dict<T>`. To push an element to the top of the stack, the `push` "
"function inserts the element in the dict at index `len` and increases the "
"`len` field of the stack to keep track of the position of the stack top. To "
"remove a value, the `pop` function decreases the value of `len` to update "
"the position of the stack top and then retrieves the last value at position "
"`len`."
msgstr ""
"Le code utilise les méthodes `insert` et `get` pour accéder aux valeurs dans "
"le `Felt252Dict<T>`. Pour pousser un élément vers le haut de la pile, la "
"fonction `push` insère l'élément dans le dict à l'index `len` et augmente le "
"champ `len` de la pile pour garder une trace de la position du haut de la "
"pile. Pour supprimer une valeur, la fonction `pop` diminue la valeur de "
"`len` pour mettre à jour la position du haut de la pile et récupère ensuite "
"la dernière valeur à la position `len`."

#: src/ch11-01-custom-data-structures.md:337
msgid ""
"The full implementation of the Stack, along with more data structures that "
"you can use in your code, can be found in the community-maintained "
"[Alexandria](https://github.com/keep-starknet-strange/alexandria/tree/main/"
"packages/data_structures/src) library, in the \"data_structures\" crate."
msgstr ""
"La mise en œuvre complète du Stack, ainsi que d'autres structures de données "
"que vous pouvez utiliser dans votre code, se trouve dans la bibliothèque "
"communautaire [Alexandria] (https://github.com/keep-starknet-strange/"
"alexandria/tree/main/packages/data_structures/src), dans la caisse "
"« data_structures »."

#: src/ch11-01-custom-data-structures.md:343
msgid "{{#quiz ../quizzes/ch11-01-custom-structs.toml}}"
msgstr "{{#quiz../quizes/ch11-01-custom-structs.toml}}"

#: src/ch11-01-custom-data-structures.md:347
msgid ""
"Well done! Now you have knowledge of arrays, dictionaries and even custom "
"data structures. While Cairo's memory model is immutable and can make it "
"difficult to implement mutable data structures, we can fortunately use the "
"`Felt252Dict<T>` type to simulate mutable data structures. This allows us to "
"implement a wide range of data structures that are useful for many "
"applications, effectively hiding the complexity of the underlying memory "
"model."
msgstr ""
"Bien fait! Maintenant, vous avez la connaissance des tableaux, dictionnaires "
"et même des structures de données personnalisées. Bien que le modèle de "
"mémoire du Caire soit immuable et puisse rendre difficile la mise en œuvre "
"de structures de données mutables, nous pouvons heureusement utiliser le "
"type `Felt252Dict<T>` pour simuler des structures de données mutables. Cela "
"nous permet de mettre en œuvre une large gamme de structures de données qui "
"sont utiles pour de nombreuses applications, dissimulant efficacement la "
"complexité du modèle de mémoire sous-jacent."

#: src/ch11-02-smart-pointers.md:3
msgid ""
"A pointer is a general concept for a variable that contains a memory "
"address. This address refers to, or “points at,” some other data. While "
"pointers are a powerful feature, they can also be a source of bugs and "
"security vulnerabilities. For example, a pointer can reference an unassigned "
"memory cell, which means that attempting to access the data at that address "
"would cause the program to crash, making it unprovable. To prevent such "
"issues, Cairo uses _Smart Pointers_."
msgstr ""
"Un pointeur est un concept général pour une variable qui contient une "
"adresse mémoire. Cette adresse fait référence à, ou à des points à,. Bien "
"que les pointeurs sont une fonctionnalité puissante, ils peuvent également "
"être une source de bogues et de vulnérabilités de sécurité. Par exemple, un "
"pointeur peut référencer une cellule mémoire non assignée, ce qui signifie "
"que tenter d'accéder aux données à cette adresse provoquerait l'écrasement "
"du programme, ce qui le rend invraisemblable. Pour prévenir de tels "
"problèmes, Le Caire utilise _Smart Pointers_."

#: src/ch11-02-smart-pointers.md:5
msgid ""
"Smart pointers are data structures that act like a pointer, but also have "
"additional metadata and capabilities. The concept of smart pointers isn’t "
"unique to Cairo: smart pointers originated in C++ and exist in other "
"languages like Rust as well. In the specific case of Cairo, smart pointers "
"ensure that memory is not addressed in an unsafe way that could cause a "
"program to be unprovable, by providing a safe way to access memory through "
"strict type checking and ownership rules."
msgstr ""
"Les pointeurs intelligents sont des structures de données qui agissent comme "
"un pointeur, mais ont aussi des métadonnées et des capacités "
"supplémentaires. Le concept de pointeurs intelligents n'est pas unique au "
"Caire : les pointeurs intelligents sont originaires de C++ et existent aussi "
"dans d'autres langues comme Rust. Dans le cas particulier du Caire, les "
"pointeurs intelligents veillent à ce que la mémoire ne soit pas traitée de "
"manière dangereuse qui pourrait faire qu'un programme ne soit pas prouvé, en "
"fournissant un moyen sûr d'accéder à la mémoire par des règles strictes de "
"contrôle de type et de propriété."

#: src/ch11-02-smart-pointers.md:7
msgid ""
"Though we didn’t call them as such at the time, we’ve already encountered a "
"few smart pointers in this book, including `Felt252Dict<T>` and `Array<T>` "
"in Chapter 3. Both these types count as smart pointers because they own a "
"memory segment and allow you to manipulate it. They also have metadata and "
"extra capabilities or guarantees. Arrays keep track of their current length "
"to ensure that existing elements are not overwritten, and that new elements "
"are only appended to the end."
msgstr ""
"Bien que nous ne les ayons pas appelés comme tels à l'époque, nous avons "
"déjà rencontré quelques pointeurs intelligents dans ce livre, y compris "
"`Felt252Dict<T>` et `Array<T>` dans le chapitre 3. Ces deux types comptent "
"comme pointeurs intelligents parce qu'ils possèdent un segment de mémoire et "
"vous permettent de le manipuler. Ils ont également des métadonnées et des "
"capacités ou des garanties supplémentaires."

#: src/ch11-02-smart-pointers.md:9
msgid ""
"The Cairo VM memory is composed by multiple segments that can store data, "
"each identified by a unique index. When you create an array, you allocate a "
"new segment in the memory to store the future elements. The array itself is "
"just a pointer to that segment where the elements are stored."
msgstr ""
"La mémoire Cairo VM est composée de plusieurs segments qui peuvent stocker "
"des données, chacune identifiée par un index unique. Lorsque vous créez un "
"tableau, vous attribuez un nouveau segment dans la mémoire pour stocker les "
"éléments futurs. Le tableau lui-même n'est qu'un pointeur vers ce segment où "
"les éléments sont stockés."

#: src/ch11-02-smart-pointers.md:11
msgid "The `Box<T>` Type to Manipulate Pointers"
msgstr "Le type `Box<T>` pour manipuler les pointeurs"

#: src/ch11-02-smart-pointers.md:13
msgid ""
"The principal smart pointer type in Cairo is a _box_, denoted as `Box<T>`. "
"Manually defining boxes allow you to store data in a specific memory segment "
"of the Cairo VM called the _boxed segment_. This segment is dedicated to "
"store all boxed values, and what remains in the execution segment is only a "
"pointer to the boxed segment. Whenever you instantiate a new pointer "
"variable of type `Box<T>`, you append the data of type `T` to the boxed "
"segment."
msgstr ""
"Le principal type de pointeur intelligent au Caire est un _box_, désigné "
"comme `Box<T>`. La définition manuelle des boîtes vous permet de stocker des "
"données dans un segment de mémoire spécifique de la VM du Caire appelé le "
"segment _boxed_. Ce segment est dédié à stocker toutes les valeurs boxed, et "
"ce qui reste dans le segment d'exécution n'est qu'un pointeur vers le "
"segment boxed. Chaque fois que vous mettez en place une nouvelle variable de "
"pointeur de type `Box<T>`, vous ajoutez les données de type `T` au segment "
"boxed."

#: src/ch11-02-smart-pointers.md:15
msgid ""
"Boxes have very little performance overhead, other than writing their inner "
"values to the boxed segment. But they don’t have many extra capabilities "
"either. You’ll use them most often in these situations:"
msgstr ""
"Les boîtes ont très peu de frais généraux de performance, autres que "
"d'écrire leurs valeurs intérieures au segment encadré. Mais elles n'ont pas "
"beaucoup de capacités supplémentaires non plus. Vous les utiliserez le plus "
"souvent dans ces situations:"

#: src/ch11-02-smart-pointers.md:17
msgid ""
"When you have a type whose size can’t be known at compile time and you want "
"to use a value of that type in a context that requires an exact size"
msgstr ""
"Lorsque vous avez un type dont la taille ne peut pas être connue au moment "
"de la compilation et que vous voulez utiliser une valeur de ce type dans un "
"contexte qui nécessite une taille exacte"

#: src/ch11-02-smart-pointers.md:18
msgid ""
"When you have a large amount of data and you want to transfer ownership but "
"ensure the data won’t be copied when you do so"
msgstr ""
"Lorsque vous avez une grande quantité de données et que vous voulez "
"transférer la propriété, mais assurez-vous que les données ne seront pas "
"copiées lorsque vous le faites"

#: src/ch11-02-smart-pointers.md:20
msgid ""
"We’ll demonstrate the first situation in the [“Enabling Recursive Types with "
"Boxes”](./ch11-02-smart-pointers.md#enabling-recursive-types-with-nullable-"
"boxes) section. In the second case, transferring ownership of a large amount "
"of data can take a long time because the data is copied around in memory. To "
"improve performance in this situation, we can store the large amount of data "
"in the boxed segment using a box type. Then, only the small amount of "
"pointer data is copied around in memory, while the data it references stays "
"in one place on the boxed segment."
msgstr ""
"Dans le second cas, le transfert de la propriété d'une grande quantité de "
"données peut prendre beaucoup de temps parce que les données sont copiées "
"autour de la mémoire. Pour améliorer les performances dans cette situation, "
"nous pouvons stocker la grande quantité de données dans le segment encadré à "
"l'aide d'un type de boîte. Ensuite, seule la petite quantité de données de "
"pointeur est copiée autour de la mémoire, tandis que les données qu'il "
"renvoie restent en un seul endroit sur le segment encadré."

#: src/ch11-02-smart-pointers.md:25
msgid "Using a `Box<T>` to Store Data in the Boxed Segment"
msgstr "Utiliser une `Box<T>` pour stocker des données dans le segment encadré"

#: src/ch11-02-smart-pointers.md:27
msgid ""
"Before we discuss the boxed segment storage use cases for `Box<T>`, we’ll "
"cover the syntax and how to interact with values stored within a `Box<T>`."
msgstr ""
"Avant de discuter des cas d'utilisation de stockage de segment encadré pour "
"`Box<T>`, nous allons couvrir la syntaxe et comment interagir avec les "
"valeurs stockées dans une `Box<T>`."

#: src/ch11-02-smart-pointers.md:29
msgid ""
"Listing 11-1 shows how to use a box to store a value in the boxed segment:"
msgstr ""
"Listing 11-1 montre comment utiliser une boîte pour stocker une valeur dans "
"le segment encadré :"

#: src/ch11-02-smart-pointers.md:34
msgid "\"b = {}\""
msgstr "\"b = {}\""

#: src/ch11-02-smart-pointers.md:38
msgid ""
"<span class=\"caption\">Listing 11-1: Storing a `u128` value in the boxed "
"segment using a box</span>"
msgstr ""
"<span class=\"caption\">Liste 11-1: Stocker une valeur `u128` dans le "
"segment encadré à l'aide d'une case</span>"

#: src/ch11-02-smart-pointers.md:40
msgid ""
"We define the variable `b` to have the value of a `Box` that points to the "
"value `5`, which is stored in the boxed segment. This program will print `b "
"= 5`; in this case, we can access the data in the box similar to how we "
"would if this data was simply in the execution memory. Putting a single "
"value in a box isn’t very useful, so you won’t use boxes by themselves in "
"this way very often. Having values like a single `u128` in the execution "
"memory, where they’re stored by default, is more appropriate in the majority "
"of situations. Let’s look at a case where boxes allow us to define types "
"that we wouldn’t be allowed to if we didn’t have boxes."
msgstr ""
"Nous définissons la variable `b` pour avoir la valeur d'une `Box` qui pointe "
"vers la valeur `5`, qui est stockée dans le segment encadré. Ce programme va "
"imprimer `b = 5`; dans ce cas, nous pouvons accéder aux données dans la case "
"comme si nous le ferions si ces données étaient simplement dans la mémoire "
"d'exécution. Mettre une seule valeur dans une boîte n'est pas très utile, "
"donc vous n'avez pas gagné d'utiliser des boîtes par vous-même de cette "
"façon très souvent. Avoir des valeurs comme un seul `u128` dans la mémoire "
"d'exécution, où elles sont stockées par défaut, est plus approprié dans la "
"majorité des situations."

#: src/ch11-02-smart-pointers.md:42
msgid "Enabling Recursive Types with Nullable Boxes"
msgstr "Activer les types récursifs avec des boîtes nullables"

#: src/ch11-02-smart-pointers.md:46
msgid "Using Boxes to Improve Performance"
msgstr "Utiliser des boîtes pour améliorer les performances"

#: src/ch11-02-smart-pointers.md:48
msgid ""
"Passing pointers between functions allows you to reference data without "
"copying the data itself. Using boxes can improve performance as it allows "
"you to pass a pointer to some data from one function to another, without the "
"need to copy the entire data in memory before performing the function call. "
"Instead of having to write `n` values into memory before calling a function, "
"only a single value is written, corresponding to the pointer to the data. If "
"the data stored in the box is very large, the performance improvement can be "
"significant, as you would save `n-1` memory operations before each function "
"call."
msgstr ""
"Passer des pointeurs entre les fonctions vous permet de référencer les "
"données sans copier les données elles-mêmes. L'utilisation de boîtes peut "
"améliorer les performances car elle vous permet de passer un pointeur à "
"certaines données d'une fonction à une autre, sans avoir à copier l'ensemble "
"des données en mémoire avant d'effectuer l'appel de fonction. Au lieu "
"d'avoir à écrire des valeurs `n` dans la mémoire avant d'appeler une "
"fonction, seule une valeur unique est écrite, correspondant au pointeur des "
"données. Si les données stockées dans la boîte sont très importantes, "
"l'amélioration des performances peut être significative, car vous "
"enregistrerez des opérations de mémoire `n-1` avant chaque appel de fonction."

#: src/ch11-02-smart-pointers.md:50
msgid ""
"Let's take a look at the code in Listing 11-2, which shows two ways of "
"passing data to a function: by value and by pointer."
msgstr ""
"Examinons le code dans Listing 11-2, qui montre deux façons de transmettre "
"les données à une fonction : par valeur et par pointeur."

#: src/ch11-02-smart-pointers.md:61 src/ch11-02-smart-pointers.md:66
msgid "\"{} is shopping today and bought {} items\""
msgstr "\"{} est shopping aujourd'hui et a acheté {} produits\""

#: src/ch11-02-smart-pointers.md:70
msgid "\"Eli\""
msgstr "\"Eli\""

#: src/ch11-02-smart-pointers.md:73
msgid "\"Uri\""
msgstr "\"Uri\""

#: src/ch11-02-smart-pointers.md:78
msgid ""
"<span class=\"caption\">Listing 11-2: Storing large amounts of data in a box "
"for performance.</span>"
msgstr ""
"<span class=\"caption\">Liste 11-2: Stocker de grandes quantités de données "
"dans une boîte pour la performance.</span>"

#: src/ch11-02-smart-pointers.md:80
msgid "The `main` function includes 2 function calls:"
msgstr "La fonction `main` comprend 2 appels de fonction:"

#: src/ch11-02-smart-pointers.md:82
msgid "`pass_data` that takes a variable of type `Cart`."
msgstr "`pass_data` qui prend une variable de type `Cart`."

#: src/ch11-02-smart-pointers.md:83
msgid "`pass_pointer` that takes a pointer of type `Box<Cart>`."
msgstr "`pass_pointer` qui prend un pointeur de type `Box<Cart>`."

#: src/ch11-02-smart-pointers.md:85
msgid ""
"When passing data to a function, the entire data is copied into the last "
"available memory cells right before the function call. Calling `pass_data` "
"will copy all 3 fields of `Cart` to memory, while `pass_pointer` only "
"requires the copy of the `new_box` pointer which is of size 1."
msgstr ""
"Lorsque vous passez des données à une fonction, les données entières sont "
"copiées dans les dernières cellules de mémoire disponibles juste avant "
"l'appel de la fonction. Appeler `pass_data` copiera les 3 champs de `Cart` à "
"la mémoire, alors que `pass_pointer` ne nécessite que la copie du pointeur "
"`new_box` qui est de taille 1."

#: src/ch11-02-smart-pointers.md:94
msgid ""
"The illustration above demonstrates how the memory behaves in both cases. "
"The first instance of `Cart` is stored in the execution segment, and we need "
"to copy all its fields to memory before calling the `pass_data` function. "
"The second instance of `Cart` is stored in the boxed segment, and the "
"pointer to it is stored in the execution segment. When calling the "
"`pass_pointer` function, only the pointer to the struct is copied to memory "
"right before the function call. In both cases, however, instantiating the "
"struct will store all its values in the execution segment: the boxed segment "
"can only be filled with data taken from the execution segment."
msgstr ""
"L'illustration ci-dessus montre comment la mémoire se comporte dans les deux "
"cas. La première instance de `Cart` est stockée dans le segment d'exécution, "
"et nous devons copier tous ses champs en mémoire avant d'appeler la fonction "
"`pass_data`. La deuxième instance de `Cart` est stockée dans le segment "
"encadré, et le pointeur vers celui-ci est stocké dans le segment "
"d'exécution. Lorsqu'il appelle la fonction `pass_pointer`, seul le pointeur "
"vers la structure est copié en mémoire juste avant l'appel de la fonction. "
"Cependant, dans les deux cas, l'instantannage de la structure stockera "
"toutes ses valeurs dans le segment d'exécution: le segment encadré ne peut "
"être rempli que par des données prises depuis le segment d'exécution."

#: src/ch11-02-smart-pointers.md:96
msgid "The `Nullable<T>` Type for Dictionaries"
msgstr "Le type `Nullable<T>` pour les dictionnaires"

#: src/ch11-02-smart-pointers.md:98
msgid ""
"`Nullable<T>` is another type of smart pointer that can either point to a "
"value or be `null` in the absence of value. It is defined at the Sierra "
"level. This type is mainly used in dictionaries that contain types that "
"don't implement the `zero_default` method of the `Felt252DictValue<T>` trait "
"(i.e., arrays and structs)."
msgstr ""
"`Nullable<T>` est un autre type de pointeur intelligent qui peut pointer "
"vers une valeur ou être `null` en l'absence de valeur. Il est défini au "
"niveau de la Sierra. Ce type est principalement utilisé dans les "
"dictionnaires qui contiennent des types qui ne mettent pas en œuvre la "
"méthode `zero_default` du trait `Felt252DictValue<T>` (i.e., tableaux et "
"structures)."

#: src/ch11-02-smart-pointers.md:100
msgid ""
"If we try to access an element that does not exist in a dictionary, the code "
"will fail if the `zero_default` method cannot be called."
msgstr ""
"Si nous essayons d'accéder à un élément qui n'existe pas dans un "
"dictionnaire, le code échouera si la méthode `zero_default` ne peut pas être "
"appelée."

#: src/ch11-02-smart-pointers.md:102
msgid ""
"[Chapter 3.2](/ch03-02-dictionaries.md#dictionaries-of-types-not-supported-"
"natively) about dictionaries thoroughly explains how to store a "
"`Span<felt252>` variable inside a dictionary using the `Nullable<T>` type. "
"Please refer to it for further information."
msgstr ""
"[Chapitre 3.2](/ch03-02-dictionaries.md#dictionaries-of-types-not-supported-"
"natually) sur les dictionnaires explique en détail comment stocker une "
"variable `Span<felt252>` à l'intérieur d'un dictionnaire en utilisant le "
"type `Nullable<T>`. Veuillez vous y référer pour plus d'informations."

#: src/ch11-02-smart-pointers.md:106
msgid "{{#quiz ../quizzes/ch11-02-smart_pointers.toml}}"
msgstr "{{#quiz../quizes/ch11-02-smart_pointers.toml}}"

#: src/ch11-03-operator-overloading.md:3
msgid ""
"Operator overloading is a feature in some programming languages that allows "
"the redefinition of standard operators, such as addition (`+`), subtraction "
"(`-`), multiplication (`*`), and division (`/`), to work with user-defined "
"types. This can make the syntax of the code more intuitive, by enabling "
"operations on user-defined types to be expressed in the same way as "
"operations on primitive types."
msgstr ""
"La surcharge d'opérateurs est une fonctionnalité dans certains langages de "
"programmation qui permet la redéfinition des opérateurs standard, tels que "
"l'ajout (`+`), la soustraction (`-`), la multiplication (`*`) et la division "
"(`/`), pour travailler avec des types définis par l'utilisateur, ce qui peut "
"rendre la syntaxe du code plus intuitive, en permettant aux opérations sur "
"des types définis par l'utilisateur d'être exprimées de la même manière que "
"les opérations sur des types primitifs."

#: src/ch11-03-operator-overloading.md:5
msgid ""
"In Cairo, operator overloading is achieved through the implementation of "
"specific traits. Each operator has an associated trait, and overloading that "
"operator involves providing an implementation of that trait for a custom "
"type. However, it's essential to use operator overloading judiciously. "
"Misuse can lead to confusion, making the code more difficult to maintain, "
"for example when there is no semantic meaning to the operator being "
"overloaded."
msgstr ""
"Au Caire, la surcharge de l'opérateur est réalisée par la mise en œuvre de "
"caractères spécifiques. Chaque opérateur a un caractère associé, et la "
"surcharge que l'opérateur implique de fournir une mise en œuvre de ce "
"caractère pour un type personnalisé. Cependant, il est essentiel d'utiliser "
"l'opérateur surchargeuse judicieusement. La mauvaise utilisation peut "
"conduire à la confusion, rendant le code plus difficile à maintenir, par "
"exemple quand il n'y a pas de sens sémantique pour l'opérateur en surcharge."

#: src/ch11-03-operator-overloading.md:8
msgid ""
"Consider an example where two `Potions` need to be combined. `Potions` have "
"two data fields, mana and health. Combining two `Potions` should add their "
"respective fields."
msgstr ""
"Examinez un exemple où deux «Potions» doivent être combinées. Les «Potions» "
"ont deux champs de données, la mana et la santé. La combinaison de deux "
"«Potions» devrait ajouter leurs champs respectifs."

#: src/ch11-03-operator-overloading.md:26
msgid "// Both potions were combined with the `+` operator.\n"
msgstr "// Les deux potions ont été combinées avec l'opérateur `+`.\n"

#: src/ch11-03-operator-overloading.md:32
msgid ""
"In the code above, we're implementing the `Add` trait for the `Potion` type. "
"The add function takes two arguments: `lhs` and `rhs` (left and right-hand "
"side). The function body returns a new `Potion` instance, its field values "
"being a combination of `lhs` and `rhs`."
msgstr ""
"Dans le code ci-dessus, nous implémentons le caractère `Add` pour le type "
"`Potion`. La fonction add prend deux arguments: `lhs` et `rhs` (à gauche et "
"à droite). Le corps de la fonction retourne une nouvelle instance `Potion`, "
"ses valeurs de champ étant une combinaison de `lhs` et `rhs`."

#: src/ch11-03-operator-overloading.md:34
msgid ""
"As illustrated in the example, overloading an operator requires "
"specification of the concrete type being overloaded. The overloaded generic "
"trait is `Add<T>`, and we define a concrete implementation for the type "
"`Potion` with `Add<Potion>`."
msgstr ""
"Comme l'illustre l'exemple, la surcharge d'un opérateur nécessite la "
"spécification du type de béton surchargé. Le caractère générique surchargé "
"est `Add<T>`, et nous définissons une mise en œuvre concrète pour le type "
"`Potion` avec `Add<Potion>`."

#: src/ch11-03-operator-overloading.md:36
msgid "{{#quiz ../quizzes/ch11-03-operator-overloading.toml}}"
msgstr "{{#quiz../quizes/ch11-03-operator-overloading.toml}}"

#: src/ch11-04-hash.md:1
msgid "Hashes"
msgstr "Haches"

#: src/ch11-04-hash.md:3
msgid ""
"At its essence, hashing is a process of converting input data (often called "
"a message) of any length into a fixed-size value, typically referred to as a "
"\"hash.\" This transformation is deterministic, meaning that the same input "
"will always produce the same hash value. Hash functions are a fundamental "
"component in various fields, including data storage, cryptography and data "
"integrity verification. They are very often used when developing smart "
"contracts, especially when working with [Merkle trees](https://en.wikipedia."
"org/wiki/Merkle_tree#Uses)."
msgstr ""
"Au fond, le hachage est un processus de conversion des données d'entrée "
"(souvent appelées un message) de n'importe quelle longueur en une valeur de "
"taille fixe, généralement appelée \"hash\". Cette transformation est "
"déterministe, ce qui signifie que la même entrée produira toujours la même "
"valeur de hachage. Les fonctions Hash sont un élément fondamental dans "
"divers domaines, y compris le stockage des données, la cryptographie et la "
"vérification de l'intégrité des données."

#: src/ch11-04-hash.md:5
msgid ""
"In this chapter, we will present the two hash functions implemented natively "
"in the Cairo core library: `Poseidon` and `Pedersen`. We will discuss when "
"and how to use them, and see examples with Cairo programs."
msgstr ""
"Dans ce chapitre, nous présenterons les deux fonctions de hachage mises en "
"œuvre nativement dans la bibliothèque centrale du Caire : `Poseidon` et "
"`Pedersen`. Nous discuterons quand et comment les utiliser, et verrons des "
"exemples avec les programmes du Caire."

#: src/ch11-04-hash.md:9
msgid "Hash Functions in Cairo"
msgstr "Fonctions de hash au Caire"

#: src/ch11-04-hash.md:11
msgid ""
"The Cairo core library provides two hash functions: Pedersen and Poseidon."
msgstr ""
"La bibliothèque centrale du Caire offre deux fonctions de hachage : Pedersen "
"et Poseidon."

#: src/ch11-04-hash.md:13
msgid ""
"Pedersen hash functions are cryptographic algorithms that rely on [elliptic "
"curve cryptography](https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography). These functions perform operations on points along an "
"elliptic curve — essentially, doing math with the locations of these points "
"— which are easy to do in one direction and hard to undo. This one-way "
"difficulty is based on the Elliptic Curve Discrete Logarithm Problem "
"(ECDLP), which is a problem so hard to solve that it ensures the security of "
"the hash function. The difficulty of reversing these operations is what "
"makes the Pedersen hash function secure and reliable for cryptographic "
"purposes."
msgstr ""
"Les fonctions de hachage de Pedersen sont des algorithmes cryptographiques "
"qui dépendent de [cryptographie de courbe elliptique](https://en.wikipedia."
"org/wiki/Elliptic-curve_cryptography). Ces fonctions effectuent des "
"opérations sur des points le long d'une courbe elliptique — essentiellement "
"en faisant des calculs avec les emplacements de ces points — qui sont "
"faciles à faire dans une direction et difficiles à faire. Cette difficulté à "
"sens unique est basée sur le problème de logarithme discret de la courbe "
"elliptique (ECDLP), qui est un problème si difficile à résoudre qu'il assure "
"la sécurité de la fonction de hachage."

#: src/ch11-04-hash.md:15
msgid ""
"Poseidon is a family of hash functions designed to be very efficient as "
"algebraic circuits. Its design is particularly efficient for Zero-Knowledge "
"proof systems, including STARKs (so, Cairo). Poseidon uses a method called a "
"'sponge construction,' which soaks up data and transforms it securely using "
"a process known as the Hades permutation. Cairo's version of Poseidon is "
"based on a three-element state permutation with [specific parameters]"
"(https://github.com/starkware-industries/poseidon/blob/main/poseidon3.txt)."
msgstr ""
"Poseidon est une famille de fonctions de hachage conçues pour être très "
"efficaces en tant que circuits algébriques. Sa conception est "
"particulièrement efficace pour les systèmes d'épreuve Zero-Knowledge, y "
"compris STARKs (c'est-à-dire le Caire). Poseidon utilise une méthode appelée "
"« construction de penge », qui absorbe les données et les transforme en "
"toute sécurité à l'aide d'un processus connu sous le nom de permutation "
"Hadès. La version du Caire de Poseidon est basée sur une permutation à trois "
"éléments avec [paramètres spécifiques] (https://github.com/starkware-"
"industries/poseidon/blob/main/poseidon3.txt)."

#: src/ch11-04-hash.md:20
msgid "When to Use Them?"
msgstr "Quand les utiliser?"

#: src/ch11-04-hash.md:22
msgid ""
"Pedersen was the first hash function used on Starknet, and is still used to "
"compute the addresses of variables in storage (for example, `LegacyMap` uses "
"Pedersen to hash the keys of a storage mapping on Starknet). However, as "
"Poseidon is cheaper and faster than Pedersen when working with STARK proofs "
"system, it's now the recommended hash function to use in Cairo programs."
msgstr ""
"Pedersen a été la première fonction de hachage utilisée sur Starknet, et est "
"toujours utilisé pour calculer les adresses des variables dans le stockage "
"(par exemple, `LegacyMap` utilise Pedersen pour hacher les clés d'une "
"cartographie de stockage sur Starknet). Cependant, comme Poseidon est moins "
"cher et plus rapide que Pedersen lorsque vous travaillez avec STARK système "
"d'épreuves, il est maintenant la fonction de hachage recommandée à utiliser "
"dans les programmes du Caire."

#: src/ch11-04-hash.md:26
msgid ""
"The core library makes it easy to work with hashes. The `Hash` trait is "
"implemented for all types that can be converted to `felt252`, including "
"`felt252` itself. For more complex types like structs, deriving `Hash` "
"allows them to be hashed easily using the hash function of your choice - "
"given that all of the struct's fields are themselves hashable. You cannot "
"derive the `Hash` trait on a struct that contains un-hashable values, such "
"as `Array<T>` or `Felt252Dict<T>`, even if `T` itself is hashable."
msgstr ""
"Le caractère `Hash` est implémenté pour tous les types qui peuvent être "
"convertis en `felt252`, y compris `felt252` lui-même. Pour les types plus "
"complexes comme les structs, le dérivant `Hash` permet d'être hashés "
"facilement en utilisant la fonction de hachage de votre choix - étant donné "
"que tous les champs de la struct sont eux-mêmes hashables. Vous ne pouvez "
"pas dériver le caractère `Hash` sur une struct qui contient des valeurs non "
"hashables, telles que `Array<T>` ou `Felt252Dict<T>`, même si `T` lui-même "
"est hashable."

#: src/ch11-04-hash.md:28
msgid ""
"The `Hash` trait is accompanied by the `HashStateTrait` and "
"`HashStateExTrait` that define the basic methods to work with hashes. They "
"allow you to initialize a hash state that will contain the temporary values "
"of the hash after each application of the hash function, update the hash "
"state and finalize it when the computation is completed. `HashStateTrait` "
"and `HashStateExTrait` are defined as follows:"
msgstr ""
"Le caractère `Hash` est accompagné du caractère `HashStateTrait` et "
"`HashStateExTrait` qui définissent les méthodes de base pour travailler avec "
"les hachages. Ils vous permettent d'initialiser un état de hachage qui "
"contiendra les valeurs temporaires du hachage après chaque application de la "
"fonction de hachage, de mettre à jour l'état de hachage et de le finaliser "
"lorsque le calcul est terminé. `HashStateTrait` et `HashStateExTrait` sont "
"définis comme suit:"

#: src/ch11-04-hash.md:31
msgid "/// A trait for hash state accumulators.\n"
msgstr "/// Un trait pour les accumulateurs à l'état de hachage.\n"

#: src/ch11-04-hash.md:36
msgid "/// Extension trait for hash state accumulators.\n"
msgstr "/// Trait d'extension pour les accumulateurs à l'état de hachage.\n"

#: src/ch11-04-hash.md:39 src/ch11-04-hash.md:45
msgid "/// Updates the hash state with the given value.\n"
msgstr "/// Mettre à jour l'état de hachage avec la valeur donnée.\n"

#: src/ch11-04-hash.md:42
msgid "/// A trait for values that can be hashed.\n"
msgstr "/// Un trait pour les valeurs qui peuvent être hashées.\n"

#: src/ch11-04-hash.md:50
msgid ""
"To use hashes in your code, you must first import the relevant traits and "
"functions. In the following example, we will demonstrate how to hash a "
"struct using both the Pedersen and Poseidon hash functions."
msgstr ""
"Pour utiliser des hachages dans votre code, vous devez d'abord importer les "
"caractéristiques et fonctions pertinentes. Dans l'exemple suivant, nous "
"allons démontrer comment hacher une structure en utilisant les fonctions de "
"hachage Pedersen et Poseidon."

#: src/ch11-04-hash.md:52
msgid ""
"The first step is to initialize the hash with either `PoseidonTrait::new() -"
"> HashState` or `PedersenTrait::new(base: felt252) -> HashState` depending "
"on which hash function we want to work with. Then the hash state can be "
"updated with the `update(self: HashState, value: felt252) -> HashState` or "
"`update_with(self: S, value: T) -> S` functions as many times as required. "
"Then the function `finalize(self: HashState) -> felt252` is called on the "
"hash state and it returns the value of the hash as a `felt252`."
msgstr ""
"La première étape consiste à initialiser le hachage avec `PoseidonTrait::"
"new() -> HashState` ou `PedersenTrait::new(base: feel252) -> HashState` "
"selon la fonction de hachage avec laquelle nous voulons travailler. Ensuite, "
"l'état de hachage peut être mis à jour avec le `update(self: HashState, "
"value: feel252) -> HashState` ou `update_with(self: S, value: T) -> S` "
"fonctionne autant de fois que nécessaire. Ensuite, la fonction "
"`finalise(self: HashState) -> feel252` est appelée sur l'état de hachage et "
"retourne la valeur du hachage comme un `felt252`."

#: src/ch11-04-hash.md:74
msgid ""
"Pedersen is different from Poseidon, as it starts with a base state. This "
"base state must be of `felt252` type, which forces us to either hash the "
"struct with an arbitrary base state using the `update_with` method, or "
"serialize the struct into an array to loop through all of its fields and "
"hash its elements together."
msgstr ""
"Pedersen est différent de Poseidon, car il commence par un état de base. Cet "
"état de base doit être de type `felt252`, ce qui nous oblige à hacher la "
"structure avec un état de base arbitraire en utilisant la méthode "
"`update_with`, ou à sérialiser la structure en un tableau pour boucler tous "
"ses champs et hacher ses éléments ensemble."

#: src/ch11-04-hash.md:76
msgid "Here is a short example of Pedersen hashing:"
msgstr "Voici un court exemple de hachage de Pedersen:"

#: src/ch11-04-hash.md:93
msgid "// hash1 is the result of hashing a struct with a base state of 0\n"
msgstr ""
"// hash1 est le résultat d'un hachage d'une struct avec un état de base de "
"0\n"

#: src/ch11-04-hash.md:105
msgid "// hash2 is the result of hashing only the fields of the struct\n"
msgstr ""
"// hash2 est le résultat du hachage seulement les champs de la structure\n"

#: src/ch11-04-hash.md:114
msgid "Advanced Hashing: Hashing Arrays with Poseidon"
msgstr "Hashing avancé: Hashing Arrays avec Poséidon"

#: src/ch11-04-hash.md:116
msgid ""
"Let us look at an example of hashing a struct that contains a "
"`Span<felt252>`. To hash a `Span<felt252>` or a struct that contains a "
"`Span<felt252>` you can use the built-in function `poseidon_hash_span(mut "
"span: Span<felt252>) -> felt252`. Similarly, you can hash `Array<felt252>` "
"by calling `poseidon_hash_span` on its span."
msgstr ""
"Examinons un exemple de hachage d'une structure qui contient un "
"`Span<felt252>`. Pour hachage d'une `Span<felt252>` ou d'une structure qui "
"contient un `Span<felt252>` vous pouvez utiliser la fonction intégrée "
"`positidon_hash_span(mut span: Span<felt252>) -> feat252`. De même, vous "
"pouvez hachage `Array<felt252>` en appelant `positidon_hash_span` sur son "
"span."

#: src/ch11-04-hash.md:119
msgid "First, let us import the following traits and function:"
msgstr "Tout d'abord, importons les caractéristiques et fonctions suivantes :"

#: src/ch11-04-hash.md:127
msgid ""
"Now we define the struct. As you might have noticed, we didn't derive the "
"`Hash` trait. If you attempt to derive the `Hash` trait for this struct, it "
"will result in an error because the structure contains a field that is not "
"hashable."
msgstr ""
"Maintenant nous définissons la structure. Comme vous l'avez peut-être "
"remarqué, nous n'avons pas déduit le caractère `Hash`. Si vous essayez de "
"déduire le caractère `Hash` pour cette structure, il en résultera une erreur "
"parce que la structure contient un champ qui n'est pas hashable."

#: src/ch11-04-hash.md:138
msgid ""
"In this example, we initialized a `HashState` (`hash`), updated it and then "
"called the function `finalize()` on the `HashState` to get the computed hash "
"`hash_felt252`. We used `poseidon_hash_span` on the `Span` of the "
"`Array<felt252>` to compute its hash."
msgstr ""
"Dans cet exemple, nous avons initialisé un `HashState` (`hash`), l'avons mis "
"à jour et ensuite appelé la fonction `finalize()` sur le `HashState` pour "
"obtenir le hash calculé `hash_felt252`. Nous avons utilisé "
"`poseidon_hash_span` sur le `Span` du `Array<felt252>` pour calculer son "
"hash."

#: src/ch11-05-macros.md:3
msgid ""
"The Cairo language has some plugins that allow developers to simplify their "
"code. They are called `inline_macros` and are a way of writing code that "
"generates other code."
msgstr ""
"La langue du Caire a quelques plugins qui permettent aux développeurs de "
"simplifier leur code. Ils sont appelés `inline_macros` et sont une façon "
"d'écrire du code qui génère d'autres code."

#: src/ch11-05-macros.md:5
msgid "`consteval_int!` Macro"
msgstr "`consteval_int!` Macro"

#: src/ch11-05-macros.md:7
msgid ""
"In some situations, a developer might need to declare a constant that is the "
"result of a computation of integers. To compute a constant expression and "
"use its result at compile time, it is required to use the `consteval_int!` "
"macro."
msgstr ""
"Dans certaines situations, un développeur peut avoir besoin de déclarer une "
"constante qui est le résultat d'un calcul d'entiers. Pour calculer une "
"expression constante et utiliser son résultat au moment de la compilation, "
"il est nécessaire d'utiliser la macro `consteval_int!`."

#: src/ch11-05-macros.md:9
msgid "Here is an example of `consteval_int!`:"
msgstr "Voici un exemple de `consteval_int!`:"

#: src/ch11-05-macros.md:15
msgid "This will be interpreted as `const a: felt252 = 8;` by the compiler."
msgstr "Ceci sera interprété comme «const a: feel252 = 8;» par le compilateur."

#: src/ch11-05-macros.md:17
msgid "`selector!` Macro"
msgstr "\"sélécteur!\" Macro"

#: src/ch11-05-macros.md:19
msgid ""
"See [Entry Point Selector](./ch15-02-contract-dispatchers-library-"
"dispatchers-and-system-calls.md#entry-point-selector)."
msgstr ""
"Voir [Sélecteur de points d'entrée](./ch15-02-contrat-dispatchers-"
"bibliothèque-dispatchers-et-système-calls.md#entry-point-selector)."

#: src/ch11-05-macros.md:21
msgid "`print!` and `println!` Macros"
msgstr "Macros `print!` et `println!`"

#: src/ch11-05-macros.md:23
msgid "Please refer to the [Printing](./ch11-08-printing.md) page."
msgstr "Veuillez consulter la page [Imprimer](./ch11-08-printing.md)."

#: src/ch11-05-macros.md:27
msgid "Please refer to the [Arrays](./ch03-01-arrays.md) page."
msgstr "Veuillez consulter la page [Arrays](./ch03-01-arrays.md)."

#: src/ch11-05-macros.md:31
msgid ""
"See [Unrecoverable Errors with panic](./ch09-01-unrecoverable-errors-with-"
"panic.html#panic-macro) page."
msgstr ""
"Voir la page [Erreurs non récupérables avec panique](./ch09-01-errors-with-"
"panic.html#panic-macro)."

#: src/ch11-05-macros.md:33
msgid "`assert!` and `assert_xx!` Macros"
msgstr "`assert!` et `assert_xx!` Macros"

#: src/ch11-05-macros.md:35
msgid "See [How to Write Tests](./ch10-01-how-to-write-tests.md) page."
msgstr ""
"Voir [Comment écrire des tests](../ch10-01-how-to-write-tests.md) page."

#: src/ch11-05-macros.md:37
msgid "`format!` Macro"
msgstr "`format!` Macro"

#: src/ch11-05-macros.md:39
msgid "See [Printing](./ch11-08-printing.html#formatting) page."
msgstr "Voir la page [Imprimer](./ch11-08-printing.html#formatting)."

#: src/ch11-05-macros.md:41
msgid "`write!` and `writeln!` Macros"
msgstr "Macros `écrivez!` et `écrivez!`"

#: src/ch11-05-macros.md:43
msgid ""
"See [Printing](./ch11-08-printing.html#printing-custom-data-types) page."
msgstr ""
"Voir la page [Imprimer](./ch11-08-printing.html#printing-custom-data-types)."

#: src/ch11-05-macros.md:45
msgid "`get_dep_component!`, `get_dep_component_mut` and `component!` Macros"
msgstr "`get_dep_component!`, `get_dep_component_mut` et `component!` Macros"

#: src/ch11-05-macros.md:47
msgid ""
"Please refer to the [Composability and Components](./ch16-02-00-"
"composability-and-components.md) chapter."
msgstr ""
"Veuillez consulter le chapitre [Composabilité et composants](./ch16-02-00-"
"composabilité-et-composantes.md)."

#: src/ch11-06-inlining-in-cairo.md:3
msgid ""
"Inlining is a common code optimization technique supported by most "
"compilers. It involves replacing a function call at the call site with the "
"actual code of the called function, eliminating the overhead associated with "
"the function call itself. This can improve performance by reducing the "
"number of instructions executed, but may increase the total size of the "
"program. When you're thinking about whether to inline a function, take into "
"account things like how big it is, what parameters it has, how often it gets "
"called, and how it might affect the size of your compiled code."
msgstr ""
"Il s'agit de remplacer un appel de fonction sur le site d'appel par le code "
"réel de la fonction appelée, en éliminant les frais généraux associés à "
"l'appel de fonction lui-même. Cela peut améliorer les performances en "
"réduisant le nombre d'instructions exécutées, mais peut augmenter la taille "
"totale du programme. Lorsque vous pensez à l'opportunité d'inligner une "
"fonction, prendre en compte des choses comme combien elle est grande, quels "
"paramètres elle a, combien de fois elle est appelée, et comment elle peut "
"affecter la taille de votre code compilé."

#: src/ch11-06-inlining-in-cairo.md:5
msgid "The `inline` Attribute"
msgstr "L'attribut «inline»"

#: src/ch11-06-inlining-in-cairo.md:7
msgid ""
"In Cairo, the `inline` attribute suggests whether or not the Sierra code "
"corresponding to the attributed function should be directly injected in the "
"caller function's context, rather than using a `function_call` libfunc to "
"execute that code."
msgstr ""
"Au Caire, l'attribut `inline` suggère si le code Sierra correspondant à la "
"fonction attribuée doit être injecté directement dans le contexte de la "
"fonction appelante, plutôt que d'utiliser un libfunc `fonction_call` pour "
"exécuter ce code."

#: src/ch11-06-inlining-in-cairo.md:9
msgid "There are three variants of the `inline` attribute that one can use:"
msgstr "Il y a trois variantes de l'attribut `inline` que l'on peut utiliser:"

#: src/ch11-06-inlining-in-cairo.md:11
msgid "`#[inline]` suggests performing an inline expansion."
msgstr "`#[inline]` suggère d'effectuer une expansion en ligne."

#: src/ch11-06-inlining-in-cairo.md:12
msgid ""
"`#[inline(always)]` suggests that an inline expansion should always be "
"performed."
msgstr ""
"`#[inline(toujours)]` suggère qu'une expansion en ligne doit toujours être "
"effectuée."

#: src/ch11-06-inlining-in-cairo.md:13
msgid ""
"`#[inline(never)]` suggests that an inline expansion should never be "
"performed."
msgstr ""
"`#[inline(jamais)]` suggère qu'une expansion en ligne ne devrait jamais être "
"effectuée."

#: src/ch11-06-inlining-in-cairo.md:15
msgid ""
"Note: the `inline` attribute in every form is a hint, with no requirements "
"on the language to place a copy of the attributed function in the caller. "
"This means that the attribute may be ignored by the compiler. In practice, "
"`#[inline(always)]` will cause inlining in all but the most exceptional "
"cases."
msgstr ""
"Note : l'attribut `inline` dans chaque forme est un indice, sans aucune "
"exigence sur la langue pour placer une copie de la fonction attribuée dans "
"l'appelant. Cela signifie que l'attribut peut être ignoré par le "
"compilateur. Dans la pratique, `#[inline(toujours)]` provoquera l'inline "
"dans tous les cas sauf les cas les plus exceptionnels."

#: src/ch11-06-inlining-in-cairo.md:17
msgid ""
"Many of the Cairo corelib functions are inlined. User-defined functions may "
"also be annotated with the `inline` attribute. Annoting functions with the "
"`#[inline(always)]` attribute reduces the total number of steps required "
"when calling these attributed functions. Indeed, injecting the Sierra code "
"at the caller site avoids the step-cost involved in calling functions and "
"obtaining their arguments."
msgstr ""
"Les fonctions définies par l'utilisateur peuvent également être annotées "
"avec l'attribut `inline`. L'annotation des fonctions avec l'attribut "
"`#[inline( always)]` réduit le nombre total d'étapes nécessaires pour "
"appeler ces fonctions attribuées. En effet, l'injection du code Sierra sur "
"le site de l'appelant évite le coût d'étape des fonctions d'appel et "
"l'obtention de leurs arguments."

#: src/ch11-06-inlining-in-cairo.md:19
msgid ""
"However, inlining can also lead to increased code size. Whenever a function "
"is inlined, the call site contains a copy of the function's Sierra code, "
"potentially leading to duplication of code across the compiled code."
msgstr ""
"Cependant, l'inline peut également entraîner une augmentation de la taille "
"du code. Chaque fois qu'une fonction est alignée, le site d'appel contient "
"une copie du code Sierra de la fonction, ce qui peut entraîner une "
"duplication du code dans le code compilé."

#: src/ch11-06-inlining-in-cairo.md:21
msgid ""
"Therefore, inlining should be applied with caution. Using `#[inline]` or "
"`#[inline(always)]` indiscriminately will lead to increased compile time. It "
"is particularly useful to inline small functions, ideally with many "
"arguments. This is because inlining large functions will increase the code "
"length of the program, and handling many arguments will increase the number "
"of steps to execute these functions."
msgstr ""
"L'utilisation de `#[inline]` ou `#[inline(toujours)]` conduira à une "
"augmentation du temps de compilation. Il est particulièrement utile "
"d'insérer de petites fonctions, idéalement avec de nombreux arguments. C'est "
"parce que l'utilisation de grandes fonctions augmentera la longueur du code "
"du programme, et le traitement de nombreux arguments augmentera le nombre "
"d'étapes pour exécuter ces fonctions."

#: src/ch11-06-inlining-in-cairo.md:23
msgid ""
"The more frequently a function is called, the more beneficial inlining "
"becomes in terms of performance. By doing so, the number of steps for the "
"execution will be lower, while the code length will not grow that much or "
"might even decrease in terms of total number of instructions."
msgstr ""
"Plus une fonction est appelée, plus l'inline plus bénéfique devient en "
"termes de performance. Ce faisant, le nombre d'étapes pour l'exécution sera "
"plus faible, tandis que la longueur du code ne augmentera pas tant ou "
"pourrait même diminuer en termes de nombre total d'instructions."

#: src/ch11-06-inlining-in-cairo.md:25
msgid ""
"Inlining is often a tradeoff between number of steps and code length. Use "
"the `inline` attribute cautiously where it is appropriate."
msgstr ""
"L'inline est souvent un compromis entre le nombre d'étapes et la longueur du "
"code. Utilisez l'attribut `inline` avec prudence là où cela est approprié."

#: src/ch11-06-inlining-in-cairo.md:27
msgid "Inlining Example"
msgstr "Exemple d'information"

#: src/ch11-06-inlining-in-cairo.md:29
msgid ""
"Let's introduce a short example to illustrate the mechanisms of inlining in "
"Cairo. Listing 11-3 shows a basic program allowing comparison between "
"inlined and non-inlined functions."
msgstr ""
"Introduisons un court exemple pour illustrer les mécanismes de l'inline au "
"Caire. Listing 11-3 montre un programme de base permettant une comparaison "
"entre les fonctions alignées et non alignées."

#: src/ch11-06-inlining-in-cairo.md:47
msgid ""
"<span class=\"caption\">Listing 11-3: A small Cairo program that adds the "
"return value of 2 functions, with one of them being inlined</span>"
msgstr ""
"<span class=\"caption\">Liste 11-3: Un petit programme du Caire qui ajoute "
"la valeur de retour de 2 fonctions, l'une d'entre elles étant alignée</span>"

#: src/ch11-06-inlining-in-cairo.md:49
msgid ""
"Let's take a look at the corresponding Sierra code to see how inlining works "
"under the hood:"
msgstr ""
"Jetons un coup d'oeil au code Sierra correspondant pour voir comment "
"l'inline fonctionne sous le capot :"

#: src/ch11-06-inlining-in-cairo.md:52 src/ch11-06-inlining-in-cairo.md:215
msgid "// type declarations\n"
msgstr "// Déclarations de type\n"

#: src/ch11-06-inlining-in-cairo.md:54 src/ch11-06-inlining-in-cairo.md:218
msgid "// libfunc declarations\n"
msgstr "// déclarations libfunc\n"

#: src/ch11-06-inlining-in-cairo.md:61 src/ch11-06-inlining-in-cairo.md:226
msgid "// statements\n"
msgstr "// déclarations\n"

#: src/ch11-06-inlining-in-cairo.md:75 src/ch11-06-inlining-in-cairo.md:238
msgid "// funcs\n"
msgstr "// funcs\n"

#: src/ch11-06-inlining-in-cairo.md:82
msgid "The Sierra file is structured in three parts:"
msgstr "Le fichier Sierra est structuré en trois parties :"

#: src/ch11-06-inlining-in-cairo.md:84
msgid "Type and libfunc declarations."
msgstr "Tapez et libfunc déclarations."

#: src/ch11-06-inlining-in-cairo.md:85
msgid "Statements that constitute the program."
msgstr "Déclarations qui constituent le programme."

#: src/ch11-06-inlining-in-cairo.md:86
msgid "Declaration of the functions of the program."
msgstr "Déclaration des fonctions du programme."

#: src/ch11-06-inlining-in-cairo.md:88
msgid ""
"The Sierra code statements always match the order of function declarations "
"in the Cairo program. Indeed, the declaration of the functions of the "
"program tells us that:"
msgstr ""
"Les déclarations de code Sierra correspondent toujours à l'ordre des "
"déclarations de fonction dans le programme du Caire. En effet, la "
"déclaration des fonctions du programme nous dit que:"

#: src/ch11-06-inlining-in-cairo.md:90
msgid "`main` function starts at line 0, and returns a `felt252` on line 5."
msgstr ""
"La fonction `main` commence à la ligne 0 et renvoie un `felt252` à la ligne "
"5."

#: src/ch11-06-inlining-in-cairo.md:91
msgid "`inlined` function starts at line 6, and returns a `felt252` on line 8."
msgstr ""
"La fonction `inlined` commence à la ligne 6 et renvoie un `felt252` à la "
"ligne 8."

#: src/ch11-06-inlining-in-cairo.md:92
msgid ""
"`not_inlined` function starts at line 9, and returns a `felt252` on line 11."
msgstr ""
"La fonction `not_inlined` commence à la ligne 9 et renvoie un `felt252` à la "
"ligne 11."

#: src/ch11-06-inlining-in-cairo.md:94
msgid ""
"All statements corresponding to the `main` function are located between "
"lines 0 and 5:"
msgstr ""
"Tous les énoncés correspondant à la fonction `main` sont situés entre les "
"lignes 0 et 5:"

#: src/ch11-06-inlining-in-cairo.md:105
msgid ""
"The `function_call` libfunc is called on line 0 to execute the `not_inlined` "
"function. This will execute the code from lines 9 to 10 and store the return "
"value in the variable with id `0`."
msgstr ""
"La fonction `fonction_call` libfunc est appelée à la ligne 0 pour exécuter "
"la fonction `not_inlined`. Cela exécutera le code des lignes 9 à 10 et "
"stockera la valeur de retour dans la variable avec id `0`."

#: src/ch11-06-inlining-in-cairo.md:112
msgid ""
"This code uses a single data type, `felt252`. It uses two library functions -"
" `felt_const<2>`, which returns the constant `felt252` 2, "
"and `store_temp<felt252>`, which pushes a constant value to memory. The "
"first line calls the `felt_const<2>` libfunc to create a variable with "
"id `0`. Then, the second line pushes this variable to memory for later use."
msgstr ""
"Ce code utilise un seul type de données, `felt252`. Il utilise deux "
"fonctions de bibliothèque - `felt_const<2>`, qui retourne la constante "
"`felt252` 2, et `store_temp<felt252>`, qui pousse une valeur constante à la "
"mémoire. La première ligne appelle la `felt_const<2>` libfunc pour créer une "
"variable avec id `0`. Ensuite, la deuxième ligne pousse cette variable à la "
"mémoire pour une utilisation ultérieure."

#: src/ch11-06-inlining-in-cairo.md:114
msgid ""
"After that, Sierra statements from line 1 to 2 are the actual body of the "
"`inlined` function:"
msgstr ""
"Après cela, les déclarations Sierra de la ligne 1 à 2 sont le corps réel de "
"la fonction \"inlined\" :"

#: src/ch11-06-inlining-in-cairo.md:121
msgid ""
"The only difference is that the inlined code will store the `felt252_const` "
"value in a variable with id `1`, because `[0]` refers to a variable "
"previously assigned:"
msgstr ""
"La seule différence est que le code aligné stockera la valeur "
"`felt252_const` dans une variable avec id `1`, parce que `[0]` se réfère à "
"une variable précédemment assignée:"

#: src/ch11-06-inlining-in-cairo.md:128
msgid ""
"Note: in both cases (inlined or not), the `return` instruction of the "
"function being called is not executed, as this would lead to prematurely end "
"the execution of the `main` function. Instead, return values of `inlined` "
"and `not_inlined` will be added and the result will be returned."
msgstr ""
"Note : dans les deux cas (inligned ou non), l'instruction `return` de la "
"fonction en cours d'appel n'est pas exécutée, car cela conduirait à mettre "
"fin prématurément à l'exécution de la fonction `main`. Au lieu de cela, les "
"valeurs de retour de `inlined` et `not_inlined` seront ajoutées et le "
"résultat sera retourné."

#: src/ch11-06-inlining-in-cairo.md:130
msgid ""
"Lines 3 to 5 contain the Sierra statements that will add the values "
"contained in variables with ids `0` and `1`, store the result in memory and "
"return it:"
msgstr ""
"Les lignes 3 à 5 contiennent les instructions Sierra qui ajouteront les "
"valeurs contenues dans les variables avec les ids `0` et `1`, stockeront le "
"résultat dans la mémoire et le retourneront:"

#: src/ch11-06-inlining-in-cairo.md:138
msgid ""
"Now, let's take a look at the Casm code corresponding to this program to "
"really understand the benefits of inlining."
msgstr ""
"Maintenant, jetons un coup d'oeil au code Casm correspondant à ce programme "
"pour vraiment comprendre les avantages de l'inline."

#: src/ch11-06-inlining-in-cairo.md:140
msgid "Casm Code Explanations"
msgstr "Explications du code Casm"

#: src/ch11-06-inlining-in-cairo.md:142
msgid "Here is the Casm code for our previous program example:"
msgstr "Voici le code Casm pour notre précédent exemple de programme :"

#: src/ch11-06-inlining-in-cairo.md:158
msgid ""
"Don't hesitate to use [cairovm.codes](https://cairovm.codes/) playground to "
"follow along and see all the execution trace."
msgstr ""
"N'hésitez pas à utiliser [cairovm.codes](https://cairovm.codes/) aire de "
"jeux pour suivre et voir toute la trace d'exécution."

#: src/ch11-06-inlining-in-cairo.md:160
msgid ""
"Each instruction and each argument for any instruction increment the Program "
"Counter (known as PC) by 1. This means that `ret` on line 2 is actually the "
"instruction at `PC = 3`, as the argument `3` corresponds to `PC = 2`."
msgstr ""
"Chaque instruction et chaque argument pour toute instruction incrémentent le "
"compteur de programme (connu sous le nom de PC) par 1. Cela signifie que "
"`ret` à la ligne 2 est en fait l'instruction à `PC = 3`, puisque l'argument "
"`3` correspond à `PC = 2`."

#: src/ch11-06-inlining-in-cairo.md:162
msgid ""
"The `call` and `ret` instructions allow implementation of a function stack:"
msgstr ""
"Les instructions `call` et `ret` permettent la mise en œuvre d'une pile de "
"fonctions:"

#: src/ch11-06-inlining-in-cairo.md:164
msgid ""
"`call` instruction acts like a jump instruction, updating the PC to a given "
"value, whether relatively to the current value using `rel` or absolutely "
"using `abs`."
msgstr ""
"`appel` instruction agit comme une instruction de saut, la mise à jour du PC "
"à une valeur donnée, que ce soit relativement à la valeur actuelle en "
"utilisant `rel` ou absolument en utilisant `abs`."

#: src/ch11-06-inlining-in-cairo.md:165
msgid ""
"`ret` instruction jumps back right after the `call` instruction and "
"continues the execution of the code."
msgstr ""
"\"ret\" instruction saute juste après l'instruction \"appel\" et continue "
"l'exécution du code."

#: src/ch11-06-inlining-in-cairo.md:167
msgid ""
"We can now decompose how these instructions are executed to understand what "
"this code does:"
msgstr ""
"Nous pouvons maintenant décomposer la façon dont ces instructions sont "
"exécutées pour comprendre ce que fait ce code :"

#: src/ch11-06-inlining-in-cairo.md:169
msgid ""
"`call rel 3`: this instruction increments the PC by 3 and executes the "
"instruction at this location, which is `call rel 9` at `PC = 4`."
msgstr ""
"`appel rel 3`: cette instruction incrémente le PC par 3 et exécute "
"l'instruction à cet endroit, qui est `appel rel 9` à `PC = 4`."

#: src/ch11-06-inlining-in-cairo.md:170
msgid ""
"`call rel 9` increments the PC by 9 and executes the instruction at `PC = "
"13`, which is actually line 9."
msgstr ""
"`appel rel 9` incrémente le PC par 9 et exécute l'instruction à `PC = 13`, "
"qui est en fait la ligne 9."

#: src/ch11-06-inlining-in-cairo.md:171
msgid ""
"`[ap + 0] = 2, ap++`: `ap` stands for Allocation Pointer, which points to "
"the first memory cell that has not been used by the program so far. This "
"means we store the value `2` in the next free memory cell indicated by the "
"current value of `ap`, after which we increment `ap` by 1. Then, we go to "
"the next line which is `ret`."
msgstr ""
"`[ap + 0] = 2, ap++`: `ap` désigne le pointeur d'attribution, qui pointe "
"vers la première cellule mémoire qui n'a pas été utilisée jusqu'à présent "
"par le programme. Cela signifie que nous conservons la valeur `2` dans la "
"prochaine cellule mémoire libre indiquée par la valeur actuelle de `ap`, "
"après quoi nous incrémentons `ap` par 1. Ensuite, nous allons à la ligne "
"suivante qui est `ret`."

#: src/ch11-06-inlining-in-cairo.md:172
msgid "`ret`: jumps back to the line after `call rel 9`, so we go to line 4."
msgstr ""
"`ret`: saute vers la ligne après `appel rel 9`, donc nous allons à la ligne "
"4."

#: src/ch11-06-inlining-in-cairo.md:173
msgid ""
"`[ap + 0] = 1, ap++` : we store the value `1` in `[ap]` and we apply `ap++` "
"so that `[ap - 1] = 1`. This means we now have `[ap-1] = 1, [ap-2] = 2` and "
"we go to the next line."
msgstr ""
"`[ap + 0] = 1, ap++` : nous stockons la valeur `1` dans `[ap]` et nous "
"appliquons `ap++` de sorte que `[ap - 1] = 1`. Cela signifie que nous avons "
"maintenant `[ap-1] = 1, [ap-2] = 2` et nous allons à la ligne suivante."

#: src/ch11-06-inlining-in-cairo.md:174
msgid ""
"`[ap + 0] = [ap + -1] + [ap + -2], ap++`: we sum the values `1` and `2` and "
"store the result in `[ap]`, and we apply `ap++` so the result is `[ap-1] = "
"3, [ap-2] = 1, [ap-3]=2`."
msgstr ""
"`[ap + 0] = [ap + -1] + [ap + -2], ap++`: nous additionnons les valeurs `1` "
"et `2` et stockons le résultat dans `[ap]`, et nous appliquons `ap++` de "
"sorte que le résultat est `[ap-1] = 3, [ap-2] = 1, [ap-3]=2`."

#: src/ch11-06-inlining-in-cairo.md:175
msgid "`ret`: jumps back to the line after `call rel 3`, so we go to line 2."
msgstr ""
"`ret`: saute vers la ligne après `appel rel 3`, donc nous allons à la ligne "
"2."

#: src/ch11-06-inlining-in-cairo.md:176
msgid ""
"`ret`: last instruction executed as there is no more `call` instruction "
"where to jump right after. This is the actual return instruction of the "
"Cairo `main` function."
msgstr ""
"`ret`: dernière instruction exécutée car il n'y a plus d'instruction `appel` "
"où sauter immédiatement après. Il s'agit de l'instruction réelle de retour "
"de la fonction `main` du Caire."

#: src/ch11-06-inlining-in-cairo.md:178
msgid "To summarize:"
msgstr "Pour résumer :"

#: src/ch11-06-inlining-in-cairo.md:180
msgid ""
"`call rel 3` corresponds to the `main` function, which is obviously not "
"inlined."
msgstr ""
"`appel rel 3` correspond à la fonction `main`, qui n'est évidemment pas "
"alignée."

#: src/ch11-06-inlining-in-cairo.md:181
msgid ""
"`call rel 9` triggers the call the `not_inlined` function, which returns `2` "
"and stores it at the final location `[ap-3]`."
msgstr ""
"`call rel 9` déclenche l'appel de la fonction `not_inlined`, qui retourne "
"`2` et le stocke à l'emplacement final `[ap-3]`."

#: src/ch11-06-inlining-in-cairo.md:182
msgid ""
"The line 4 is the inlined code of the `inlined` function, which returns `1` "
"and stores it at the final location `[ap-2]`. We clearly see that there is "
"no `call` instruction in this case, because the body of the function is "
"inserted and directly executed."
msgstr ""
"La ligne 4 est le code aligné de la fonction `inlined`, qui retourne `1` et "
"le stocke à l'emplacement final `[ap-2]`. Nous voyons clairement qu'il n'y a "
"pas d'instruction `appel` dans ce cas, parce que le corps de la fonction est "
"inséré et directement exécuté."

#: src/ch11-06-inlining-in-cairo.md:183
msgid ""
"After that, the sum is computed and we ultimately go back to the line 2 "
"which contains the final `ret` instruction that returns the sum, "
"corresponding to the return value of the `main` function."
msgstr ""
"Après cela, la somme est calculée et nous revenons finalement à la ligne 2 "
"qui contient l'instruction finale `ret` qui renvoie la somme, correspondant "
"à la valeur de retour de la fonction `main`."

#: src/ch11-06-inlining-in-cairo.md:185
msgid ""
"It is interesting to note that in both Sierra code and Casm code, the "
"`not_inlined` function will be called and executed before the body of the "
"`inlined` function, even though the Cairo program executes `inlined() + "
"not_inlined()`."
msgstr ""
"Il est intéressant de noter que dans le code Sierra et le code Casm, la "
"fonction `not_inlined` sera appelée et exécutée avant le corps de la "
"fonction `inlined`, même si le programme du Caire exécute `inlined() + "
"not_inlined()`."

#: src/ch11-06-inlining-in-cairo.md:187
msgid ""
"The Casm code of our program clearly shows that there is a function call for "
"the `not_inlined` function, while the `inlined` function is correctly "
"inlined."
msgstr ""
"Le code Casm de notre programme montre clairement qu'il y a un appel de "
"fonction pour la fonction `not_inlined`, tandis que la fonction `inlined` "
"est correctement alignée."

#: src/ch11-06-inlining-in-cairo.md:189
msgid "Additional Optimizations"
msgstr "Optimisations supplémentaires"

#: src/ch11-06-inlining-in-cairo.md:191
msgid ""
"Let's study another program that shows other benefits that inlining may "
"sometimes provide. Listing 11-4 shows a Cairo program that calls 2 functions "
"and doesn't return anything:"
msgstr ""
"Étudions un autre programme qui montre d'autres avantages que l'inline peut "
"parfois fournir. Listing 11-4 montre un programme du Caire qui appelle 2 "
"fonctions et ne retourne rien:"

#: src/ch11-06-inlining-in-cairo.md:210
msgid ""
"<span class=\"caption\">Listing 11-4: A small Cairo program that calls "
"`inlined` and `not_inlined` and doesn't return any value.</span>"
msgstr ""
"<span class=\"caption\">Liste 11-4: Un petit programme du Caire qui appelle "
"`inlined` et `not_inlined` et ne retourne aucune valeur.</span>"

#: src/ch11-06-inlining-in-cairo.md:212
msgid "Here is the corresponding Sierra code:"
msgstr "Voici le code Sierra correspondant:"

#: src/ch11-06-inlining-in-cairo.md:245
msgid ""
"In this specific case, we can observe that the compiler has applied "
"additional optimizations to the `main` function of our code : the code of "
"the `inlined` function, which is annotated with the `#[inline(always)]` "
"attribute, is actually not copied in the `main` function. Instead, the "
"`main` function starts with the `function_call` libfunc to call the "
"`not_inlined` function, entirely omitting the code of the `inlined` function."
msgstr ""
"Dans ce cas précis, nous pouvons observer que le compilateur a appliqué des "
"optimisations supplémentaires à la fonction `main` de notre code : le code "
"de la fonction `inlined`, qui est annoté avec l'attribut "
"`#[inline(toujours)]`, n'est en fait pas copié dans la fonction `main`. Au "
"lieu de cela, la fonction `main` commence par la fonction `fonction_call` "
"libfunc pour appeler la fonction `not_inlined`, en omettant totalement le "
"code de la fonction `inlined`."

#: src/ch11-06-inlining-in-cairo.md:247
msgid ""
"Because `inlined` return value is never used, the compiler optimizes the "
"`main` function by skipping the `inlined` function code. This will actually "
"reduce the code length while reducing the number of steps required to "
"execute `main`."
msgstr ""
"Comme la valeur de retour `inlined` n'est jamais utilisée, le compilateur "
"optimise la fonction `main` en sautant le code de fonction `inlined`. Cela "
"réduira en fait la longueur du code tout en réduisant le nombre d'étapes "
"nécessaires pour exécuter `main`."

#: src/ch11-06-inlining-in-cairo.md:249
msgid ""
"In contrast, line 0 uses the `function_call` libfunc to execute the "
"`not_inlined` function normally. This means that all the code from lines 7 "
"to 8 will be executed:"
msgstr ""
"En revanche, la ligne 0 utilise la fonction `fonction_call` libfunc pour "
"exécuter la fonction `not_inlined` normalement. Cela signifie que tous les "
"codes des lignes 7 à 8 seront exécutés :"

#: src/ch11-06-inlining-in-cairo.md:256
msgid ""
"This value stored in the variable with id `0` is then dropped on line 1, as "
"it is not used in the `main` function:"
msgstr ""
"Cette valeur stockée dans la variable avec id `0` est ensuite supprimée à la "
"ligne 1, car elle n'est pas utilisée dans la fonction `main`:"

#: src/ch11-06-inlining-in-cairo.md:262
msgid ""
"Finally, as the `main` function doesn't return any value, a variable of unit "
"type `()` is created and returned:"
msgstr ""
"Enfin, comme la fonction `main` ne renvoie aucune valeur, une variable du "
"type d'unité `()` est créée et renvoyée :"

#: src/ch11-06-inlining-in-cairo.md:271
msgid ""
"Inlining is a compiler optimization technique that can be very useful in "
"various situations. Inlining a function allows to get rid of the overhead of "
"calling a function with the `function_call` libfunc by injecting the Sierra "
"code directly in the caller function's context, while potentially optimizing "
"the Sierra code executed to reduce the number of steps. If used effectively, "
"inlining can even reduce code length as shown in the previous example."
msgstr ""
"L'inline est une technique d'optimisation du compilateur qui peut être très "
"utile dans diverses situations. L'inline d'une fonction permet de se "
"débarrasser des frais généraux d'appel d'une fonction avec la fonction "
"`fonction_call` libfunc en injectant le code Sierra directement dans le "
"contexte de la fonction appelante, tout en optimisant potentiellement le "
"code Sierra exécuté pour réduire le nombre d'étapes."

#: src/ch11-06-inlining-in-cairo.md:273
msgid ""
"Nevertheless, applying the `inline` attribute to a function with a lot of "
"code and few parameters might result in an increased code size, especially "
"if the inlined function is used many times in the codebase. Use inlining "
"only where it makes sense, and be aware that the compiler handles inlining "
"by default. Therefore, manually applying inlining is not recommended in most "
"situations, but can help improve and fine-tune your code's behavior."
msgstr ""
"Néanmoins, l'application de l'attribut `inline` à une fonction avec beaucoup "
"de code et peu de paramètres pourrait entraîner une augmentation de la "
"taille du code, surtout si la fonction inlined est utilisée plusieurs fois "
"dans la base de code. Utilisez l'inline uniquement là où cela a du sens, et "
"soyez conscient que le compilateur gère l'inline par défaut. Par conséquent, "
"l'application manuelle de l'inline n'est pas recommandée dans la plupart des "
"situations, mais peut aider à améliorer et à affiner le comportement de "
"votre code."

#: src/ch11-08-printing.md:3
msgid ""
"When writing a program, it is quite common to print some data to the "
"console, either for the normal process of the program or for debugging "
"purpose. In this chapter, we describe the options you have to print simple "
"and complex data types."
msgstr ""
"Lors de l'écriture d'un programme, il est assez courant d'imprimer certaines "
"données sur la console, soit pour le processus normal du programme ou à des "
"fins de débogage. Dans ce chapitre, nous décrivons les options que vous "
"devez imprimer des types de données simples et complexes."

#: src/ch11-08-printing.md:5
msgid "Printing Standard Data Types"
msgstr "Types de données standard d'impression"

#: src/ch11-08-printing.md:7
msgid "Cairo provides two macros to print standard data types:"
msgstr ""
"Le Caire fournit deux macros pour imprimer des types de données standard:"

#: src/ch11-08-printing.md:9
msgid "`println!` which prints on a new line"
msgstr "`println!` qui imprime sur une nouvelle ligne"

#: src/ch11-08-printing.md:10
msgid "`print!` with inline printing"
msgstr "`imprimé!` avec impression en ligne"

#: src/ch11-08-printing.md:12
msgid ""
"Both take a `ByteArray` string as first parameter (see [Data Types](./"
"ch02-02-data-types.md#byte-array-strings)), which can be a simple string to "
"print a message or a string with placeholders to format the way values are "
"printed."
msgstr ""
"Les deux prennent une chaîne `ByteArray` comme premier paramètre (voir "
"[Types de données](./ch02-02-data-types.md#byte-array-strings)), qui peut "
"être une chaîne simple pour imprimer un message ou une chaîne avec des "
"placeholders pour formater la façon dont les valeurs sont imprimées."

#: src/ch11-08-printing.md:14
msgid "There are two ways to use these placeholders and both can be mixed:"
msgstr ""
"Il y a deux façons d'utiliser ces placeholders et les deux peuvent être "
"mélangés:"

#: src/ch11-08-printing.md:16
msgid ""
"empty curly brackets `{}` are replaced by values given as parameters to the "
"`print!` macro, in the same order."
msgstr ""
"Les crochets vides `{}` sont remplacés par des valeurs données en tant que "
"paramètres de la macro `print!`, dans le même ordre."

#: src/ch11-08-printing.md:17
msgid ""
"curly brackets with variable names are directly replaced by the variable "
"value."
msgstr ""
"Les parenthèses avec noms de variables sont directement remplacées par la "
"valeur variable."

#: src/ch11-08-printing.md:19
msgid "Here are some examples:"
msgstr "Voici quelques exemples :"

#: src/ch11-08-printing.md:27
msgid "\"Hello world!\""
msgstr "\"Bonjour!\""

#: src/ch11-08-printing.md:28
msgid "\"{} {} {}\""
msgstr "\"{} {} {}\""

#: src/ch11-08-printing.md:28
msgid "// 10 20 30\n"
msgstr "// 10 20 30\n"

#: src/ch11-08-printing.md:29
msgid "\"{c} {a} {}\""
msgstr "\"{c} {a} {}\""

#: src/ch11-08-printing.md:29
msgid "// 30 10 20\n"
msgstr "// 30 10 20\n"

#: src/ch11-08-printing.md:33
msgid ""
"`print!` and `println!` macros use the `Display` trait under the hood, and "
"are therefore used to print the value of types that implement it. This is "
"the case for basic data types, but not for more complex ones. If you try to "
"print complex data type values with these macros, e.g. for debugging "
"purposes, you will get an error. In that case, you can either [manually "
"implement](./ch11-08-printing.md#printing-custom-data-types) the `Display` "
"trait for your type or use the `Debug` trait (see [below](./ch11-08-printing."
"md#print-debug-traces))."
msgstr ""
"Les macros `print!` et `println!` utilisent le caractère `Display` sous le "
"capot, et sont donc utilisées pour imprimer la valeur des types qui "
"l'implémentent. C'est le cas pour les types de données de base, mais pas "
"pour les types plus complexes. Si vous essayez d'imprimer des valeurs de "
"type de données complexes avec ces macros, par exemple pour le débogage, "
"vous obtiendrez une erreur. Dans ce cas, vous pouvez soit [implémenter "
"manuellement](./ch11-08-printing.md#printing-custom-data-types) le caractère "
"`Display` pour votre type ou utiliser le caractère `Debug` (voir [ci-dessous]"
"(./ch11-08-printing.md#print-debug-traces))."

#: src/ch11-08-printing.md:39
msgid "Formatting"
msgstr "Formatage"

#: src/ch11-08-printing.md:41
msgid ""
"Cairo also provides a useful macro to handle string formatting: `format!`. "
"This macro works like `println!`, but instead of printing the output to the "
"screen, it returns a `ByteArray` with the contents. In the following "
"example, we perform string concatenation using either the `+` operator or "
"the `format!` macro. The version of the code using `format!` is much easier "
"to read, and the code generated by the `format!` macro uses snapshots, so "
"that this call doesn’t take ownership of any of its parameters."
msgstr ""
"Le Caire fournit également une macro utile pour gérer le formatage des "
"chaînes: `format!`. Cette macro fonctionne comme `println!`, mais au lieu "
"d'imprimer la sortie à l'écran, elle retourne un `ByteArray` avec le "
"contenu. Dans l'exemple suivant, nous effectuons la concaténation des "
"chaînes en utilisant soit l'opérateur `+` ou la macro `format!`. La version "
"du code utilisant `format!` est beaucoup plus facile à lire, et le code "
"généré par la macro `format!` utilise des instantanés, de sorte que cet "
"appel ne prend pas en charge l'un de ses paramètres."

#: src/ch11-08-printing.md:46 src/ch11-08-printing.md:52
msgid "\"tic\""
msgstr "\"tic\""

#: src/ch11-08-printing.md:47 src/ch11-08-printing.md:53
msgid "\"tac\""
msgstr "\"Tac\""

#: src/ch11-08-printing.md:48 src/ch11-08-printing.md:54
msgid "\"toe\""
msgstr "\"Toi\""

#: src/ch11-08-printing.md:49
msgid "\"-\""
msgstr "\"-\""

#: src/ch11-08-printing.md:50
msgid ""
"// using + operator consumes the strings, so they can't be used again!\n"
msgstr ""
"// en utilisant + opérateur consomme les chaînes, de sorte qu'elles ne "
"peuvent pas être utilisées à nouveau!\n"

#: src/ch11-08-printing.md:55
msgid "\"{s1}-{s2}-{s3}\""
msgstr "\"{s1}-{s2}-{s3}\""

#: src/ch11-08-printing.md:55
msgid ""
"// s1, s2, s3 are not consumed by format!\n"
"    // or\n"
msgstr "// s1, s2, s3 ne sont pas consommés par format! // ou\n"

#: src/ch11-08-printing.md:57
msgid "\"{}-{}-{}\""
msgstr "\"{}-{}-{}\""

#: src/ch11-08-printing.md:63
msgid "Printing Custom Data Types"
msgstr "Impression des types de données personnalisés"

#: src/ch11-08-printing.md:65
msgid ""
"As previously explained, if you try to print the value of a custom data type "
"with `print!` or `println!` macros, you'll get an error telling you that the "
"`Display` trait is not implemented for your custom type:"
msgstr ""
"Comme expliqué précédemment, si vous essayez d'imprimer la valeur d'un type "
"de données personnalisé avec des macros `print!` ou `println!`, vous "
"obtiendrez une erreur vous disant que le caractère `Display` n'est pas "
"implémenté pour votre type personnalisé:"

#: src/ch11-08-printing.md:71
msgid ""
"The `println!` macro can do many kinds of formatting, and by default, the "
"curly brackets tell `println!` to use formatting known as `Display` - output "
"intended for direct end user consumption. The primitive types we’ve seen so "
"far implement `Display` by default because there’s only one way you’d want "
"to show a `1` or any other primitive type to a user. But with structs, the "
"way `println!` should format the output is less clear because there are more "
"display possibilities: Do we want commas or not? Do we want to print the "
"curly brackets? Should all the fields be shown? Due to this ambiguity, Cairo "
"doesn’t try to guess what we want, and structs don’t have a provided "
"implementation of `Display` to use with `println!` and the `{}` placeholder."
msgstr ""
"La macro `println!` peut faire de nombreux types de formatage, et par "
"défaut, les crochets bouclés indiquent `println!` d'utiliser le formatage "
"connu sous le nom `Display` - sortie destinée à la consommation finale "
"directe. Les types primitifs que nous avons vu jusqu'à présent implémentent "
"`Display` par défaut parce qu'il n'y a qu'une seule façon que vous vouliez "
"montrer un `1` ou tout autre type primitif à un utilisateur. Mais avec les "
"structures, la façon `println!` devrait formater la sortie est moins claire "
"parce qu'il y a plus de possibilités d'affichage: Voulons-nous des virgules "
"ou non? Voulons-nous imprimer les crochets bouclés? Faut-il que tous les "
"champs soient affichés? En raison de cette ambiguïté, Le Caire n'essaie pas "
"de deviner ce que nous voulons, et les structs ne disposent pas d'une "
"implémentation de `Display` à utiliser avec `println!` et le placeholder `{}"
"`."

#: src/ch11-08-printing.md:73
msgid "Here is the `Display` trait to implement:"
msgstr "Voici le caractère \"Affichage\" à mettre en œuvre:"

#: src/ch11-08-printing.md:81
msgid ""
"The second parameter `f` is of type `Formatter`, which is just a struct "
"containing a `ByteArray`, representing the pending result of formatting:"
msgstr ""
"Le second paramètre `f` est de type `Format, qui n'est qu'une structure "
"contenant un `ByteArray`, représentant le résultat en attente du formatage:"

#: src/ch11-08-printing.md:86
msgid "/// The pending result of formatting.\n"
msgstr "/// Le résultat en attente du formatage.\n"

#: src/ch11-08-printing.md:91
msgid ""
"Knowing this, here is an example of how to implement the `Display` trait for "
"a custom `Point` struct:"
msgstr ""
"En sachant cela, voici un exemple de la façon de mettre en œuvre le "
"caractère `Affichage` pour une structure `Point` personnalisée:"

#: src/ch11-08-printing.md:104
msgid "\"Point ({}, {})\""
msgstr "\"Point {}, {})\""

#: src/ch11-08-printing.md:112 src/ch11-08-printing.md:156
msgid "// Point: (1, 3)\n"
msgstr "// Point: (1, 3)\n"

#: src/ch11-08-printing.md:116
msgid ""
"Cairo also provides the `write!` and `writeln!` macros to write formatted "
"strings in a formatter. Here is a short example using `write!` macro to "
"concatenate multiple strings on the same line and then print the result:"
msgstr ""
"Le Caire fournit également les macros `write!` et `writeln!` pour écrire des "
"chaînes formatées dans un format. Voici un court exemple utilisant la macro "
"`write!` pour concaténer plusieurs chaînes sur la même ligne, puis imprimer "
"le résultat:"

#: src/ch11-08-printing.md:126
msgid "\"hello\""
msgstr "\"Bonjour\""

#: src/ch11-08-printing.md:127
msgid "\"world\""
msgstr "\"monde\""

#: src/ch11-08-printing.md:128
msgid "\" {a} {b}\""
msgstr "\" {a} {b}\""

#: src/ch11-08-printing.md:130
msgid "// helloworld 10 20\n"
msgstr "// helloworld 10 20\n"

#: src/ch11-08-printing.md:134
msgid ""
"It is also possible to implement the `Display` trait for the `Point` struct "
"using these macros, as shown here:"
msgstr ""
"Il est également possible de mettre en œuvre le caractère `Affichage` pour "
"la structure `Point` en utilisant ces macros, comme indiqué ici:"

#: src/ch11-08-printing.md:150
msgid "\"Point ({x}, {y})\""
msgstr "\"Point ({x}, {y})\""

#: src/ch11-08-printing.md:160
msgid ""
"Printing complex data types this way might not be ideal as it requires "
"additional steps to use the `print!` and `println!` macros. If you need to "
"print complex data types, especially when debugging, use the `Debug` trait "
"described below instead."
msgstr ""
"Impression de types de données complexes de cette façon pourrait ne pas être "
"idéal car il nécessite des étapes supplémentaires pour utiliser les macros "
"`print!` et `println!`. Si vous avez besoin d'imprimer des types de données "
"complexes, en particulier lors du débogage, utilisez plutôt le caractère "
"`Debug` décrit ci-dessous."

#: src/ch11-08-printing.md:162
msgid "Print Debug Traces"
msgstr "Imprimer les traces de débogage"

#: src/ch11-08-printing.md:164
msgid ""
"Cairo provides the `Debug` trait, which can be derived to print the value of "
"variables when debugging. Simply add `:?` within the curly brackets `{}` "
"placeholders in a `print!` or `println!` macro string."
msgstr ""
"Le Caire fournit le caractère `Debug`, qui peut être dérivé pour imprimer la "
"valeur des variables lors du débogage. Il suffit d'ajouter `:?` entre les "
"crochets `{}` dans une chaîne macro `print!` ou `println!`."

#: src/ch11-08-printing.md:166
msgid ""
"This trait is very useful and is implemented by default for basic data "
"types. It can also be simply derived for complex data types using the "
"`#[derive(Debug)]` attribute, as long as all types they contain implement "
"it. This eliminates the need to manually implement extra code to print "
"complex data types."
msgstr ""
"Ce caractère est très utile et est implémenté par défaut pour les types de "
"données de base. Il peut également être simplement dérivé pour les types de "
"données complexes en utilisant l'attribut `#[derive(Debug)]`, tant que tous "
"les types qu'ils contiennent l'implémentent. Cela élimine la nécessité "
"d'implémenter manuellement un code supplémentaire pour imprimer des types de "
"données complexes."

#: src/ch11-08-printing.md:168
msgid ""
"Note that `assert_xx!` macros used in tests require the provided values to "
"implement the `Debug` trait, as they also print the result in case of "
"assertion failure."
msgstr ""
"Notez que les macros `assert_xx!` utilisées dans les tests nécessitent les "
"valeurs fournies pour implémenter le caractère `Debug`, car elles impriment "
"également le résultat en cas de défaillance de l'affirmation."

#: src/ch11-08-printing.md:170
msgid ""
"For more details about the `Debug` trait and its usage for printing values "
"when debugging, please refer to the [Derivable Traits](./appendix-03-"
"derivable-traits.md#debug-trait-for-printing-and-debugging) appendix."
msgstr ""
"Pour plus de détails sur le caractère `Debug` et son utilisation pour "
"l'impression des valeurs lors du débogage, veuillez consulter l'appendice "
"[Derivable Traits](./appendix-03-derivable-traits.md#debug-trait-for-"
"printing-and-debugging)."

#: src/appendix-00.md
msgid ""
"The following sections contain reference material you may find useful in "
"your Cairo journey."
msgstr ""
"Les sections suivantes contiennent du matériel de référence que vous pouvez "
"trouver utile dans votre voyage au Caire."

#: src/appendix-01-keywords.md:1
msgid "Appendix A - Keywords"
msgstr "Annexe A - Mots clés"

#: src/appendix-01-keywords.md:3
msgid ""
"The following list contains keywords that are reserved for current or future "
"use by the Cairo language."
msgstr ""
"La liste suivante contient des mots-clés qui sont réservés à l'usage courant "
"ou futur de la langue du Caire."

#: src/appendix-01-keywords.md:5
msgid "There are three keyword categories:"
msgstr "Il y a trois catégories de mots clés :"

#: src/appendix-01-keywords.md:7
msgid "strict"
msgstr "strict"

#: src/appendix-01-keywords.md:8
msgid "loose"
msgstr "lâche"

#: src/appendix-01-keywords.md:9
msgid "reserved"
msgstr "réservé"

#: src/appendix-01-keywords.md:11
msgid ""
"There is a fourth category, which are functions from the core library. While "
"their names are not reserved, they are not recommended to be used as names "
"of any items to follow good practices."
msgstr ""
"Il y a une quatrième catégorie, qui sont des fonctions de la bibliothèque "
"centrale. Bien que leurs noms ne soient pas réservés, ils ne sont pas "
"recommandés pour être utilisés comme noms d'éléments pour suivre les bonnes "
"pratiques."

#: src/appendix-01-keywords.md:16
msgid "Strict keywords"
msgstr "Mots-clés stricts"

#: src/appendix-01-keywords.md:18
msgid ""
"These keywords can only be used in their correct contexts. They cannot be "
"used as names of any items."
msgstr ""
"Ces mots-clés ne peuvent être utilisés que dans leur contexte correct. Ils "
"ne peuvent être utilisés comme noms d'aucun élément."

#: src/appendix-01-keywords.md:21
msgid "`as` - Rename import"
msgstr "`as` - Renommer l'importation"

#: src/appendix-01-keywords.md:22
msgid "`break` - Exit a loop immediately"
msgstr "`break` - Quitter une boucle immédiatement"

#: src/appendix-01-keywords.md:23
msgid "`const` - Define constant items"
msgstr "`const` - Définir les éléments constants"

#: src/appendix-01-keywords.md:24
msgid "`continue` - Continue to the next loop iteration"
msgstr "`continue` - Continuer jusqu'à la prochaine itération de boucle"

#: src/appendix-01-keywords.md:25
msgid "`else` - Fallback for `if` and `if let` control flow constructs"
msgstr ""
"`else` - Fallback pour `si` et `si let` commande les constructions de débit"

#: src/appendix-01-keywords.md:26
msgid "`enum` - Define an enumeration"
msgstr "`enum` - Définir une énumération"

#: src/appendix-01-keywords.md:27
msgid ""
"`extern` - Function defined at the compiler level that can be compiled to "
"CASM"
msgstr ""
"`extern` - Fonction définie au niveau du compilateur qui peut être compilée "
"au CASM"

#: src/appendix-01-keywords.md:28
msgid "`false` - Boolean false literal"
msgstr "\"faux\" - Booléen faux littéral"

#: src/appendix-01-keywords.md:29
msgid "`fn` - Define a function"
msgstr "`fn` - Définir une fonction"

#: src/appendix-01-keywords.md:30
msgid "`if` - Branch based on the result of a conditional expression"
msgstr "`si` - Branche basée sur le résultat d'une expression conditionnelle"

#: src/appendix-01-keywords.md:31
msgid "`impl` - Implement inherent or trait functionality"
msgstr ""
"`impl` - Mettre en œuvre la fonctionnalité inhérente ou caractéristique"

#: src/appendix-01-keywords.md:32
msgid ""
"`implicits` - Special kind of function parameters that are required to "
"perform certain actions"
msgstr ""
"`implicites` - Types spéciaux de paramètres de fonction qui sont nécessaires "
"pour exécuter certaines actions"

#: src/appendix-01-keywords.md:33
msgid "`let` - Bind a variable"
msgstr "`let` - Relier une variable"

#: src/appendix-01-keywords.md:34
msgid "`loop` - Loop unconditionally"
msgstr "\"loop\" - Boucle inconditionnelle"

#: src/appendix-01-keywords.md:35
msgid "`match` - Match a value to patterns"
msgstr "`match` - Correspondre une valeur aux modèles"

#: src/appendix-01-keywords.md:36
msgid "`mod` - Define a module"
msgstr "`mod` - Définir un module"

#: src/appendix-01-keywords.md:37
msgid "`mut` - Denote variable mutability"
msgstr "\"mut\" - mutabilité variable de la note"

#: src/appendix-01-keywords.md:38
msgid ""
"`nopanic` - Functions marked with this notation mean that the function will "
"never panic."
msgstr ""
"`nopanic` - Les fonctions marquées de cette notation signifient que la "
"fonction ne paniquera jamais."

#: src/appendix-01-keywords.md:39
msgid "`of` - Implement a trait"
msgstr "`de` - Mettre en œuvre un trait"

#: src/appendix-01-keywords.md:40
msgid ""
"`pub` - Denote public visibility in items, such as struct and struct fields, "
"enums, consts, traits and impl blocks, or modules"
msgstr ""
"`pub` - Signaler la visibilité du public dans des éléments tels que les "
"champs de construction et de construction, les enums, les const, les traits "
"et les blocs d'impl, ou les modules"

#: src/appendix-01-keywords.md:41
msgid "`ref` - Parameter passed implicitly returned at the end of a function"
msgstr "`ref` - Paramètre passé implicitement retourné à la fin d'une fonction"

#: src/appendix-01-keywords.md:42
msgid "`return` - Return from function"
msgstr "`return` - Retour de la fonction"

#: src/appendix-01-keywords.md:43
msgid "`struct` - Define a structure"
msgstr "`struct` - Définir une structure"

#: src/appendix-01-keywords.md:44
msgid "`trait` - Define a trait"
msgstr "\"caractère\" - Définir un caractère"

#: src/appendix-01-keywords.md:45
msgid "`true` - Boolean true literal"
msgstr "\"vrai\" - Booléen vrai littéral"

#: src/appendix-01-keywords.md:46
msgid "`type` - Define a type alias"
msgstr "`type` - Définir un alias de type"

#: src/appendix-01-keywords.md:47
msgid "`use` - Bring symbols into scope"
msgstr "`utilisation` - Apporter des symboles dans la portée"

#: src/appendix-01-keywords.md:48
msgid "`while` - loop conditionally based on the result of an expression"
msgstr ""
"`alors` - boucle conditionnellement basée sur le résultat d'une expression"

#: src/appendix-01-keywords.md:52
msgid "Loose Keywords"
msgstr "Mot-clé laissés en place"

#: src/appendix-01-keywords.md:54
msgid ""
"These keywords are associated with a specific behaviour, but can also be "
"used to define items."
msgstr ""
"Ces mots clés sont associés à un comportement spécifique, mais peuvent "
"également être utilisés pour définir des éléments."

#: src/appendix-01-keywords.md:56
msgid "`self` - Method subject"
msgstr "`self` - Sujet de la méthode"

#: src/appendix-01-keywords.md:57
msgid "`super` - Parent module of the current module"
msgstr "`super` - Module parent du module actuel"

#: src/appendix-01-keywords.md:61
msgid "Reserved Keywords"
msgstr "Mots clés réservés"

#: src/appendix-01-keywords.md:63
msgid ""
"These keywords aren't used yet, but they are reserved for future use. For "
"now, it is possible to use them to define items, although it is highly "
"recommended not to do so. The reasoning behind this recommendation is to "
"make current programs forward compatible with future versions of Cairo by "
"forbidding them to use these keywords."
msgstr ""
"Ces mots-clés ne sont pas encore utilisés, mais ils sont réservés pour une "
"utilisation future. Pour l'instant, il est possible de les utiliser pour "
"définir des éléments, bien qu'il soit fortement recommandé de ne pas le "
"faire. Le raisonnement derrière cette recommandation est de rendre les "
"programmes actuels compatibles avec les futures versions du Caire en leur "
"interdisant d'utiliser ces mots-clés."

#: src/appendix-01-keywords.md:68
msgid "`Self`"
msgstr "\"Soi-même\""

#: src/appendix-01-keywords.md:69
msgid "`do`"
msgstr "\"faire\""

#: src/appendix-01-keywords.md:70
msgid "`dyn`"
msgstr "\"Dyn\""

#: src/appendix-01-keywords.md:71
msgid "`for`"
msgstr "«pour»"

#: src/appendix-01-keywords.md:72
msgid "`hint`"
msgstr "'hant'"

#: src/appendix-01-keywords.md:73
msgid "`in`"
msgstr "\"en\""

#: src/appendix-01-keywords.md:74
msgid "`macro`"
msgstr "\"macro\""

#: src/appendix-01-keywords.md:75
msgid "`move`"
msgstr "Déplacer"

#: src/appendix-01-keywords.md:76
msgid "`static_assert`"
msgstr "`static_assert`"

#: src/appendix-01-keywords.md:77
msgid "`static`"
msgstr "\"statique\""

#: src/appendix-01-keywords.md:78
msgid "`try`"
msgstr "\"Essai\""

#: src/appendix-01-keywords.md:79
msgid "`typeof`"
msgstr "«type de»"

#: src/appendix-01-keywords.md:80
msgid "`unsafe`"
msgstr "\"insûre\""

#: src/appendix-01-keywords.md:81
msgid "`where`"
msgstr "\"où\""

#: src/appendix-01-keywords.md:82
msgid "`with`"
msgstr "\"avec\""

#: src/appendix-01-keywords.md:83
msgid "`yield`"
msgstr "\"rendement\""

#: src/appendix-01-keywords.md:87
msgid "Built-in Functions"
msgstr "Fonctions intégrées"

#: src/appendix-01-keywords.md:89
msgid ""
"The Cairo programming language provides several specific functions that "
"serve a special purpose. We will not cover all of them in this book, but "
"using the names of these functions as names of other items is not "
"recommended."
msgstr ""
"Le langage de programmation du Caire fournit plusieurs fonctions spécifiques "
"qui servent un but particulier. Nous ne les couvrirons pas toutes dans ce "
"livre, mais l'utilisation des noms de ces fonctions comme noms d'autres "
"éléments n'est pas recommandée."

#: src/appendix-01-keywords.md:91
msgid ""
"`assert` - This function checks a boolean expression, and if it evaluates to "
"false, it triggers the panic function."
msgstr ""
"`assert` - Cette fonction vérifie une expression booléenne, et si elle "
"évalue à faux, elle déclenche la fonction panique."

#: src/appendix-01-keywords.md:92
msgid ""
"`panic` - This function acknowledges the occurrence of an error and "
"terminates the program."
msgstr ""
"`panic` - Cette fonction reconnaît l'occurrence d'une erreur et met fin au "
"programme."

#: src/appendix-02-operators-and-symbols.md:1
msgid "Appendix B - Operators and Symbols"
msgstr "Annexe B - Opérateurs et symboles"

#: src/appendix-02-operators-and-symbols.md:3
msgid ""
"This appendix contains a glossary of Cairo's syntax, including operators and "
"other symbols that appear by themselves or in the context of paths, "
"generics, macros, attributes, comments, tuples, and brackets."
msgstr ""
"Cette annexe contient un glossaire de la syntaxe du Caire, y compris les "
"opérateurs et autres symboles qui apparaissent par eux-mêmes ou dans le "
"contexte de chemins, génériques, macros, attributs, commentaires, tuples et "
"crochets."

#: src/appendix-02-operators-and-symbols.md:5
msgid "Operators"
msgstr "Opérateurs"

#: src/appendix-02-operators-and-symbols.md:7
msgid ""
"Table B-1 contains the operators in Cairo, an example of how the operator "
"would appear in context, a short explanation, and whether that operator is "
"overloadable. If an operator is overloadable, the relevant trait to use to "
"overload that operator is listed."
msgstr ""
"Le tableau B-1 présente les opérateurs au Caire, un exemple de la façon dont "
"l'opérateur apparaîtrait dans son contexte, une brève explication et si cet "
"opérateur est surchargé. Si un opérateur est surchargé, la caractéristique "
"pertinente à utiliser pour surcharger cet opérateur est répertoriée."

#: src/appendix-02-operators-and-symbols.md:9
msgid "Operator"
msgstr "Opérateur"

#: src/appendix-02-operators-and-symbols.md:9
#: src/appendix-02-operators-and-symbols.md:55
#: src/appendix-02-operators-and-symbols.md:66
#: src/appendix-02-operators-and-symbols.md:76
#: src/appendix-02-operators-and-symbols.md:89
#: src/appendix-02-operators-and-symbols.md:120
#: src/appendix-02-operators-and-symbols.md:146
#: src/appendix-02-operators-and-symbols.md:154
#: src/appendix-02-operators-and-symbols.md:168
msgid "Explanation"
msgstr "Explication"

#: src/appendix-02-operators-and-symbols.md:9
msgid "Overloadable?"
msgstr "Surchargeable?"

#: src/appendix-02-operators-and-symbols.md:11
msgid "`!`"
msgstr "\"!\""

#: src/appendix-02-operators-and-symbols.md:11
msgid "`!expr`"
msgstr "'!expr'"

#: src/appendix-02-operators-and-symbols.md:11
msgid "Logical complement"
msgstr "Complément logique"

#: src/appendix-02-operators-and-symbols.md:11
msgid "`Not`"
msgstr "\"Pas\""

#: src/appendix-02-operators-and-symbols.md:12
msgid "`~`"
msgstr "\"~\""

#: src/appendix-02-operators-and-symbols.md:12
msgid "`~expr`"
msgstr "\"~expirer\""

#: src/appendix-02-operators-and-symbols.md:12
msgid "Bitwise NOT"
msgstr "N'EST PAS BITWUEL"

#: src/appendix-02-operators-and-symbols.md:12
msgid "`BitNot`"
msgstr "'BitPas'"

#: src/appendix-02-operators-and-symbols.md:13
msgid "`!=`"
msgstr "\"!=\""

#: src/appendix-02-operators-and-symbols.md:13
msgid "`expr != expr`"
msgstr "«expr!= expr»"

#: src/appendix-02-operators-and-symbols.md:13
msgid "Non-equality comparison"
msgstr "Comparaison de la non-égalité"

#: src/appendix-02-operators-and-symbols.md:13
#: src/appendix-02-operators-and-symbols.md:38
msgid "`PartialEq`"
msgstr "`Eqpartielle`"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`%`"
msgstr "«%»"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`expr % expr`"
msgstr "«expr % expr»"

#: src/appendix-02-operators-and-symbols.md:14
msgid "Arithmetic remainder"
msgstr "Reste arithmétique"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`Rem`"
msgstr "\"Rem\""

#: src/appendix-02-operators-and-symbols.md:15
msgid "`%=`"
msgstr "«%=»"

#: src/appendix-02-operators-and-symbols.md:15
msgid "`var %= expr`"
msgstr "«var %= expr»"

#: src/appendix-02-operators-and-symbols.md:15
msgid "Arithmetic remainder and assignment"
msgstr "Reliure arithmétique et affectation"

#: src/appendix-02-operators-and-symbols.md:15
msgid "`RemEq`"
msgstr "\"RemEq\""

#: src/appendix-02-operators-and-symbols.md:16
msgid "`&`"
msgstr "«&»"

#: src/appendix-02-operators-and-symbols.md:16
msgid "`expr & expr`"
msgstr "«expr & expr»"

#: src/appendix-02-operators-and-symbols.md:16
msgid "Bitwise AND"
msgstr "BISUEL ET"

#: src/appendix-02-operators-and-symbols.md:16
msgid "`BitAnd`"
msgstr "\"BitAnd\""

#: src/appendix-02-operators-and-symbols.md:17
msgid "`&&`"
msgstr "«&&»"

#: src/appendix-02-operators-and-symbols.md:17
msgid "`expr && expr`"
msgstr "«expr && expr»"

#: src/appendix-02-operators-and-symbols.md:17
msgid "Short-circuiting logical AND"
msgstr "Logique de court-circuit ET"

#: src/appendix-02-operators-and-symbols.md:18
#: src/appendix-02-operators-and-symbols.md:21
msgid "`*`"
msgstr "\"*\""

#: src/appendix-02-operators-and-symbols.md:18
msgid "`expr * expr`"
msgstr "\"expr\" expr\""

#: src/appendix-02-operators-and-symbols.md:18
msgid "Arithmetic multiplication"
msgstr "Multiplication arithmétique"

#: src/appendix-02-operators-and-symbols.md:18
msgid "`Mul`"
msgstr "\"Mul\""

#: src/appendix-02-operators-and-symbols.md:19
msgid "`*=`"
msgstr "\"*=\""

#: src/appendix-02-operators-and-symbols.md:19
msgid "`var *= expr`"
msgstr "'var *= expr`"

#: src/appendix-02-operators-and-symbols.md:19
msgid "Arithmetic multiplication and assignment"
msgstr "Multiplication arithmétique et affectation"

#: src/appendix-02-operators-and-symbols.md:19
msgid "`MulEq`"
msgstr "\"MulEq\""

#: src/appendix-02-operators-and-symbols.md:20
msgid "`@`"
msgstr "`@`"

#: src/appendix-02-operators-and-symbols.md:20
msgid "`@var`"
msgstr "`@var`"

#: src/appendix-02-operators-and-symbols.md:20
msgid "Snapshot"
msgstr "Capture instantanée"

#: src/appendix-02-operators-and-symbols.md:21
msgid "`*var`"
msgstr "\"*var\""

#: src/appendix-02-operators-and-symbols.md:21
msgid "Desnap"
msgstr "Desnapé"

#: src/appendix-02-operators-and-symbols.md:22
msgid "`+`"
msgstr "«+»"

#: src/appendix-02-operators-and-symbols.md:22
msgid "`expr + expr`"
msgstr "«expr + expr»"

#: src/appendix-02-operators-and-symbols.md:22
msgid "Arithmetic addition"
msgstr "Addition arithmétique"

#: src/appendix-02-operators-and-symbols.md:22
msgid "`Add`"
msgstr "`Ajouter`"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`+=`"
msgstr "`+=`"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`var += expr`"
msgstr "`var += expr`"

#: src/appendix-02-operators-and-symbols.md:23
msgid "Arithmetic addition and assignment"
msgstr "Addition arithmétique et affectation"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`AddEq`"
msgstr "`AddEq`"

#: src/appendix-02-operators-and-symbols.md:24
msgid "`,`"
msgstr "«,»"

#: src/appendix-02-operators-and-symbols.md:24
msgid "`expr, expr`"
msgstr "«expr, expr»"

#: src/appendix-02-operators-and-symbols.md:24
msgid "Argument and element separator"
msgstr "Argument et séparateur d'éléments"

#: src/appendix-02-operators-and-symbols.md:25
#: src/appendix-02-operators-and-symbols.md:26
msgid "`-`"
msgstr "«-»"

#: src/appendix-02-operators-and-symbols.md:25
msgid "`-expr`"
msgstr "\"-expr\""

#: src/appendix-02-operators-and-symbols.md:25
msgid "Arithmetic negation"
msgstr "Négation arithmétique"

#: src/appendix-02-operators-and-symbols.md:25
msgid "`Neg`"
msgstr "'Neg'"

#: src/appendix-02-operators-and-symbols.md:26
msgid "`expr - expr`"
msgstr "\"expr - expr\""

#: src/appendix-02-operators-and-symbols.md:26
msgid "Arithmetic subtraction"
msgstr "Soustraction arithmétique"

#: src/appendix-02-operators-and-symbols.md:26
msgid "`Sub`"
msgstr "`Sous`"

#: src/appendix-02-operators-and-symbols.md:27
msgid "`-=`"
msgstr "\"-=\""

#: src/appendix-02-operators-and-symbols.md:27
msgid "`var -= expr`"
msgstr "`var -= expr`"

#: src/appendix-02-operators-and-symbols.md:27
msgid "Arithmetic subtraction and assignment"
msgstr "Soustraction arithmétique et affectation"

#: src/appendix-02-operators-and-symbols.md:27
msgid "`SubEq`"
msgstr "\"Sous-Eq\""

#: src/appendix-02-operators-and-symbols.md:28
msgid "`->`"
msgstr "\"->\""

#: src/appendix-02-operators-and-symbols.md:28
msgid "`fn(...) -> type`, <code>\\|...\\| -> type</code>"
msgstr "`fn(...) -> type`, <code>\\-...\\--> type</code>"

#: src/appendix-02-operators-and-symbols.md:28
msgid "Function and closure return type"
msgstr "Type de retour de fonction et de fermeture"

#: src/appendix-02-operators-and-symbols.md:29
msgid "`.`"
msgstr "«...»"

#: src/appendix-02-operators-and-symbols.md:29
msgid "`expr.ident`"
msgstr "«expr.ident»"

#: src/appendix-02-operators-and-symbols.md:29
msgid "Member access"
msgstr "Accès des membres"

#: src/appendix-02-operators-and-symbols.md:30
msgid "`/`"
msgstr "\"/\""

#: src/appendix-02-operators-and-symbols.md:30
msgid "`expr / expr`"
msgstr "«expr / expr»"

#: src/appendix-02-operators-and-symbols.md:30
msgid "Arithmetic division"
msgstr "Division arithmétique"

#: src/appendix-02-operators-and-symbols.md:30
msgid "`Div`"
msgstr "\"Div\""

#: src/appendix-02-operators-and-symbols.md:31
msgid "`/=`"
msgstr "`/=`"

#: src/appendix-02-operators-and-symbols.md:31
msgid "`var /= expr`"
msgstr "`var /= expr`"

#: src/appendix-02-operators-and-symbols.md:31
msgid "Arithmetic division and assignment"
msgstr "Division arithmétique et affectation"

#: src/appendix-02-operators-and-symbols.md:31
msgid "`DivEq`"
msgstr "\"DivEq\""

#: src/appendix-02-operators-and-symbols.md:32
#: src/appendix-02-operators-and-symbols.md:33
msgid "`:`"
msgstr "«:»"

#: src/appendix-02-operators-and-symbols.md:32
msgid "`pat: type`, `ident: type`"
msgstr "`pat: type`, `ident: type`"

#: src/appendix-02-operators-and-symbols.md:32
msgid "Constraints"
msgstr "Contraintes"

#: src/appendix-02-operators-and-symbols.md:33
msgid "`ident: expr`"
msgstr "\"identique: expr\""

#: src/appendix-02-operators-and-symbols.md:33
msgid "Struct field initializer"
msgstr "Initialisateur de champ de structure"

#: src/appendix-02-operators-and-symbols.md:34
msgid "`;`"
msgstr "«;»"

#: src/appendix-02-operators-and-symbols.md:34
msgid "`expr;`"
msgstr "«expr;»"

#: src/appendix-02-operators-and-symbols.md:34
msgid "Statement and item terminator"
msgstr "Déclaration et terminateur d'articles"

#: src/appendix-02-operators-and-symbols.md:35
msgid "`<`"
msgstr "\"<\""

#: src/appendix-02-operators-and-symbols.md:35
msgid "`expr < expr`"
msgstr "`expr < expr`"

#: src/appendix-02-operators-and-symbols.md:35
msgid "Less than comparison"
msgstr "Moins que la comparaison"

#: src/appendix-02-operators-and-symbols.md:35
#: src/appendix-02-operators-and-symbols.md:36
#: src/appendix-02-operators-and-symbols.md:40
#: src/appendix-02-operators-and-symbols.md:41
msgid "`PartialOrd`"
msgstr "\"Ordonnance partielle\""

#: src/appendix-02-operators-and-symbols.md:36
msgid "`<=`"
msgstr "\"<=\""

#: src/appendix-02-operators-and-symbols.md:36
msgid "`expr <= expr`"
msgstr "`expr <= expr`"

#: src/appendix-02-operators-and-symbols.md:36
msgid "Less than or equal to comparison"
msgstr "Inférieur ou égal à la comparaison"

#: src/appendix-02-operators-and-symbols.md:37
msgid "`=`"
msgstr "\"=\""

#: src/appendix-02-operators-and-symbols.md:37
msgid "`var = expr`"
msgstr "«var = expr»"

#: src/appendix-02-operators-and-symbols.md:37
msgid "Assignment"
msgstr "Attribution"

#: src/appendix-02-operators-and-symbols.md:38
msgid "`==`"
msgstr "\"==\""

#: src/appendix-02-operators-and-symbols.md:38
msgid "`expr == expr`"
msgstr "\"Expr\". expr."

#: src/appendix-02-operators-and-symbols.md:38
msgid "Equality comparison"
msgstr "Comparaison entre les hommes et les femmes"

#: src/appendix-02-operators-and-symbols.md:39
msgid "`=>`"
msgstr "\"=>\""

#: src/appendix-02-operators-and-symbols.md:39
msgid "`pat => expr`"
msgstr "«pat => expr»"

#: src/appendix-02-operators-and-symbols.md:39
msgid "Part of match arm syntax"
msgstr "Partie de la syntaxe des bras de correspondance"

#: src/appendix-02-operators-and-symbols.md:40
msgid "`>`"
msgstr "\">\""

#: src/appendix-02-operators-and-symbols.md:40
msgid "`expr > expr`"
msgstr "«expr» expr»"

#: src/appendix-02-operators-and-symbols.md:40
msgid "Greater than comparison"
msgstr "Plus grande que la comparaison"

#: src/appendix-02-operators-and-symbols.md:41
msgid "`>=`"
msgstr "\">=\""

#: src/appendix-02-operators-and-symbols.md:41
msgid "`expr >= expr`"
msgstr "`expr >= expr`"

#: src/appendix-02-operators-and-symbols.md:41
msgid "Greater than or equal to comparison"
msgstr "Supérieur ou égal à la comparaison"

#: src/appendix-02-operators-and-symbols.md:42
msgid "`^`"
msgstr "'^'"

#: src/appendix-02-operators-and-symbols.md:42
msgid "`expr ^ expr`"
msgstr "«expr» expr»"

#: src/appendix-02-operators-and-symbols.md:42
msgid "Bitwise exclusive OR"
msgstr "Exclusivité bitwise OU"

#: src/appendix-02-operators-and-symbols.md:42
msgid "`BitXor`"
msgstr "\"BitXor\""

#: src/appendix-02-operators-and-symbols.md:43
msgid "<code>\\|</code>"
msgstr "<code>\\--</code>"

#: src/appendix-02-operators-and-symbols.md:43
msgid "<code>expr \\| expr</code>"
msgstr "<code>expr \\=\" expr</code>"

#: src/appendix-02-operators-and-symbols.md:43
msgid "Bitwise OR"
msgstr "Bitwise OU"

#: src/appendix-02-operators-and-symbols.md:43
msgid "`BitOr`"
msgstr "\"Bitor\""

#: src/appendix-02-operators-and-symbols.md:44
msgid "<code>\\|\\|</code>"
msgstr "<code>\\--\\--</code>"

#: src/appendix-02-operators-and-symbols.md:44
msgid "<code>expr \\|\\| expr</code>"
msgstr "<code>expr \\. \\. \\. \\. \\. expr</code>"

#: src/appendix-02-operators-and-symbols.md:44
msgid "Short-circuiting logical OR"
msgstr "Logique de court-circuit OU"

#: src/appendix-02-operators-and-symbols.md:45
msgid "`?`"
msgstr "\"? \""

#: src/appendix-02-operators-and-symbols.md:45
msgid "expr?"
msgstr "Expr?"

#: src/appendix-02-operators-and-symbols.md:45
msgid "Error propagation"
msgstr "Transmission des erreurs"

#: src/appendix-02-operators-and-symbols.md:47
msgid "<span class=\"caption\">Table B-1: Operators</span>"
msgstr "<span class=\"caption\">Tableau B-1: Opérateurs</span>"

#: src/appendix-02-operators-and-symbols.md:49
msgid "Non Operator Symbols"
msgstr "Symboles non opérateurs"

#: src/appendix-02-operators-and-symbols.md:51
msgid ""
"The following list contains all symbols that are not used as operators; that "
"is, they do not have the same behavior as a function or method call."
msgstr ""
"La liste suivante contient tous les symboles qui ne sont pas utilisés comme "
"opérateurs, c'est-à-dire qu'ils n'ont pas le même comportement qu'un appel "
"de fonction ou de méthode."

#: src/appendix-02-operators-and-symbols.md:53
msgid ""
"Table B-2 shows symbols that appear on their own and are valid in a variety "
"of locations."
msgstr ""
"Le tableau B-2 montre les symboles qui apparaissent seuls et qui sont "
"valides dans divers endroits."

#: src/appendix-02-operators-and-symbols.md:55
#: src/appendix-02-operators-and-symbols.md:66
#: src/appendix-02-operators-and-symbols.md:76
#: src/appendix-02-operators-and-symbols.md:89
#: src/appendix-02-operators-and-symbols.md:120
#: src/appendix-02-operators-and-symbols.md:146
#: src/appendix-02-operators-and-symbols.md:154
msgid "Symbol"
msgstr "Symbole"

#: src/appendix-02-operators-and-symbols.md:57
msgid "`..._u8`, `..._usize`, `..._bool`, etc."
msgstr "`..._u8`, `..._usize`, `..._bool`, etc."

#: src/appendix-02-operators-and-symbols.md:57
msgid "Numeric literal of specific type"
msgstr "Littéralement numérique de type spécifique"

#: src/appendix-02-operators-and-symbols.md:58
msgid "`\"...\"`"
msgstr "\"\"...\""

#: src/appendix-02-operators-and-symbols.md:58
msgid "String literal"
msgstr "Chaîne littérale"

#: src/appendix-02-operators-and-symbols.md:59
msgid "`'...'`"
msgstr "'''...''"

#: src/appendix-02-operators-and-symbols.md:59
msgid "Short string, 31 ASCII characters maximum"
msgstr "Chaîne courte, 31 caractères ASCII maximum"

#: src/appendix-02-operators-and-symbols.md:60
msgid "`_`"
msgstr "`_`"

#: src/appendix-02-operators-and-symbols.md:60
msgid "“Ignored” pattern binding"
msgstr "Reliure du motif -Ignoré-Ignoré-"

#: src/appendix-02-operators-and-symbols.md:62
msgid "<span class=\"caption\">Table B-2: Stand-Alone Syntax</span>"
msgstr ""
"<span class=\"caption\">Tableau B-2: Syntaxe de l'autonomie permanente</span>"

#: src/appendix-02-operators-and-symbols.md:64
msgid ""
"Table B-3 shows symbols that are used within the context of a module "
"hierarchy path to access an item."
msgstr ""
"Le tableau B-3 montre les symboles qui sont utilisés dans le contexte d'un "
"chemin hiérarchique de module pour accéder à un élément."

#: src/appendix-02-operators-and-symbols.md:68
msgid "`ident::ident`"
msgstr "«identifiant:ident»"

#: src/appendix-02-operators-and-symbols.md:68
msgid "Namespace path"
msgstr "Emplacement de l'espace de noms"

#: src/appendix-02-operators-and-symbols.md:69
msgid "`super::path`"
msgstr "\"super::chemin\""

#: src/appendix-02-operators-and-symbols.md:69
msgid "Path relative to the parent of the current module"
msgstr "Chemin par rapport au parent du module actuel"

#: src/appendix-02-operators-and-symbols.md:70
msgid "`trait::method(...)`"
msgstr "«caractère::méthode(...)»"

#: src/appendix-02-operators-and-symbols.md:70
msgid "Disambiguating a method call by naming the trait that defines it"
msgstr "Dissocier un appel de méthode en nommant le caractère qui le définit"

#: src/appendix-02-operators-and-symbols.md:72
msgid "<span class=\"caption\">Table B-3: Path-Related Syntax</span>"
msgstr "<span class=\"caption\">Tableau B-3: Syntaxe liée au chemin</span>"

#: src/appendix-02-operators-and-symbols.md:74
msgid ""
"Table B-4 shows symbols that appear in the context of using generic type "
"parameters."
msgstr ""
"Le tableau B-4 montre les symboles qui apparaissent dans le contexte de "
"l'utilisation de paramètres génériques de type."

#: src/appendix-02-operators-and-symbols.md:78
msgid "`path<...>`"
msgstr "'chemin<...>'"

#: src/appendix-02-operators-and-symbols.md:78
msgid "Specifies parameters to generic type in a type (e.g., `Array<u8>`)"
msgstr ""
"Spécifie les paramètres du type générique dans un type (par exemple, "
"`Array<u8>`)"

#: src/appendix-02-operators-and-symbols.md:79
msgid "`path::<...>`, `method::<...>`"
msgstr "'chemin: <...>`,'méthode: <...>`"

#: src/appendix-02-operators-and-symbols.md:79
msgid ""
"Specifies parameters to a generic type, function, or method in an "
"expression; often referred to as turbofish"
msgstr ""
"Spécifie les paramètres d'un type, d'une fonction ou d'une méthode générique "
"dans une expression; souvent appelé turbofish"

#: src/appendix-02-operators-and-symbols.md:80
msgid "`fn ident<...> ...`"
msgstr "\"Identifiez-vous \"...>...\""

#: src/appendix-02-operators-and-symbols.md:80
msgid "Define generic function"
msgstr "Définir la fonction générique"

#: src/appendix-02-operators-and-symbols.md:81
msgid "`struct ident<...> ...`"
msgstr "'identifiant de la structure<...>...`"

#: src/appendix-02-operators-and-symbols.md:81
msgid "Define generic structure"
msgstr "Définir la structure générique"

#: src/appendix-02-operators-and-symbols.md:82
msgid "`enum ident<...> ...`"
msgstr "\"identité de l'énum<...>...\""

#: src/appendix-02-operators-and-symbols.md:82
msgid "Define generic enumeration"
msgstr "Définir l'énumération générique"

#: src/appendix-02-operators-and-symbols.md:83
msgid "`impl<...> ...`"
msgstr "\"impl<...>...\""

#: src/appendix-02-operators-and-symbols.md:83
msgid "Define generic implementation"
msgstr "Définir la mise en œuvre générique"

#: src/appendix-02-operators-and-symbols.md:85
msgid "<span class=\"caption\">Table B-4: Generics</span>"
msgstr "<span class=\"caption\">Tableau B-4: génériques</span>"

#: src/appendix-02-operators-and-symbols.md:87
msgid ""
"Table B-5 shows symbols that appear in the context of specifying attributes "
"on an item."
msgstr ""
"Le tableau B-5 indique les symboles qui apparaissent dans le contexte de la "
"spécification des attributs d'un élément."

#: src/appendix-02-operators-and-symbols.md:91
msgid "`#[derive(...)]`"
msgstr "«#[dérivé(...)]»"

#: src/appendix-02-operators-and-symbols.md:91
msgid "Automatically implements a trait for a type"
msgstr "Implémente automatiquement un trait pour un type"

#: src/appendix-02-operators-and-symbols.md:92
msgid "`#[inline]`"
msgstr "`#[en ligne]`"

#: src/appendix-02-operators-and-symbols.md:92
msgid "Hint to the compiler to allow inlining of annotated function"
msgstr ""
"Alignez-vous sur le compilateur pour permettre l'inline de la fonction "
"annotée"

#: src/appendix-02-operators-and-symbols.md:93
msgid "`#[inline(always)]`"
msgstr "`#[en ligne(toujours)]`"

#: src/appendix-02-operators-and-symbols.md:93
msgid "Hint to the compiler to systematically inline annotated function"
msgstr "Astuce au compilateur à la fonction annotée systématiquement en ligne"

#: src/appendix-02-operators-and-symbols.md:94
msgid "`#[inline(never)]`"
msgstr "`#[inline(jamais)]`"

#: src/appendix-02-operators-and-symbols.md:94
msgid "Hint to the compiler to never inline annotated function"
msgstr "Alignez-vous sur le compilateur pour ne jamais inline fonction annotée"

#: src/appendix-02-operators-and-symbols.md:95
msgid "`#[must_use]`"
msgstr "`#[doit_utiliser]`"

#: src/appendix-02-operators-and-symbols.md:95
msgid ""
"Hint to the compiler that the return value of a function or a specific "
"returned type must be used"
msgstr ""
"Astuce au compilateur que la valeur de retour d'une fonction ou d'un type "
"renvoyé spécifique doit être utilisée"

#: src/appendix-02-operators-and-symbols.md:96
msgid "`#[generate_trait]`"
msgstr "`#[caractère_généré]`"

#: src/appendix-02-operators-and-symbols.md:96
msgid "Automatically generates a trait for an impl"
msgstr "Génére automatiquement un trait pour une impl"

#: src/appendix-02-operators-and-symbols.md:97
msgid "`#[available_gas(...)]`"
msgstr "`#[disponible_gaz(...)]`"

#: src/appendix-02-operators-and-symbols.md:97
msgid "Set the maximum amount of gas available to execute a function"
msgstr ""
"Définir la quantité maximale de gaz disponible pour exécuter une fonction"

#: src/appendix-02-operators-and-symbols.md:98
msgid "`#[panic_with('...', wrapper_name)]`"
msgstr "`#[panic_with('...', wrapper_name)]`"

#: src/appendix-02-operators-and-symbols.md:98
msgid ""
"Creates a wrapper for the annotated function which will panic if the "
"function returns `None` or `Err`, with the given data as the panic error"
msgstr ""
"Crée un wrapper pour la fonction annotée qui paniquera si la fonction "
"retourne `Aucune` ou `Err`, avec les données données données comme erreur de "
"panique"

#: src/appendix-02-operators-and-symbols.md:99
msgid "`#[test]`"
msgstr "`#[test]`"

#: src/appendix-02-operators-and-symbols.md:99
msgid "Describe a function as a test function"
msgstr "Décrivez une fonction comme une fonction de test"

#: src/appendix-02-operators-and-symbols.md:100
msgid "`#[cfg(...)]`"
msgstr "[cfg(...)]»"

#: src/appendix-02-operators-and-symbols.md:100
msgid ""
"Configuration attribute, especially used to configure a `tests` module with "
"`#[cfg(test)]`"
msgstr ""
"attribut de configuration, spécialement utilisé pour configurer un module "
"`tests` avec `#[cfg(test)]`"

#: src/appendix-02-operators-and-symbols.md:101
msgid "`#[should_panic]`"
msgstr "`#[should_panic]`"

#: src/appendix-02-operators-and-symbols.md:101
msgid "Specifies that a test function should necessarily panic"
msgstr "Spécifie qu'une fonction de test doit nécessairement paniquer"

#: src/appendix-02-operators-and-symbols.md:102
msgid "`#[starknet::contract]`"
msgstr "«#[starknet::contract]»"

#: src/appendix-02-operators-and-symbols.md:102
msgid "Defines a Starknet smart contract"
msgstr "Définit un contrat intelligent Starknet"

#: src/appendix-02-operators-and-symbols.md:103
msgid "`#[starknet::interface]`"
msgstr "«#[starknet::interface]»"

#: src/appendix-02-operators-and-symbols.md:103
msgid "Defines a Starknet interface"
msgstr "Définit une interface Starknet"

#: src/appendix-02-operators-and-symbols.md:104
msgid "`#[starknet::component]`"
msgstr "`#[starknet::composante]`"

#: src/appendix-02-operators-and-symbols.md:104
msgid "Defines a Starknet component"
msgstr "Définit un composant Starknet"

#: src/appendix-02-operators-and-symbols.md:105
msgid "`#[starknet::embeddable]`"
msgstr "`#[starknet::embeddable]`"

#: src/appendix-02-operators-and-symbols.md:105
msgid ""
"Defines an isolated embeddable implementation that can be injected in any "
"smart contract"
msgstr ""
"Définit une implémentation intégrable isolée qui peut être injectée dans "
"n'importe quel contrat intelligent"

#: src/appendix-02-operators-and-symbols.md:106
msgid "`#[embeddable_as(...)]`"
msgstr "«#[embeddable_as(...)]»"

#: src/appendix-02-operators-and-symbols.md:106
msgid "Defines an embeddable implementation inside a component"
msgstr "Définit une implémentation intégrable à l'intérieur d'un composant"

#: src/appendix-02-operators-and-symbols.md:107
msgid "`#[storage]`"
msgstr "`#[stockage]`"

#: src/appendix-02-operators-and-symbols.md:107
msgid "Defines the storage of a smart contract"
msgstr "Définit le stockage d'un contrat intelligent"

#: src/appendix-02-operators-and-symbols.md:108
msgid "`#[event]`"
msgstr "`#[événement]`"

#: src/appendix-02-operators-and-symbols.md:108
msgid "Defines an event in a smart contract"
msgstr "Définit un événement dans un contrat intelligent"

#: src/appendix-02-operators-and-symbols.md:109
msgid "`#[constructor]`"
msgstr "`#[constructeur]`"

#: src/appendix-02-operators-and-symbols.md:109
msgid "Defines the constructor in a smart contract"
msgstr "Définit le constructeur dans un contrat intelligent"

#: src/appendix-02-operators-and-symbols.md:110
msgid "`#[abi(embed_v0)]`"
msgstr "\"#[abi(embed_v0)]\""

#: src/appendix-02-operators-and-symbols.md:110
msgid ""
"Defines an implementation of a trait, exposing the functions of the impl as "
"entrypoints of a contract"
msgstr ""
"Définit une mise en œuvre d'un trait, exposant les fonctions de l'impl comme "
"points d'entrée d'un contrat"

#: src/appendix-02-operators-and-symbols.md:111
msgid "`#[abi(per_item)]`"
msgstr "`#[abi(par_item)]`"

#: src/appendix-02-operators-and-symbols.md:111
msgid ""
"Allows individual definition of the entrypoint type of functions inside an "
"impl"
msgstr ""
"Permet une définition individuelle du type de fonction de point d'entrée à "
"l'intérieur d'un impl"

#: src/appendix-02-operators-and-symbols.md:112
msgid "`#[external(v0)]`"
msgstr "`#[externe(v0)]`"

#: src/appendix-02-operators-and-symbols.md:112
msgid "Defines an external function when `#[abi(per_item)]` is used"
msgstr "Définit une fonction externe lorsque `#[abi(per_item)]` est utilisé"

#: src/appendix-02-operators-and-symbols.md:113
msgid "`#[flat]`"
msgstr "`#[flat]`"

#: src/appendix-02-operators-and-symbols.md:113
msgid ""
"Defines a enum variant of the `Event` enum that is not nested, ignoring the "
"variant name in the serialization process, very useful for composability "
"when using Starknet components"
msgstr ""
"Définit une variante enum de l'enum `Event` qui n'est pas imbriquée, "
"ignorant le nom de la variante dans le processus de sérialisation, très "
"utile pour la composabilité lors de l'utilisation des composants Starknet"

#: src/appendix-02-operators-and-symbols.md:114
msgid "`#[key]`"
msgstr "`#[clé]`"

#: src/appendix-02-operators-and-symbols.md:114
msgid ""
"Defines an indexed `Event` enum field, allowing for more efficient queries "
"and filtering of events"
msgstr ""
"Définit un champ enum `Event` indexé, permettant des requêtes et un filtrage "
"plus efficaces des événements"

#: src/appendix-02-operators-and-symbols.md:116
msgid "<span class=\"caption\">Table B-5: Attributes</span>"
msgstr "<span class=\"caption\">Tableau B-5: Attributs</span>"

#: src/appendix-02-operators-and-symbols.md:118
msgid ""
"Table B-6 shows symbols that appear in the context of calling or defining "
"macros."
msgstr ""
"Le tableau B-6 montre les symboles qui apparaissent dans le contexte de "
"l'appel ou de la définition des macros."

#: src/appendix-02-operators-and-symbols.md:122
msgid "`print!`"
msgstr "\"Empreinte!\""

#: src/appendix-02-operators-and-symbols.md:122
msgid "Inline printing"
msgstr "Impression en ligne"

#: src/appendix-02-operators-and-symbols.md:123
msgid "`println!`"
msgstr "\"Imprimé!\""

#: src/appendix-02-operators-and-symbols.md:123
msgid "Print on a new line"
msgstr "Imprimer sur une nouvelle ligne"

#: src/appendix-02-operators-and-symbols.md:124
msgid "`consteval_int!`"
msgstr "`consteval_int!`"

#: src/appendix-02-operators-and-symbols.md:124
msgid "Declare a constant that is the result of a computation of integers"
msgstr "Déclarer une constante qui est le résultat d'un calcul d'entiers"

#: src/appendix-02-operators-and-symbols.md:125
msgid "`array!`"
msgstr "\"Arrête!\""

#: src/appendix-02-operators-and-symbols.md:125
msgid "Instantiate and fill arrays"
msgstr "Tableaux instantanés et de remplissage"

#: src/appendix-02-operators-and-symbols.md:126
msgid "`panic!`"
msgstr "'panique!'"

#: src/appendix-02-operators-and-symbols.md:126
msgid ""
"Calls `panic` function and allows to provide a message error longer than 31 "
"characters"
msgstr ""
"Appele la fonction `panic` et permet de fournir une erreur de message "
"supérieure à 31 caractères"

#: src/appendix-02-operators-and-symbols.md:127
msgid "`assert!`"
msgstr "\"s'il vous plaît!\""

#: src/appendix-02-operators-and-symbols.md:127
msgid "Evaluates a Boolean and panics if `false`"
msgstr "Évalue un booléen et panique si `faux`"

#: src/appendix-02-operators-and-symbols.md:128
msgid "`assert_eq!`"
msgstr "`assert_eq!`"

#: src/appendix-02-operators-and-symbols.md:128
msgid "Evaluates an equality, and panics if not equal"
msgstr "Evalue une égalité, et panique si ce n'est égal"

#: src/appendix-02-operators-and-symbols.md:129
msgid "`assert_ne!`"
msgstr "'assert_ne!'"

#: src/appendix-02-operators-and-symbols.md:129
msgid "Evaluates an equality, and panics if equal"
msgstr "Evalue une égalité, et panique si égal"

#: src/appendix-02-operators-and-symbols.md:130
msgid "`assert_lt!`"
msgstr "'assert_lt!'"

#: src/appendix-02-operators-and-symbols.md:130
msgid "Evaluates a comparison, and panics if greater or equal"
msgstr "Évaluer une comparaison, et paniquer si plus ou égal"

#: src/appendix-02-operators-and-symbols.md:131
msgid "`assert_le!`"
msgstr "«assert_le!»"

#: src/appendix-02-operators-and-symbols.md:131
msgid "Evaluates a comparison, and panics if greater"
msgstr "Évalue une comparaison, et panique si plus"

#: src/appendix-02-operators-and-symbols.md:132
msgid "`assert_gt!`"
msgstr "`assert_gt!`"

#: src/appendix-02-operators-and-symbols.md:132
msgid "Evaluates a comparison, and panics if lower or equal"
msgstr "Évalue une comparaison, et panique si faible ou égale"

#: src/appendix-02-operators-and-symbols.md:133
msgid "`assert_ge!`"
msgstr "`assert_ge!`"

#: src/appendix-02-operators-and-symbols.md:133
msgid "Evaluates a comparison, and panics if lower"
msgstr "Évalue une comparaison, et panique si moins"

#: src/appendix-02-operators-and-symbols.md:134
msgid "`format!`"
msgstr "'format!'"

#: src/appendix-02-operators-and-symbols.md:134
msgid "Format a string and returns a `ByteArray` with the contents"
msgstr "Formater une chaîne et retourner un `ByteArray` avec le contenu"

#: src/appendix-02-operators-and-symbols.md:135
msgid "`write!`"
msgstr "\"Écris!\""

#: src/appendix-02-operators-and-symbols.md:135
msgid "Write formatted strings in a formatter"
msgstr "Écrire des chaînes formatées dans une matière"

#: src/appendix-02-operators-and-symbols.md:136
msgid "`writeln!`"
msgstr "C'est écrit!"

#: src/appendix-02-operators-and-symbols.md:136
msgid "Write formatted strings in a formatter on a new line"
msgstr "Écrire des chaînes formatées dans un format sur une nouvelle ligne"

#: src/appendix-02-operators-and-symbols.md:137
msgid "`get_dep_component!`"
msgstr "`get_dep_component!`"

#: src/appendix-02-operators-and-symbols.md:137
msgid ""
"Returns the requested component state from a snapshot of the state inside a "
"component"
msgstr ""
"Renvoie l'état du composant demandé à partir d'un instantané de l'état à "
"l'intérieur d'un composant"

#: src/appendix-02-operators-and-symbols.md:138
msgid "`get_dep_component_mut!`"
msgstr "`get_dep_component_mut!`"

#: src/appendix-02-operators-and-symbols.md:138
msgid ""
"Returns the requested component state from a reference of the state inside a "
"component"
msgstr ""
"Renvoie l'état du composant demandé à partir d'une référence de l'état à "
"l'intérieur d'un composant"

#: src/appendix-02-operators-and-symbols.md:139
msgid "`component!`"
msgstr "\"composante!\""

#: src/appendix-02-operators-and-symbols.md:139
msgid "Macro used in Starknet contracts to embed a component inside a contract"
msgstr ""
"Macro utilisé dans les contrats Starknet pour intégrer un composant dans un "
"contrat"

#: src/appendix-02-operators-and-symbols.md:142
msgid "<span class=\"caption\">Table B-6: Macros</span>"
msgstr "<span class=\"caption\">Tableau B-6: Macros</span>"

#: src/appendix-02-operators-and-symbols.md:144
msgid "Table B-7 shows symbols that create comments."
msgstr "Le tableau B-7 montre les symboles qui créent des commentaires."

#: src/appendix-02-operators-and-symbols.md:148
msgid "`//`"
msgstr "\"//\""

#: src/appendix-02-operators-and-symbols.md:148
msgid "Line comment"
msgstr "Commentaire de ligne"

#: src/appendix-02-operators-and-symbols.md:150
msgid "<span class=\"caption\">Table B-7: Comments</span>"
msgstr "<span class=\"caption\">Tableau B-7: Commentaires</span>"

#: src/appendix-02-operators-and-symbols.md:152
msgid "Table B-8 shows symbols that appear in the context of using tuples."
msgstr ""
"Le tableau B-8 montre les symboles qui apparaissent dans le contexte de "
"l'utilisation des tuples."

#: src/appendix-02-operators-and-symbols.md:156
msgid "`()`"
msgstr "«()»"

#: src/appendix-02-operators-and-symbols.md:156
msgid "Empty tuple (aka unit), both literal and type"
msgstr "Empty tuple (aka unit), à la fois littérale et de type"

#: src/appendix-02-operators-and-symbols.md:157
msgid "`(expr)`"
msgstr "`(expr)`"

#: src/appendix-02-operators-and-symbols.md:157
msgid "Parenthesized expression"
msgstr "Expression parenthésique"

#: src/appendix-02-operators-and-symbols.md:158
msgid "`(expr,)`"
msgstr "\"(expr,)\""

#: src/appendix-02-operators-and-symbols.md:158
msgid "Single-element tuple expression"
msgstr "Expression des tuples à élément unique"

#: src/appendix-02-operators-and-symbols.md:159
msgid "`(type,)`"
msgstr "\"(type,)\""

#: src/appendix-02-operators-and-symbols.md:159
msgid "Single-element tuple type"
msgstr "Type de tuple à élément unique"

#: src/appendix-02-operators-and-symbols.md:160
msgid "`(expr, ...)`"
msgstr "\"(expr,...)\""

#: src/appendix-02-operators-and-symbols.md:160
msgid "Tuple expression"
msgstr "Expression tuple"

#: src/appendix-02-operators-and-symbols.md:161
msgid "`(type, ...)`"
msgstr "\"(type,...)\""

#: src/appendix-02-operators-and-symbols.md:161
msgid "Tuple type"
msgstr "Type de tuple"

#: src/appendix-02-operators-and-symbols.md:162
msgid "`expr(expr, ...)`"
msgstr "\"expr(expr,...)\""

#: src/appendix-02-operators-and-symbols.md:162
msgid ""
"Function call expression; also used to initialize tuple `struct`s and tuple "
"`enum` variants"
msgstr ""
"Expression de l'appel de fonction; également utilisé pour initialiser les "
"variantes de tuple `struct`s et tuple `enum`"

#: src/appendix-02-operators-and-symbols.md:164
msgid "<span class=\"caption\">Table B-8: Tuples</span>"
msgstr "<span class=\"caption\">Tableau B-8: Tuples</span>"

#: src/appendix-02-operators-and-symbols.md:166
msgid "Table B-9 shows the contexts in which curly braces are used."
msgstr ""
"Le tableau B-9 montre les contextes dans lesquels les appareils bouclés sont "
"utilisés."

#: src/appendix-02-operators-and-symbols.md:168
msgid "Context"
msgstr "Contexte"

#: src/appendix-02-operators-and-symbols.md:170
msgid "`{...}`"
msgstr "\"{...}\""

#: src/appendix-02-operators-and-symbols.md:170
msgid "Block expression"
msgstr "Expression du bloc"

#: src/appendix-02-operators-and-symbols.md:171
msgid "`Type {...}`"
msgstr "\"Type {...}\""

#: src/appendix-02-operators-and-symbols.md:171
msgid "`struct` literal"
msgstr "\"struction\" littérale"

#: src/appendix-02-operators-and-symbols.md:173
msgid "<span class=\"caption\">Table B-9: Curly Braces</span>"
msgstr "<span class=\"caption\">Tableau B-9: Braces bouclés</span>"

#: src/appendix-03-derivable-traits.md:1
msgid "Appendix C - Derivable Traits"
msgstr "Annexe C - Traits dérivés"

#: src/appendix-03-derivable-traits.md:3
msgid ""
"In various places in the book, we’ve discussed the `derive` attribute, which "
"you can apply to a struct or enum definition. The `derive` attribute "
"generates code to implement a default trait on the type you’ve annotated "
"with the `derive` syntax."
msgstr ""
"Dans divers endroits du livre, nous avons discuté de l'attribut `derive`, "
"que vous pouvez appliquer à une définition de struct ou d'enum. L'attribut "
"`derive` génère du code pour implémenter un caractère par défaut sur le type "
"que vous avez annoté avec la syntaxe `derive`."

#: src/appendix-03-derivable-traits.md:5
msgid ""
"In this appendix, we provide a comprehensive reference detailing all the "
"traits in the standard library compatible with the `derive` attribute."
msgstr ""
"Dans cet appendice, nous fournissons une référence complète détaillant tous "
"les traits de la bibliothèque standard compatible avec l'attribut \"derive\"."

#: src/appendix-03-derivable-traits.md:7
msgid ""
"These traits listed here are the only ones defined by the core library that "
"can be implemented on your types using `derive`. Other traits defined in the "
"standard library don’t have sensible default behavior, so it’s up to you to "
"implement them in a way that makes sense for what you’re trying to "
"accomplish."
msgstr ""
"Ces traits listés ici sont les seuls définis par la bibliothèque de base qui "
"peut être implémenté sur vos types en utilisant `derive`. D'autres traits "
"définis dans la bibliothèque standard n'ont pas de comportement par défaut "
"sensé, donc il est à vous de les implémenter d'une manière qui a un sens "
"pour ce que vous essayez d'accomplir."

#: src/appendix-03-derivable-traits.md:9
msgid "Drop and Destruct"
msgstr "Détruire et laisser tomber"

#: src/appendix-03-derivable-traits.md:11
msgid ""
"When moving out of scope, variables need to be moved first. This is where "
"the `Drop` trait intervenes. You can find more details about its usage [here]"
"(ch04-01-what-is-ownership.md#no-op-destruction-the-drop-trait)."
msgstr ""
"Lorsque vous quittez le champ d'application, les variables doivent d'abord "
"être déplacées. C'est là que le caractère `Drop` intervient. Vous pouvez "
"trouver plus de détails sur son utilisation [ici](ch04-01- what-is-ownership."
"md#no-op-destruction-the-drop-trait)."

#: src/appendix-03-derivable-traits.md:13
msgid ""
"Moreover, Dictionaries need to be squashed before going out of scope. "
"Calling the `squash` method on each of them manually can quickly become "
"redundant. `Destruct` trait allows Dictionaries to be automatically squashed "
"when they get out of scope. You can also find more information about "
"`Destruct` [here](ch04-01-what-is-ownership.md#destruction-with-a-side-"
"effect-the-destruct-trait)."
msgstr ""
"En outre, les dictionnaires doivent être écrasés avant de sortir de la "
"portée. Appeler la méthode `squash` sur chacun d'eux manuellement peut "
"rapidement devenir redondant. `Destruct` trait permet aux Dictionnaires "
"d'être automatiquement écrasés quand ils sortent de la portée. Vous pouvez "
"également trouver plus d'informations sur `Destruct` [ici](ch04-01- what-is-"
"ownership.md#destruction-with-a-side-effect-the-destruct-trait)."

#: src/appendix-03-derivable-traits.md:15
msgid "`Clone` and `Copy` for Duplicating Values"
msgstr "`Clone` et `Copier` pour la duplication des valeurs"

#: src/appendix-03-derivable-traits.md:17
msgid ""
"The `Clone` trait provides the functionality to explicitly create a deep "
"copy of a value."
msgstr ""
"Le caractère `Clone` fournit la fonctionnalité pour créer explicitement une "
"copie profonde d'une valeur."

#: src/appendix-03-derivable-traits.md:19
msgid ""
"Deriving `Clone` implements the `clone` method, which, in turn, calls clone "
"on each of the type's components. This means all the fields or values in the "
"type must also implement `Clone` to derive `Clone`."
msgstr ""
"Dériver `Clone` implémente la méthode `clone` qui, à son tour, appelle clone "
"sur chacun des composants du type. Cela signifie que tous les champs ou "
"valeurs du type doivent également implémenter `Clone` pour dériver `Clone`."

#: src/appendix-03-derivable-traits.md:21
msgid "Here is a simple example:"
msgstr "Voici un exemple simple:"

#: src/appendix-03-derivable-traits.md:32
#: src/appendix-03-derivable-traits.md:50
msgid "\"Not equal\""
msgstr "\"Pas égal\""

#: src/appendix-03-derivable-traits.md:36
msgid ""
"The `Copy` trait allows for the duplication of values. You can derive `Copy` "
"on any type whose parts all implement `Copy`."
msgstr ""
"Le caractère `Copy` permet la duplication des valeurs. Vous pouvez dériver "
"`Copy` sur tout type dont les parties implémentent `Copy`."

#: src/appendix-03-derivable-traits.md:49
msgid "// Copy Trait prevents first_struct from moving into second_struct\n"
msgstr ""
"// Copy Trait empêche la première_struct de se déplacer dans la "
"seconde_struct\n"

#: src/appendix-03-derivable-traits.md:51
msgid "\"Not Equal\""
msgstr "\"Pas égal\""

#: src/appendix-03-derivable-traits.md:55
msgid "`Debug` for Printing and Debugging"
msgstr "`Debug` pour l`impression et le débogage"

#: src/appendix-03-derivable-traits.md:57
msgid ""
"The `Debug` trait enables debug formatting in format strings, which you "
"indicate by adding `:?` within `{}` placeholders."
msgstr ""
"Le caractère `Debug` permet le formatage debug dans les chaînes de format, "
"que vous indiquez en ajoutant `:?` dans `{}` placeholders."

#: src/appendix-03-derivable-traits.md:59
msgid ""
"It allows you to print instances of a type for debugging purposes, so you "
"and other programmers using this type can inspect an instance at a "
"particular point in a program’s execution."
msgstr ""
"Il vous permet d'imprimer des instances d'un type à des fins de débogage, de "
"sorte que vous et d'autres programmeurs utilisant ce type pouvez inspecter "
"une instance à un point particulier dans une exécution de programme."

#: src/appendix-03-derivable-traits.md:61
msgid ""
"For example, if you want to print the value of a variable of type `Point`, "
"you can do it as follows:"
msgstr ""
"Par exemple, si vous voulez imprimer la valeur d'une variable de type "
"`Point`, vous pouvez le faire comme suit :"

#: src/appendix-03-derivable-traits.md:72
msgid "\"{:?}\""
msgstr "\"{:?}\""

#: src/appendix-03-derivable-traits.md:81
msgid ""
"The `Debug` trait is required, for example, when using the `assert_xx!` "
"macros in tests. Theses macros print the values of instances given as "
"arguments if the equality or comparison assertion fails so programmers can "
"see why the two instances weren’t equal."
msgstr ""
"Le caractère `Debug` est requis, par exemple, lors de l'utilisation des "
"macros `assert_xx!` dans les tests. Ces macros impriment les valeurs des "
"instances données comme arguments si l'affirmation d'égalité ou de "
"comparaison échoue de sorte que les programmeurs puissent voir pourquoi les "
"deux instances n'étaient pas égales."

#: src/appendix-03-derivable-traits.md:83
msgid "`Default` for Default Values"
msgstr "`Par défaut` pour les valeurs par défaut"

#: src/appendix-03-derivable-traits.md:85
msgid ""
"The `Default` trait allows creation of a default value of a type. The most "
"common default value is zero. All primitive types in the standard library "
"implement `Default`."
msgstr ""
"Le caractère `Default` permet la création d'une valeur par défaut d'un type. "
"La valeur par défaut la plus courante est zéro. Tous les types primitifs de "
"la bibliothèque standard implémentent `Default`."

#: src/appendix-03-derivable-traits.md:87
msgid ""
"If you want to derive `Default` on a composite type, each of its elements "
"must already implement `Default`. If you have an [`enum`](ch06-01-enums.md) "
"type, you must declare its default value by using the `#[default]` attribute "
"on one of its variants."
msgstr ""
"Si vous voulez dériver `Default` sur un type composite, chacun de ses "
"éléments doit déjà implémenter `Default`. Si vous avez un type [`enum`]"
"(ch06-01-enums.md), vous devez déclarer sa valeur par défaut en utilisant "
"l`attribut `#[default]` sur l`une de ses variantes."

#: src/appendix-03-derivable-traits.md:89
msgid "An example:"
msgstr "Un exemple:"

#: src/appendix-03-derivable-traits.md:108
msgid "\"item1 mismatch\""
msgstr "\"inadéquation de l'article 1\""

#: src/appendix-03-derivable-traits.md:109
msgid "\"item2 mismatch\""
msgstr "\"inadéquation de l'article 2\""

#: src/appendix-03-derivable-traits.md:112
msgid "\"case mismatch\""
msgstr "\"cas d'inadéquation\""

#: src/appendix-03-derivable-traits.md:116
msgid "`PartialEq` for Equality Comparisons"
msgstr "< < PartialEq > > pour les comparaisons en matière d'égalité"

#: src/appendix-03-derivable-traits.md:118
msgid ""
"The `PartialEq` trait allows for comparison between instances of a type for "
"equality, thereby enabling the `==` and `!=` operators."
msgstr ""
"Le caractère `PartialEq` permet une comparaison entre les instances d'un "
"type d'égalité, permettant ainsi les opérateurs `==` et `!=`."

#: src/appendix-03-derivable-traits.md:120
msgid ""
"When `PartialEq` is derived on structs, two instances are equal only if all "
"their fields are equal; they are not equal if any field is different. When "
"derived for enums, each variant is equal to itself and not equal to the "
"other variants."
msgstr ""
"Lorsque `PartialEq` est dérivé sur structs, deux instances ne sont égales "
"que si tous leurs champs sont égaux; elles ne sont pas égales si un champ "
"est différent. Lorsqu'il est dérivé pour les enums, chaque variante est "
"égale à elle-même et non pas égale aux autres variantes."

#: src/appendix-03-derivable-traits.md:122
msgid ""
"You can write your own implementation of the `PartialEq` trait for your "
"type, if you can't derive it or if you want to implement your custom rules. "
"In the following example, we write an implementation for `PartialEq` in "
"which we consider that two rectangles are equal if they have the same area:"
msgstr ""
"Vous pouvez écrire votre propre implémentation du caractère `PartialEq` pour "
"votre type, si vous ne pouvez pas le dériver ou si vous voulez implémenter "
"vos règles personnalisées. Dans l'exemple suivant, nous écrivons une "
"implémentation pour `PartialEq` dans laquelle nous considérons que deux "
"rectangles sont égaux s'ils ont la même zone :"

#: src/appendix-03-derivable-traits.md:145
msgid "\"Are rect1 and rect2 equal? {}\""
msgstr "\"Est-ce que rect1 et rect2 sont égaux? {}\""

#: src/appendix-03-derivable-traits.md:149
msgid ""
"The `PartialEq` trait is required when using the `assert_eq!` macro in "
"tests, which needs to be able to compare two instances of a type for "
"equality."
msgstr ""
"Le caractère `PartialEq` est requis lors de l'utilisation de la macro "
"`assert_eq!` dans les tests, qui doit pouvoir comparer deux instances d'un "
"type pour l'égalité."

#: src/appendix-03-derivable-traits.md:162
msgid "\"Structs are different\""
msgstr "\"Les structures sont différentes\""

#: src/appendix-03-derivable-traits.md:166
msgid "Serializing with `Serde`"
msgstr "Serializing avec `Serde`"

#: src/appendix-03-derivable-traits.md:168
msgid ""
"`Serde` provides trait implementations for `serialize` and `deserialize` "
"functions for data structures defined in your crate. It allows you to "
"transform your structure into an array (or the opposite)."
msgstr ""
"`Serde` fournit des implémentations de caractères pour les fonctions "
"`sérialize` et `désérialize` pour les structures de données définies dans "
"votre caisse. Il vous permet de transformer votre structure en tableau (ou "
"inversement)."

#: src/appendix-03-derivable-traits.md:170
msgid ""
"**[Serialization](https://en.wikipedia.org/wiki/Serialization)** is a "
"process of transforming data structures into a format that can be easily "
"stored or transmitted. Let's say you are running a program and would like to "
"persist its state to be able to resume it later. To do this, you could take "
"each of the objects your program is using and save their information, for "
"example in a file. This is a simplified version of serialization. Now if you "
"want to resume your program with this saved state, you would perform "
"**deserialization**, which means loading the state of the objects from the "
"saved source."
msgstr ""
"**[Serialization](https://en.wikipedia.org/wiki/Serialization)** est un "
"processus de transformation des structures de données en un format qui peut "
"être facilement stocké ou transmis. Supposons que vous exécutez un programme "
"et que vous vouliez persister dans son état pour pouvoir le reprendre plus "
"tard. Pour ce faire, vous pouvez prendre chacun des objets que votre "
"programme utilise et enregistre leurs informations, par exemple dans un "
"fichier. Il s'agit d'une version simplifiée de serialization. Maintenant, si "
"vous voulez reprendre votre programme avec cet état sauvegardé, vous "
"effectuerez **désérialisation**, ce qui signifie charger l'état des objets à "
"partir de la source sauvegardée."

#: src/appendix-03-derivable-traits.md:172
msgid "For example:"
msgstr "Par exemple:"

#: src/appendix-03-derivable-traits.md:190
msgid "If you run the `main` function, the output will be:"
msgstr "Si vous exécutez la fonction `main`, la sortie sera :"

#: src/appendix-03-derivable-traits.md:196
msgid ""
"We can see here that our struct `A` has been serialized into the output "
"array. Note that the `serialize` function takes as argument a snapshot of "
"the type you want to convert into an array. This is why deriving `Drop` for "
"`A` is required here, as the `main` function keeps ownership of the "
"`first_struct` struct."
msgstr ""
"Nous pouvons voir ici que notre struct `A` a été sérialisé dans le tableau "
"de sortie. Notez que la fonction `serialize` prend comme argument un "
"instantané du type que vous voulez convertir en un tableau. C'est pourquoi "
"dérivant `Drop` pour `A` est nécessaire ici, car la fonction `main` garde la "
"propriété de la struct `first_struct`."

#: src/appendix-03-derivable-traits.md:198
msgid ""
"Also, we can use the `deserialize` function to convert the serialized array "
"back into our `A` struct."
msgstr ""
"En outre, nous pouvons utiliser la fonction `désérialize` pour convertir le "
"tableau sérialisé de nouveau dans notre `A` struct."

#: src/appendix-03-derivable-traits.md:218
msgid ""
"Here we are converting a serialized array span back to the struct `A`. "
"`deserialize` returns an `Option` so we need to unwrap it. When using "
"`deserialize` we also need to specify the type we want to deserialize into."
msgstr ""
"Ici, nous convertissons un tableau sérialisé s'étend en arrière à la "
"structure `A`. `désérialize` retourne une `Option` afin que nous ayons "
"besoin de le déballer. Lorsque nous utilisons `désérialize` nous devons "
"également spécifier le type dans lequel nous voulons désérialiser."

#: src/appendix-03-derivable-traits.md:220
msgid "Hashing with `Hash`"
msgstr "Hashing avec \"Hash\""

#: src/appendix-03-derivable-traits.md:222
msgid ""
"It is possible to derive the `Hash` trait on structs and enums. This allows "
"them to be hashed easily using any available hash function. For a struct or "
"an enum to derive the `Hash` attribute, all fields or variants need to be "
"hashable themselves."
msgstr ""
"Il est possible de dériver le caractère `Hash` sur les structures et les "
"enums. Cela leur permet d'être hashés facilement en utilisant n'importe "
"quelle fonction de hachage disponible. Pour une structure ou un enum pour "
"dériver l'attribut `Hash`, tous les champs ou variantes doivent être "
"hashables eux-mêmes."

#: src/appendix-03-derivable-traits.md:224
msgid ""
"You can refer to the [Hashes section](ch11-04-hash.md) to get more "
"information about how to hash complex data types."
msgstr ""
"Vous pouvez vous référer à la section [Hashes](ch11-04-hash.md) pour obtenir "
"plus d'informations sur la façon de hacher des types de données complexes."

#: src/appendix-03-derivable-traits.md:226
msgid "Starknet Storage with `starknet::Store`"
msgstr "Stockage Starknet avec `starknet::Store`"

#: src/appendix-03-derivable-traits.md:228
msgid ""
"The `starknet::Store` trait is relevant only when building on [Starknet]"
"(ch13-00-introduction-to-starknet-smart-contracts.md). It allows for a type "
"to be used in smart contract storage by automatically implementing the "
"necessary read and write functions."
msgstr ""
"Le caractère `starknet::Store` n'est pertinent que lorsqu'il s'agit de "
"construire sur [Starknet] (ch13-00-introduction-to-starknet-smart-contracts."
"md). Il permet d'utiliser un type dans le stockage smart contract en "
"implémentant automatiquement les fonctions de lecture et d'écriture "
"nécessaires."

#: src/appendix-03-derivable-traits.md:230
msgid ""
"You can find detailed information about the inner workings of Starknet "
"storage in the [Contract storage section](ch14-01-contract-storage.md)."
msgstr ""
"Vous trouverez des informations détaillées sur le fonctionnement intérieur "
"du stockage Starknet dans la section [Contract stockage] (ch14-01-contract-"
"stockage.md)."

#: src/appendix-04-cairo-prelude.md:1
msgid "Appendix D - The Cairo Prelude"
msgstr "Annexe D - Prélude du Caire"

#: src/appendix-04-cairo-prelude.md:3
msgid "Prelude"
msgstr "Prélude"

#: src/appendix-04-cairo-prelude.md:5
msgid ""
"The Cairo prelude is a collection of commonly used modules, functions, data "
"types, and traits that are automatically brought into scope of every module "
"in a Cairo crate without needing explicit import statements. Cairo's prelude "
"provides the basic building blocks developers need to start Cairo programs "
"and writing smart contracts."
msgstr ""
"Le prélude du Caire est une collection de modules, de fonctions, de types de "
"données et de traits couramment utilisés qui sont automatiquement introduits "
"dans la portée de chaque module dans une caisse du Caire sans avoir besoin "
"de déclarations d'importation explicites. Le prélude du Caire fournit les "
"éléments de base dont les développeurs ont besoin pour démarrer les "
"programmes du Caire et écrire des contrats intelligents."

#: src/appendix-04-cairo-prelude.md:11
msgid ""
"The core library prelude is defined in the _[lib.cairo](https://github.com/"
"starkware-libs/cairo/blob/main/corelib/src/lib.cairo)_ file of the corelib "
"crate and contains Cairo's primitive data types, traits, operators, and "
"utility functions. This includes:"
msgstr ""
"Le prélude de la bibliothèque centrale est défini dans le fichier _[lib."
"cairo](https://github.com/starkware-libs/cairo/blob/main/corelib/src/lib."
"cairo)_ de la caisse du noyau et contient les types de données primitives, "
"les traits, les opérateurs et les fonctions d'utilité du Caire."

#: src/appendix-04-cairo-prelude.md:15
msgid "Data types: integers, bools, arrays, dicts, etc."
msgstr "Types de données: entiers, bools, tableaux, dictons, etc."

#: src/appendix-04-cairo-prelude.md:16
msgid ""
"Traits: behaviors for arithmetic, comparison, and serialization operations"
msgstr ""
"Traits : comportements pour les opérations d'arithmétique, de comparaison et "
"de sérialisation"

#: src/appendix-04-cairo-prelude.md:17
msgid "Operators: arithmetic, logical, bitwise"
msgstr "Opérateurs: arithmétique, logique, bitwise"

#: src/appendix-04-cairo-prelude.md:18
msgid "Utility functions - helpers for arrays, maps, boxing, etc."
msgstr "Fonctions Utilitaires - helpers for arrays, maps, boxing, etc."

#: src/appendix-04-cairo-prelude.md:20
msgid ""
"The core library prelude delivers the fundamental programming constructs and "
"operations needed for basic Cairo programs, without requiring the explicit "
"import of elements. Since the core library prelude is automatically "
"imported, its contents are available for use in any Cairo crate without "
"explicit imports. This prevents repetition and provides a better devX. This "
"is what allows you to use `ArrayTrait::append()` or the `Default` trait "
"without bringing them explicitly into scope."
msgstr ""
"Le prélude de base de la bibliothèque fournit les constructions et les "
"opérations de programmation fondamentales nécessaires pour les programmes de "
"base du Caire, sans exiger l'importation explicite d'éléments. Puisque le "
"prélude de base de la bibliothèque est automatiquement importé, son contenu "
"est disponible pour une utilisation dans n'importe quelle caisse du Caire "
"sans importation explicite. Cela empêche la répétition et fournit un "
"meilleur devX. C'est ce qui vous permet d'utiliser `ArrayTrait::append()` ou "
"le caractère `Default` sans les introduire explicitement dans la portée."

#: src/appendix-04-cairo-prelude.md:28
msgid ""
"You can choose which prelude to use. For example, adding `edition = "
"\"2023_11\"` in the _Scarb.toml_ configuration file will load the prelude "
"from November 2023. Note that when you create a new project using `scarb "
"new` command, the _Scarb.toml_ file will automatically include `edition = "
"\"2023_11\"`."
msgstr ""
"Vous pouvez choisir le prélude à utiliser. Par exemple, ajouter `edition = "
"\"2023_11\"` dans le fichier de configuration _scarb.toml_ chargera le "
"prélude à partir de novembre 2023. Notez que lorsque vous créez un nouveau "
"projet en utilisant la commande `scarb new`, le fichier _scarb.toml_ "
"comprendra automatiquement `edition = \"2023_11\"`."

#: src/appendix-04-cairo-prelude.md:30
msgid "The compiler currently exposes 2 different versions of the prelude:"
msgstr "Le compilateur expose actuellement 2 versions différentes du prélude:"

#: src/appendix-04-cairo-prelude.md:32
msgid ""
"A general version, with a lot of traits that are made available, "
"corresponding to `edition = \"2023_01\"`."
msgstr ""
"Une version générale, avec beaucoup de traits qui sont mis à disposition, "
"correspondant à `édition = \"2023_01\"`."

#: src/appendix-04-cairo-prelude.md:33
msgid ""
"A restricted version, including the most essential traits needed for general "
"Cairo programming, corresponding to `edition = 2023_11`."
msgstr ""
"Une version restreinte, comprenant les traits les plus essentiels "
"nécessaires à la programmation générale du Caire, correspondant à \"édition "
"= 2023_11\"."

#: src/appendix-05-common-error-messages.md:1
msgid "Appendix E - Common Error Messages"
msgstr "Annexe E - Messages d'erreur communs"

#: src/appendix-05-common-error-messages.md:3
msgid ""
"You might encounter error messages when writing Cairo code. Some of them "
"occur very frequently, which is why we will be listing the most common error "
"messages in this appendix to help you resolve common issues."
msgstr ""
"Vous pourriez rencontrer des messages d'erreur lors de l'écriture du code du "
"Caire. Certains d'entre eux se produisent très fréquemment, c'est pourquoi "
"nous allons lister les messages d'erreur les plus courants dans cette annexe "
"pour vous aider à résoudre des problèmes communs."

#: src/appendix-05-common-error-messages.md:5
msgid ""
"`Variable not dropped.`: this error message means that you are trying to "
"make a variable with a type that do not implement the `Drop` trait go out of "
"scope, withtout destroying it. Make sure that variables that need to be "
"dropped at the end of the execution of a function implement the `Drop` trait "
"or the `Destruct` trait. See [Ownership](ch04-01-what-is-ownership."
"md#destroying-values---example-with-feltdict) section."
msgstr ""
"`Variable not labd.`: ce message d'erreur signifie que vous essayez de faire "
"une variable avec un type qui n'implémente pas le caractère `Drop` sortir de "
"la portée, sans la détruire. Assurez-vous que les variables qui doivent être "
"abandonnées à la fin de l'exécution d'une fonction implémentent le caractère "
"`Drop` ou le caractère `Destruct`. Voir [Ownership](ch04-01- what-is-"
"ownership.md#destroying-values---example-with-feltdict) section."

#: src/appendix-05-common-error-messages.md:7
msgid ""
"`Variable was previously moved.`: this error message means that you are "
"trying to use a variable whose ownership has already been transferred to "
"another function. When a variable doesn't implement the `Copy` trait, it is "
"passed by value to functions, and ownership of the variable is transferred "
"to the function. Such a variable cannot be used anymore in the current "
"context after its ownership has been transferred. It is often useful to use "
"the `clone` method in this situation."
msgstr ""
"`Variable a été précédemment déplacé.`: ce message d'erreur signifie que "
"vous essayez d'utiliser une variable dont la propriété a déjà été transférée "
"à une autre fonction. Lorsqu'une variable n'implémente pas le caractère "
"`Copie`, elle est transmise par valeur aux fonctions, et la propriété de la "
"variable est transférée à la fonction. Une telle variable ne peut plus être "
"utilisée dans le contexte actuel après que sa propriété a été transférée. Il "
"est souvent utile d'utiliser la méthode `clone` dans cette situation."

#: src/appendix-05-common-error-messages.md:9
msgid ""
"`error: Trait has no implementation in context: core::fmt::Display::"
"<package_name::struct_name>`: this error message is encountered if you try "
"to print an instance of a custom data type with `{}` placeholders in a "
"`print!` or `println!` macro. To mitigate this issue, you need to either "
"manually implement the `Display` trait for your type, or use the `Debug` "
"trait by applying `derive(Debug)` to your type, allowing to print your "
"instance by adding `:?` in `{}` placeholders."
msgstr ""
"`error: Trait n'a pas d'implémentation dans le contexte: core::fmt::Display::"
"<package_name::struct_name>`: ce message d'erreur est rencontré si vous "
"essayez d'imprimer une instance d'un type de données personnalisé avec `{}` "
"placeholders dans une macro `print!` ou `println!`. Pour atténuer ce "
"problème, vous devez soit implémenter manuellement le caractère `Display` "
"pour votre type, soit utiliser le caractère `Debug` en appliquant "
"`derive(Debug)` à votre type, permettant d'imprimer votre instance en "
"ajoutant `:?` dans `{}` placeholders."

#: src/appendix-05-common-error-messages.md:11
msgid ""
"`Got an exception while executing a hint: Hint Error: Failed to deserialize "
"param #x.`: this error means that the execution failed because an entrypoint "
"was called without the expected arguments. Make sure that the arguments you "
"provide when calling an entrypoint are correct. There is a classic issue "
"with `u256` variables, which are actually structs of 2 `u128`. Therefore, "
"when calling a function that takes a `u256` as argument, you need to pass 2 "
"values."
msgstr ""
"`Got une exception lors de l'exécution d'un indice: Hint Error: Failed to "
"déserialize param #x.`: cette erreur signifie que l'exécution a échoué parce "
"qu'un point d'entrée a été appelé sans les arguments attendus. Assurez-vous "
"que les arguments que vous fournissez lors de l'appel d'un point d'entrée "
"sont corrects. Il y a un problème classique avec les variables `u256`, qui "
"sont en fait des structs de 2 `u128`. Par conséquent, lorsque vous appelez "
"une fonction qui prend un `u256` comme argument, vous devez passer 2 valeurs."

#: src/appendix-05-common-error-messages.md:13
msgid ""
"`Item path::item is not visible in this context.`: this error message lets "
"us know that the path to bring an item into scope is correct, but there is a "
"vibility issue. In cairo, all items are private to parent modules by "
"default. To resolve this issue, make sure that all the modules on the path "
"to items and items themselves are declared with `pub(crate)` or `pub` to "
"have access to them."
msgstr ""
"`Item path::item n'est pas visible dans ce contexte.`: ce message d'erreur "
"nous permet de savoir que le chemin pour introduire un élément dans la "
"portée est correct, mais il y a un problème de vabilité. Dans cairo, tous "
"les éléments sont privés aux modules parent par défaut. Pour résoudre ce "
"problème, assurez-vous que tous les modules sur le chemin vers les éléments "
"et les éléments eux-mêmes sont déclarés avec `pub(crate)` ou `pub` pour y "
"avoir accès."

#: src/appendix-05-common-error-messages.md:15
msgid ""
"`Identifier not found.`: this error message is a bit aspecific but might "
"indicate that:"
msgstr ""
"`Identificateur non trouvé.`: ce message d'erreur est un peu spécifique mais "
"pourrait indiquer que:"

#: src/appendix-05-common-error-messages.md:16
msgid ""
"A variable is being used before it has been declared. Make sure to declare "
"variables with the `let` keyword."
msgstr ""
"Une variable est utilisée avant qu'elle n'ait été déclarée. Assurez-vous de "
"déclarer des variables avec le mot-clé `let`."

#: src/appendix-05-common-error-messages.md:17
msgid ""
"The path to bring an item into scope is wrongly defined. Make sure to use "
"valid paths."
msgstr ""
"Le chemin pour introduire un élément dans la portée est mal défini. Assurez-"
"vous d'utiliser des chemins valides."

#: src/appendix-05-common-error-messages.md:19
msgid "Starknet Components Related Error Messages"
msgstr "Starknet Components Messages d'erreur associés"

#: src/appendix-05-common-error-messages.md:21
msgid ""
"You might encounter some errors when trying to implement components. "
"Unfortunately, some of them lack meaningful error messages to help debug. "
"This section aims to provide you with some pointers to help you debug your "
"code."
msgstr ""
"Vous pourriez rencontrer des erreurs lors de la mise en œuvre de composants. "
"Malheureusement, certains d'entre eux manquent de messages d'erreur "
"significatifs pour aider à déboguer. Cette section vise à vous fournir "
"quelques pointeurs pour vous aider à déboguer votre code."

#: src/appendix-05-common-error-messages.md:25
msgid ""
"`Trait not found. Not a trait.`: this error can occur when you're not "
"importing the component's impl block correctly in your contract. Make sure "
"to respect the following syntax:"
msgstr ""
"`Traitement non trouvé. Pas un trait.`: cette erreur peut se produire "
"lorsque vous n'importez pas correctement le bloc impl du composant dans "
"votre contrat. Assurez-vous de respecter la syntaxe suivante:"

#: src/appendix-05-common-error-messages.md:33
msgid ""
"`Plugin diagnostic: name is not a substorage member in the contract's "
"Storage. Consider adding to Storage: (...)`: the compiler helps you a lot "
"debugging this by giving you recommendation on the action to take. "
"Basically, you forgot to add the component's storage to your contract's "
"storage. Make sure to add the path to the component's storage annotated with "
"the `#[substorage(v0)]` attribute to your contract's storage."
msgstr ""
"`Plugin diagnostic: name is not a substorage member in the contract's "
"Storage. Envisagez d'ajouter à Storage: (...)`: le compilateur vous aide "
"beaucoup à déboger cela en vous donnant des recommandations sur l'action à "
"prendre. Fondamentalement, vous avez oublié d'ajouter le stockage du "
"composant au stockage de votre contrat. Assurez-vous d'ajouter le chemin au "
"stockage du composant annoté avec l'attribut `#[substorage(v0)]` au stockage "
"de votre contrat."

#: src/appendix-05-common-error-messages.md:35
msgid ""
"`Plugin diagnostic: name is not a nested event in the contract's Event enum. "
"Consider adding to the Event enum:` similar to the previous error, the "
"compiler tells you that you forgot to add the component's events to your "
"contract's events. Make sure to add the path to the component's events to "
"your contract's events."
msgstr ""
"`Plugin diagnostic: name is not a itemed event in the contrat's Event enum. "
"Envisagez d'ajouter à l'enum Event:` similaire à l'erreur précédente, le "
"compilateur vous indique que vous avez oublié d'ajouter les événements du "
"composant aux événements de votre contrat. Assurez-vous d'ajouter le chemin "
"vers les événements du composant aux événements de votre contrat."

#: src/appendix-06-useful-development-tools.md:1
msgid "Appendix F - Useful Development Tools"
msgstr "Annexe F - Outils de développement utiles"

#: src/appendix-06-useful-development-tools.md:3
msgid ""
"In this appendix, we talk about some useful development tools that the Cairo "
"project provides. We’ll look at automatic formatting, quick ways to apply "
"warning fixes, a linter, and integrating with IDEs."
msgstr ""
"Dans cette annexe, nous parlons de quelques outils de développement utiles "
"que le projet du Caire fournit. Nous allons examiner le formatage "
"automatique, les moyens rapides d'appliquer des correctifs d'avertissement, "
"un linter, et l'intégration avec les IDE."

#: src/appendix-06-useful-development-tools.md:7
msgid "Automatic Formatting with `scarb fmt`"
msgstr "Formatage automatique avec `scarb fmt`"

#: src/appendix-06-useful-development-tools.md:9
msgid ""
"Scarb projects can be formatted using the `scarb fmt` command. If you're "
"using the Cairo binaries directly, you can run `cairo-format` instead. Many "
"collaborative projects use `scarb fmt` to prevent arguments about which "
"style to use when writing Cairo: everyone formats their code using the tool."
msgstr ""
"Les projets Scarb peuvent être formatés en utilisant la commande `scarb "
"fmt`. Si vous utilisez les binaires du Caire directement, vous pouvez "
"exécuter `cairo-format` à la place. De nombreux projets collaboratifs "
"utilisent `scarb fmt` pour empêcher les arguments sur le style à utiliser "
"lors de l'écriture du Caire: tout le monde formate leur code à l'aide de "
"l'outil."

#: src/appendix-06-useful-development-tools.md:14
msgid ""
"To format any Cairo project, enter the following inside the project "
"directory:"
msgstr ""
"Pour formater n'importe quel projet du Caire, entrez ce qui suit dans le "
"répertoire du projet :"

#: src/appendix-06-useful-development-tools.md:20
msgid "IDE Integration Using `cairo-language-server`"
msgstr "Intégration de l'IDE en utilisant `cairo-language-server`"

#: src/appendix-06-useful-development-tools.md:22
msgid ""
"To help IDE integration, the Cairo community recommends using the [`cairo-"
"language-server`](https://github.com/starkware-libs/cairo/tree/main/crates/"
"cairo-lang-language-server)<!-- ignore -->. This tool is a set of compiler-"
"centric utilities that speaks the [Language Server Protocol](http://"
"langserver.org/)<!--\n"
"ignore -->, which is a specification for IDEs and programming languages to "
"communicate with each other. Different clients can use `cairo-language-"
"server`, such as [the Cairo extension for Visual Studio Code](https://"
"marketplace.visualstudio.com/items?itemName=starkware.cairo1)."
msgstr ""
"Pour faciliter l'intégration de l'IDE, la communauté du Caire recommande "
"d'utiliser le [`cairo-language-server``](https://github.com/starkware-libs/"
"cairo/tree/main/crates/cairo-lang-language-server)<!-- ignore -->. Cet outil "
"est un ensemble d'utilitaires centrés sur le compilateur qui parle le "
"[Protocole de serveur de langue](http://langserver.org/)<!-- ignore -->, qui "
"est une spécification pour les IDE et les langages de programmation pour "
"communiquer entre eux."

#: src/appendix-06-useful-development-tools.md:32
msgid ""
"Visit the `vscode-cairo` [page](https://marketplace.visualstudio.com/items?"
"itemName=starkware.cairo1)<!-- ignore --> to install it on VSCode. You will "
"get abilities such as autocompletion, jump to definition, and inline errors."
msgstr ""
"Visitez le `vscode-cairo` [page](https://marketplace.visualstudio.com/items?"
"itemName=starkware.cairo1)<!-- ignorez --> pour l'installer sur VSCode. Vous "
"obtiendrez des capacités telles que l'autocomplètement, le saut vers la "
"définition et les erreurs inline."

#: src/appendix-06-useful-development-tools.md:38
msgid ""
"Note: If you have Scarb installed, it should work out of the box with the "
"Cairo VSCode extension, without a manual installation of the language server."
msgstr ""
"Remarque: Si vous avez installé Scarb, il devrait fonctionner hors de la "
"boîte avec l'extension Cairo VSCode, sans une installation manuelle du "
"serveur de langue."

#: src/appendix-07-cairo-binaries.md:1
msgid "Appendix G - Installing the Cairo Binaries"
msgstr "Annexe G - Installation des Binaires du Caire"

#: src/appendix-07-cairo-binaries.md:3
msgid ""
"If you want to have access to the Cairo binaries, for anything that you "
"could not achieve by purely using Scarb you can install them by following "
"the instructions below."
msgstr ""
"Si vous voulez avoir accès aux binaires du Caire, pour tout ce que vous ne "
"pourriez pas obtenir en utilisant purement Scarb, vous pouvez les installer "
"en suivant les instructions ci-dessous."

#: src/appendix-07-cairo-binaries.md:5
msgid "Prerequisites"
msgstr "Préalables"

#: src/appendix-07-cairo-binaries.md:7
msgid ""
"You will need to have [Rust](https://www.rust-lang.org) and [Git](https://"
"git-scm.com/) installed."
msgstr ""
"Vous devrez installer [Rust](https://www.rust-lang.org) et [Git](https://git-"
"scm.com/)."

#: src/appendix-07-cairo-binaries.md:9
msgid ""
"To install Rust, you first need the [`rustup`](https://www.rust-lang.org/"
"tools/install) tool. It allows you to install Rust using the following "
"command:"
msgstr ""
"Pour installer Rust, vous avez d'abord besoin de l'outil [`rustup`](https://"
"www.rust-lang.org/tools/install). Il vous permet d'installer Rust en "
"utilisant la commande suivante:"

#: src/appendix-07-cairo-binaries.md:11
msgid "# Install stable Rust\n"
msgstr "# Installer stable Rust\n"

#: src/appendix-07-cairo-binaries.md:15
msgid ""
"Follow the link for information on how to install [Git](https://git-scm.com/"
"downloads)."
msgstr ""
"Suivez le lien pour savoir comment installer [Git](https://git-scm.com/"
"downloads)."

#: src/appendix-07-cairo-binaries.md:17
msgid ""
"The next step is to install Cairo. We will download Cairo manually, using "
"Cairo repository or with an installation script. You’ll need an internet "
"connection for the download."
msgstr ""
"La prochaine étape est d'installer Cairo. Nous allons télécharger Cairo "
"manuellement, en utilisant le dépôt Cairo ou avec un script d'installation. "
"Vous aurez besoin d'une connexion internet pour le téléchargement."

#: src/appendix-07-cairo-binaries.md:19
msgid ""
"Installing Cairo with a Script ([Installer](https://github.com/franalgaba/"
"cairo-installer) by [Fran](https://github.com/franalgaba))"
msgstr ""
"Installer le Caire avec un script ([Installer](https://github.com/franalgaba/"
"cairo-installer) par [Fran](https://github.com/franalgaba)"

#: src/appendix-07-cairo-binaries.md:21
msgid "Install"
msgstr "Installer"

#: src/appendix-07-cairo-binaries.md:23
msgid ""
"If you wish to install a specific release of Cairo rather than the latest "
"head, set the `CAIRO_GIT_TAG` environment variable (e.g. `export "
"CAIRO_GIT_TAG=v2.5.1`)."
msgstr ""
"Si vous souhaitez installer une version spécifique du Caire plutôt que la "
"dernière tête, définissez la variable d'environnement `CAIRO_GIT_TAG` (par "
"exemple `export CAIRO_GIT_TAG=v2.5.1`)."

#: src/appendix-07-cairo-binaries.md:29
msgid ""
"After installing, follow [these instructions](#set-up-your-shell-environment-"
"for-cairo) to set up your shell environment."
msgstr ""
"Après l'installation, suivez [ces instructions] (#set-up- your-shell-"
"environment-for-cairo) pour configurer votre environnement shell."

#: src/appendix-07-cairo-binaries.md:31
msgid "Update"
msgstr "Mise à jour"

#: src/appendix-07-cairo-binaries.md:33
msgid ""
"```\n"
"rm -fr ~/.cairo\n"
"curl -L https://github.com/franalgaba/cairo-installer/raw/main/bin/cairo-"
"installer | bash\n"
"```"
msgstr ""
"``` rm -fr ~/.cairo curl -L https://github.com/franalgaba/cairo-installer/"
"raw/main/bin/cairo-installer=\" bash ``"

#: src/appendix-07-cairo-binaries.md:38
msgid "Uninstall"
msgstr "Désinstaller"

#: src/appendix-07-cairo-binaries.md:40
msgid ""
"Cairo is installed within `$CAIRO_ROOT` (default: ~/.cairo). To uninstall, "
"just remove it:"
msgstr ""
"Le Caire est installé dans `$CAIRO_ROOT` (par défaut: ~/.cairo). Pour "
"désinstaller, il suffit de le supprimer:"

#: src/appendix-07-cairo-binaries.md:46
msgid "then remove these three lines from .bashrc:"
msgstr "puis enlever ces trois lignes de.bashrc:"

#: src/appendix-07-cairo-binaries.md:49
msgid "\"$HOME/.cairo/target/release:$PATH\""
msgstr "\"$HOME/.cairo/cible/release:$PATH\""

#: src/appendix-07-cairo-binaries.md:52
msgid "and finally, restart your shell:"
msgstr "et enfin, redémarrez votre shell :"

#: src/appendix-07-cairo-binaries.md:58
msgid "Set Up your Shell Environment for Cairo"
msgstr "Configurez votre environnement Shell pour le Caire"

#: src/appendix-07-cairo-binaries.md:60
msgid ""
"Define environment variable `CAIRO_ROOT` to point to the path where Cairo "
"will store its data. `$HOME/.cairo` is the default. If you installed Cairo "
"via Git checkout, we recommend to set it to the same location as where you "
"cloned it."
msgstr ""
"Définissez la variable d'environnement `CAIRO_ROOT` pour indiquer le chemin "
"où le Caire stockera ses données. `$HOME/.cairo` est la valeur par défaut. "
"Si vous avez installé Cairo via Git checkout, nous vous recommandons de le "
"placer au même endroit que l'endroit où vous l'avez cloné."

#: src/appendix-07-cairo-binaries.md:64
msgid "Add the `cairo-*` executables to your `PATH` if it's not already there"
msgstr ""
"Ajouter les exécutables `cairo-*` à votre `PATH` s'il n'est pas déjà là"

#: src/appendix-07-cairo-binaries.md:66
msgid ""
"The below setup should work for the vast majority of users for common use "
"cases."
msgstr ""
"La configuration ci-dessous devrait fonctionner pour la grande majorité des "
"utilisateurs pour les cas d'utilisation courante."

#: src/appendix-07-cairo-binaries.md:68
msgid "For **bash**:"
msgstr "Pour **bash**:"

#: src/appendix-07-cairo-binaries.md:70
msgid ""
"Stock Bash startup files vary widely between distributions in which of them "
"source which, under what circumstances, in what order and what additional "
"configuration they perform. As such, the most reliable way to get Cairo in "
"all environments is to append Cairo configuration commands to both `.bashrc` "
"(for interactive shells) and the profile file that Bash would use (for login "
"shells)."
msgstr ""
"Stock Bash fichiers de démarrage varient considérablement entre les "
"distributions dans lesquelles d'entre eux source qui, dans quelles "
"circonstances, dans quel ordre et quelle configuration supplémentaire ils "
"effectuent. Ainsi, le moyen le plus fiable pour obtenir le Caire dans tous "
"les environnements est d'ajouter les commandes de configuration du Caire à "
"la fois `.bashrc` (pour les shells interactifs) et le fichier de profil que "
"Bash utiliserait (pour les shells de connexion)."

#: src/appendix-07-cairo-binaries.md:76
msgid ""
"First, add the commands to `~/.bashrc` by running the following in your "
"terminal:"
msgstr ""
"Tout d'abord, ajoutez les commandes à `~/.bashrc` en exécutant ce qui suit "
"dans votre terminal :"

#: src/appendix-07-cairo-binaries.md:79 src/appendix-07-cairo-binaries.md:89
#: src/appendix-07-cairo-binaries.md:95 src/appendix-07-cairo-binaries.md:102
msgid "'export CAIRO_ROOT=\"$HOME/.cairo\"'"
msgstr "\"exporter CAIRO_ROOT\" $HOME/.cairo\""

#: src/appendix-07-cairo-binaries.md:80 src/appendix-07-cairo-binaries.md:90
#: src/appendix-07-cairo-binaries.md:96 src/appendix-07-cairo-binaries.md:103
msgid ""
"'command -v cairo-compile >/dev/null || export PATH=\"$CAIRO_ROOT/target/"
"release:$PATH\"'"
msgstr ""
"'command -v cairo-compile >/dev/null=\"export PATH=\"$CAIRO_ROOT/cible/"
"release:$PATH\"'"

#: src/appendix-07-cairo-binaries.md:83
msgid ""
"Then, if you have `~/.profile`, `~/.bash_profile` or `~/.bash_login`, add "
"the commands there as well. If you have none of these, add them to `~/."
"profile`."
msgstr ""
"Ensuite, si vous avez `~/.profile`, `~/.bash_profile` ou `~/.bash_login`, "
"ajoutez les commandes là aussi. Si vous n'en avez pas, ajoutez-les à `~/."
"profile`."

#: src/appendix-07-cairo-binaries.md:86
msgid "to add to `~/.profile`:"
msgstr "à ajouter à `~/.profile`:"

#: src/appendix-07-cairo-binaries.md:93
msgid "to add to `~/.bash_profile`:"
msgstr "à ajouter à `~/.bash_profile`:"

#: src/appendix-07-cairo-binaries.md:99
msgid "For **Zsh**:"
msgstr "Pour **Zsh**:"

#: src/appendix-07-cairo-binaries.md:106
msgid ""
"If you wish to get Cairo in non-interactive login shells as well, also add "
"the commands to `~/.zprofile` or `~/.zlogin`."
msgstr ""
"Si vous souhaitez obtenir le Caire dans des shells de connexion non "
"interactifs, ajoutez également les commandes `~/.zprofil` ou `~/.zlogin`."

#: src/appendix-07-cairo-binaries.md:108
msgid "For **Fish shell**:"
msgstr "Pour **Coquille de poisson**:"

#: src/appendix-07-cairo-binaries.md:110
msgid "If you have Fish 3.2.0 or newer, execute this interactively:"
msgstr ""
"Si vous avez Fish 3.2.0 ou plus récent, exécutez ceci de manière interactive:"

#: src/appendix-07-cairo-binaries.md:117
msgid "Otherwise, execute the snippet below:"
msgstr "Sinon, exécutez l'extrait ci-dessous :"

#: src/appendix-07-cairo-binaries.md:124
msgid ""
"In MacOS, you might also want to install [Fig](https://fig.io/) which "
"provides alternative shell completions for many command line tools with an "
"IDE-like popup interface in the terminal window. (Note that their "
"completions are independent of Cairo's codebase so they might be slightly "
"out of sync for bleeding-edge interface changes.)"
msgstr ""
"Dans MacOS, vous pourriez également vouloir installer [Fig](https://fig.io/) "
"qui fournit des finitions de shell alternatives pour de nombreux outils en "
"ligne de commande avec une interface popup de type IDE dans la fenêtre du "
"terminal. (Notez que leurs finitions sont indépendantes de la base de code "
"du Caire afin qu'elles puissent être légèrement hors de synchronisation pour "
"les modifications de l'interface saignée.)"

#: src/appendix-07-cairo-binaries.md:130
msgid "Restart your Shell"
msgstr "Redémarrez votre Shell"

#: src/appendix-07-cairo-binaries.md:132
msgid "for the `PATH` changes to take effect."
msgstr "pour que les modifications de la «PATH» prennent effet."

#: src/appendix-07-cairo-binaries.md:135
msgid "\"$SHELL\""
msgstr "\"Passer\""

#: src/appendix-07-cairo-binaries.md:138
msgid ""
"Installing Cairo Manually ([Guide](https://github.com/auditless/cairo-"
"template) by [Abdel](https://github.com/abdelhamidbakhta))"
msgstr ""
"Installer le Caire manuellement ([Guide](https://github.com/auditless/cairo-"
"template) par [Abdel](https://github.com/abdelhamidbakhta)"

#: src/appendix-07-cairo-binaries.md:140
msgid "Step 1: Install Cairo 1.0"
msgstr "Étape 1: Installer le Caire 1.0"

#: src/appendix-07-cairo-binaries.md:142
msgid ""
"If you are using an x86 Linux system and can use the release binary, "
"download Cairo here: <https://github.com/starkware-libs/cairo/releases>."
msgstr ""
"Si vous utilisez un système Linux x86 et pouvez utiliser le binaire de "
"sortie, téléchargez le Caire ici: <https://github.com/starkware-libs/cairo/"
"releases>."

#: src/appendix-07-cairo-binaries.md:144
msgid "For everyone else, we recommend compiling Cairo from source as follows:"
msgstr ""
"Pour tous les autres, nous recommandons de compiler le Caire à partir de la "
"source comme suit:"

#: src/appendix-07-cairo-binaries.md:147
msgid "# Start by defining environment variable CAIRO_ROOT\n"
msgstr "# Commencez par définir la variable d'environnement CAIRO_ROOT\n"

#: src/appendix-07-cairo-binaries.md:148
msgid "\"${HOME}/.cairo\""
msgstr "\"${HOME}/.cairo\""

#: src/appendix-07-cairo-binaries.md:149
msgid "# Create .cairo folder if it doesn't exist yet\n"
msgstr "# Créer un dossier.cairo s'il n'existe pas encore\n"

#: src/appendix-07-cairo-binaries.md:152
msgid "# Clone the Cairo compiler in $CAIRO_ROOT (default root)\n"
msgstr "# Clone le compilateur du Caire dans $CAIRO_ROOT (root par défaut)\n"

#: src/appendix-07-cairo-binaries.md:155
msgid ""
"# OPTIONAL/RECOMMENDED: If you want to install a specific version of the "
"compiler\n"
"# Fetch all tags (versions)\n"
msgstr ""
"# OPTIONNEL/RECOMMANDÉ: Si vous voulez installer une version spécifique du "
"compilateur # Saisissez toutes les balises (versions)\n"

#: src/appendix-07-cairo-binaries.md:158
msgid "# View tags (you can also do this in the Cairo compiler repository)\n"
msgstr ""
"# Afficher les balises (vous pouvez aussi le faire dans le dépôt du "
"compilateur du Caire)\n"

#: src/appendix-07-cairo-binaries.md:160
msgid "# Checkout the version you want\n"
msgstr "# Vérifiez la version que vous voulez\n"

#: src/appendix-07-cairo-binaries.md:163
msgid "# Generate release binaries\n"
msgstr "Générer des binaires de libération\n"

#: src/appendix-07-cairo-binaries.md:168
msgid "."
msgstr "C'est vrai."

#: src/appendix-07-cairo-binaries.md:170
msgid "**NOTE: Keeping Cairo up to date**"
msgstr "**NOTE: tenir le Caire à jour**"

#: src/appendix-07-cairo-binaries.md:172
msgid ""
"Now that your Cairo compiler is in a cloned repository, all you will need to "
"do is pull the latest changes and rebuild as follows:"
msgstr ""
"Maintenant que votre compilateur du Caire est dans un dépôt cloné, tout ce "
"que vous aurez à faire est de tirer les derniers changements et de "
"reconstruire comme suit:"

#: src/appendix-07-cairo-binaries.md:179
msgid "Step 2: Add Cairo 1.0 Executables to Your Path"
msgstr "Étape 2: Ajouter des exécutables du Caire 1.0 à votre chemin"

#: src/appendix-07-cairo-binaries.md:182
msgid "\"$CAIRO_ROOT/target/release:$PATH\""
msgstr "\"$CAIRO_ROOT/cible/release:$PATH\""

#: src/appendix-07-cairo-binaries.md:185
msgid ""
"**NOTE: If installing from a Linux binary, adapt the destination path "
"accordingly.**"
msgstr ""
"**NOTE: Si vous installez à partir d'un binaire Linux, adaptez le chemin de "
"destination en conséquence.**"

#: src/appendix-07-cairo-binaries.md:187
msgid "Step 3: Setup Language Server"
msgstr "Étape 3: Configuration du serveur de langage"

#: src/appendix-07-cairo-binaries.md:189
msgid "VS Code Extension"
msgstr "Extension du code VS"

#: src/appendix-07-cairo-binaries.md:191
msgid ""
"If you have the previous Cairo 0 extension installed, you can disable/"
"uninstall it."
msgstr ""
"Si vous avez installé la précédente extension Cairo 0, vous pouvez la "
"désactiver/désinstaller."

#: src/appendix-07-cairo-binaries.md:192
msgid ""
"Install the Cairo 1 extension for proper syntax highlighting and code "
"navigation. You can find the link to the extension [here](https://"
"marketplace.visualstudio.com/items?itemName=starkware.cairo1&ssr=false), or "
"just search for \"Cairo 1.0\" in the VS Code marketplace."
msgstr ""
"Installez l'extension Cairo 1 pour la mise en valeur de la syntaxe et la "
"navigation du code. Vous pouvez trouver le lien vers l'extension [ici]"
"(https://marketplace.visualstudio.com/items?itemName=starkware."
"cairo1&ssr=false), ou simplement chercher \"Cairo 1.0\" sur le marché du "
"code VS."

#: src/appendix-07-cairo-binaries.md:193
msgid ""
"The extension will work out of the box once you will have [Scarb](./ch01-03-"
"hello-scarb.md) installed."
msgstr ""
"L'extension fonctionnera hors de la boîte une fois que vous aurez [Scarb](./"
"ch01-03-hello-scarb.md) installé."

#: src/appendix-07-cairo-binaries.md:195
msgid "Cairo Language Server without Scarb"
msgstr "Serveur de langue du Caire sans écharpe"

#: src/appendix-07-cairo-binaries.md:197
msgid ""
"If you don't want to depend on Scarb, you can still use the Cairo Language "
"Server with the compiler binary. From [Step 1](#installing-cairo-with-a-"
"script-installer-by-fran), the `cairo-language-server` binary should be "
"built and executing this command will copy its path into your clipboard."
msgstr ""
"Si vous ne voulez pas dépendre de Scarb, vous pouvez toujours utiliser le "
"serveur de langue Cairo avec le binaire compilateur. À partir de [Step 1]"
"(#installing-cairo-with-a-script-installer-by-fran), le binaire `cairo-"
"language-server` doit être construit et l'exécution de cette commande va "
"copier son chemin dans votre presse-papiers."

#: src/appendix-07-cairo-binaries.md:204
msgid ""
"Update the `cairo1.languageServerPath` of the Cairo 1.0 extension by pasting "
"the path."
msgstr ""
"Mettre à jour l'extension `cairo1.languageServerPath` du Caire 1.0 en "
"passant le chemin."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"All through the previous sections, you've mostly written programs with a "
"`main` entrypoint. In the coming sections, you will learn to write and "
"deploy Starknet contracts."
msgstr ""
"Tout au long des sections précédentes, vous avez surtout écrit des "
"programmes avec un point d'entrée `main`. Dans les sections à venir, vous "
"apprendrez à écrire et à déployer des contrats Starknet."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"One of the key applications of the Cairo language is writing smart contracts "
"for the Starknet network. Starknet is a permissionless decentralized network "
"that leverages zk-STARKs technology for scalability. As a Layer 2 (L2) "
"scalability solution for Ethereum, Starknet aims to provide fast, secure, "
"and low-cost transactions. It operates as a validity rollup, commonly known "
"as a zero-knowledge rollup, and is built on top of the Cairo VM."
msgstr ""
"Starknet est un réseau décentralisé sans permission qui exploite la "
"technologie zk-STARKs pour l'évolutivité. En tant que solution d'évolutivité "
"de la couche 2 (L2) pour Ethereum, Starknet vise à fournir des transactions "
"rapides, sécurisées et peu coûteuses. Il fonctionne comme un rollup de "
"validité, communément appelé rollup de zéro connaissance, et est construit "
"sur le sommet de la VM du Caire."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Starknet contracts are programs specifically designed to run within the "
"Starknet OS. The Starknet OS is a Cairo program itself, which means that any "
"operation executed by the Starknet OS can be proven and succinctly verified. "
"Smart contracts can access Starknet's persistent state through the OS, "
"enabling them to read or modify variables in Starknet’s state, communicate "
"with other contracts, and interact seamlessly with the underlying Layer 1 "
"(L1) network."
msgstr ""
"Les contrats Starknet sont des programmes spécifiquement conçus pour "
"fonctionner dans le système d'exploitation Starknet. Le système "
"d'exploitation Starknet est un programme Cairo lui-même, ce qui signifie que "
"toute opération exécutée par le système d'exploitation Starknet peut être "
"prouvée et vérifiée succinctement. Les contrats intelligents peuvent accéder "
"à l'état persistant de Starknet via le système d'exploitation, leur "
"permettant de lire ou de modifier des variables dans l'état de Starknets, de "
"communiquer avec d'autres contrats et d'interagir de manière transparente "
"avec le réseau Layer 1 (L1) sous-jacent."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"If you want to learn more about the Starknet network itself, its "
"architecture and the tooling available, you should read the [Starknet Book]"
"(https://book.starknet.io/). In this book, we will only focus on writing "
"smart contracts in Cairo."
msgstr ""
"Si vous souhaitez en savoir plus sur le réseau Starknet lui-même, son "
"architecture et l'outillage disponible, vous devez lire le [Livre Starknet]"
"(https://book.starknet.io/). Dans ce livre, nous nous concentrerons "
"uniquement sur l'écriture de contrats intelligents au Caire."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Scarb"
msgstr "Écharpe"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Scarb facilitates smart contract development for Starknet. To enable this "
"feature, you'll need to make some configurations in your _Scarb.toml_ file "
"(see [Installation](./ch01-01-installation.md) for how to install Scarb)."
msgstr ""
"Scarb facilite le développement de contrats intelligents pour Starknet. Pour "
"activer cette fonctionnalité, vous aurez besoin de faire quelques "
"configurations dans votre fichier _Scarb.toml_ (voir [Installation](./"
"ch01-01-installation.md) pour savoir comment installer Scarb)."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"First, add the `starknet` dependency to your _Scarb.toml_ file. Next, enable "
"the Starknet contract compilation of the package by adding a `[[target."
"starknet-contract]]` section. By default, specifying this target will build "
"a Sierra Contract Class file, which can be deployed on Starknet. If you omit "
"to specify the target, your package will compile but will not produce an "
"output that you can use with Starknet."
msgstr ""
"D'abord, ajoutez la dépendance `starknet` à votre fichier _Scarb.toml_. "
"Ensuite, activez la compilation du contrat Starknet du paquet en ajoutant "
"une section `[[target.starknet-contract]`. Par défaut, en spécifiant cette "
"cible, vous créerez un fichier Sierra Contract Class, qui peut être déployé "
"sur Starknet. Si vous omettez de spécifier la cible, votre paquet compilera "
"mais ne produira pas une sortie que vous pouvez utiliser avec Starknet."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Below is the minimal _Scarb.toml_ file required to compile a crate "
"containing Starknet contracts:"
msgstr ""
"Voici le fichier _scarb.toml_ minimal requis pour compiler une caisse "
"contenant des contrats Starknet :"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"package_name\"\n"
"version = \"0.1.0\"\n"
"\n"
"[dependencies]\n"
"starknet = \">=2.6.3\"\n"
"\n"
"[[target.starknet-contract]]\n"
"```"
msgstr ""
"```toml [package] name = \"package_name\" version = \"0.1.0\" [dependences] "
"starknet = \">=2.6.3\" [[target.starknet-contract]] ``"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"To compile contracts defined in your package's dependencies, please refer to "
"the [Scarb documentation](https://docs.swmansion.com/scarb/docs/extensions/"
"starknet/contract-target.html#compiling-external-contracts)."
msgstr ""
"Pour compiler les contrats définis dans les dépendances de votre paquet, "
"veuillez consulter la [documentation Scarb](https://docs.swmansion.com/scarb/"
"docs/extensions/starknet/contract-cible.html#compiling-external-contracts)."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Starknet Foundry"
msgstr "Fonderie Starknet"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Starknet Foundry is a tool chain for Starknet smart contract development. It "
"supports many features, including writing and running tests with advanced "
"features, deploying contracts, interacting with the Starknet network, and "
"more."
msgstr ""
"Starknet Foundry est une chaîne d'outils pour le développement de contrats "
"intelligents Starknet. Il prend en charge de nombreuses fonctionnalités, y "
"compris l'écriture et l'exécution de tests avec des fonctionnalités "
"avancées, le déploiement de contrats, l'interaction avec le réseau Starknet, "
"et plus encore."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"We'll describe Starknet Foundry in more detail in [Chapter 17](./ch17-02-"
"testing-smart-contracts.md#testing-smart-contracts-with-starknet-foundry) "
"when discussing Starknet smart contract testing and security."
msgstr ""
"Nous décrirons plus en détail Starknet Foundry dans [Chapitre 17](./ch17-02-"
"test-smart-contracts.md#test-smart-contracts-with-starknet-foundry) lors de "
"la discussion de Starknet smart-contract testing and security."

#: src/ch13-01-general-introduction-to-smart-contracts.md:3
msgid ""
"This chapter will give you a high level introduction to what smart contracts "
"are, what they are used for, and why blockchain developers would use Cairo "
"and Starknet. If you are already familiar with blockchain programming, feel "
"free to skip this chapter. The last part might still be interesting though."
msgstr ""
"Ce chapitre vous donnera une introduction de haut niveau à ce que sont les "
"contrats intelligents, ce qu'ils sont utilisés, et pourquoi les développeurs "
"de blockchain utiliseraient Le Caire et Starknet. Si vous êtes déjà familier "
"avec la programmation de blockchain, n'hésitez pas à sauter ce chapitre. La "
"dernière partie peut être encore intéressante."

#: src/ch13-01-general-introduction-to-smart-contracts.md:6
msgid "Smart Contracts"
msgstr "Contrats intelligents"

#: src/ch13-01-general-introduction-to-smart-contracts.md:8
msgid ""
"Smart contracts gained popularity and became more widespread with the birth "
"of Ethereum. Smart contracts are essentially programs deployed on a "
"blockchain. The term \"smart contract\" is somewhat misleading, as they are "
"neither \"smart\" nor \"contracts\" but rather code and instructions that "
"are executed based on specific inputs. They primarily consist of two "
"components: storage and functions. Once deployed, users can interact with "
"smart contracts by initiating blockchain transactions containing execution "
"data (which function to call and with what input). Smart contracts can "
"modify and read the storage of the underlying blockchain. A smart contract "
"has its own address and is considered a blockchain account, meaning it can "
"hold tokens."
msgstr ""
"Les contrats intelligents sont essentiellement des programmes déployés sur "
"une chaîne de blocs. Le terme \"contrat intelligent\" est quelque peu "
"trompeur, car ils ne sont ni \"smart\" ni \"contrats\" mais plutôt du code "
"et des instructions qui sont exécutés sur la base d'entrées spécifiques. Ils "
"se composent principalement de deux composants: stockage et fonctions. Une "
"fois déployé, les utilisateurs peuvent interagir avec des contrats "
"intelligents en initiant des transactions de blockchain contenant des "
"données d'exécution (qui fonction d'appeler et avec quelle entrée). Les "
"contrats intelligents peuvent modifier et lire le stockage de la chaîne de "
"blocs sous-jacente. Un contrat intelligent a sa propre adresse et est "
"considéré comme un compte blockchain, ce qui signifie qu'il peut contenir "
"des jetons."

#: src/ch13-01-general-introduction-to-smart-contracts.md:10
msgid ""
"The programming language used to write smart contracts varies depending on "
"the blockchain. For example, on Ethereum and the [EVM-compatible ecosystem]"
"(https://ethereum.org/en/developers/docs/evm/), the most commonly used "
"language is Solidity, while on Starknet, it is Cairo. The way the code is "
"compiled also differs based on the blockchain. On Ethereum, Solidity is "
"compiled into bytecode. On Starknet, Cairo is compiled into Sierra and then "
"into Cairo Assembly (CASM)."
msgstr ""
"Le langage de programmation utilisé pour écrire des contrats intelligents "
"varie en fonction de la blockchain. Par exemple, sur Ethereum et "
"l'écosystème compatible avec l'EVM (https://ethereum.org/fr/developers/docs/"
"evm/), le langage le plus couramment utilisé est Solidity, tandis que sur "
"Starknet, c'est le Caire. La façon dont le code est compilé diffère "
"également sur la base de la blockchain. Sur Ethereum, Solidity est compilé "
"en bytecode. Sur Starknet, Le Caire est compilé en Sierra, puis dans Cairo "
"Assembly (CASM)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:12
msgid ""
"Smart contracts possess several unique characteristics. They are "
"**permissionless**, meaning anyone can deploy a smart contract on the "
"network (within the context of a decentralized blockchain, of course). Smart "
"contracts are also **transparent**; the data stored by the smart contract is "
"accessible to anyone. The code that composes the contract can also be "
"transparent, enabling **composability**. This allows developers to write "
"smart contracts that use other smart contracts. Smart contracts can only "
"access and interact with data from the blockchain they are deployed on. They "
"require third-party software (called _oracles_) to access external data (the "
"price of a token for instance)."
msgstr ""
"Les contrats intelligents possèdent plusieurs caractéristiques uniques : "
"**permissionless**, c'est-à-dire que chacun peut déployer un contrat "
"intelligent sur le réseau (dans le cadre d'une blockchain décentralisée, "
"bien sûr). Les contrats intelligents sont également **transparents**; les "
"données stockées par le contrat intelligent sont accessibles à n'importe "
"qui. Le code qui compose le contrat peut également être transparent, "
"permettant **composabilité**. Cela permet aux développeurs d'écrire des "
"contrats intelligents qui utilisent d'autres contrats intelligents. Les "
"contrats intelligents ne peuvent accéder et interagir avec les données de la "
"blockchain sur laquelle ils sont déployés. Ils nécessitent un logiciel tiers "
"(appelé _oracles_) pour accéder à des données externes (le prix d'un jeton "
"par exemple)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:14
msgid ""
"For developers to build smart contracts that can interact with each other, "
"it is required to know what the other contracts look like. Hence, Ethereum "
"developers started to build standards for smart contract development, the "
"`ERCxx`. The two most used and famous standards are the `ERC20`, used to "
"build tokens like `USDC`, `DAI` or `STARK`, and the `ERC721`, for NFTs (Non-"
"Fungible Tokens) like `CryptoPunks` or `Everai`."
msgstr ""
"Pour les développeurs de construire des contrats intelligents qui peuvent "
"interagir entre eux, il est nécessaire de savoir à quoi ressemblent les "
"autres contrats. Par conséquent, les développeurs Ethereum ont commencé à "
"construire des normes pour le développement de contrats intelligents, le "
"`ERCxx`. Les deux normes les plus utilisées et célèbres sont le `ERC20`, "
"utilisé pour construire des jetons comme `USDC`, `DAI` ou `STARK`, et le "
"`ERC721`, pour les jetons NFT (non fongibles) comme `CryptoPunks` ou "
"`Everai`."

#: src/ch13-01-general-introduction-to-smart-contracts.md:18
msgid "Use Cases"
msgstr "Cas d'utilisation"

#: src/ch13-01-general-introduction-to-smart-contracts.md:20
msgid ""
"There are many possible use cases for smart contracts. The only limits are "
"the technical constraints of the blockchain and the creativity of developers."
msgstr ""
"Il existe de nombreux cas d'utilisation possibles pour les contrats "
"intelligents. Les seules limites sont les contraintes techniques de la "
"blockchain et la créativité des développeurs."

#: src/ch13-01-general-introduction-to-smart-contracts.md:22
msgid "DeFi"
msgstr "Défi"

#: src/ch13-01-general-introduction-to-smart-contracts.md:24
msgid ""
"For now, the principal use case for smart contracts is similar to that of "
"Ethereum or Bitcoin, which is essentially handling money. In the context of "
"the alternative payment system promised by Bitcoin, smart contracts on "
"Ethereum enable the creation of decentralized financial applications that no "
"longer rely on traditional financial intermediaries. This is what we call "
"DeFi (decentralized finance). DeFi consists of various projects such as "
"lending/borrowing applications, decentralized exchanges (DEX), on-chain "
"derivatives, stablecoins, decentralized hedge funds, insurance, and many "
"more."
msgstr ""
"Pour l'instant, le principal cas d'utilisation pour les contrats "
"intelligents est similaire à celui d'Ethereum ou Bitcoin, qui est "
"essentiellement la gestion de l'argent. Dans le contexte du système de "
"paiement alternatif promis par Bitcoin, les contrats intelligents sur "
"Ethereum permettent la création d'applications financières décentralisées "
"qui ne dépendent plus des intermédiaires financiers traditionnels. C'est ce "
"que nous appelons DeFi (finance décentralisée)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:26
msgid "Tokenization"
msgstr "Tokenisation"

#: src/ch13-01-general-introduction-to-smart-contracts.md:28
msgid ""
"Smart contracts can facilitate the tokenization of real-world assets, such "
"as real estate, art, or precious metals. Tokenization divides an asset into "
"digital tokens, which can be easily traded and managed on blockchain "
"platforms. This can increase liquidity, enable fractional ownership, and "
"simplify the buying and selling process."
msgstr ""
"Les contrats intelligents peuvent faciliter la tokenisation des actifs du "
"monde réel, tels que l'immobilier, l'art ou les métaux précieux. La "
"tokenisation divise un actif en jetons numériques, qui peuvent être "
"facilement échangés et gérés sur des plateformes blockchain. Cela peut "
"augmenter la liquidité, permettre la propriété fractionnelle, et simplifier "
"le processus d'achat et de vente."

#: src/ch13-01-general-introduction-to-smart-contracts.md:30
msgid "Voting"
msgstr "Vote"

#: src/ch13-01-general-introduction-to-smart-contracts.md:32
msgid ""
"Smart contracts can be used to create secure and transparent voting systems. "
"Votes can be recorded on the blockchain, ensuring immutability and "
"transparency. The smart contract can then automatically tally the votes and "
"declare the results, minimizing the potential for fraud or manipulation."
msgstr ""
"Les contrats intelligents peuvent être utilisés pour créer des systèmes de "
"vote sécurisés et transparents. Les votes peuvent être enregistrés sur la "
"blockchain, assurant l'immutabilité et la transparence. Le contrat "
"intelligent peut ensuite automatiquement compter les votes et déclarer les "
"résultats, minimisant ainsi le potentiel de fraude ou de manipulation."

#: src/ch13-01-general-introduction-to-smart-contracts.md:34
msgid "Royalties"
msgstr "Redevances"

#: src/ch13-01-general-introduction-to-smart-contracts.md:36
msgid ""
"Smart contracts can automate royalty payments for artists, musicians, and "
"other content creators. When a piece of content is consumed or sold, the "
"smart contract can automatically calculate and distribute the royalties to "
"the rightful owners, ensuring fair compensation and reducing the need for "
"intermediaries."
msgstr ""
"Les contrats intelligents peuvent automatiser les paiements de redevances "
"pour les artistes, musiciens et autres créateurs de contenu. Lorsqu'un "
"contenu est consommé ou vendu, le contrat intelligent peut calculer et "
"distribuer automatiquement les redevances aux propriétaires légitimes, en "
"assurant une compensation équitable et en réduisant le besoin "
"d'intermédiaires."

#: src/ch13-01-general-introduction-to-smart-contracts.md:38
msgid "Decentralized Identities DIDs"
msgstr "DID sur les identités décentralisées"

#: src/ch13-01-general-introduction-to-smart-contracts.md:40
msgid ""
"Smart contracts can be used to create and manage digital identities, "
"allowing individuals to control their personal information and share it with "
"third parties securely. The smart contract could verify the authenticity of "
"a user's identity and automatically grant or revoke access to specific "
"services based on the user's credentials."
msgstr ""
"Les contrats intelligents peuvent être utilisés pour créer et gérer des "
"identités numériques, permettant aux personnes de contrôler leurs "
"informations personnelles et de les partager en toute sécurité avec des "
"tiers. Le contrat intelligent pourrait vérifier l'authenticité de l'identité "
"d'un utilisateur et accorder ou révoquer automatiquement l'accès à des "
"services spécifiques en fonction des références de l'utilisateur."

#: src/ch13-01-general-introduction-to-smart-contracts.md:46
msgid "The Rise of Starknet and Cairo"
msgstr "La montée de Starknet et du Caire"

#: src/ch13-01-general-introduction-to-smart-contracts.md:48
msgid ""
"Ethereum, being the most widely used and resilient smart contract platform, "
"became a victim of its own success. With the rapid adoption of some "
"previously mentioned use cases, mainly DeFi, the cost of performing "
"transactions became extremely high, rendering the network almost unusable. "
"Engineers and researchers in the ecosystem began working on solutions to "
"address this scalability issue."
msgstr ""
"Ethereum, étant la plate-forme de contrat intelligente la plus utilisée et "
"la plus résistante, est devenue victime de son propre succès. Avec "
"l'adoption rapide de certains cas d'utilisation précédemment mentionnés, "
"principalement DeFi, le coût de la réalisation des transactions est devenu "
"extrêmement élevé, rendant le réseau presque inutilisable. Ingénieurs et "
"chercheurs dans l'écosystème a commencé à travailler sur des solutions pour "
"résoudre ce problème d'évolutivité."

#: src/ch13-01-general-introduction-to-smart-contracts.md:50
msgid ""
"A famous trilemma called The Blockchain Trilemma in the blockchain space "
"states that it is hard to achieve a high level of scalability, "
"decentralization, and security simultaneously; trade-offs must be made. "
"Ethereum is at the intersection of decentralization and security. "
"Eventually, it was decided that Ethereum's purpose would be to serve as a "
"secure settlement layer, while complex computations would be offloaded to "
"other networks built on top of Ethereum. These are called Layer 2s (L2s)."
msgstr ""
"Un célèbre trilemma appelé Le Trilemma Blockchain dans l'espace de la "
"blockchain déclare qu'il est difficile d'atteindre un niveau élevé "
"d'évolutivité, de décentralisation et de sécurité simultanément; des "
"compromis doivent être faits. Ethereum est à l'intersection de la "
"décentralisation et de la sécurité. Finalement, il a été décidé que le but "
"d'Ethereum serait de servir de couche de règlement sécurisée, tandis que des "
"calculs complexes seraient déchargés vers d'autres réseaux construits au "
"sommet d'Ethereum."

#: src/ch13-01-general-introduction-to-smart-contracts.md:52
msgid ""
"The two primary types of L2s are optimistic rollups and validity rollups. "
"Both approaches involve compressing and batching numerous transactions "
"together, computing the new state, and settling the result on Ethereum (L1). "
"The difference lies in the way the result is settled on L1. For optimistic "
"rollups, the new state is considered valid by default, but there is a 7-day "
"window for nodes to identify malicious transactions."
msgstr ""
"Les deux principaux types de L2 sont les rollups optimistes et les rollups "
"de validité. Les deux approches impliquent la compression et le lotage de "
"nombreuses transactions ensemble, le calcul du nouvel état, et le règlement "
"du résultat sur Ethereum (L1). La différence réside dans la façon dont le "
"résultat est réglé sur L1. Pour les rollups optimistes, le nouvel état est "
"considéré comme valide par défaut, mais il y a une fenêtre de 7 jours pour "
"les nœuds pour identifier les transactions malveillantes."

#: src/ch13-01-general-introduction-to-smart-contracts.md:54
msgid ""
"In contrast, validity rollups, such as Starknet, use cryptography to prove "
"that the new state has been correctly computed. This is the purpose of "
"STARKs, this cryptographic technology could permit validity rollups to scale "
"significantly more than optimistic rollups. You can learn more about STARKs "
"from Starkware's Medium [article](https://medium.com/starkware/starks-"
"starkex-and-starknet-9a426680745a), which serves as a good primer."
msgstr ""
"En revanche, les rollups de validité, tels que Starknet, utilisent la "
"cryptographie pour prouver que le nouvel état a été correctement calculé. "
"C'est le but des STARKs, cette technologie cryptographique pourrait "
"permettre les rollups de validité à l'échelle significativement plus que les "
"rollups optimistes. Vous pouvez en apprendre plus sur STARKs de Starkware's "
"Medium [article](https://medium.com/starkware/starks-starkex-and-"
"starknet-9a426680745a), qui sert de bon amorce."

#: src/ch13-01-general-introduction-to-smart-contracts.md:56
msgid ""
"Starknet's architecture is thoroughly described in the [Starknet Book]"
"(https://book.starknet.io/ch03-00-architecture.html), which is a great "
"resource to learn more about the Starknet network."
msgstr ""
"L'architecture de Starknet est décrite en détail dans le [Starknet Book] "
"(https://book.starknet.io/ch03-00-architecture.html), qui est une excellente "
"ressource pour en savoir plus sur le réseau Starknet."

#: src/ch13-01-general-introduction-to-smart-contracts.md:58
msgid ""
"Remember Cairo? It is, in fact, a language developed specifically to work "
"with STARKs and make them general-purpose. With Cairo, we can write "
"**provable code**. In the context of Starknet, this allows proving the "
"correctness of computations from one state to another."
msgstr ""
"Souvenez-vous du Caire? C'est, en fait, un langage développé spécifiquement "
"pour travailler avec les STARKs et les rendre d'usage général. Avec le "
"Caire, nous pouvons écrire **prouvable code**. Dans le contexte de Starknet, "
"cela permet de prouver la justesse des calculs d'un état à l'autre."

#: src/ch13-01-general-introduction-to-smart-contracts.md:60
msgid ""
"Unlike most (if not all) of Starknet's competitors that chose to use the EVM "
"(either as-is or adapted) as a base layer, Starknet employs its own VM. This "
"frees developers from the constraints of the EVM, opening up a broader range "
"of possibilities. Coupled with decreased transaction costs, the combination "
"of Starknet and Cairo creates an exciting playground for developers. Native "
"account abstraction enables more complex logic for accounts, that we call "
"\"Smart Accounts\", and transaction flows. Emerging use cases include "
"**transparent AI** and machine learning applications. Finally, **blockchain "
"games** can be developed entirely **on-chain**. Starknet has been "
"specifically designed to maximize the capabilities of STARK proofs for "
"optimal scalability."
msgstr ""
"Contrairement à la plupart des concurrents de Starknet qui ont choisi "
"d'utiliser l'EMV (en tant que tel ou adapté) comme couche de base, Starknet "
"utilise son propre VM. Cela libère les développeurs des contraintes de "
"l'EMV, ouvrant une gamme plus large de possibilités. Associée à une "
"diminution des coûts de transaction, la combinaison de Starknet et du Caire "
"crée un terrain de jeu passionnant pour les développeurs. L'abstraction de "
"compte natif permet une logique plus complexe pour les comptes, que nous "
"appelons « comptes intelligents », et flux de transaction. Les cas "
"d'utilisation émergents comprennent ** applications d'IA** transparentes et "
"d'apprentissage automatique. Enfin, ** jeux de blockchain** peut être "
"développé entièrement **sur-chaîne**. Starknet a été spécialement conçu pour "
"maximiser les capacités des preuves STARK pour une évolutivité optimale."

#: src/ch13-01-general-introduction-to-smart-contracts.md:62
msgid ""
"Learn more about Account Abstraction in the [Starknet Book](https://book."
"starknet.io/ch04-00-account-abstraction.html)."
msgstr ""
"En savoir plus sur l'abstraction de compte dans le [Livre Starknet](https://"
"book.starknet.io/ch04-00-account-abstraction.html)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:68
msgid "Cairo Programs and Starknet Contracts: What Is the Difference?"
msgstr ""
"Les programmes du Caire et les contrats Starknet : quelle est la différence?"

#: src/ch13-01-general-introduction-to-smart-contracts.md:70
msgid ""
"Starknet contracts are a special superset of Cairo programs, so the concepts "
"previously learned in this book are still applicable to write Starknet "
"contracts. As you may have already noticed, a Cairo program must always have "
"a `main` function that serves as the entry point for this program:"
msgstr ""
"Les contrats Starknet sont un superset spécial des programmes du Caire, de "
"sorte que les concepts précédemment appris dans ce livre sont toujours "
"applicables pour écrire des contrats Starknet. Comme vous l'avez peut-être "
"déjà remarqué, un programme du Caire doit toujours avoir une fonction `main` "
"qui sert de point d'entrée pour ce programme:"

#: src/ch13-01-general-introduction-to-smart-contracts.md:77
msgid ""
"Contracts deployed on the Starknet network are essentially programs that are "
"run by the sequencer, and as such, have access to Starknet's state. "
"Contracts do not have a `main` function but one or multiple functions that "
"can serve as entry points."
msgstr ""
"Les contrats déployés sur le réseau Starknet sont essentiellement des "
"programmes qui sont gérés par le séquenceur, et à ce titre, ont accès à "
"l'état de Starknet. Les contrats n'ont pas une fonction principale mais une "
"ou plusieurs fonctions qui peuvent servir de points d'entrée."

#: src/ch13-01-general-introduction-to-smart-contracts.md:79
msgid ""
"Starknet contracts are defined within [modules](./ch07-02-defining-modules-"
"to-control-scope.md). For a module to be handled as a contract by the "
"compiler, it must be annotated with the `#[starknet::contract]` attribute."
msgstr ""
"Les contrats Starknet sont définis dans [modules](../ch07-02-defining-"
"modules-to-control-scope.md). Pour qu'un module soit traité comme un contrat "
"par le compilateur, il doit être annoté avec l'attribut `#[starknet::"
"contract]`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:3
msgid ""
"This chapter will introduce you to the basics of Starknet contracts using a "
"very simple smart contract as example. You will learn how to write a "
"contract that allows anyone to store a single number on the Starknet "
"blockchain."
msgstr ""
"Ce chapitre vous présentera les bases des contrats Starknet en utilisant un "
"contrat intelligent très simple comme exemple. Vous apprendrez à écrire un "
"contrat qui permet à n'importe qui de stocker un seul numéro sur la "
"blockchain Starknet."

#: src/ch13-02-anatomy-of-a-simple-contract.md:5
msgid ""
"Let's consider the following contract for the whole chapter. It might not be "
"easy to understand it all at once, but we will go through it step by step:"
msgstr ""
"Considérons le contrat suivant pour l'ensemble du chapitre. Il n'est peut-"
"être pas facile de le comprendre tous à la fois, mais nous allons passer par "
"lui étape par étape:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:34
msgid "<span class=\"caption\">Listing 13-1: A simple storage contract</span>"
msgstr ""
"<span class=\"caption\">Liste 13-1: Un simple contrat de stockage</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:36
msgid "What Is this Contract?"
msgstr "C'est quoi ce contrat?"

#: src/ch13-02-anatomy-of-a-simple-contract.md:38
msgid ""
"Contracts are defined by encapsulating state and logic within a module "
"annotated with the `#[starknet::contract]` attribute."
msgstr ""
"Les contrats sont définis par encapsulation de l'état et de la logique dans "
"un module annoté avec l'attribut `#[starknet::contract]`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:40
msgid ""
"The state is defined within the `Storage` struct, and is always initialized "
"empty. Here, our struct contains a single a field called `stored_data` of "
"type `u128` (unsigned integer of 128 bits), indicating that our contract can "
"store any number between 0 and \\\\( {2^{128}} - 1 \\\\)."
msgstr ""
"L'état est défini dans la structure `Storage`, et est toujours initialisé "
"vide. Ici, notre structure contient un seul champ appelé `stored_data` de "
"type `u128` (entier non signé de 128 bits), indiquant que notre contrat peut "
"stocker n'importe quel nombre entre 0 et \\\\( {2^{128}} - 1 \\\\)."

#: src/ch13-02-anatomy-of-a-simple-contract.md:42
msgid ""
"The logic is defined by functions that interact with the state. Here, our "
"contract defines and publicly exposes the functions `set` and `get` that can "
"be used to modify or retrieve the value of the stored variable. You can "
"think of it as a single slot in a database that you can query and modify by "
"calling functions of the code that manages the database."
msgstr ""
"La logique est définie par des fonctions qui interagissent avec l'état. Ici, "
"notre contrat définit et expose publiquement les fonctions `set` et `get` "
"qui peuvent être utilisées pour modifier ou récupérer la valeur de la "
"variable stockée. Vous pouvez le considérer comme un seul emplacement dans "
"une base de données que vous pouvez interroger et modifier en appelant les "
"fonctions du code qui gère la base de données."

#: src/ch13-02-anatomy-of-a-simple-contract.md:45
msgid "The Interface: the Contract's Blueprint"
msgstr "L'interface : le plan directeur du contrat"

#: src/ch13-02-anatomy-of-a-simple-contract.md:55
msgid "<span class=\"caption\">Listing 13-2: A basic contract interface</span>"
msgstr ""
"<span class=\"caption\">Liste 13-2: Une interface de contrat de base</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:58
msgid ""
"Interfaces represent the blueprint of the contract. They define the "
"functions that the contract exposes to the outside world. In Cairo, they're "
"defined by annotating a trait with the `#[starknet::interface]` attribute. "
"All functions of the trait are considered public functions of any contract "
"that implements this trait, and are callable from the outside world."
msgstr ""
"Les interfaces représentent le plan du contrat. Elles définissent les "
"fonctions que le contrat expose au monde extérieur. Au Caire, elles sont "
"définies par annotation d'un trait avec l'attribut `#[starknet::interface]`. "
"Toutes les fonctions du trait sont considérées comme des fonctions publiques "
"de tout contrat qui implémente ce trait, et sont appelables du monde "
"extérieur."

#: src/ch13-02-anatomy-of-a-simple-contract.md:60
msgid ""
"All contract interfaces use a generic type for the `self` parameter, "
"representing the contract state. We chose to name this generic parameter "
"`TContractState` in our interface, but this is not enforced and any name can "
"be chosen."
msgstr ""
"Toutes les interfaces contractuelles utilisent un type générique pour le "
"paramètre `self`, représentant l'état du contrat. Nous avons choisi de "
"nommer ce paramètre générique `TContractState` dans notre interface, mais "
"cela n'est pas appliqué et n'importe quel nom peut être choisi."

#: src/ch13-02-anatomy-of-a-simple-contract.md:62
msgid ""
"In our interface, note the generic type `TContractState` of the `self` "
"argument which is passed by reference to the `set` function. Seeing the "
"`self` argument passed in a contract function tells us that this function "
"can access the state of the contract. The `ref` modifier implies that `self` "
"may be modified, meaning that the storage variables of the contract may be "
"modified inside the `set` function."
msgstr ""
"Dans notre interface, notez le type générique `TContractState` de l'argument "
"`self` qui est passé par référence à la fonction `set`. En voyant l'argument "
"`self` passé dans une fonction contractuelle nous indique que cette fonction "
"peut accéder à l'état du contrat. Le modificateur `ref` implique que `self` "
"peut être modifié, ce qui signifie que les variables de stockage du contrat "
"peuvent être modifiées à l'intérieur de la fonction `set`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:64
msgid ""
"On the other hand, the `get` function takes a snapshot of `TContractState`, "
"which immediately tells us that it does not modify the state (and indeed, "
"the compiler will complain if we try to modify storage inside the `get` "
"function)."
msgstr ""
"D'autre part, la fonction `get` prend un instantané de `TContractState`, qui "
"nous dit immédiatement qu'il ne modifie pas l'état (et en effet, le "
"compilateur se plaindra si nous essayons de modifier le stockage à "
"l'intérieur de la fonction `get`)."

#: src/ch13-02-anatomy-of-a-simple-contract.md:66
msgid ""
"By leveraging the [traits & impls](./ch08-02-traits-in-cairo.md) mechanism "
"from Cairo, we can make sure that the actual implementation of the contract "
"matches its interface. In fact, you will get a compilation error if your "
"contract doesn’t conform with the declared interface. For example, Listing "
"13-3 shows a wrong implementation of the `ISimpleStorage` interface, "
"containing a slightly different `set` function that doesn't have the same "
"signature."
msgstr ""
"En tirant parti du mécanisme [trats & impls](./ch08-02-trats-in-cairo.md) du "
"Caire, nous pouvons nous assurer que l'implémentation réelle du contrat "
"correspond à son interface. En fait, vous obtiendrez une erreur de "
"compilation si votre contrat ne se conforme pas à l'interface déclarée. Par "
"exemple, Listing 13-3 montre une mauvaise implémentation de l'interface "
"`ISimpleStorage`, contenant une fonction `set` légèrement différente qui n'a "
"pas la même signature."

#: src/ch13-02-anatomy-of-a-simple-contract.md:78
msgid ""
"<span class=\"caption\">Listing 13-3: A wrong implementation of the "
"interface of the contract. This does not compile, as the signature of `set` "
"doesn't match the trait's.</span>"
msgstr ""
"<span class=\"caption\">Liste 13-3: Une mauvaise implémentation de "
"l'interface du contrat. Cela ne compile pas, car la signature de `set` ne "
"correspond pas au caractère.</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:80
msgid ""
"Trying to compile a contract using this implementation will result in the "
"following error:"
msgstr ""
"Essayer de compiler un contrat en utilisant cette implémentation entraînera "
"l'erreur suivante:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:100
msgid "Public Functions Defined in an Implementation Block"
msgstr "Fonctions publiques définies dans un bloc de mise en œuvre"

#: src/ch13-02-anatomy-of-a-simple-contract.md:102
msgid "Before we explore things further down, let's define some terminology."
msgstr "Avant d'explorer les choses plus loin, définissons une terminologie."

#: src/ch13-02-anatomy-of-a-simple-contract.md:104
msgid ""
"In the context of Starknet, a _public function_ is a function that is "
"exposed to the outside world. A public function can be called by anyone, "
"either from outside the contract or from within the contract itself. In the "
"example above, `set` and `get` are public functions."
msgstr ""
"Dans le contexte de Starknet, une fonction publique est une fonction exposée "
"au monde extérieur. Une fonction publique peut être appelée par n'importe "
"qui, soit de l'extérieur du contrat, soit de l'intérieur du contrat lui-"
"même. Dans l'exemple ci-dessus, `set` et `get` sont des fonctions publiques."

#: src/ch13-02-anatomy-of-a-simple-contract.md:106
msgid ""
"What we call an _external_ function is a public function that can be "
"directly invoked through a Starknet transaction and that can mutate the "
"state of the contract. `set` is an external function."
msgstr ""
"Ce que nous appelons une fonction _externe_ est une fonction publique qui "
"peut être directement invoquée par le biais d'une transaction Starknet et "
"qui peut muter l'état du contrat. `set` est une fonction externe."

#: src/ch13-02-anatomy-of-a-simple-contract.md:108
msgid ""
"A _view_ function is a public function that is typically read-only and "
"cannot mutate the state of the contract. However, this limitation is only "
"enforced by the compiler, and not by Starknet itself. We will discuss the "
"implications of this in a later section. `get` is a view function."
msgstr ""
"Une fonction _view_ est une fonction publique qui est typiquement en lecture "
"seule et ne peut pas muter l'état du contrat. Cependant, cette limitation "
"n'est appliquée que par le compilateur, et non par Starknet lui-même. Nous "
"allons discuter des implications de cela dans une section ultérieure. `get` "
"est une fonction de vue."

#: src/ch13-02-anatomy-of-a-simple-contract.md:123
msgid ""
"<span class=\"caption\">Listing 13-4: `SimpleStorage` implementation</span>"
msgstr ""
"<span class=\"caption\">Liste 13-4: `SimpleStorage` implémentation</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:125
msgid ""
"Since the contract interface is defined as the `ISimpleStorage` trait, in "
"order to match the interface, the public functions of the contract must be "
"defined in an implementation of this trait — which allows us to make sure "
"that the implementation of the contract matches its interface."
msgstr ""
"Étant donné que l'interface contractuelle est définie comme le caractère "
"«ISimpleStorage», afin de correspondre à l'interface, les fonctions "
"publiques du contrat doivent être définies dans une mise en œuvre de ce "
"caractère, ce qui nous permet de nous assurer que la mise en œuvre du "
"contrat correspond à son interface."

#: src/ch13-02-anatomy-of-a-simple-contract.md:127
msgid ""
"However, simply defining the functions in the implementation block is not "
"enough. The implementation block must be annotated with the "
"`#[abi(embed_v0)]` attribute. This attribute exposes the functions defined "
"in this implementation to the outside world — forget to add it and your "
"functions will not be callable from the outside. All functions defined in a "
"block marked as `#[abi(embed_v0)]` are consequently _public functions_."
msgstr ""
"Cependant, la simple définition des fonctions dans le bloc d'implémentation "
"n'est pas suffisante. Le bloc d'implémentation doit être annoté avec "
"l'attribut `#[abi(embed_v0)]`. Cet attribut expose les fonctions définies "
"dans cette implémentation au monde extérieur — oublions de l'ajouter et vos "
"fonctions ne seront pas appelables de l'extérieur. Toutes les fonctions "
"définies dans un bloc marqué `#[abi(embed_v0)]` sont donc _public functions_."

#: src/ch13-02-anatomy-of-a-simple-contract.md:129
msgid ""
"Because the `SimpleStorage` contract is defined as a module, we need to "
"access the interface defined in the parent module. We can either bring it to "
"the current scope with the `use` keyword, or refer to it directly using "
"`super`."
msgstr ""
"Comme le contrat `SimpleStorage` est défini comme un module, nous devons "
"accéder à l'interface définie dans le module parent. Nous pouvons soit "
"l'amener à la portée actuelle avec le mot-clé `use`, soit y faire référence "
"directement en utilisant `super`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:131
msgid ""
"When writing the implementation of an interface, the `self` parameter in the "
"trait methods **must** be of type `ContractState`. The `ContractState` type "
"is generated by the compiler, and gives access to the storage variables "
"defined in the `Storage` struct. Additionally, `ContractState` gives us the "
"ability to emit events. The name `ContractState` is not surprising, as it’s "
"a representation of the contract’s state, which is what we think of `self` "
"in the contract interface trait. When `self` is a snapshot of "
"`ContractState`, only read access is allowed, and emitting events is not "
"possible."
msgstr ""
"Lors de l'écriture de la mise en œuvre d'une interface, le paramètre `self` "
"dans les méthodes de caractères **doit** être de type `ContractState`. Le "
"type `ContractState` est généré par le compilateur, et donne accès aux "
"variables de stockage définies dans la structure `Storage`. De plus, "
"`ContractState` nous donne la possibilité d'émettre des événements. Le nom "
"`ContractState` n'est pas surprenant, car il représente l'état du contrat, "
"ce qui est ce que nous pensons de `self` dans le trait d'interface du "
"contrat. Quand `self` est un instantané de `ContractState`, seul l'accès à "
"la lecture est autorisé, et l'émission d'événements n'est pas possible."

#: src/ch13-02-anatomy-of-a-simple-contract.md:135
msgid "Accessing and Modifying the Contract's State"
msgstr "Accès et modification de l'État du contrat"

#: src/ch13-02-anatomy-of-a-simple-contract.md:137
msgid ""
"Two methods are commonly used to access or modify the state of a contract:"
msgstr ""
"Deux méthodes sont couramment utilisées pour accéder ou modifier l'état d'un "
"contrat:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:138
msgid ""
"`read`, which returns the value of a storage variable. This method is called "
"on the variable itself and does not take any argument."
msgstr ""
"`read`, qui retourne la valeur d'une variable de stockage. Cette méthode est "
"appelée sur la variable elle-même et ne prend aucun argument."

#: src/ch13-02-anatomy-of-a-simple-contract.md:144
msgid ""
"`write`, which allows to write a new value in a storage slot. This method is "
"also called on the variable itself and takes one argument, which is the "
"value to be written. Note that `write` may take more than one argument, "
"depending on the type of the storage variable. For example, writing on a "
"mapping requires 2 arguments: the key and the value to be written."
msgstr ""
"`write`, qui permet d'écrire une nouvelle valeur dans un emplacement de "
"stockage. Cette méthode est également appelée sur la variable elle-même et "
"prend un argument, qui est la valeur à écrire. Notez que `write` peut "
"prendre plus d'un argument, en fonction du type de la variable de stockage. "
"Par exemple, écrire sur un mapping nécessite 2 arguments: la clé et la "
"valeur à écrire."

#: src/ch13-02-anatomy-of-a-simple-contract.md:150
msgid ""
"Reminder: if the contract state is passed as a snapshot with `@` instead of "
"passed by reference with `ref`, attempting to modify the contract state will "
"result in a compilation error."
msgstr ""
"Rappel : si l'état du contrat est passé comme un instantané avec `@` au lieu "
"de passer par référence avec `ref`, essayer de modifier l'état du contrat "
"entraînera une erreur de compilation."

#: src/ch13-02-anatomy-of-a-simple-contract.md:152
msgid ""
"This contract does not do much apart from allowing anyone to store a single "
"number that is accessible by anyone in the world. Anyone could call `set` "
"again with a different value and overwrite the current number. Nevertheless, "
"each value stored in the storage of the contract will still be stored in the "
"history of the blockchain. Later in this book, you will see how you can "
"impose access restrictions so that only you can alter the number."
msgstr ""
"Ce contrat ne fait pas grand-chose à part permettre à quiconque de stocker "
"un numéro unique accessible par n'importe qui dans le monde. N'importe qui "
"pourrait appeler `set` à nouveau avec une valeur différente et écraser le "
"numéro courant. Néanmoins, chaque valeur stockée dans le stockage du contrat "
"sera toujours stockée dans l'historique de la blockchain. Plus tard dans ce "
"livre, vous verrez comment vous pouvez imposer des restrictions d'accès afin "
"que vous puissiez seulement modifier le numéro."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"In the previous section, we gave an introductory example of a smart contract "
"written in Cairo, describing the basic blocks to build smart contracts on "
"Starknet. In this section, we'll be taking a deeper look at all the "
"components of a smart contract, step by step."
msgstr ""
"Dans la section précédente, nous avons donné un exemple introductif d'un "
"contrat intelligent écrit au Caire, décrivant les blocs de base pour "
"construire des contrats intelligents sur Starknet. Dans cette section, nous "
"allons jeter un regard plus profond sur tous les composants d'un contrat "
"intelligent, étape par étape."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"When we discussed [_interfaces_](./ch13-02-anatomy-of-a-simple-contract."
"md#the-interface-the-contracts-blueprint), we specified the difference "
"between the two types of _public functions_, i.e., _external functions_ and "
"_view functions_, and we mentioned how to interact with the _storage_ of a "
"contract."
msgstr ""
"Lorsque nous avons discuté de [_interfaces_](./ch13-02-anatomy-of-a-simple-"
"contract.md#the-interface-the-contracts-blueprint), nous avons précisé la "
"différence entre les deux types de fonctions _publiques_, c'est-à-dire les "
"fonctions _externes_ et _view_, et nous avons mentionné comment interagir "
"avec le _stockage_ d'un contrat."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "At this point, you should have multiple questions that come to mind:"
msgstr ""
"À ce stade, vous devriez avoir plusieurs questions qui viennent à l'esprit:"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How can I store more complex data types?"
msgstr "Comment puis-je stocker des types de données plus complexes?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How do I define internal/private functions?"
msgstr "Comment définir les fonctions internes/privées?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How can I emit events? How can I index them?"
msgstr "Comment puis-je émettre des événements? Comment puis-je les indexer?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "Is there a way to reduce the boilerplate?"
msgstr "Y a-t-il un moyen de réduire la plaque de chaudière?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"Luckily, we'll be answering all these questions in this chapter. Let's "
"consider the `NameRegistry` contract in Listing 14-1 that we'll be using "
"throughout this chapter:"
msgstr ""
"Heureusement, nous répondrons à toutes ces questions dans ce chapitre. "
"Considérons le contrat `NameRegistry` dans Listing 14-1 que nous utiliserons "
"tout au long de ce chapitre:"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:62 src/ch14-01-contract-storage.md:184
#: src/ch14-01-contract-storage.md:297 src/ch14-01-contract-storage.md:403
#: src/ch14-01-contract-storage.md:509 src/ch14-01-contract-storage.md:615
#: src/ch14-01-contract-storage.md:727 src/ch14-01-contract-storage.md:833
#: src/ch14-02-contract-functions.md:38
msgid "// Public functions inside an impl block\n"
msgstr "// Fonctions publiques à l'intérieur d'un bloc impl\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:79 src/ch14-01-contract-storage.md:201
#: src/ch14-01-contract-storage.md:314 src/ch14-01-contract-storage.md:420
#: src/ch14-01-contract-storage.md:526 src/ch14-01-contract-storage.md:632
#: src/ch14-01-contract-storage.md:744 src/ch14-01-contract-storage.md:850
#: src/ch14-02-contract-functions.md:97
msgid "// Standalone public function\n"
msgstr "// Fonction publique autonome\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:85 src/ch14-01-contract-storage.md:207
#: src/ch14-01-contract-storage.md:320 src/ch14-01-contract-storage.md:426
#: src/ch14-01-contract-storage.md:532 src/ch14-01-contract-storage.md:638
#: src/ch14-01-contract-storage.md:750 src/ch14-01-contract-storage.md:856
#: src/ch14-02-contract-functions.md:112
msgid "// Could be a group of functions about a same topic\n"
msgstr "// Peut être un groupe de fonctions sur un même sujet\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:102 src/ch14-01-contract-storage.md:224
#: src/ch14-01-contract-storage.md:337 src/ch14-01-contract-storage.md:443
#: src/ch14-01-contract-storage.md:549 src/ch14-01-contract-storage.md:655
#: src/ch14-01-contract-storage.md:767 src/ch14-01-contract-storage.md:873
#: src/ch14-02-contract-functions.md:129
msgid "// Free function\n"
msgstr "// Fonction libre\n"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"<span class=\"caption\">Listing 14-1: Our reference contract for this "
"chapter</span>"
msgstr ""
"<span class=\"caption\">Liste 14-1: Notre contrat de référence pour ce "
"chapitre</span>"

#: src/ch14-01-contract-storage.md:3
msgid ""
"The most common way for interacting with a contract’s storage is through "
"storage variables. As stated previously, storage variables allow you to "
"store data that will be stored in the contract's storage that is itself "
"stored on the blockchain. These data are persistent and can be accessed and "
"potentially modified anytime once the contract is deployed."
msgstr ""
"Comme indiqué précédemment, les variables de stockage vous permettent de "
"stocker des données qui seront stockées dans le stockage du contrat qui est "
"lui-même stocké sur la blockchain. Ces données sont persistantes et peuvent "
"être consultées et éventuellement modifiées à tout moment une fois le "
"contrat déployé."

#: src/ch14-01-contract-storage.md:5
msgid ""
"Storage variables in Starknet contracts are stored in a special struct "
"called `Storage`:"
msgstr ""
"Les variables de stockage dans les contrats Starknet sont stockées dans une "
"structure spéciale appelée `Storage`:"

#: src/ch14-01-contract-storage.md:111
msgid ""
"The `Storage` struct is a [struct](./ch05-00-using-structs-to-structure-"
"related-data.md) like any other, except that it **must** be annotated with "
"the `#[storage]` attribute. This annotation tells the compiler to generate "
"the required code to interact with the blockchain state, and allows you to "
"read and write data from and to storage. Moreover, this allows you to define "
"storage mappings using the dedicated `LegacyMap` type."
msgstr ""
"La structure `Storage` est un [struct](./ch05-00-using-structs-to-structure-"
"related-data.md) comme tout autre, sauf qu'elle **doit** être annotée avec "
"l'attribut `#[storage]`. Cette annotation indique au compilateur de générer "
"le code requis pour interagir avec l'état de la chaîne de blocs, et vous "
"permet de lire et d'écrire des données depuis et jusqu'au stockage. De plus, "
"cela vous permet de définir des mappages de stockage en utilisant le type "
"`LegacyMap` dédié."

#: src/ch14-01-contract-storage.md:113
msgid ""
"Variables declared in the `Storage` struct are not stored contiguously but "
"in different locations in the contract's storage. The storage address of a "
"particular variable is determined by the variable's name, and the eventual "
"keys of the variable if it is a mapping."
msgstr ""
"Les variables déclarées dans la structure `Storage` ne sont pas stockées de "
"manière contiguë, mais dans différents emplacements du stockage du contrat. "
"L'adresse de stockage d'une variable particulière est déterminée par le nom "
"de la variable et les clés éventuelles de la variable si elle est un mappage."

#: src/ch14-01-contract-storage.md:117
msgid "Addresses of Storage Variables"
msgstr "Adresses des variables de stockage"

#: src/ch14-01-contract-storage.md:119
msgid "The address of a storage variable is computed as follows:"
msgstr "L'adresse d'une variable de stockage est calculée comme suit:"

#: src/ch14-01-contract-storage.md:121
msgid ""
"If the variable is a single value, the address is the `sn_keccak` hash of "
"the ASCII encoding of the variable's name. `sn_keccak` is Starknet's version "
"of the Keccak256 hash function, whose output is truncated to 250 bits."
msgstr ""
"Si la variable est une valeur unique, l'adresse est le hachage `sn_keccak` "
"de l'encodage ASCII du nom de la variable. `sn_keccak` est la version de "
"Starknet de la fonction de hachage Keccak256, dont la sortie est tronquée à "
"250 bits."

#: src/ch14-01-contract-storage.md:123
msgid ""
"If the variable is composed of multiple values (i.e., a tuple, a struct or "
"an enum), we also use the `sn_keccak` hash of the ASCII encoding of the "
"variable's name to determine the base address in storage. Then, depending on "
"the type, the storage layout will differ. See the [\"Storing Custom Types\"]"
"(./ch14-01-contract-storage.md#storing-custom-types) section."
msgstr ""
"Si la variable est composée de plusieurs valeurs (c.-à-d. un tuple, un "
"struct ou un enum), nous utilisons également le hash `sn_keccak` de "
"l'encodage ASCII du nom de la variable pour déterminer l'adresse de base "
"dans le stockage. Ensuite, selon le type, la mise en page de stockage sera "
"différente. Voir la section [./ch14-01-contract-storage.md#storing-custom-"
"types)."

#: src/ch14-01-contract-storage.md:125
msgid ""
"If the variable is a [mapping](./ch14-01-contract-storage.html#storage-"
"mappings) with a key `k`, the address of the value at key `k` is "
"`h(sn_keccak(variable_name),k)`, where ℎ is the Pedersen hash and the final "
"value is taken modulo \\\\( {2^{251}} - 256\\\\). If the key is composed of "
"more than one `felt252`, the address of the value will be `h(..."
"h(h(sn_keccak(variable_name),k_1),k_2),...,k_n)`, with `k_1,...,k_n` being "
"all `felt252` that constitute the key. In the case of mappings to complex "
"values (e.g., tuples or structs), then this complex value lies in a "
"continuous segment starting from the address calculated with the previous "
"formula. Note that 256 field elements is the current limitation on the "
"maximal size of a complex storage value."
msgstr ""
"Si la variable est un [mapping](./ch14-01-contract-storage.html#storage-"
"mappings) avec une clé `k`, l'adresse de la valeur à la clé `k` est "
"`h(sn_keccak(variable_name),k)`, où h est le hash de Pedersen et la valeur "
"finale est prise modulo \\\\( {2^{251} - 256\\). Si la clé est composée de "
"plus d'un `felt252`, l'adresse de la valeur sera `h(..."
"h(sn_keccak(variable_name),k_1),k_2),...,k_n)`, avec `k_1,...,k_n` étant "
"tous `felt252` qui constituent la clé. Dans le cas de mappings vers des "
"valeurs complexes (par exemple, tuples ou structs), alors cette valeur "
"complexe se situe dans un segment continu à partir de l'adresse calculée "
"avec la formule précédente."

#: src/ch14-01-contract-storage.md:127
msgid ""
"You can access the address of a storage variable by calling the `address` "
"function on the variable, which returns a `StorageBaseAddress` value."
msgstr ""
"Vous pouvez accéder à l'adresse d'une variable de stockage en appelant la "
"fonction `address` sur la variable, qui retourne une valeur "
"`StorageBaseAddress`."

#: src/ch14-01-contract-storage.md:236
msgid "Interacting with Storage Variables"
msgstr "Interagir avec les variables de stockage"

#: src/ch14-01-contract-storage.md:238
msgid ""
"Variables stored in the `Storage` struct can be accessed and modified using "
"the `read` and `write` functions, respectively. As previously mentioned, you "
"can get their address in storage using the `address` function. All these "
"functions are automatically generated by the compiler for each storage "
"variable."
msgstr ""
"Les variables stockées dans la structure `Storage` peuvent être consultées "
"et modifiées en utilisant les fonctions `read` et `write` respectivement. "
"Comme mentionné précédemment, vous pouvez obtenir leur adresse dans le "
"stockage en utilisant la fonction `address`. Toutes ces fonctions sont "
"automatiquement générées par le compilateur pour chaque variable de stockage."

#: src/ch14-01-contract-storage.md:240
msgid ""
"To read the value of the `owner` storage variable, which is a single value, "
"we call the `read` function on the `owner` variable, passing in no "
"parameters."
msgstr ""
"Pour lire la valeur de la variable de stockage `owner`, qui est une valeur "
"unique, nous appelons la fonction `read` sur la variable `owner`, en passant "
"en aucun paramètre."

#: src/ch14-01-contract-storage.md:346
msgid ""
"To read the value of the storage variable `names`, which is a mapping from "
"`ContractAddress` to `felt252`, we call the `read` function on the `names` "
"variable, passing in the key `address` as a parameter. If the mapping had "
"more than one key, we would pass in the other keys as parameters as well."
msgstr ""
"Pour lire la valeur de la variable de stockage `names`, qui est un mapping "
"de `ContractAddress` à `felt252`, nous appelons la fonction `read` sur la "
"variable `names`, en passant dans la clé `address` comme paramètre. Si le "
"mapping avait plus d'une clé, nous passerions dans les autres clés comme "
"paramètres."

#: src/ch14-01-contract-storage.md:452
msgid ""
"To write a new value to the storage slot of a storage variable, we call the "
"`write` function passing in the eventual keys and the value as arguments. As "
"with the `read` function, the number of arguments depends on the storage "
"variable type. Here, we only pass in the value to write to the `owner` "
"variable as it is a simple variable."
msgstr ""
"Pour écrire une nouvelle valeur à la fente de stockage d'une variable de "
"stockage, nous appelons la fonction `write` passant dans les clés "
"éventuelles et la valeur comme arguments. Comme pour la fonction `read`, le "
"nombre d'arguments dépend du type de variable de stockage. Ici, nous passons "
"seulement dans la valeur pour écrire à la variable `owner` comme c'est une "
"variable simple."

#: src/ch14-01-contract-storage.md:558
msgid ""
"In this second example, we need to pass `user` and `name` as arguments, "
"because `names` is a mapping, with `user` as key and `name` as value."
msgstr ""
"Dans ce deuxième exemple, nous devons passer `user` et `name` comme "
"arguments, parce que `names` est un mapping, avec `user` comme clé et `name` "
"comme valeur."

#: src/ch14-01-contract-storage.md:664
msgid "Storing Custom Types"
msgstr "Stockage des types personnalisés"

#: src/ch14-01-contract-storage.md:666
msgid ""
"The `Store` trait, defined in the `starknet::storage_access` module, is used "
"to specify how a type should be stored in storage. In order for a type to be "
"stored in storage, it **must** implement the `Store` trait. Most types from "
"the core library, such as unsigned integers (`u8`, `u128`, `u256`...), "
"`felt252`, `bool`, `ByteArray`, `ContractAddress`, etc. implement the "
"`Store` trait and can thus be stored without further action."
msgstr ""
"Le caractère `Store`, défini dans le module `starknet::storage_access`, est "
"utilisé pour spécifier comment un type doit être stocké. Pour qu'un type "
"soit stocké, il **doit** implémenter le caractère `Store`. La plupart des "
"types de la bibliothèque centrale, tels que les entiers non signés (`u8`, "
"`u128`, `u256`...), `felt252`, `bool`, `ByteArray`, `ContractAddress`, etc., "
"implémentent le caractère `Store` et peuvent donc être stockés sans autre "
"action."

#: src/ch14-01-contract-storage.md:668
msgid ""
"But what if you wanted to store a type that you defined yourself, such as an "
"enum or a struct? In that case, you have to explicitly tell the compiler how "
"to store this type."
msgstr ""
"Mais que faire si vous vouliez stocker un type que vous avez défini vous-"
"même, comme un enum ou un struct? Dans ce cas, vous devez explicitement dire "
"au compilateur comment stocker ce type."

#: src/ch14-01-contract-storage.md:670
msgid ""
"In our example, we want to store a `Person` struct in storage, which is only "
"possible by implementing the `Store` trait for the `Person` type. This can "
"be simply achieved by adding a `#[derive(starknet::Store)]` attribute on top "
"of our struct definition. Note that all the members of the struct need to "
"implement the `Store` trait."
msgstr ""
"Dans notre exemple, nous voulons stocker une structure `Personne` dans le "
"stockage, ce qui n'est possible qu'en implémentant le caractère `Store` pour "
"le type `Personne`. Cela peut être simplement réalisé en ajoutant un "
"attribut `#[derive(starknet::Store)]` en plus de notre définition de "
"structure. Notez que tous les membres de la structure doivent mettre en "
"œuvre le caractère `Store`."

#: src/ch14-01-contract-storage.md:776
msgid ""
"Similarly, Enums can only be written to storage if they implement the "
"`Store` trait, which can be trivially derived as long as all associated "
"types implement the `Store` trait."
msgstr ""
"De même, les Enums ne peuvent être stockés que s'ils mettent en œuvre le "
"caractère `Store`, qui peut être dérivé trivialement tant que tous les types "
"associés mettent en œuvre le caractère `Store`."

#: src/ch14-01-contract-storage.md:882
msgid ""
"You might have noticed that we also derived `Drop` and `Serde` on our custom "
"types. Both of them are required for properly serializing arguments passed "
"to entrypoints and deserializing their outputs."
msgstr ""
"Vous avez peut-être remarqué que nous avons également dérivé `Drop` et "
"`Serde` sur nos types personnalisés. Les deux sont nécessaires pour "
"sérialiser correctement les arguments passés aux points d'entrée et "
"désérialiser leurs sorties."

#: src/ch14-01-contract-storage.md:884
msgid "Structs Storage Layout"
msgstr "Structure de stockage des structures"

#: src/ch14-01-contract-storage.md:886
msgid ""
"On Starknet, structs are stored in storage as a sequence of primitive types. "
"The elements of the struct are stored in the same order as they are defined "
"in the struct definition. The first element of the struct is stored at the "
"base address of the struct, which is computed as specified in [\"Addresses "
"of Storage Variables\"](./ch14-01-contract-storage.html#addresses-of-storage-"
"variables) section and can be obtained by calling `var.address()`, and "
"subsequent elements are stored at addresses contiguous to the first element. "
"For example, the storage layout for the `owner` variable of type `Person` "
"will result in the following layout:"
msgstr ""
"Sur Starknet, les structures sont stockées dans une séquence de types "
"primitifs. Les éléments de la structure sont stockés dans le même ordre que "
"ceux définis dans la définition de la structure. Le premier élément de la "
"structure est stocké à l'adresse de base de la structure, qui est calculée "
"comme spécifié dans la section [./ch14-01-contract-storage.html#addresses-of-"
"storage-variables) et peut être obtenu en appelant `var.address()`, et les "
"éléments suivants sont stockés aux adresses contiguës au premier élément. "
"Par exemple, la mise en page de stockage de la variable `owner` du type "
"`Person` entraînera la mise en page suivante:"

#: src/ch14-01-contract-storage.md:890
msgid "Fields"
msgstr "Champs"

#: src/ch14-01-contract-storage.md:890 src/ch14-01-contract-storage.md:905
#: src/ch14-01-contract-storage.md:912
msgid "Address"
msgstr "Adresse"

#: src/ch14-01-contract-storage.md:892
msgid "name"
msgstr "Dénomination"

#: src/ch14-01-contract-storage.md:892
msgid "owner.address()"
msgstr "adresse du propriétaire()"

#: src/ch14-01-contract-storage.md:893
msgid "address"
msgstr "Adresse"

#: src/ch14-01-contract-storage.md:893
msgid "owner.address() +1"
msgstr "adresse du propriétaire() +1"

#: src/ch14-01-contract-storage.md:895
msgid ""
"Note that tuples are similarly stored in contract's storage, with the first "
"element of the tuple being stored at the base address, and subsequent "
"elements stored contiguously."
msgstr ""
"Notez que les tuples sont également stockés dans le stockage du contrat, le "
"premier élément du tuple étant stocké à l'adresse de base, et les éléments "
"subséquents stockés de manière contiguë."

#: src/ch14-01-contract-storage.md:899
msgid "Enums Storage Layout"
msgstr "Mise en page de stockage des enums"

#: src/ch14-01-contract-storage.md:901
msgid ""
"When you store an enum variant, what you're essentially storing is the "
"variant's index and eventual associated values. This index starts at 0 for "
"the first variant of your enum and increments by 1 for each subsequent "
"variant. If your variant has an associated value, this value is stored "
"starting from the address immediately following the address of the index of "
"the variant. For example, suppose we have the `RegistrationType` enum with "
"the `finite` variant that carries an associated limit date, and the "
"`infinite` variant without associated data. The storage layout for the "
"`finite` variant would look like this:"
msgstr ""
"Lorsque vous stockez une variante d'enum, ce que vous stockez "
"essentiellement est l'index de la variante et les valeurs associées "
"éventuelles. Cet index commence à 0 pour la première variante de votre enum "
"et incréments par 1 pour chaque variante suivante. Si votre variante a une "
"valeur associée, cette valeur est stockée à partir de l'adresse "
"immédiatement après l'adresse de l'index de la variante. Par exemple, "
"supposons que nous ayons l'enum `RegistrationType` avec la variante `finite` "
"qui porte une date limite associée, et la variante `infini` sans données "
"associées. La disposition de stockage pour la variante `finite` "
"ressemblerait à ceci:"

#: src/ch14-01-contract-storage.md:905 src/ch14-01-contract-storage.md:912
msgid "Element"
msgstr "Élément"

#: src/ch14-01-contract-storage.md:907
msgid "Variant index (0 for finite)"
msgstr "Indice de variation (0 pour les produits finis)"

#: src/ch14-01-contract-storage.md:907 src/ch14-01-contract-storage.md:914
msgid "registration_type.address()"
msgstr "registration_type.address()"

#: src/ch14-01-contract-storage.md:908
msgid "Associated limit date"
msgstr "Date limite associée"

#: src/ch14-01-contract-storage.md:908
msgid "registration_type.address() + 1"
msgstr "registration_type.address() + 1"

#: src/ch14-01-contract-storage.md:910
msgid "while the storage layout for the `infinite` would be as follows:"
msgstr "Alors que la disposition de stockage pour l'infini serait la suivante:"

#: src/ch14-01-contract-storage.md:914
msgid "Variant index (1 for infinite)"
msgstr "Indice de variation (1 pour infini)"

#: src/ch14-01-contract-storage.md:916
msgid "Storage Mappings"
msgstr "Cartes de stockage"

#: src/ch14-01-contract-storage.md:918
msgid ""
"Storage mappings are similar to hash tables in that they allow mapping keys "
"to values. However, unlike a typical hash table, the key data itself is not "
"stored - only its hash is used to look up the associated value in the "
"contract's storage. Mappings do not have a concept of length or whether a "
"key/value pair is set. All values are by default set to 0. The only way to "
"remove an entry from a mapping is to set its value to the default zero value."
msgstr ""
"Les mappages de stockage sont similaires aux tables de hachage en ce sens "
"qu'ils permettent aux clés de mappage de valeurs. Cependant, contrairement à "
"une table de hachage typique, les données de la clé elle-même ne sont pas "
"stockées - seul son hachage est utilisé pour rechercher la valeur associée "
"dans le stockage du contrat. Les mappages n'ont pas de concept de longueur "
"ou si une paire clé/valeur est définie. Toutes les valeurs sont par défaut "
"définies à 0. La seule façon de supprimer une entrée d'une mappage est de "
"définir sa valeur à la valeur de zéro par défaut."

#: src/ch14-01-contract-storage.md:921
msgid ""
"Mappings are only used to compute the location of data in the storage of a "
"contract given certain keys. They are thus **only allowed as storage "
"variables**. They cannot be used as parameters or return parameters of "
"contract functions, and cannot be used as types inside structs."
msgstr ""
"Les cartes ne sont utilisées que pour calculer l'emplacement des données "
"dans le stockage d'un contrat avec certaines clés. Elles sont donc ** "
"seulement autorisées comme variables de stockage**. Elles ne peuvent pas "
"être utilisées comme paramètres ou paramètres de retour des fonctions de "
"contrat, et ne peuvent pas être utilisées comme types à l'intérieur des "
"structures."

#: src/ch14-01-contract-storage.md:933
msgid ""
"To declare a mapping, use the `LegacyMap` type enclosed in angle brackets "
"`<>`, specifying the key and value types."
msgstr ""
"Pour déclarer une cartographie, utilisez le type `LegacyMap` entre "
"parenthèses `<>`, en spécifiant les types de clé et de valeur."

#: src/ch14-01-contract-storage.md:936
msgid ""
"You can also create more complex mappings with multiple keys. You can find "
"in Listing 14-2 the popular `allowances` storage variable of the ERC20 "
"Standard which maps an `owner` and an allowed `spender` to their `allowance` "
"amount using multiple keys passed inside a tuple:"
msgstr ""
"Vous pouvez également créer des mappings plus complexes avec plusieurs clés. "
"Vous pouvez trouver dans Listing 14-2 la variable populaire de stockage "
"`allowances` de la norme ERC20 qui map un `propriétaire` et un `spender` "
"autorisé à leur montant `allowance` en utilisant plusieurs clés passées à "
"l'intérieur d'un tuple:"

#: src/ch14-01-contract-storage.md:945
msgid ""
"<span class=\"caption\">Listing 14-2: Storing a mapping with multiple keys "
"inside a tuple</span>"
msgstr ""
"<span class=\"caption\">Liste 14-2: Stocker une carte avec plusieurs touches "
"à l'intérieur d'un tuple</span>"

#: src/ch14-01-contract-storage.md:947
msgid ""
"The address in storage of a variable stored in a mapping is computed "
"according to the description in the [\"Addresses of Storage Variables\"](./"
"ch14-01-contract-storage.html#addresses-of-storage-variables) section."
msgstr ""
"L'adresse dans le stockage d'une variable stockée dans une cartographie est "
"calculée selon la description dans la section [./ch14-01-contract-storage."
"html#addresses-of-storage-variables)."

#: src/ch14-01-contract-storage.md:949
msgid ""
"If the key of a mapping is a struct, each element of the struct constitutes "
"a key. Moreover, the struct should implement the `Hash` trait, which can be "
"derived with the `#[derive(Hash)]` attribute. For example, if you have a "
"struct with two fields, the address will be `h(h(sn_keccak(variable_name),"
"k_1),k_2)` modulo \\\\( {2^{251}} - 256\\\\), where `k_1` and `k_2` are the "
"values of the two fields of the struct."
msgstr ""
"Si la clé d'un mapping est une structure, chaque élément de la structure "
"constitue une clé. De plus, la structure devrait implémenter le caractère "
"`Hash`, qui peut être dérivé avec l'attribut `#[derive(Hash)]`. Par exemple, "
"si vous avez une structure avec deux champs, l'adresse sera "
"`h(h(sn_keccak(variable_name),k_1),k_2)` modulo \\\\( {2^{251}} - 256\\\\), "
"où `k_1` et `k_2` sont les valeurs des deux champs de la structure."

#: src/ch14-01-contract-storage.md:951
msgid ""
"Similarly, in the case of a nested mapping using a tuple as key, such as "
"`LegacyMap::<(ContractAddress, ContractAddress), u8>`, the address will be "
"computed in the same way, with each element of the tuple being a key: "
"`h(h(sn_keccak(variable_name),k_1),k_2)`."
msgstr ""
"De même, dans le cas d'une cartographie imbriquée utilisant un tuple comme "
"clé, comme `LegacyMap::<(ContractAddress, ContractAddress), u8>`, l'adresse "
"sera calculée de la même manière, chaque élément du tuple étant une clé: "
"`h(h(sn_keccak(variable_name),k_1),k_2)`."

#: src/ch14-02-contract-functions.md:3
msgid ""
"In this section, we are going to be looking at the different types of "
"functions you could encounter in Starknet smart contracts."
msgstr ""
"Dans cette section, nous allons examiner les différents types de fonctions "
"que vous pourriez rencontrer dans les contrats intelligents Starknet."

#: src/ch14-02-contract-functions.md:5
msgid ""
"Functions can access the contract's state easily via `self: ContractState`, "
"which abstracts away the complexity of underlying system calls "
"(`storage_read_syscall` and `storage_write_syscall`). The compiler provides "
"two modifiers: `ref` and `@` to decorate `self`, which intends to "
"distinguish view and external functions."
msgstr ""
"Les fonctions peuvent accéder facilement à l'état du contrat via `self: "
"ContractState`, qui supprime la complexité des appels système sous-jacents "
"(`storage_read_syscall` et `storage_write_syscall`). Le compilateur fournit "
"deux modificateurs: `ref` et `@` pour décorer `self`, qui a l'intention de "
"distinguer la vue et les fonctions externes."

#: src/ch14-02-contract-functions.md:7
msgid "1. Constructors"
msgstr "1. Constructeurs"

#: src/ch14-02-contract-functions.md:9
msgid ""
"Constructors are a special type of function that only runs once when "
"deploying a contract, and can be used to initialize the state of a contract."
msgstr ""
"Les constructeurs sont un type spécial de fonction qui ne fonctionne qu'une "
"seule fois lors du déploiement d'un contrat, et peut être utilisé pour "
"initialiser l'état d'un contrat."

#: src/ch14-02-contract-functions.md:20
msgid "Some important rules to note:"
msgstr "Quelques règles importantes à noter:"

#: src/ch14-02-contract-functions.md:22
msgid "A contract can't have more than one constructor."
msgstr "Un contrat ne peut pas avoir plus d'un constructeur."

#: src/ch14-02-contract-functions.md:23
msgid ""
"The constructor function must be named `constructor`, and must be annotated "
"with the `#[constructor]` attribute."
msgstr ""
"La fonction constructeur doit être nommée `constructeur` et doit être "
"annotée avec l'attribut `#[constructeur]`."

#: src/ch14-02-contract-functions.md:25
msgid ""
"The `constructor` function might take arguments, which are passed when "
"deploying the contract. In our example, we pass some value corresponding to "
"a `Person` type as argument in order to store the `owner` information "
"(address and name) in the contract."
msgstr ""
"La fonction `constructeur` peut prendre des arguments, qui sont passés lors "
"du déploiement du contrat. Dans notre exemple, nous passons une certaine "
"valeur correspondant à un type `Personne` comme argument afin de stocker les "
"informations `propriétaires` (adresse et nom) dans le contrat."

#: src/ch14-02-contract-functions.md:27
msgid ""
"Note that the `constructor` function **must** take `self` as a first "
"argument, corresponding to the state of the contract, generally passed by "
"reference with the `ref` keyword to be able to modify the contract's state. "
"We will explain `self` and its type shortly."
msgstr ""
"Notez que la fonction `constructeur` **doit** prendre `self` comme premier "
"argument, correspondant à l'état du contrat, généralement passé par "
"référence avec le mot clé `ref` pour être en mesure de modifier l'état du "
"contrat. Nous allons expliquer `self` et son type sous peu."

#: src/ch14-02-contract-functions.md:29
msgid "2. Public Functions"
msgstr "2. Fonctions publiques"

#: src/ch14-02-contract-functions.md:31
msgid ""
"As stated previously, public functions are accessible from outside of the "
"contract. They are usually defined inside an implementation block annotated "
"with the `#[abi(embed_v0)]` attribute, but might also be defined "
"independently under the `#[external(v0)]` attribute."
msgstr ""
"Comme indiqué précédemment, les fonctions publiques sont accessibles en "
"dehors du contrat. Elles sont généralement définies à l'intérieur d'un bloc "
"d'implémentation annoté avec l'attribut `#[abi(embed_v0)]`, mais peuvent "
"aussi être définies indépendamment sous l'attribut `#[external(v0)]`."

#: src/ch14-02-contract-functions.md:33
msgid ""
"The `#[abi(embed_v0)]` attribute means that all functions embedded inside it "
"are implementations of the Starknet interface of the contract, and therefore "
"potential entry points."
msgstr ""
"L'attribut `#[abi(embed_v0)]` signifie que toutes les fonctions intégrées à "
"l'intérieur sont des implémentations de l'interface Starknet du contrat, et "
"donc des points d'entrée potentiels."

#: src/ch14-02-contract-functions.md:35
msgid ""
"Annotating an impl block with the `#[abi(embed_v0)]` attribute only affects "
"the visibility (i.e., public vs private/internal) of the functions it "
"contains, but it doesn't inform us on the ability of these functions to "
"modify the state of the contract."
msgstr ""
"L'annotation d'un bloc impl avec l'attribut `#[abi(embed_v0)]` n'affecte que "
"la visibilité (c'est-à-dire publique vs privée/interne) des fonctions qu'il "
"contient, mais il ne nous informe pas sur la capacité de ces fonctions à "
"modifier l'état du contrat."

#: src/ch14-02-contract-functions.md:56
msgid ""
"Similarly to the `constructor` function, all public functions, either "
"standalone functions annotated with the `#[external(v0)]` or functions "
"within an impl block annotated with the `#[abi(embed_v0)]` attribute, "
"**must** take `self` as a first argument. This is not the case for private "
"functions."
msgstr ""
"De même que la fonction `constructeur`, toutes les fonctions publiques, soit "
"des fonctions autonomes annotées avec le `#[external(v0)]`, soit des "
"fonctions dans un bloc impl annoté avec l'attribut `#[abi(embed_v0)]`, "
"**must** prendre `self` comme premier argument, ce qui n'est pas le cas pour "
"les fonctions privées."

#: src/ch14-02-contract-functions.md:58
msgid "External Functions"
msgstr "Fonctions extérieures"

#: src/ch14-02-contract-functions.md:60
msgid ""
"External functions are _public_ functions where the `self: ContractState` "
"argument is passed by reference with the `ref` keyword, which exposes both "
"the `read` and `write` access to storage variables. This allows modifying "
"the state of the contract via `self` directly."
msgstr ""
"Les fonctions externes sont des fonctions _public_ où l'argument `self: "
"ContractState` est passé par référence avec le mot clé `ref`, qui expose à "
"la fois l'accès `read` et `write` aux variables de stockage. Cela permet de "
"modifier l'état du contrat via `self` directement."

#: src/ch14-02-contract-functions.md:69
msgid "View Functions"
msgstr "Fonctions d'affichage"

#: src/ch14-02-contract-functions.md:71
msgid ""
"View functions are _public_ functions where the `self: ContractState` "
"argument is passed as snapshot, which only allows the `read` access to "
"storage variables, and restricts writes to storage made via `self` by "
"causing compilation errors. The compiler will mark their `state_mutability` "
"to `view`, preventing any state modification through `self` directly."
msgstr ""
"Les fonctions d'affichage sont des fonctions _public_ où l'argument `self: "
"ContractState` est passé comme instantané, ce qui permet seulement l'accès "
"`read` aux variables de stockage, et restreint les écritures au stockage "
"faites via `self` en causant des erreurs de compilation. Le compilateur va "
"marquer leur `state_mutability` à `view`, empêchant toute modification "
"d'état via `self` directement."

#: src/ch14-02-contract-functions.md:80
msgid "State Mutability of Public Functions"
msgstr "Mutation des fonctions publiques par l'État"

#: src/ch14-02-contract-functions.md:82
msgid ""
"However, as you may have noticed, passing `self` as a snapshot only "
"restricts the storage write access via `self` at compile time. It does not "
"prevent state modification via direct system calls, nor calling another "
"contract that would modify the state."
msgstr ""
"Cependant, comme vous l'avez peut-être remarqué, le fait de passer `self` en "
"tant qu'instantané limite uniquement l'accès d'écriture de stockage via "
"`self` au moment de la compilation."

#: src/ch14-02-contract-functions.md:84
msgid ""
"The read-only property of view functions is not enforced on Starknet, and "
"sending a transaction targeting a view function _could_  change the state."
msgstr ""
"La propriété en lecture seule des fonctions de vue n'est pas imposée sur "
"Starknet, et l'envoi d'une transaction ciblant une fonction de vue _could_ "
"change l'état."

#: src/ch14-02-contract-functions.md:86
msgid ""
"In conclusion, even though external and view functions are distinguished by "
"the Cairo compiler, **all public functions** can be called through an invoke "
"transaction and have the potential to modify states on Starknet. Also, all "
"public functions can be queried via `starknet_call` on Starknet, which will "
"not create a transaction and hence will not change the state."
msgstr ""
"En conclusion, même si les fonctions externes et les fonctions de vue sont "
"distinguées par le compilateur du Caire, ** toutes les fonctions publiques** "
"peuvent être appelées par une transaction d'invocation et ont le potentiel "
"de modifier les états sur Starknet. De plus, toutes les fonctions publiques "
"peuvent être interrogées via `starknet_call` sur Starknet, qui ne créera pas "
"une transaction et ne changera donc pas l'état."

#: src/ch14-02-contract-functions.md:88
msgid ""
"**Warning:** This is different from the EVM where a `staticcall` opcode is "
"provided, which prevents storage modifications in the current context and "
"subcontexts. Hence developers **should not** have the assumption that "
"calling a view function on another contract cannot modify the state."
msgstr ""
"**Attention :** Ceci est différent de l'EVM où un opcode `staticcall` est "
"fourni, ce qui empêche les modifications de stockage dans le contexte et les "
"sous-contextes actuels. Par conséquent, les développeurs ** ne devraient "
"pas** avoir l'hypothèse que l'appel d'une fonction de vue sur un autre "
"contrat ne peut pas modifier l'état."

#: src/ch14-02-contract-functions.md:90
msgid "Standalone Public Functions"
msgstr "Fonctions publiques autonomes"

#: src/ch14-02-contract-functions.md:92
msgid ""
"It is also possible to define public functions outside of an implementation "
"of a trait, using the `#[external(v0)]` attribute. Doing this will "
"automatically generate the corresponding ABI, allowing these standalone "
"public functions to be callable by anyone from the outside. These functions "
"can also be called from within the contract just like any function in "
"Starknet contracts. The first parameter must be `self`."
msgstr ""
"Il est également possible de définir les fonctions publiques en dehors d'une "
"implémentation d'un trait, en utilisant l'attribut `#[external(v0)]`. Cela "
"générera automatiquement l'ABI correspondant, permettant à ces fonctions "
"publiques autonomes d'être appelables par n'importe qui de l'extérieur. Ces "
"fonctions peuvent également être appelées à partir du contrat comme "
"n'importe quelle fonction dans les contrats Starknet. Le premier paramètre "
"doit être `self`."

#: src/ch14-02-contract-functions.md:94
msgid ""
"Here, we define a standalone `get_contract_name` function outside of an impl "
"block:"
msgstr ""
"Ici, nous définissons une fonction autonome `get_contract_name` en dehors "
"d'un bloc impl:"

#: src/ch14-02-contract-functions.md:104
msgid "3. Private Functions"
msgstr "3. Fonctions privées"

#: src/ch14-02-contract-functions.md:106
msgid ""
"Functions that are not defined with the `#[external(v0)]` attribute or "
"inside a block annotated with the `#[abi(embed_v0)]` attribute are private "
"functions (also called internal functions). They can only be called from "
"within the contract."
msgstr ""
"Les fonctions qui ne sont pas définies avec l'attribut `#[external(v0)]` ou "
"à l'intérieur d'un bloc annoté avec l'attribut `#[abi(embed_v0)]` sont des "
"fonctions privées (également appelées fonctions internes)."

#: src/ch14-02-contract-functions.md:108
msgid ""
"They can be grouped in a dedicated impl block (e.g., in components, to "
"easily import internal functions all at once in the embedding contracts) or "
"just be added as free functions inside the contract module. Note that these "
"2 methods are equivalent. Just choose the one that makes your code more "
"readable and easy to use."
msgstr ""
"Ils peuvent être regroupés dans un bloc impl dédié (par exemple, dans des "
"composants, pour importer facilement des fonctions internes toutes à la fois "
"dans les contrats d'intégration) ou simplement être ajoutés en tant que "
"fonctions libres à l'intérieur du module de contrat. Notez que ces 2 "
"méthodes sont équivalentes. Choisissez simplement celle qui rend votre code "
"plus lisible et facile à utiliser."

#: src/ch14-02-contract-functions.md:135
msgid ""
"Wait, what is this `#[generate_trait]` attribute? Where is the trait "
"definition for this implementation? Well, the `#[generate_trait]` attribute "
"is a special attribute that tells the compiler to generate a trait "
"definition for the implementation block. This allows you to get rid of the "
"boilerplate code of defining a trait with generic parameters and "
"implementing it for the implementation block. With this attribute, we can "
"simply define the implementation block directly, without any generic "
"parameter, and use `self: ContractState` in our functions."
msgstr ""
"Wait, qu'est-ce que cet attribut `#[generate_trait]`? Où est la définition "
"du caractère pour cette implémentation? Eh bien, l'attribut "
"`#[generate_trait]` est un attribut spécial qui indique au compilateur de "
"générer une définition du caractère pour le bloc d'implémentation. Cela vous "
"permet de vous débarrasser du code boelorplate de définir un caractère avec "
"des paramètres génériques et de le mettre en œuvre pour le bloc "
"d'implémentation. Avec cet attribut, nous pouvons simplement définir le bloc "
"d'implémentation directement, sans aucun paramètre générique, et utiliser "
"`self: ContractState` dans nos fonctions."

#: src/ch14-02-contract-functions.md:137
msgid ""
"The `#[generate_trait]` attribute is mostly used to define private impl "
"blocks. It might also be used in addition to `#[abi(per_item)]` to define "
"the various entrypoints of a contract (see [next section](./ch14-02-contract-"
"functions.md#4-abiper_item-attribute))."
msgstr ""
"L'attribut `#[generate_trait]` est principalement utilisé pour définir les "
"blocs d'impl privés. Il peut également être utilisé en plus de "
"`#[abi(per_item)]` pour définir les différents points d'entrée d'un contrat "
"(voir [prochaine section](./ch14-02-contract-fonctions.md#4-abiper_item-"
"attribute))."

#: src/ch14-02-contract-functions.md:139
msgid ""
"Note: using `#[generate_trait]` in addition to the `#[abi(embed_v0)]` "
"attribute for a public impl block is not recommended, as it will result in a "
"failure to generate the corresponding ABI. Public functions should only be "
"defined in an impl block annotated with `#[generate_trait]` if this block is "
"also annotated with the `#[abi(per_item)]` attribute."
msgstr ""
"Note : l'utilisation de `#[generate_trait]` en plus de l'attribut "
"`#[abi(embed_v0)]` pour un bloc public impl n'est pas recommandée, car elle "
"ne permet pas de générer l'ABI correspondant. Les fonctions publiques ne "
"devraient être définies dans un bloc impl annoté avec `#[generate_trait]` "
"que si ce bloc est également annoté avec l'attribut `#[abi(per_item)]`."

#: src/ch14-02-contract-functions.md:144
msgid "`[abi(per_item)]` Attribute"
msgstr "«[abi(per_item)]» Attribut"

#: src/ch14-02-contract-functions.md:146
msgid ""
"You can also define the entrypoint type of functions individually inside an "
"impl block using the`#[abi(per_item)]` attribute on top of your impl. It is "
"often used with the `#[generate_trait]` attribute, as it allows you to "
"define entrypoints without an explicit interface. In this case, the "
"functions will not be grouped under an impl in the ABI. Note that when using "
"`#[abi(per_item)]` attribute, public functions need to be annotated with the "
"`#[external(v0)]` attribute - otherwise, they will not be exposed and will "
"be considered as private functions."
msgstr ""
"Vous pouvez également définir le type de fonctions d'entrée individuellement "
"à l'intérieur d'un bloc impl en utilisant l'attribut `#[abi(per_item)]` en "
"haut de votre impl. Il est souvent utilisé avec l'attribut "
"`#[generate_trait]`, car il vous permet de définir des points d'entrée sans "
"interface explicite. Dans ce cas, les fonctions ne seront pas regroupées "
"sous un impl dans l'ABI. Notez que lorsque vous utilisez l'attribut "
"`#[abi(per_item)]`, les fonctions publiques doivent être annotées avec "
"l'attribut `#[external(v0)]` - sinon, elles ne seront pas exposées et seront "
"considérées comme des fonctions privées."

#: src/ch14-02-contract-functions.md:148
msgid "Here is a short example:"
msgstr "Voici un court exemple :"

#: src/ch14-02-contract-functions.md:160
msgid "// this is a constructor function\n"
msgstr "// c'est une fonction de constructeur\n"

#: src/ch14-02-contract-functions.md:164
msgid "// this is a public function\n"
msgstr "// c'est une fonction publique\n"

#: src/ch14-02-contract-functions.md:168
msgid "// this is a l1_handler function\n"
msgstr "// c'est une fonction l1_handler\n"

#: src/ch14-02-contract-functions.md:171
msgid "// this is an internal function\n"
msgstr "// c'est une fonction interne\n"

#: src/ch14-02-contract-functions.md:177
msgid ""
"In the case of `#[abi(per_item)]` attribute usage without "
"`#[generate_trait]`, it will only be possible to include `constructor`, `l1-"
"handler` and `internal` functions in the trait implementation. Indeed, "
"`#[abi(per_item)]` only works with a trait that is not defined as a Starknet "
"interface. Hence, it will be mandatory to create another trait defined as "
"interface to implement public functions."
msgstr ""
"Dans le cas de l'utilisation de l'attribut `#[abi(per_item)]` sans "
"`#[generate_trait]`, il ne sera possible d'inclure que les fonctions "
"`constructeur`, `l1-handler` et `internal` dans l'implémentation du "
"caractère. En effet, `#[abi(per_item)]` ne fonctionne qu'avec un caractère "
"qui n'est pas défini comme une interface Starknet. Par conséquent, il sera "
"obligatoire de créer un autre caractère défini comme interface pour mettre "
"en œuvre des fonctions publiques."

#: src/ch14-03-contract-events.md:3
msgid ""
"Events are custom data structures that are emitted by smart contracts during "
"execution. They provide a way for smart contracts to communicate with the "
"external world by logging information about specific occurrences in a "
"contract."
msgstr ""
"Les événements sont des structures de données personnalisées qui sont émises "
"par des contrats intelligents pendant l'exécution. Ils fournissent un moyen "
"pour les contrats intelligents de communiquer avec le monde extérieur en "
"enregistrant des informations sur des événements spécifiques dans un contrat."

#: src/ch14-03-contract-events.md:5
msgid ""
"Events play a crucial role in the integration of smart contracts in real-"
"world applications. Take, for instance, the Non-Fungible Tokens (NFTs) "
"minted on Starknet. An event is emitted each time a token is minted. This "
"event is indexed and stored in some database, allowing applications to "
"display almost instantaneously useful information to users. If the contract "
"doesn't emit an event when minting a new token, it would be less practical, "
"with the need of querying the state of the blockchain to get the data needed."
msgstr ""
"Les événements jouent un rôle crucial dans l'intégration des contrats "
"intelligents dans les applications du monde réel. Prenez, par exemple, les "
"Tokens Non-Fungible (NFT) sur Starknet. Un événement est émis chaque fois "
"qu'un token est minté. Cet événement est indexé et stocké dans une base de "
"données, permettant aux applications d'afficher des informations presque "
"instantanément utiles aux utilisateurs. Si le contrat n'émet pas un "
"événement lors de la fusion d'un nouveau token, il serait moins pratique, "
"avec la nécessité de questionner l'état de la blockchain pour obtenir les "
"données nécessaires."

#: src/ch14-03-contract-events.md:7
msgid "Defining Events"
msgstr "Définition des événements"

#: src/ch14-03-contract-events.md:9
msgid ""
"All the different events in a contract are defined under the `Event` enum, "
"which must implement the `starknet::Event` trait. This trait is defined in "
"the core library as follows:"
msgstr ""
"Tous les différents événements d'un contrat sont définis dans l'enum "
"`Event`, qui doit mettre en œuvre le caractère `starknet::Event`. Ce "
"caractère est défini dans la bibliothèque centrale comme suit:"

#: src/ch14-03-contract-events.md:18
msgid ""
"The `#[derive(starknet::Event)]` attribute causes the compiler to generate "
"an implementation for the above trait, instantiated with the `Event` type, "
"which in our example is the following enum:"
msgstr ""
"L'attribut `#[derive(starknet::Event)]` fait en sorte que le compilateur "
"génère une implémentation pour le caractère ci-dessus, momentanée avec le "
"type `Event`, qui dans notre exemple est l'enum suivant:"

#: src/ch14-03-contract-events.md:29
msgid ""
"Each variant of the `Event` enum has to be a struct or an enum, and each "
"variant needs to implement the `starknet::Event` trait itself. Moreover, the "
"members of these variants must implement the `Serde` trait (_c.f._ [Appendix "
"C: Serializing with Serde](./appendix-03-derivable-traits.html#serializing-"
"with-serde)), as keys/data are added to the event using a serialization "
"process."
msgstr ""
"Chaque variante de l'enum `Event` doit être un struct ou un enum, et chaque "
"variante doit implémenter le caractère `starknet::Event` lui-même. De plus, "
"les membres de ces variantes doivent implémenter le caractère `Serde` (_c.f."
"_ [Annexe C: Serializing with Serde](../appendix-03-derivable-traits."
"html#serializing-with-serde)), car des clés/données sont ajoutées à "
"l'événement à l'aide d'un processus de sérialisation."

#: src/ch14-03-contract-events.md:31
msgid ""
"The auto-implementation of the `starknet::Event` trait will implement the "
"`append_keys_and_data` function for each variant of our `Event` enum. The "
"generated implementation will append a single key based on the variant name "
"(`StoredName`), and then recursively call `append_keys_and_data` in the impl "
"of the `Event` trait for the variant’s type."
msgstr ""
"La mise en œuvre automatique du caractère `starknet::Event` implémentera la "
"fonction `append_keys_and_data` pour chaque variante de notre enum `Event`. "
"L'implémentation générée ajoutera une seule clé basée sur le nom de la "
"variante (`StoredName`), puis appellera de manière récursive "
"`append_keys_and_data` dans l'impl du caractère `Event` pour le type de "
"variante."

#: src/ch14-03-contract-events.md:33
msgid ""
"In our example, the `Event` enum contains only one variant, which is a "
"struct named `StoredName`. We chose to name our variant with the same name "
"as the struct name, but this is not enforced."
msgstr ""
"Dans notre exemple, l'enum `Event` ne contient qu'une seule variante, qui "
"est une structure nommée `StoredName`. Nous avons choisi de nommer notre "
"variante avec le même nom que le nom de la structure, mais cela n'est pas "
"appliqué."

#: src/ch14-03-contract-events.md:44
msgid ""
"Whenever an enum that derives the `starknet::Event` trait has an enum "
"variant, this enum is nested by default. Therefore, the list of keys "
"corresponding to the variant’s name will include the `sn_keccak` hash of the "
"variant's name itself. This can be superfluous, typically when using "
"embedded components in contracts. Indeed, in such cases, we might want the "
"events defined in the components to be emitted without any additional data, "
"and it could be useful to annotate the enum variant with the `#[flat]` "
"attribute. By doing so, we allow to opt out of the nested behavior and "
"ignore the variant name in the serialization process. On the other hand, "
"nested events have the benefit of distinguishing between the main contract "
"event and different components events, which might be helpful."
msgstr ""
"Chaque fois qu'un enum qui dérive le caractère `starknet::Event` a une "
"variante d'enum, cet enum est imbriqué par défaut. Par conséquent, la liste "
"des clés correspondant au nom de la variante=\"sn_keccak` inclut le hash "
"`sn_keccak` du nom de la variante elle-même. Cela peut être superflu, "
"généralement lors de l'utilisation de composants intégrés dans les contrats. "
"En effet, dans de tels cas, nous pourrions vouloir que les événements "
"définis dans les composants soient émis sans données supplémentaires, et il "
"pourrait être utile d'annoter la variante d'enum avec l'attribut `#[flat]`. "
"Ce faisant, nous permettons de sortir du comportement imbriqué et d'ignorer "
"le nom de la variante dans le processus de sérialisation. D'autre part, les "
"événements imbriqués ont l'avantage de distinguer entre l'événement "
"contractuel principal et les événements de composants différents, ce qui "
"pourrait être utile."

#: src/ch14-03-contract-events.md:46
msgid ""
"In our contract, we defined an event named `StoredName` that emits the "
"contract address of the caller and the name stored within the contract, "
"where the `user` field is serialized as a key and the `name` field is "
"serialized as data."
msgstr ""
"Dans notre contrat, nous avons défini un événement nommé `StoredName` qui "
"émet l'adresse du contrat de l'appelant et le nom stocké dans le contrat, où "
"le champ `user` est sérialisé comme une clé et le champ `name` est sérialisé "
"comme des données."

#: src/ch14-03-contract-events.md:48
msgid ""
"Indexing events fields allows for more efficient queries and filtering of "
"events. To index a field as a key of an event, simply annotate it with the "
"`#[key]` attribute as demonstrated in the example for the `user` key. By "
"doing so, any indexed field will allow queries of events that contain a "
"given value for that field with \\\\( O(log(n)) \\\\) time complexity, while "
"non indexed fields require any query to iterate over all events, providing \\"
"\\( O(n) \\\\) time complexity."
msgstr ""
"Pour indexer un champ comme clé d'un événement, il suffit de l'annoter avec "
"l'attribut `#[key]` comme démontré dans l'exemple de la clé `user`. Ce "
"faisant, tout champ indexé permettra aux requêtes d'événements qui "
"contiennent une valeur donnée pour ce champ avec \\\\( O(log(n)) \\\\) "
"complexité temporelle, tandis que les champs non indexés nécessitent "
"n'importe quelle requête pour itérer sur tous les événements, fournissant \\"
"\\( O(n) \\\\) complexité temporelle."

#: src/ch14-03-contract-events.md:50
msgid ""
"When emitting the event with `self.emit(StoredName { user: user, name: "
"name })`, a key corresponding to the name ` StoredName`, specifically "
"`sn_keccak(StoredName)`, is appended to the keys list. `user`is serialized "
"as key, thanks to the `#[key]` attribute, while address is serialized as "
"data. After everything is processed, we end up with the following keys and "
"data: `keys = [sn_keccak(\"StoredName\"),user]` and `data = [name]`."
msgstr ""
"Lors de l'émission de l'événement avec `self.emit(StoredName { user: user, "
"name: name })`, une clé correspondant au nom ` StoredName`, en particulier "
"`sn_keccak(StoredName)`, est ajoutée à la liste des clés. `user`est "
"sérialisé comme clé, grâce à l'attribut `#[key]`, tandis que l'adresse est "
"sérialisée comme données. Après tout est traité, nous finissons avec les "
"clés et données suivantes: `keys = [sn_keccak(\"StoredName\"),user]` et "
"`data = [name]`."

#: src/ch14-03-contract-events.md:54
msgid "Emitting Events"
msgstr "Émission d'événements"

#: src/ch14-03-contract-events.md:56
msgid ""
"After defining events, we can emit them using `self.emit`, with the "
"following syntax:"
msgstr ""
"Après avoir défini les événements, nous pouvons les émettre en utilisant "
"`self.emit`, avec la syntaxe suivante:"

#: src/ch14-03-contract-events.md:62
msgid ""
"The `emit` function is called on `self` and takes a reference to `self`, i."
"e., state modification capabilities are required. Therefore, it is not "
"possible to emit events in view functions."
msgstr ""
"La fonction `emit` est appelée `self` et prend une référence à `self`, c'est-"
"à-dire que des capacités de modification d'état sont nécessaires. Par "
"conséquent, il n'est pas possible d'émettre des événements en vue des "
"fonctions."

#: src/ch15-00-starknet-cross-contract-interactions.md
msgid ""
"Interactions between smart contracts are an important feature when creating "
"complex decentralized applications, as it allows for composability and "
"separation of concerns. This chapter sheds light on how to make contracts "
"interact with each other."
msgstr ""
"Les interactions entre les contrats intelligents sont une caractéristique "
"importante pour la création d'applications décentralisées complexes, car "
"elles permettent la composabilité et la séparation des préoccupations."

#: src/ch15-00-starknet-cross-contract-interactions.md
msgid ""
"Specifically, you'll learn about ABIs, contract interfaces, the contract and "
"library dispatchers and their low-level system call equivalents!"
msgstr ""
"Plus précisément, vous en apprendrez davantage sur les ABI, les interfaces "
"contractuelles, les répartiteurs de contrats et de bibliothèques et leurs "
"équivalents d'appels système de bas niveau!"

#: src/ch15-01-abis-and-contract-interfaces.md:3
msgid ""
"Cross-contract interactions between smart contracts on a blockchain is a "
"common practice which enables us to build flexible contracts that can speak "
"with each other."
msgstr ""
"Les interactions entre contrats intelligents sur une blockchain sont une "
"pratique courante qui nous permet de construire des contrats flexibles qui "
"peuvent parler les uns avec les autres."

#: src/ch15-01-abis-and-contract-interfaces.md:5
msgid "Achieving this on Starknet requires something we call an interface."
msgstr ""
"Atteindre cela sur Starknet nécessite quelque chose que nous appelons une "
"interface."

#: src/ch15-01-abis-and-contract-interfaces.md:7
msgid "ABI - Application Binary Interface"
msgstr "ABI - Interface binaire d'application"

#: src/ch15-01-abis-and-contract-interfaces.md:9
msgid ""
"On Starknet, the ABI of a contract is a JSON representation of the "
"contract's functions and structures, giving anyone (or any other contract) "
"the ability to form encoded calls to it. It is a blueprint that instructs "
"how functions should be called, what input parameters they expect, and in "
"what format."
msgstr ""
"Sur Starknet, l'ABI d'un contrat est une représentation JSON des fonctions "
"et structures du contrat, donnant à n'importe qui (ou à tout autre contrat) "
"la possibilité de former des appels codés. C'est un plan qui indique comment "
"les fonctions doivent être appelées, quels paramètres d'entrée ils "
"attendent, et dans quel format."

#: src/ch15-01-abis-and-contract-interfaces.md:11
msgid ""
"While we write our smart contract logics in high-level Cairo, they are "
"stored on the VM as executable bytecodes which are in binary formats. Since "
"this bytecode is not human readable, it requires interpretation to be "
"understood. This is where ABIs come into play, defining specific methods "
"which can be called to a smart contract for execution. Without an ABI, it "
"becomes practically impossible for external actors to understand how to "
"interact with a contract."
msgstr ""
"Pendant que nous écrivons nos logiques de contrat intelligentes au Caire de "
"haut niveau, elles sont stockées sur le VM sous forme d'octécodes "
"exécutables qui sont en format binaire. Comme ce octécode n'est pas lisible "
"par l'homme, il faut l'interpréter. C'est là que les ABI entrent en jeu, "
"définissant des méthodes spécifiques qui peuvent être appelées à un contrat "
"intelligent pour l'exécution. Sans ABI, il devient pratiquement impossible "
"pour les acteurs externes de comprendre comment interagir avec un contrat."

#: src/ch15-01-abis-and-contract-interfaces.md:13
msgid ""
"ABIs are typically used in dApps frontends, allowing it to format data "
"correctly, making it understandable by the smart contract and vice versa. "
"When you interact with a smart contract through a block explorer like "
"[Voyager](https://voyager.online/) or [Starkscan](https://starkscan.co/), "
"they use the contract's ABI to format the data you send to the contract and "
"the data it returns."
msgstr ""
"Lorsque vous interagissez avec un contrat intelligent par l'intermédiaire "
"d'un explorateur de blocs comme [Voyager](https://voyager.online/) ou "
"[Starkscan](https://starkscan.co/), ils utilisent l'ABI du contrat pour "
"formater les données que vous envoyez au contrat et les données qu'il "
"retourne."

#: src/ch15-01-abis-and-contract-interfaces.md:15
#: src/ch16-05-02-randomness.md:25
msgid "Interface"
msgstr "Interface"

#: src/ch15-01-abis-and-contract-interfaces.md:17
msgid ""
"The interface of a contract is a list of the functions it exposes publicly. "
"It specifies the function signatures (name, parameters, visibility and "
"return value) contained in a smart contract without including the function "
"body."
msgstr ""
"L'interface d'un contrat est une liste des fonctions qu'il expose "
"publiquement. Elle spécifie les signatures de fonction (nom, paramètres, "
"visibilité et valeur de retour) contenues dans un contrat intelligent sans "
"inclure le corps de fonction."

#: src/ch15-01-abis-and-contract-interfaces.md:20
msgid ""
"Contract interfaces in Cairo are traits annotated with the `#[starknet::"
"interface]` attribute. If you are new to traits, check out the dedicated "
"chapter on [traits](./ch08-02-traits-in-cairo.md)."
msgstr ""
"Les interfaces contractuelles au Caire sont des caractères annotés avec "
"l'attribut `#[starknet::interface]`. Si vous êtes nouveau dans les "
"caractères, consultez le chapitre consacré à [trats](./ch08-02-trats-in-"
"cairo.md)."

#: src/ch15-01-abis-and-contract-interfaces.md:22
msgid ""
"One important specification is that this trait must be generic over the "
"`TContractState` type. This is required for functions to access the "
"contract's storage, so that they can read and write to it."
msgstr ""
"Une spécification importante est que ce caractère doit être générique par "
"rapport au type \"TContractState\", ce qui est nécessaire pour que les "
"fonctions puissent accéder au stockage du contrat, afin qu'elles puissent y "
"lire et y écrire."

#: src/ch15-01-abis-and-contract-interfaces.md:24
msgid ""
"Note: The contract constructor is not part of the interface. Nor are "
"internal functions part of the interface."
msgstr ""
"Note : Le constructeur du contrat ne fait pas partie de l'interface. Les "
"fonctions internes ne font pas non plus partie de l'interface."

#: src/ch15-01-abis-and-contract-interfaces.md:26
msgid ""
"Here's a sample interface for an ERC20 token contract. As you can see, it's "
"a generic trait over the `TContractState` type. `view` functions have a self "
"parameter of type `@TContractState`, while `external` functions have a self "
"parameter of type passed by reference `ref self: TContractState`."
msgstr ""
"Voici un exemple d'interface pour un contrat de jeton ERC20. Comme vous "
"pouvez le voir, il s'agit d'un trait générique sur le type `TContractState`. "
"Les fonctions `view` ont un paramètre d'autotype `@TContractState`, tandis "
"que les fonctions `externes` ont un paramètre d'autotype passé par référence "
"`ref self: TContractState`."

#: src/ch15-01-abis-and-contract-interfaces.md:55
msgid "<span class=\"caption\">Listing 15-1: A simple ERC20 Interface.</span>"
msgstr "<span class=\"caption\">Liste 15-1: Une interface ERC20 simple.</span>"

#: src/ch15-01-abis-and-contract-interfaces.md:57
msgid ""
"In the next chapter, we will see how we can call contracts from other smart "
"contracts using _dispatchers_ and _syscalls_ ."
msgstr ""
"Dans le prochain chapitre, nous verrons comment nous pouvons appeler les "
"contrats d'autres contrats intelligents en utilisant _dispatchers_ et "
"_syscalls_."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:3
msgid ""
"Each time a contract interface is defined, two dispatchers are automatically "
"created and exported by the compiler. Let's consider an interface that we "
"named IERC20, these would be:"
msgstr ""
"Chaque fois qu'une interface de contrat est définie, deux répartiteurs sont "
"automatiquement créés et exportés par le compilateur. Considérons une "
"interface que nous avons nommée IERC20, celle-ci serait :"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:5
msgid "The Contract Dispatcher `IERC20Dispatcher`"
msgstr "Le régulateur de contrat `IERC20Dispatcher`"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:6
msgid "The Library Dispatcher `IERC20LibraryDispatcher`"
msgstr "Le régulateur de bibliothèque `IERC20BibliothèqueDispatcher`"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:8
msgid ""
"The compiler also generates a trait `IERC20DispatcherTrait`, allowing us to "
"call the functions defined in the interface on the dispatcher struct."
msgstr ""
"Le compilateur génère également un caractère \"IERC20DispatcherTrait\", nous "
"permettant d'appeler les fonctions définies dans l'interface sur la "
"structure du répartiteur."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:10
msgid ""
"In this chapter, we are going to discuss what these are, how they work and "
"how to use them."
msgstr ""
"Dans ce chapitre, nous allons discuter de ce qu'ils sont, comment ils "
"fonctionnent et comment les utiliser."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:12
msgid ""
"To effectively break down the concepts in this chapter, we are going to be "
"using the IERC20 interface from the previous chapter (refer to Listing 15-1)."
msgstr ""
"Pour bien ventiler les concepts de ce chapitre, nous allons utiliser "
"l'interface IERC20 du chapitre précédent (voir l'inscription 15-1)."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:14
msgid "Contract Dispatcher"
msgstr "Expéditeur de contrats"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:16
msgid ""
"As mentioned previously, traits annotated with the `#[starknet::interface]` "
"attribute automatically generate a dispatcher and a trait on compilation. "
"Our `IERC20` interface is expanded into something like this:"
msgstr ""
"Comme mentionné précédemment, les caractères annotés avec l'attribut "
"`#[starknet::interface]` génèrent automatiquement un répartiteur et un trait "
"sur la compilation. Notre interface `IERC20` est étendue à quelque chose "
"comme ceci:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:19
msgid ""
"**Note:** The expanded code for our IERC20 interface is a lot longer, but to "
"keep this chapter concise and straight to the point, we focused on one view "
"function `name`, and one external function `transfer`."
msgstr ""
"**Note:** Le code élargi pour notre interface IERC20 est beaucoup plus long, "
"mais pour garder ce chapitre concis et direct au point, nous nous sommes "
"concentrés sur une fonction de vue `name`, et une fonction externe "
"`transfer`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:37
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:41
msgid "// starknet::call_contract_syscall is called in here\n"
msgstr "// starknet::call_contract_syscall est appelé ici\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:46
msgid ""
"<span class=\"caption\">Listing 15-2: An expanded form of the "
"IERC20Dispatcher trait.</span>"
msgstr ""
"<span class=\"caption\">Liste 15-2: Une forme élargie du caractère "
"IERC20Dispatcher.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:48
msgid ""
"As you can see, the \"classic\" dispatcher is just a struct that wraps a "
"contract address and implements the `DispatcherTrait` generated by the "
"compiler, allowing us to call functions from another contract. This means "
"that we can instantiate a struct with the address of the contract we want to "
"call, and then simply call the functions defined in the interface on the "
"dispatcher struct as if they were methods of that type."
msgstr ""
"Comme vous pouvez le voir, le répartiteur \"classique\" n'est qu'une "
"structure qui enveloppe une adresse de contrat et implémente le "
"`DispatcherTrait` généré par le compilateur, nous permettant d'appeler des "
"fonctions d'un autre contrat. Cela signifie que nous pouvons activer une "
"structure avec l'adresse du contrat que nous voulons appeler, puis "
"simplement appeler les fonctions définies dans l'interface sur le "
"répartiteur struct comme s'il s'agissait de méthodes de ce type."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:50
msgid ""
"It's also worthy of note that all these are abstracted behind the scenes "
"thanks to the power of Cairo plugins."
msgstr ""
"Il est également digne de noter que tous ces sont abstraits dans les "
"coulisses grâce à la puissance des plugins du Caire."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:52
msgid "Calling Contracts using the Contract Dispatcher"
msgstr "Appel de contrats en utilisant le répartiteur de contrats"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:54
msgid ""
"This is an example of a contract named `TokenWrapper` using a dispatcher to "
"call functions defined on an ERC-20 token. Calling `transfer_token` will "
"modify the state of the contract deployed at `contract_address`."
msgstr ""
"Il s'agit d'un exemple de contrat nommé `TokenWrapper` utilisant un "
"répartiteur pour appeler des fonctions définies sur un jeton ERC-20. Appeler "
"`transfer_token` modifiera l'état du contrat déployé à `contract_address`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:94
msgid "//**** Specify interface here ****//\n"
msgstr "//**** Spécifier l'interface ici ****//\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:125
msgid ""
"<span class=\"caption\">Listing 15-3: A sample contract which uses the "
"Contract Dispatcher.</span>"
msgstr ""
"<span class=\"caption\">Liste 15-3: Un exemple de contrat qui utilise le "
"régulateur de contrat.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:127
msgid ""
"As you can see, we had to first import `IERC20DispatcherTrait` and "
"`IERC20Dispatcher` generated by the compiler, which allows us to make calls "
"to the methods implemented for the `IERC20Dispatcher` struct (`name`, "
"`transfer`, etc), passing in the `contract_address` of the contract we want "
"to call in the `IERC20Dispatcher` struct."
msgstr ""
"Comme vous pouvez le voir, nous avons dû d'abord importer "
"`IERC20DispatcherTrait` et `IERC20Dispatcher` générés par le compilateur, ce "
"qui nous permet de faire des appels aux méthodes mises en œuvre pour la "
"structure `IERC20Dispatcher` (`nom`, `transfer`, etc), en passant dans le "
"`contract_address` du contrat que nous voulons appeler dans la structure "
"`IERC20Dispatcher`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:129
msgid "Library Dispatcher"
msgstr "Expéditeur de bibliothèque"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:131
msgid ""
"The key difference between the contract dispatcher and the library "
"dispatcher lies in the execution context of the logic defined in the class. "
"While regular dispatchers are used to call functions from **contracts** "
"(with an associated state), library dispatchers are used to call **classes** "
"(stateless)."
msgstr ""
"La différence clé entre le répartiteur de contrat et le répartiteur de "
"bibliothèque réside dans le contexte d'exécution de la logique définie dans "
"la classe. Tandis que les répartiteurs réguliers sont utilisés pour appeler "
"des fonctions de **contracts** (avec un état associé), les répartiteurs de "
"bibliothèque sont utilisés pour appeler **classes** (sans état)."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:133
msgid "Let's consider two contracts A and B."
msgstr "Considérons deux contrats A et B."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:135
msgid ""
"When A uses `IBDispatcher` to call functions from the **contract** B, the "
"execution context of the logic defined in B is that of B. This means that "
"the value returned by `get_caller_address()` in B will return the address of "
"A, and updating a storage variable in B will update the storage of B."
msgstr ""
"Quand A utilise `IBDispatcher` pour appeler les fonctions du **contract** B, "
"le contexte d'exécution de la logique définie dans B est celui de B. Cela "
"signifie que la valeur retournée par `get_caller_address()` dans B "
"retournera l'adresse de A, et la mise à jour d'une variable de stockage dans "
"B mettra à jour le stockage de B."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:137
msgid ""
"When A uses `IBLibraryDispatcher` to call functions from the **class** of B, "
"the execution context of the logic defined in B's class is that of A. This "
"means that the value returned by `get_caller_address()` variable in B will "
"return the address of the caller of A, and updating a storage variable in "
"B's class will update the storage of A (remember that the **class** of B is "
"stateless; there is no state that can be updated!)"
msgstr ""
"Quand A utilise `IBLibraryDispatcher` pour appeler des fonctions de la "
"classe **** de B, le contexte d'exécution de la logique définie dans la "
"classe B est celui de A. Cela signifie que la valeur retournée par la "
"variable `get_caller_address()` dans B retournera l'adresse de l'appelant de "
"A, et la mise à jour d'une variable de stockage dans la classe B mettra à "
"jour le stockage de A (rappelez-vous que la classe **** de B est apatride; "
"il n'y a pas d'état qui puisse être mis à jour!)"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:139
msgid ""
"The expanded form of the struct and trait generated by the compiler look "
"like:"
msgstr ""
"La forme élargie de la structure et du caractère générés par le compilateur "
"ressemble à :"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:157
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:161
msgid "// starknet::syscalls::library_call_syscall  is called in here\n"
msgstr "// starknet::syscalls::library_call_syscall est appelé ici\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:166
msgid ""
"<span class=\"caption\">Listing 15-4: An expanded form of the IERC20 trait.</"
"span>"
msgstr ""
"<span class=\"caption\">Liste 15-4: Une forme élargie du caractère IERC20.</"
"span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:168
msgid ""
"Notice that the main difference between the regular contract dispatcher and "
"the library dispatcher is that the former uses `call_contract_syscall` while "
"the latter uses `library_call_syscall`."
msgstr ""
"Notez que la principale différence entre le régulateur de contrat régulier "
"et le régulateur de bibliothèque est que le premier utilise "
"`call_contract_syscall` tandis que le second utilise `library_call_syscall`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:170
msgid "Calling Contracts using the Library Dispatcher"
msgstr "Appel de contrats en utilisant le dispatcheur de bibliothèque"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:172
msgid ""
"Below's a sample code for calling contracts using the Library Dispatcher."
msgstr ""
"Ci-dessous, un exemple de code pour appeler les contrats en utilisant la "
"Library Dispatcher."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:208
msgid ""
"<span class=\"caption\">Listing 15-5: A sample contract using the Library "
"Dispatcher.</span>"
msgstr ""
"<span class=\"caption\">Liste 15-5: Un exemple de contrat utilisant le "
"régulateur de bibliothèque.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:210
msgid ""
"As you can see, we had to first import in our contract the "
"`IContractADispatcherTrait` and `IContractALibraryDispatcher` which were "
"generated from our interface by the compiler. Then, we can create an "
"instance of `IContractALibraryDispatcher` passing in the `class_hash` of the "
"class we want to make library calls to. From there, we can call the "
"functions defined in that class, executing its logic in the context of our "
"contract. When we call `set_value` on ContractA, it will make a library call "
"to the `set_value` function in IContractA, updating the value of the storage "
"variable `value` in ContractA."
msgstr ""
"Comme vous pouvez le voir, nous avons dû d'abord importer dans notre contrat "
"le `IContractADispatcherTrait` et `IContractALibraryDispatcher` qui ont été "
"générés à partir de notre interface par le compilateur. Ensuite, nous "
"pouvons créer une instance de `IContractALibraryDispatcher` passant dans la "
"`class_hash` de la classe à laquelle nous voulons faire des appels de "
"bibliothèque. De là, nous pouvons appeler les fonctions définies dans cette "
"classe, exécutant sa logique dans le contexte de notre contrat. Lorsque nous "
"appelons `set_value` sur ContractA, il fera un appel de bibliothèque à la "
"fonction `set_value` dans IContractA, mettant à jour la valeur de la "
"variable de stockage `value` dans ContractA."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:212
msgid "Using low-level syscalls"
msgstr "Utilisation de syscalls de bas niveau"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:214
msgid ""
"Another way to call other contracts and classes is to use the `starknet::"
"call_contract_syscall`and `starknet::library_call_syscall` system calls. The "
"dispatchers we described in the previous sections are high-level syntaxes "
"for these low-level system calls."
msgstr ""
"Une autre façon d'appeler d'autres contrats et classes est d'utiliser les "
"appels système `starknet::call_contract_syscall` et `starknet::"
"library_call_syscall`. Les répartiteurs que nous avons décrits dans les "
"sections précédentes sont des syntaxes de haut niveau pour ces appels "
"système de bas niveau."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:216
msgid ""
"Using these syscalls can be handy for customized error handling or to get "
"more control over the serialization/deserialization of the call data and the "
"returned data. Here's an example demonstrating how to use a "
"`call_contract_sycall` to call the `transfer` function of an ERC20 contract:"
msgstr ""
"L'utilisation de ces syscalls peut être pratique pour la manipulation "
"d'erreurs personnalisées ou pour obtenir plus de contrôle sur la "
"sérialisation/désactivation des données d'appel et des données retournées. "
"Voici un exemple montrant comment utiliser un `call_contract_sycall` pour "
"appeler la fonction `transfer` d'un contrat ERC20:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:254
msgid "\"transferFrom\""
msgstr "\"transfert de\""

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:265
msgid ""
"<span class=\"caption\">Listing 15-6: A sample contract using syscalls.</"
"span>"
msgstr ""
"<span class=\"caption\">Liste 15-6: Un contrat d'échantillon utilisant des "
"syscalls.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:267
msgid ""
"To use this syscall, we passed in the contract address, the selector of the "
"function we want to call (see next section), and the call arguments."
msgstr ""
"Pour utiliser ce syscall, nous avons passé dans l'adresse du contrat, le "
"sélecteur de la fonction que nous voulons appeler (voir la section "
"suivante), et les arguments d'appel."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:269
msgid ""
"The call arguments must be provided as an array of `felt252`. To build this "
"array, we serialize the expected function parameters into an "
"`Array<felt252>` using the `Serde` trait, and then pass this array as "
"calldata. At the end, we are returned a serialized value which we'll need to "
"deserialize ourselves!"
msgstr ""
"Les arguments d'appel doivent être fournis en tant que tableau de `felt252`. "
"Pour construire ce tableau, nous sérialisons les paramètres de fonction "
"attendus en un `Array<felt252>` en utilisant le caractère `Serde`, puis "
"passons ce tableau comme calldata. À la fin, nous sommes retournés une "
"valeur sérialisée que nous devrons désérialiser nous-mêmes!"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:271
msgid "Entry Point Selector"
msgstr "Sélecteur de points d'entrée"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:273
msgid ""
"In the context of a smart contract, a selector is a unique identifier for a "
"specific entrypoint of a contract. When a transaction is sent to a contract, "
"it includes the selector in the calldata to specify which function should be "
"executed."
msgstr ""
"Dans le contexte d'un contrat intelligent, un sélecteur est un identifiant "
"unique pour un point d'entrée spécifique d'un contrat. Lorsqu'une "
"transaction est envoyée à un contrat, il inclut le sélecteur dans les "
"calldata pour spécifier quelle fonction doit être exécutée."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:275
msgid ""
"On Starknet, the selector is computed by applying the `sn_keccak` hash "
"function to the string representation of the function name. If the function "
"name is `transfer`, the selector can be computed with `selector!"
"(\"transfer\")`"
msgstr ""
"Sur Starknet, le sélecteur est calculé en appliquant la fonction de hachage "
"`sn_keccak` à la représentation en chaîne du nom de la fonction. Si le nom "
"de la fonction est `transfer`, le sélecteur peut être calculé avec `selector!"
"(\"transfer\")`"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:277
msgid ""
"Note that in `starknet::call_contract_syscall`, we didn't specify the "
"function name as a string, but rather used the `selector!` macro, which "
"computes the `sn_keccak` hash of the provided function signature."
msgstr ""
"Notez que dans `starknet::call_contract_syscall`, nous n'avons pas spécifié "
"le nom de la fonction comme une chaîne de caractères, mais plutôt utilisé la "
"macro `selector!`, qui calcule le hachage `sn_keccak` de la signature de la "
"fonction fournie."

#: src/ch16-01-optimizing-storage-costs.md:3
msgid ""
"Bit-packing is a simple concept: use as few bits as possible to store a "
"piece of data. When done well, it can significantly reduce the size of the "
"data you need to store. This is especially important in smart contracts, "
"where storage is expensive."
msgstr ""
"Le bit-packing est un concept simple: utiliser le moins de bits possible "
"pour stocker un morceau de données. Une fois bien fait, il peut réduire "
"considérablement la taille des données que vous devez stocker. Ceci est "
"particulièrement important dans les contrats intelligents, où le stockage "
"est coûteux."

#: src/ch16-01-optimizing-storage-costs.md:5
msgid ""
"When writing Cairo smart contracts, it is important to optimize storage "
"usage to reduce gas costs. Indeed, most of the cost associated with a "
"transaction is related to storage updates; and each storage slot costs gas "
"to write to. This means that by packing multiple values into fewer slots, "
"you can decrease the gas cost incurred by the users of your smart contract."
msgstr ""
"En effet, la plupart des coûts associés à une transaction sont liés à des "
"mises à jour de stockage; et chaque fente de stockage coûte du gaz à écrire. "
"Cela signifie qu'en emballeant plusieurs valeurs dans moins de fentes, vous "
"pouvez réduire les coûts de gaz encourus par les utilisateurs de votre "
"contrat intelligent."

#: src/ch16-01-optimizing-storage-costs.md:8
msgid "Integer Structure and Bitwise Operators"
msgstr "Structure entière et opérateurs bitwise"

#: src/ch16-01-optimizing-storage-costs.md:10
msgid ""
"An integer is coded on a certain number of bits, depending on its size (For "
"example, a `u8` integer is coded on 8 bits)."
msgstr ""
"Un entier est codé sur un certain nombre de bits, en fonction de sa taille "
"(par exemple, un entier `u8` est codé sur 8 bits)."

#: src/ch16-01-optimizing-storage-costs.md:19
msgid ""
"Intuitively, several integers can be combined into a single integer if the "
"size of this single integer is greater than or equal to the sum of the sizes "
"of the integers (For example, two `u8` and one `u16` in one `u32`)."
msgstr ""
"Intuitivement, plusieurs entiers peuvent être combinés en un entier unique "
"si la taille de cet entier unique est supérieure ou égale à la somme des "
"grandeurs des entiers (par exemple, deux `u8` et un `u16` dans un seul "
"`u32`)."

#: src/ch16-01-optimizing-storage-costs.md:21
msgid "But, to do that, we need some bitwise operators:"
msgstr "Mais, pour ce faire, nous avons besoin de quelques opérateurs bitwise:"

#: src/ch16-01-optimizing-storage-costs.md:23
msgid ""
"multiplying or dividing an integer by a power of 2 shifts the integer value "
"to the left or to the right respectively"
msgstr ""
"en multipliant ou en divisant un entier par une puissance de 2 déplace la "
"valeur entière vers la gauche ou vers la droite respectivement"

#: src/ch16-01-optimizing-storage-costs.md:32
msgid ""
"applying a mask (`AND` operator) on an integer value isolates some bits of "
"this integer"
msgstr ""
"l'application d'un masque (opérateur 'AND') sur une valeur entière isole "
"certains bits de cet entier"

#: src/ch16-01-optimizing-storage-costs.md:41
msgid ""
"adding (`OR` operator) two integers will combine both values into a single "
"one."
msgstr ""
"ajouter (\"OU\" opérateur) deux entiers combineront les deux valeurs en une "
"seule."

#: src/ch16-01-optimizing-storage-costs.md:50
msgid ""
"With these bitwise operators, let's see how to combine two `u8` integers "
"into a single `u16` integer (called `packing`) and reversely (called "
"`unpacking`) in the following example:"
msgstr ""
"Avec ces opérateurs bitwise, voyons comment combiner deux entiers `u8` en un "
"seul entier `u16` (appelé `packing`) et inversement (appelé `unpacking`) "
"dans l'exemple suivant:"

#: src/ch16-01-optimizing-storage-costs.md:59
msgid "Bit-packing in Cairo"
msgstr "Bit-packing au Caire"

#: src/ch16-01-optimizing-storage-costs.md:61
msgid ""
"The storage of a Starknet smart contract is a map with 2<sup>251</sup> "
"slots, where each slot is a `felt252` which is initialized to 0."
msgstr ""
"Le stockage d'un contrat intelligent Starknet est une carte avec 2 <sup>251</"
"sup> slots, où chaque slot est un `felt252` qui est initialisé à 0."

#: src/ch16-01-optimizing-storage-costs.md:63
msgid ""
"As we saw earlier, to reduce gas costs due to storage updates, we have to "
"use as few bits as possible, so we have to organize stored variables by "
"packing them."
msgstr ""
"Comme nous l'avons vu plus tôt, pour réduire les coûts du gaz en raison des "
"mises à jour de stockage, nous devons utiliser le moins de bits possible, de "
"sorte que nous devons organiser les variables stockées en les emballer."

#: src/ch16-01-optimizing-storage-costs.md:65
msgid ""
"For example, consider the following `Sizes` struct with 3 fields of "
"different types: one `u8`, one `u32` and one `u64`. The total size is 8 + 32 "
"+ 64 = 104 bits. This is less than a slot size (i.e 251 bits) so we can pack "
"them together to be stored into a single slot."
msgstr ""
"Par exemple, considérez la structure `Taille` suivante avec 3 champs de "
"différents types: un `u8`, un `u32` et un `u64`. La taille totale est de 8 + "
"32 + 64 = 104 bits. C'est moins qu'une taille de fente (c'est-à-dire 251 "
"bits) afin que nous puissions les emballer ensemble pour être stockés dans "
"une seule fente."

#: src/ch16-01-optimizing-storage-costs.md:67
msgid ""
"Note that, as it also fits in a `u128`, it's a good practice to use the "
"smallest type to pack all your variables, so here a `u128` should be used."
msgstr ""
"Notez que, comme il s'inscrit également dans un `u128`, c'est une bonne "
"pratique d'utiliser le plus petit type pour emballer toutes vos variables, "
"donc ici un `u128` doit être utilisé."

#: src/ch16-01-optimizing-storage-costs.md:77
msgid ""
"To pack these 3 variables into a `u128` we have to successively shift them "
"to the left, and finally sum them."
msgstr ""
"Pour emballer ces 3 variables dans un `u128`, nous devons successivement les "
"déplacer vers la gauche, et finalement les résumer."

#: src/ch16-01-optimizing-storage-costs.md:86
msgid ""
"To unpack these 3 variables from a `u128` we have to successively shift them "
"to the right and use a mask to isolate them."
msgstr ""
"Pour déballer ces 3 variables d'un `u128`, nous devons successivement les "
"déplacer vers la droite et utiliser un masque pour les isoler."

#: src/ch16-01-optimizing-storage-costs.md:95
msgid "The `StorePacking` Trait"
msgstr "Le trait `StorePacking`"

#: src/ch16-01-optimizing-storage-costs.md:97
msgid ""
"Cairo provides the `StorePacking` trait to enable packing struct fields into "
"fewer storage slots. `StorePacking<T, PackedT>` is a generic trait taking "
"the type you want to pack (`T`) and the destination type (`PackedT`) as "
"parameters. It provides two functions to implement: `pack` and `unpack`."
msgstr ""
"Le Caire fournit le caractère `StorePacking` pour permettre l'emballage des "
"champs de structure dans moins de fentes de stockage. `StorePacking<T, "
"PackedT>` est un caractère générique prenant le type que vous voulez "
"emballer (`T`) et le type de destination (`PackedT`) comme paramètres. Il "
"fournit deux fonctions à implémenter: `pack` et `unpack`."

#: src/ch16-01-optimizing-storage-costs.md:99
msgid "Here is the implementation of the example of the previous chapter:"
msgstr "Voici l'exemple du chapitre précédent :"

#: src/ch16-01-optimizing-storage-costs.md:138
msgid "//don't forget to import it!\n"
msgstr "//n'oubliez pas de l'importer!\n"

#: src/ch16-01-optimizing-storage-costs.md:147
msgid ""
"// This will automatically pack the\n"
"        // struct into a single u128\n"
msgstr ""
"// Cela va automatiquement emballer la structure // dans un seul u128\n"

#: src/ch16-01-optimizing-storage-costs.md:155
msgid ""
"// this will automatically unpack the\n"
"        // packed-representation into the Sizes struct\n"
msgstr ""
"// ceci décompressera automatiquement la représentation // emballée dans la "
"structure Tailles\n"

#: src/ch16-01-optimizing-storage-costs.md:166
msgid "In this code snippet, you see that:"
msgstr "Dans cet extrait de code, vous voyez que :"

#: src/ch16-01-optimizing-storage-costs.md:168
msgid ""
"`TWO_POW_8` and `TWO_POW_40` are used to shift left in the `pack` function "
"and shift right in the `unpack`function,"
msgstr ""
"`TWO_POW_8` et `TWO_POW_40` sont utilisés pour déplacer à gauche dans la "
"fonction `pack` et à droite dans la fonction `unpack`,"

#: src/ch16-01-optimizing-storage-costs.md:169
msgid ""
"`MASK_8` and `MASK_32` are used to isolate a variable in the `unpack` "
"function,"
msgstr ""
"`MASK_8` et `MASK_32` sont utilisés pour isoler une variable dans la "
"fonction `unpack`,"

#: src/ch16-01-optimizing-storage-costs.md:170
msgid ""
"all the variables from the storage are converted to `u128` to be able to use "
"bitwise operators."
msgstr ""
"toutes les variables du stockage sont converties en `u128` pour pouvoir "
"utiliser des opérateurs bitwise."

#: src/ch16-01-optimizing-storage-costs.md:172
msgid ""
"This technique can be used for any group of fields that fit within the bit "
"size of the packed storage type. For example, if you have a struct with "
"multiple fields whose bit sizes add up to 256 bits, you can pack them into a "
"single `u256` variable. If the bit sizes add up to 512 bits, you can pack "
"them into a single `u512` variable, and so on. You can define your own "
"structs and logic to pack and unpack them."
msgstr ""
"Cette technique peut être utilisée pour n'importe quel groupe de champs qui "
"correspondent à la taille du bit du type de stockage emballé. Par exemple, "
"si vous avez une structure avec plusieurs champs dont les tailles de bit "
"ajoutent jusqu'à 256 bits, vous pouvez les emballer dans une seule variable "
"`u256`. Si les tailles de bit ajoutent jusqu'à 512 bits, vous pouvez les "
"emballer dans une seule variable `u512`, et ainsi de suite. Vous pouvez "
"définir vos propres structures et logiques pour les emballer et les déballer."

#: src/ch16-01-optimizing-storage-costs.md:174
msgid ""
"The rest of the work is done magically by the compiler - if a type "
"implements the `StorePacking` trait, then the compiler will know it can use "
"the `StoreUsingPacking` implementation of the `Store` trait in order to pack "
"before writing and unpack after reading from storage. One important detail, "
"however, is that the type that `StorePacking::pack` spits out also has to "
"implement `Store` for `StoreUsingPacking` to work. Most of the time, we will "
"want to pack into a felt252 or u256 - but if you want to pack into a type of "
"your own, make sure that this one implements the `Store` trait."
msgstr ""
"Le reste du travail est fait magiquement par le compilateur - si un type "
"implémente le caractère `StorePacking`, alors le compilateur saura qu'il "
"peut utiliser l'implémentation `StoreUsingPacking` du caractère `Store` afin "
"d'emballer avant d'écrire et de décompresser après la lecture du stockage. "
"Un détail important, cependant, est que le type que `StorePacking::pack` "
"crache aussi doit implémenter `Store` pour `StoreUsingPacking` pour "
"fonctionner. La plupart du temps, nous allons vouloir emballer dans un "
"feutre252 ou u256 - mais si vous voulez emballer dans un type de votre "
"propre, assurez-vous que celui-ci implémente le trait `Store`."

#: src/ch16-02-00-composability-and-components.md:1
msgid "Components: Lego-Like Building Blocks for Smart Contracts"
msgstr ""
"Composants: Blocs de construction Lego-like pour les contrats intelligents"

#: src/ch16-02-00-composability-and-components.md:3
msgid ""
"Developing contracts sharing a common logic and storage can be painful and "
"bug-prone, as this logic can hardly be reused and needs to be reimplemented "
"in each contract. But what if there was a way to snap in just the extra "
"functionality you need inside your contract, separating the core logic of "
"your contract from the rest?"
msgstr ""
"Développer des contrats partageant une logique et un stockage communs peut "
"être douloureux et sujet aux bugs, car cette logique peut difficilement être "
"réutilisée et doit être réappliquée dans chaque contrat. Mais qu'en est-il "
"s'il y avait un moyen de saisir simplement la fonctionnalité supplémentaire "
"dont vous avez besoin à l'intérieur de votre contrat, en séparant la logique "
"de base de votre contrat du reste?"

#: src/ch16-02-00-composability-and-components.md:9
msgid ""
"Components provide exactly that. They are modular add-ons encapsulating "
"reusable logic, storage, and events that can be incorporated into multiple "
"contracts. They can be used to extend a contract's functionality, without "
"having to reimplement the same logic over and over again."
msgstr ""
"Les composants fournissent exactement cela. Il s'agit d'add-ons modulaires "
"encapsulant la logique réutilisable, le stockage et les événements qui "
"peuvent être incorporés dans plusieurs contrats. Ils peuvent être utilisés "
"pour étendre la fonctionnalité d'un contrat, sans avoir à refaire la même "
"logique encore et encore."

#: src/ch16-02-00-composability-and-components.md:14
msgid ""
"Think of components as Lego blocks. They allow you to enrich your contracts "
"by plugging in a module that you or someone else wrote. This module can be a "
"simple one, like an ownership component, or more complex like a full-fledged "
"ERC20 token."
msgstr ""
"Pensez aux composants comme blocs Lego. Ils vous permettent d'enrichir vos "
"contrats en branchant un module que vous ou quelqu'un d'autre avez écrit. Ce "
"module peut être simple, comme un composant de propriété, ou plus complexe "
"comme un jeton ERC20 à part entière."

#: src/ch16-02-00-composability-and-components.md:19
msgid ""
"A component is a separate module that can contain storage, events, and "
"functions. Unlike a contract, a component cannot be declared or deployed. "
"Its logic will eventually be part of the contract’s bytecode it has been "
"embedded in."
msgstr ""
"Un composant est un module séparé qui peut contenir du stockage, des "
"événements et des fonctions. Contrairement à un contrat, un composant ne "
"peut pas être déclaré ou déployé. Sa logique fera éventuellement partie de "
"l'octécode du contrat dans lequel il a été intégré."

#: src/ch16-02-00-composability-and-components.md:24
msgid "What's in a Component?"
msgstr "Qu'y a-t-il dans un composant?"

#: src/ch16-02-00-composability-and-components.md:26
msgid "A component is very similar to a contract. It can contain:"
msgstr "Un composant est très similaire à un contrat. Il peut contenir:"

#: src/ch16-02-00-composability-and-components.md:28
msgid "Storage variables"
msgstr "Variables de stockage"

#: src/ch16-02-00-composability-and-components.md:29
msgid "Events"
msgstr "Événements"

#: src/ch16-02-00-composability-and-components.md:30
msgid "External and internal functions"
msgstr "Fonctions externes et internes"

#: src/ch16-02-00-composability-and-components.md:32
msgid ""
"Unlike a contract, a component cannot be deployed on its own. The "
"component's code becomes part of the contract it's embedded to."
msgstr ""
"Contrairement à un contrat, un composant ne peut pas être déployé seul. Le "
"code du composant devient partie intégrante du contrat auquel il est intégré."

#: src/ch16-02-00-composability-and-components.md:35
msgid "Creating Components"
msgstr "Création de composants"

#: src/ch16-02-00-composability-and-components.md:37
msgid ""
"To create a component, first define it in its own module decorated with a "
"`#[starknet::component]` attribute. Within this module, you can declare a ` "
"Storage` struct and `Event` enum, as usually done in [contracts](./ch13-02-"
"anatomy-of-a-simple-contract.md)."
msgstr ""
"Pour créer un composant, définissez-le d'abord dans son propre module décoré "
"d'un attribut `#[starknet::component]`. Dans ce module, vous pouvez déclarer "
"une structure ` Storage` et `Event` enum, comme habituellement fait dans "
"[contracts](./ch13-02-anatomy-of-a-simple-contract.md)."

#: src/ch16-02-00-composability-and-components.md:41
msgid ""
"The next step is to define the component interface, containing the "
"signatures of the functions that will allow external access to the "
"component's logic. You can define the interface of the component by "
"declaring a trait with the `#[starknet::interface]` attribute, just as you "
"would with contracts. This interface will be used to enable external access "
"to the component's functions using the [dispatcher](./ch15-02-contract-"
"dispatchers-library-dispatchers-and-system-calls.md) pattern."
msgstr ""
"L'étape suivante consiste à définir l'interface du composant, contenant les "
"signatures des fonctions qui permettront l'accès externe à la logique du "
"composant. Vous pouvez définir l'interface du composant en déclarant un "
"trait avec l'attribut `#[starknet::interface]`, tout comme vous le feriez "
"avec les contrats. Cette interface sera utilisée pour permettre l'accès "
"externe aux fonctions du composant en utilisant le modèle [dispatcher](./"
"ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md)."

#: src/ch16-02-00-composability-and-components.md:48
msgid ""
"The actual implementation of the component's external logic is done in an "
"`impl` block marked as `#[embeddable_as(name)]`. Usually, this `impl` block "
"will be an implementation of the trait defining the interface of the "
"component."
msgstr ""
"La mise en œuvre effective de la logique externe du composant se fait dans "
"un bloc `impl` marqué `#[embeddable_as(name)]`. Habituellement, ce bloc "
"`impl` sera une implémentation du caractère définissant l'interface du "
"composant."

#: src/ch16-02-00-composability-and-components.md:52
msgid ""
"Note: `name` is the name that we’ll be using in the contract to refer to the "
"component. It is different than the name of your impl."
msgstr ""
"Note : `name` est le nom que nous utiliserons dans le contrat pour désigner "
"le composant. Il est différent du nom de votre impl."

#: src/ch16-02-00-composability-and-components.md:55
msgid ""
"You can also define internal functions that will not be accessible "
"externally, by simply omitting the `#[embeddable_as(name)]` attribute above "
"the internal `impl` block. You will be able to use these internal functions "
"inside the contract you embed the component in, but not interact with it "
"from outside, as they're not a part of the abi of the contract."
msgstr ""
"Vous pouvez également définir des fonctions internes qui ne seront pas "
"accessibles à l'extérieur, en omettant simplement l'attribut "
"`#[embeddable_as(name)]` au-dessus du bloc `impl` interne. Vous pourrez "
"utiliser ces fonctions internes à l'intérieur du contrat dans lequel vous "
"intégrez le composant, mais pas interagir avec celui-ci de l'extérieur, car "
"elles ne font pas partie de l'abi du contrat."

#: src/ch16-02-00-composability-and-components.md:61
msgid ""
"Functions within these `impl` block expect arguments like `ref self: "
"ComponentState<TContractState>` (for state-modifying functions) or `self: "
"@ComponentState<TContractState>` (for view functions). This makes the impl "
"generic over `TContractState`, allowing us to use this component in any "
"contract."
msgstr ""
"Fonctions à l'intérieur de ces blocs `impl` attendent des arguments comme "
"`ref self: ComponentState<TContractState>` (pour les fonctions modifiant "
"l'état) ou `self: @ComponentState<TContractState>` (pour les fonctions de "
"vue), ce qui rend l'impl générique sur `TContractState`, nous permettant "
"d'utiliser ce composant dans n'importe quel contrat."

#: src/ch16-02-00-composability-and-components.md:70
msgid "Example: an Ownable Component"
msgstr "Exemple : un composant propre"

#: src/ch16-02-00-composability-and-components.md:72
msgid ""
"⚠️ The example shown below has not been audited and is not intended for "
"production use. The authors are not responsible for any damages caused by "
"the use of this code."
msgstr ""
"L'exemple ci-dessous n'a pas été vérifié et n'est pas destiné à la "
"production. Les auteurs ne sont pas responsables des dommages causés par "
"l'utilisation de ce code."

#: src/ch16-02-00-composability-and-components.md:76
msgid ""
"The interface of the Ownable component, defining the methods available "
"externally to manage ownership of a contract, would look like this:"
msgstr ""
"L'interface de la composante Ownable, définissant les méthodes disponibles à "
"l'extérieur pour gérer la propriété d'un contrat, ressemblerait à ceci:"

#: src/ch16-02-00-composability-and-components.md:88
msgid "The component itself is defined as:"
msgstr "Le composant lui-même est défini comme suit:"

#: src/ch16-02-00-composability-and-components.md:166
msgid ""
"This syntax is actually quite similar to the syntax used for contracts. The "
"only differences relate to the `#[embeddable_as]` attribute above the impl "
"and the genericity of the impl block that we will dissect in details."
msgstr ""
"Cette syntaxe est en fait assez similaire à la syntaxe utilisée pour les "
"contrats. Les seules différences concernent l'attribut `#[embeddable_as]` au-"
"dessus de l'impl et la generalité du bloc impl que nous disséquerons dans "
"les détails."

#: src/ch16-02-00-composability-and-components.md:170
msgid ""
"As you can see, our component has two `impl` blocks: one corresponding to "
"the implementation of the interface trait, and one containing methods that "
"should not be exposed externally and are only meant for internal use. "
"Exposing the `assert_only_owner` as part of the interface wouldn't make "
"sense, as it's only meant to be used internally by a contract embedding the "
"component."
msgstr ""
"Comme vous pouvez le voir, notre composant a deux blocs `impl`: un "
"correspondant à l'implémentation du trait d'interface, et une contenant des "
"méthodes qui ne devraient pas être exposées externement et ne sont destinées "
"qu'à une utilisation interne. Exposer le `assert_only_owner` dans le cadre "
"de l'interface n'aurait pas de sens, car il est uniquement destiné à être "
"utilisé en interne par un contrat en intégrant le composant."

#: src/ch16-02-00-composability-and-components.md:176
msgid "A Closer Look at the `impl` Block"
msgstr "Un regard plus étroit sur le bloc `impl`"

#: src/ch16-02-00-composability-and-components.md:185
msgid ""
"The `#[embeddable_as]` attribute is used to mark the impl as embeddable "
"inside a contract. It allows us to specify the name of the impl that will be "
"used in the contract to refer to this component. In this case, the component "
"will be referred to as `Ownable` in contracts embedding it."
msgstr ""
"L'attribut `#[embeddable_as]` est utilisé pour marquer l'impl comme "
"intégrable à l'intérieur d'un contrat. Il nous permet de spécifier le nom de "
"l'impl qui sera utilisé dans le contrat pour désigner ce composant. Dans ce "
"cas, l'élément sera appelé `Ownable` dans les contrats l'intégrant."

#: src/ch16-02-00-composability-and-components.md:190
msgid ""
"The implementation itself is generic over `ComponentState<TContractState>`, "
"with the added restriction that `TContractState` must implement the "
"`HasComponent<T>` trait. This allows us to use the component in any "
"contract, as long as the contract implements the `HasComponent` trait. "
"Understanding this mechanism in details is not required to use components, "
"but if you're curious about the inner workings, you can read more in the "
"[\"Components Under the Hood\"](./ch16-02-01-under-the-hood.md) section."
msgstr ""
"La mise en œuvre elle-même est générique sur "
"`ComponentState<TContractState>`, avec la restriction supplémentaire que "
"`TContractState` doit mettre en œuvre le caractère `HasComponent<T>`. Cela "
"nous permet d'utiliser le composant dans n'importe quel contrat, tant que le "
"contrat met en œuvre le caractère `HasComponent`. Comprendre ce mécanisme "
"dans les détails n'est pas nécessaire pour utiliser des composants, mais si "
"vous êtes curieux au sujet du fonctionnement intérieur, vous pouvez en lire "
"plus dans la section [./ch16-02-01-under-the-hood.md)."

#: src/ch16-02-00-composability-and-components.md:197
msgid ""
"One of the major differences from a regular smart contract is that access to "
"storage and events is done via the generic `ComponentState<TContractState>` "
"type and not `ContractState`. Note that while the type is different, "
"accessing storage or emitting events is done similarly via `self."
"storage_var_name.read()` or `self.emit(...).`"
msgstr ""
"Une des principales différences par rapport à un contrat intelligent "
"régulier est que l'accès au stockage et aux événements se fait via le type "
"générique `ComponentState<TContractState>` et non pas `ContractState`. Notez "
"que bien que le type soit différent, l'accès au stockage ou à l'émission "
"d'événements se fait de la même manière via `self.storage_var_name.read()` "
"ou `self.emit(...)`."

#: src/ch16-02-00-composability-and-components.md:203
msgid ""
"Note: To avoid the confusion between the embeddable name and the impl name, "
"we recommend keeping the suffix `Impl` in the impl name."
msgstr ""
"Note : Pour éviter la confusion entre le nom intégrable et le nom impl, nous "
"vous recommandons de conserver le suffixe `Impl` dans le nom impl."

#: src/ch16-02-00-composability-and-components.md:208
msgid "Migrating a Contract to a Component"
msgstr "Migrer un contrat en un élément"

#: src/ch16-02-00-composability-and-components.md:210
msgid ""
"Since both contracts and components share a lot of similarities, it's "
"actually very easy to migrate from a contract to a component. The only "
"changes required are:"
msgstr ""
"Puisque les contrats et les composants ont beaucoup de similitudes, il est "
"en fait très facile de passer d'un contrat à un composant. Les seuls "
"changements requis sont:"

#: src/ch16-02-00-composability-and-components.md:214
msgid "Adding the `#[starknet::component]` attribute to the module."
msgstr "Ajout de l'attribut `#[starknet::component]` au module."

#: src/ch16-02-00-composability-and-components.md:215
msgid ""
"Adding the `#[embeddable_as(name)]` attribute to the `impl` block that will "
"be embedded in another contract."
msgstr ""
"Ajout de l'attribut `#[embeddable_as(name)]` au bloc `impl` qui sera intégré "
"dans un autre contrat."

#: src/ch16-02-00-composability-and-components.md:217
msgid "Adding generic parameters to the `impl` block:"
msgstr "Ajouter des paramètres génériques au bloc `impl` :"

#: src/ch16-02-00-composability-and-components.md:218
msgid "Adding `TContractState` as a generic parameter."
msgstr "Ajouter `TContractState` comme paramètre générique."

#: src/ch16-02-00-composability-and-components.md:219
msgid "Adding `+HasComponent<TContractState>` as an impl restriction."
msgstr "Ajouter `+HasComponent<TContractState>` comme restriction impl."

#: src/ch16-02-00-composability-and-components.md:220
msgid ""
"Changing the type of the `self` argument in the functions inside the `impl` "
"block to `ComponentState<TContractState>` instead of `ContractState`."
msgstr ""
"Modifier le type d'argument `self` dans les fonctions à l'intérieur du bloc "
"`impl` en `ComponentState<TContractState>` au lieu de `ContractState`."

#: src/ch16-02-00-composability-and-components.md:223
msgid ""
"For traits that do not have an explicit definition and are generated using "
"`#[generate_trait]`, the logic is the same - but the trait is generic over "
"`TContractState` instead of `ComponentState<TContractState>`, as "
"demonstrated in the example with the `InternalTrait`."
msgstr ""
"Pour les caractères qui n'ont pas de définition explicite et qui sont "
"générés en utilisant `#[generate_trait]`, la logique est la même - mais le "
"caractère est générique sur `TContractState` au lieu de "
"`ComponentState<TContractState>`, comme le montre l'exemple avec le "
"`InternalTrait`."

#: src/ch16-02-00-composability-and-components.md:228
msgid "Using Components Inside a Contract"
msgstr "Utilisation de composants à l'intérieur d'un contrat"

#: src/ch16-02-00-composability-and-components.md:230
msgid ""
"The major strength of components is how it allows reusing already built "
"primitives inside your contracts with a restricted amount of boilerplate. To "
"integrate a component into your contract, you need to:"
msgstr ""
"La force majeure des composants est la façon dont il permet de réutiliser "
"des primitives déjà construits à l'intérieur de vos contrats avec une "
"quantité limitée de plaque de chaudière. Pour intégrer un composant dans "
"votre contrat, vous devez :"

#: src/ch16-02-00-composability-and-components.md:234
msgid "Declare it with the `component!()` macro, specifying"
msgstr "Déclarez-le avec la macro `component!()`, spécifiant"

#: src/ch16-02-00-composability-and-components.md:236
msgid "The path to the component `path::to::component`."
msgstr "Le chemin vers le composant `path::to::component`."

#: src/ch16-02-00-composability-and-components.md:237
msgid ""
"The name of the variable in your contract's storage referring to this "
"component's storage (e.g. `ownable`)."
msgstr ""
"Le nom de la variable dans le stockage de votre contrat se référant au "
"stockage de ce composant (par exemple `ownable`)."

#: src/ch16-02-00-composability-and-components.md:239
msgid ""
"The name of the variant in your contract's event enum referring to this "
"component's events (e.g. `OwnableEvent`)."
msgstr ""
"Le nom de la variante dans l'événement de votre contrat enum se référant aux "
"événements de ce composant (par exemple `OwnableEvent`)."

#: src/ch16-02-00-composability-and-components.md:242
msgid ""
"Add the path to the component's storage and events to the contract's "
"`Storage` and `Event`. They must match the names provided in step 1 (e.g. "
"`ownable: ownable_component::Storage` and `OwnableEvent: ownable_component::"
"Event`)."
msgstr ""
"Ajouter le chemin vers le stockage et les événements de la composante au "
"contrat `Storage` et `Event`. Ils doivent correspondre aux noms fournis à "
"l'étape 1 (par exemple `ownable:ownable_component::Storage` et `OwnableEvent:"
"ownable_component::Event`)."

#: src/ch16-02-00-composability-and-components.md:247
msgid ""
"The storage variable **MUST** be annotated with the `#[substorage(v0)]` "
"attribute."
msgstr ""
"La variable de stockage **MUST** doit être annotée avec l'attribut "
"`#[substorage(v0)]`."

#: src/ch16-02-00-composability-and-components.md:250
msgid ""
"Embed the component's logic defined inside your contract, by instantiating "
"the component's generic impl with a concrete `ContractState` using an impl "
"alias. This alias must be annotated with `#[abi(embed_v0)]` to externally "
"expose the component's functions."
msgstr ""
"Intégrez la logique du composant définie dans votre contrat, en injectant "
"l'impl générique du composant avec un `ContractState` concret à l'aide d'un "
"alias impl. Cet alias doit être annoté avec `#[abi(embed_v0)]` pour exposer "
"les fonctions du composant à l'extérieur."

#: src/ch16-02-00-composability-and-components.md:255
msgid ""
"As you can see, the InternalImpl is not marked with `#[abi(embed_v0)]`. "
"Indeed, we don't want to expose externally the functions defined in this "
"impl. However, we might still want to access them internally."
msgstr ""
"Comme vous pouvez le voir, InternalImpl n'est pas marqué par "
"`#[abi(embed_v0)]`. En effet, nous ne voulons pas exposer extérieurement les "
"fonctions définies dans cette impl. Cependant, nous pourrions toujours "
"vouloir y accéder en interne."

#: src/ch16-02-00-composability-and-components.md:259
msgid ""
"For example, to embed the `Ownable` component defined above, we would do the "
"following:"
msgstr ""
"Par exemple, pour intégrer le composant `Ownable` défini ci-dessus, nous "
"ferions ce qui suit :"

#: src/ch16-02-00-composability-and-components.md:297
msgid ""
"The component's logic is now seamlessly part of the contract! We can "
"interact with the components functions externally by calling them using the "
"`IOwnableDispatcher` instantiated with the contract's address."
msgstr ""
"La logique du composant fait désormais partie intégrante du contrat! Nous "
"pouvons interagir avec les composants en les appelant en utilisant le "
"`IOwnableDispatcher` instantané avec l'adresse du contrat."

#: src/ch16-02-00-composability-and-components.md:310
msgid "Stacking Components for Maximum Composability"
msgstr "Composants de positionnement pour une composabilité maximale"

#: src/ch16-02-00-composability-and-components.md:312
msgid ""
"The composability of components really shines when combining multiple of "
"them together. Each adds its features onto the contract. You can rely on "
"[Openzeppelin's](https://github.com/OpenZeppelin/cairo-contracts) "
"implementation of components to quickly plug-in all the common "
"functionalities you need a contract to have."
msgstr ""
"Chacun ajoute ses fonctionnalités au contrat. Vous pouvez vous fier à "
"[Openzeppelin's](https://github.com/OpenZeppelin/cairo-contracts) "
"l'implémentation de composants pour brancher rapidement toutes les "
"fonctionnalités communes que vous avez besoin d'un contrat."

#: src/ch16-02-00-composability-and-components.md:318
msgid ""
"Developers can focus on their core contract logic while relying on battle-"
"tested and audited components for everything else."
msgstr ""
"Les développeurs peuvent se concentrer sur leur logique de contrat de base "
"tout en s'appuyant sur des composants éprouvés et vérifiés pour tout le "
"reste."

#: src/ch16-02-00-composability-and-components.md:321
msgid ""
"Components can even [depend](./ch16-02-02-component-dependencies.md) on "
"other components by restricting the `TContractstate` they're generic on to "
"implement the trait of another component. Before we dive into this "
"mechanism, let's first look at [how components work under the hood](./"
"ch16-02-01-under-the-hood.md)."
msgstr ""
"Les composants peuvent même [dépendre](./ch16-02-02-component-dependences."
"md) sur d'autres composants en limitant le `TContractstate` sur lequel ils "
"sont génériques pour implémenter le caractère d'un autre composant. Avant de "
"plonger dans ce mécanisme, examinons d'abord [comment les composants "
"fonctionnent sous le capot](./ch16-02-01-under-the-hood.md)."

#: src/ch16-02-01-under-the-hood.md:1
msgid "Components: Under the Hood"
msgstr "Composants: Sous le capot"

#: src/ch16-02-01-under-the-hood.md:3
msgid ""
"Components provide powerful modularity to Starknet contracts. But how does "
"this magic actually happen behind the scenes?"
msgstr ""
"Les composants fournissent une modularité puissante aux contrats Starknet. "
"Mais comment cette magie se produit-elle réellement dans les coulisses?"

#: src/ch16-02-01-under-the-hood.md:6
msgid ""
"This chapter will dive deep into the compiler internals to explain the "
"mechanisms that enable component composability."
msgstr ""
"Ce chapitre plongera profondément dans les internes du compilateur pour "
"expliquer les mécanismes qui permettent la composabilité des composants."

#: src/ch16-02-01-under-the-hood.md:9
msgid "A Primer on Embeddable Impls"
msgstr "Un Primer sur Impls Embeddable"

#: src/ch16-02-01-under-the-hood.md:11
msgid ""
"Before digging into components, we need to understand _embeddable impls_."
msgstr ""
"Avant de creuser dans des composants, nous devons comprendre "
"impls__embeddable."

#: src/ch16-02-01-under-the-hood.md:13
msgid ""
"An impl of a Starknet interface trait (marked with `#[starknet::interface]`) "
"can be made embeddable. Embeddable impls can be injected into any contract, "
"adding new entry points and modifying the ABI of the contract."
msgstr ""
"Un impl d'un trait d'interface Starknet (marqué avec `#[starknet::"
"interface]`) peut être intégré. Des impls embarquables peuvent être injectés "
"dans n'importe quel contrat, ajoutant de nouveaux points d'entrée et "
"modifiant l'ABI du contrat."

#: src/ch16-02-01-under-the-hood.md:17
msgid "Let's look at an example to see this in action:"
msgstr "Examinons un exemple pour voir ceci en action :"

#: src/ch16-02-01-under-the-hood.md:42
msgid ""
"By embedding `SimpleImpl`, we externally expose `ret4` in the contract's ABI."
msgstr ""
"En intégrant `SimpleImpl`, nous exposons externement `ret4` dans l'ABI du "
"contrat."

#: src/ch16-02-01-under-the-hood.md:44
msgid ""
"Now that we’re more familiar with the embedding mechanism, we can now see "
"how components build on this."
msgstr ""
"Maintenant que nous sommes plus familiers avec le mécanisme d'intégration, "
"nous pouvons maintenant voir comment les composants s'appuient sur cela."

#: src/ch16-02-01-under-the-hood.md:47
msgid "Inside Components: Generic Impls"
msgstr "Composants intérieurs : Impls générique"

#: src/ch16-02-01-under-the-hood.md:49
msgid "Recall the impl block syntax used in components:"
msgstr "Rappelez-vous la syntaxe de bloc impl utilisée dans les composants:"

#: src/ch16-02-01-under-the-hood.md:58
msgid "The key points:"
msgstr "Les points clés:"

#: src/ch16-02-01-under-the-hood.md:60
msgid ""
"`OwnableImpl` requires the implementation of the "
"`HasComponent<TContractState>` trait by the underlying contract, which is "
"automatically generated with the `component!()` macro when using a component "
"inside a contract."
msgstr ""
"`OwnableImpl` nécessite la mise en œuvre du caractère "
"`HasComponent<TContractState>` par le contrat sous-jacent, qui est "
"automatiquement généré avec la macro `component!()` lors de l'utilisation "
"d'un composant à l'intérieur d'un contrat."

#: src/ch16-02-01-under-the-hood.md:65
msgid ""
"The compiler will generate an impl that wraps any function in `OwnableImpl`, "
"replacing the `self: ComponentState<TContractState>` argument with `self: "
"TContractState`, where access to the component state is made via the "
"`get_component` function in the `HasComponent<TContractState>` trait."
msgstr ""
"Le compilateur générera un impl qui enveloppe n'importe quelle fonction dans "
"`OwnableImpl`, remplaçant l'argument `self: ComponentState<TContractState>` "
"par `self: TContractState`, où l'accès à l'état composant est fait via la "
"fonction `get_component` dans le caractère `HasComponent<TContractState>`."

#: src/ch16-02-01-under-the-hood.md:70
msgid ""
"For each component, the compiler generates a `HasComponent` trait. This "
"trait defines the interface to bridge between the actual `TContractState` of "
"a generic contract, and `ComponentState<TContractState>`."
msgstr ""
"Pour chaque composant, le compilateur génère un caractère `HasComponent`. Ce "
"caractère définit l'interface entre le `TContractState` réel d'un contrat "
"générique et `ComponentState<TContractState>`."

#: src/ch16-02-01-under-the-hood.md:75
msgid "// generated per component\n"
msgstr "// généré par composant\n"

#: src/ch16-02-01-under-the-hood.md:85
msgid ""
"In our context `ComponentState<TContractState>` is a type specific to the "
"ownable component, i.e. it has members based on the storage variables "
"defined in `ownable_component::Storage`. Moving from the generic "
"`TContractState` to `ComponentState<TContractState>` will allow us to embed "
"`Ownable` in any contract that wants to use it. The opposite direction "
"(`ComponentState<TContractState>` to `ContractState`) is useful for "
"dependencies (see the `Upgradeable` component depending on an `IOwnable` "
"implementation example in the [Components dependencies ](./ch16-02-02-"
"component-dependencies.md) section)."
msgstr ""
"Dans notre contexte, `ComponentState<TContractState>` est un type spécifique "
"à la composante propre, c'est-à-dire qu'il a des membres basés sur les "
"variables de stockage définies dans `ownable_component::Storage`. Le passage "
"de `TContractState` générique à `ComponentState<TContractState>` nous "
"permettra d'intégrer `Ownable` dans tout contrat qui veut l'utiliser. La "
"direction opposée (`ComponentState<TContractState>` à `ContractState`) est "
"utile pour les dépendances (voir la composante `Upgradable` en fonction d'un "
"exemple d'implémentation `IOwnable` dans la section [Components dependences ]"
"(./ch16-02-02-component-dependences.md)."

#: src/ch16-02-01-under-the-hood.md:94
msgid ""
"To put it briefly, one should think of an implementation of the above "
"`HasComponent<T>` as saying: **“Contract whose state T has the upgradeable "
"component”.**"
msgstr ""
"Pour le dire brièvement, on devrait penser à une mise en œuvre de la "
"\"HasComponent<T>\" ci-dessus comme disant: **=Contract dont l'état T a la "
"composante upgradable.**"

#: src/ch16-02-01-under-the-hood.md:98
msgid "`Ownable` is annotated with the `embeddable_as(<name>)` attribute:"
msgstr "`Ownable` est annoté avec l'attribut `embeddable_as(<name>)`:"

#: src/ch16-02-01-under-the-hood.md:100
msgid ""
"`embeddable_as` is similar to `embeddable`; it only applies to impls of "
"`starknet::interface` traits and allows embedding this impl in a contract "
"module. That said, `embeddable_as(<name>)` has another role in the context "
"of components. Eventually, when embedding `OwnableImpl` in some contract, we "
"expect to get an impl with the following functions:"
msgstr ""
"`embeddable_as` est similaire à `embeddable`; il ne s'applique qu'aux impls "
"de caractères `starknet::interface` et permet d'intégrer cette impl dans un "
"module de contrat. Cela dit, `embeddable_as(<name>)` a un autre rôle dans le "
"contexte des composants. Finalement, lors de l'intégration de `OwnableImpl` "
"dans un contrat, nous nous attendons à obtenir une impl avec les fonctions "
"suivantes:"

#: src/ch16-02-01-under-the-hood.md:112
msgid ""
"Note that while starting with a function receiving the generic type "
"`ComponentState<TContractState>`, we want to end up with a function "
"receiving `ContractState`. This is where `embeddable_as(<name>)` comes in. "
"To see the full picture, we need to see what is the impl generated by the "
"compiler due to the `embeddable_as(Ownable)` annotation:"
msgstr ""
"Notez que tout en commençant par une fonction recevant le type générique "
"`ComponentState<TContractState>`, nous voulons finir par une fonction "
"recevant `ContractState`. C'est là que `embeddable_as(<name>)` entre en jeu. "
"Pour voir l'image complète, nous devons voir ce qui est l'impl généré par le "
"compilateur en raison de l'annotation `embeddable_as(Ownable)`:"

#: src/ch16-02-01-under-the-hood.md:140
msgid ""
"Note that thanks to having an impl of `HasComponent<TContractState>`, the "
"compiler was able to wrap our functions in a new impl that doesn’t directly "
"know about the `ComponentState` type. `Ownable`, whose name we chose when "
"writing `embeddable_as(Ownable)`, is the impl that we will embed in a "
"contract that wants ownership."
msgstr ""
"Notez que grâce à un impl de `HasComponent<TContractState>`, le compilateur "
"a pu envelopper nos fonctions dans une nouvelle impl qui ne sait pas "
"directement sur le type `ComponentState`. `Ownable`, dont nous avons choisi "
"le nom lors de l'écriture `embeddable_as(Ownable)`, est l'impl que nous "
"intégrerons dans un contrat qui veut la propriété."

#: src/ch16-02-01-under-the-hood.md:146
msgid "Contract Integration"
msgstr "Intégration des contrats"

#: src/ch16-02-01-under-the-hood.md:148
msgid ""
"We've seen how generic impls enable component reusability. Next let's see "
"how a contract integrates a component."
msgstr ""
"Nous avons vu comment les impls génériques permettent la réutilisation des "
"composants. Voyons ensuite comment un contrat intègre un composant."

#: src/ch16-02-01-under-the-hood.md:151
msgid ""
"The contract uses an **impl alias** to instantiate the component's generic "
"impl with the concrete `ContractState` of the contract."
msgstr ""
"Le contrat utilise un alias **impl** pour présenter l'impl générique de "
"l'élément avec l'\"État contractant\" concret du contrat."

#: src/ch16-02-01-under-the-hood.md:161
msgid ""
"The above lines use the Cairo impl embedding mechanism alongside the impl "
"alias syntax. We’re instantiating the generic `OwnableImpl<TContractState>` "
"with the concrete type `ContractState`. Recall that "
"`OwnableImpl<TContractState>` has the `HasComponent<TContractState>` generic "
"impl parameter. An implementation of this trait is generated by the "
"`component!` macro."
msgstr ""
"Les lignes ci-dessus utilisent le mécanisme d'intégration du Caire à côté de "
"la syntaxe impl alias. Nous sommes en train d'actualiser le générique "
"`OwnableImpl<TContractState>` avec le type de béton `ContractState`. "
"Rappelez-vous que `OwnableImpl<TContractState>` a le paramètre "
"`HasComponent<TContractState>` générique impl. Une implémentation de ce "
"caractère est générée par la macro `component!`."

#: src/ch16-02-01-under-the-hood.md:167
msgid ""
"Note that only the using contract could have implemented this trait since "
"only it knows about both the contract state and the component state."
msgstr ""
"Il convient de noter que seul le contrat d'utilisation aurait pu mettre en "
"œuvre ce caractère, car seul il connaît à la fois l'état du contrat et "
"l'état de l'élément."

#: src/ch16-02-01-under-the-hood.md:171
msgid ""
"This glues everything together to inject the component logic into the "
"contract."
msgstr ""
"Cela colle tout ensemble pour injecter la logique des composants dans le "
"contrat."

#: src/ch16-02-01-under-the-hood.md:173
msgid "Key Takeaways"
msgstr "Prises en charge des clés"

#: src/ch16-02-01-under-the-hood.md:175
msgid ""
"Embeddable impls allow injecting components logic into contracts by adding "
"entry points and modifying the contract ABI."
msgstr ""
"Les imples intégrables permettent la logique des composants d'injection dans "
"les contrats en ajoutant des points d'entrée et en modifiant le contrat ABI."

#: src/ch16-02-01-under-the-hood.md:177
msgid ""
"The compiler automatically generates a `HasComponent` trait implementation "
"when a component is used in a contract. This creates a bridge between the "
"contract's state and the component's state, enabling interaction between the "
"two."
msgstr ""
"Le compilateur génère automatiquement une implémentation de caractère "
"`HasComponent` lorsqu'un composant est utilisé dans un contrat, ce qui crée "
"un pont entre l'état du contrat et l'état du composant, permettant "
"l'interaction entre les deux."

#: src/ch16-02-01-under-the-hood.md:181
msgid ""
"Components encapsulate reusable logic in a generic, contract-agnostic way. "
"Contracts integrate components through impl aliases and access them via the "
"generated `HasComponent` trait."
msgstr ""
"Les composants encapsulent la logique réutilisable d'une manière générique, "
"contract-agnostic. Les contrats intègrent les composants par des alias impl "
"et y accèdent via le caractère généré `HasComponent`."

#: src/ch16-02-01-under-the-hood.md:184
msgid ""
"Components build on embeddable impls by defining generic component logic "
"that can be integrated into any contract wanting to use that component. Impl "
"aliases instantiate these generic impls with the contract's concrete storage "
"types."
msgstr ""
"Components build on embeddable impls by definition general component logique "
"that can be integrated in any contract want to use this component. Impl "
"alias inconcevable ces impls génériques avec les types de stockage en béton "
"du contrat."

#: src/ch16-02-02-component-dependencies.md:3
msgid ""
"Working with components becomes more complex when we try to use one "
"component inside another. As mentioned earlier, a component can only be "
"embedded within a contract, meaning that it's not possible to embed a "
"component within another component. However, this doesn't mean that we can't "
"use one component inside another. In this section, we will see how to use a "
"component as a dependency of another component."
msgstr ""
"Travailler avec des composants devient plus complexe lorsque nous essayons "
"d'utiliser un composant à l'intérieur d'un autre. Comme mentionné "
"précédemment, un composant ne peut être intégré qu'à l'intérieur d'un "
"contrat, ce qui signifie qu'il n'est pas possible d'intégrer un composant à "
"un autre composant. Cependant, cela ne signifie pas que nous ne pouvons pas "
"utiliser un composant à l'intérieur d'un autre. Dans cette section, nous "
"verrons comment utiliser un composant comme dépendance d'un autre composant."

#: src/ch16-02-02-component-dependencies.md:5
msgid ""
"Consider a component called `OwnableCounter` whose purpose is to create a "
"counter that can only be incremented by its owner. This component can be "
"embedded in any contract, so that any contract that uses it will have a "
"counter that can only be incremented by its owner."
msgstr ""
"Considérez un composant appelé `OwnableCounter` dont le but est de créer un "
"compteur qui ne peut être incrémenté que par son propriétaire. Ce composant "
"peut être intégré dans n'importe quel contrat, de sorte que tout contrat qui "
"l'utilise aura un compteur qui ne peut être incrémenté que par son "
"propriétaire."

#: src/ch16-02-02-component-dependencies.md:7
msgid ""
"The first way to implement this is to create a single component that "
"contains both counter and ownership features from within a single component. "
"However, this approach is not recommended: our goal is to minimize the "
"amount of code duplication and take advantage of component reusability. "
"Instead, we can create a new component that _depends_ on the `Ownable` "
"component for the ownership features, and internally defines the logic for "
"the counter."
msgstr ""
"La première façon de mettre en œuvre ceci est de créer un composant unique "
"qui contient à la fois des fonctionnalités de compteur et de propriété à "
"partir d'un seul composant. Cependant, cette approche n'est pas recommandée: "
"notre objectif est de minimiser la quantité de duplication de code et de "
"profiter de la réutilisabilité des composants. Nous pouvons plutôt créer un "
"nouveau composant qui _dépend_ du composant `Ownable` pour les "
"fonctionnalités de propriétaire, et définit en interne la logique du "
"compteur."

#: src/ch16-02-02-component-dependencies.md:9
msgid ""
"Listing 16-1 shows the complete implementation, which we'll break down right "
"after:"
msgstr ""
"Listing 16-1 montre l'implémentation complète, que nous allons décomposer "
"juste après:"

#: src/ch16-02-02-component-dependencies.md:58
msgid ""
"<span class=\"caption\">Listing 16-1: An OwnableCounter Component</span>"
msgstr ""
"<span class=\"caption\">Liste 16-1: Un composant de counter propre</span>"

#: src/ch16-02-02-component-dependencies.md:60
msgid "Specificities"
msgstr "Spécificités"

#: src/ch16-02-02-component-dependencies.md:62
msgid "Specifying Dependencies on Another Component"
msgstr "Spécifier les dépendances sur un autre composant"

#: src/ch16-02-02-component-dependencies.md:73
msgid ""
"In [chapter 8](./ch08-02-traits-in-cairo.md), we introduced trait bounds, "
"which are used to specify that a generic type must implement a certain "
"trait. In the same way, we can specify that a component depends on another "
"component by restricting the `impl` block to be available only for contracts "
"that contain the required component. In our case, this is done by adding a "
"restriction `impl Owner: ownable_component::HasComponent<TContractState>`, "
"which indicates that this `impl` block is only available for contracts that "
"contain an implementation of the `ownable_component::HasComponent` trait. "
"This essentially means that the \\`TContractState' type has access to the "
"ownable component. See [Components under the hood](ch16-02-01-under-the-hood."
"md#inside-components-generic-impls) for more information."
msgstr ""
"Dans le [chapitre 8](./ch08-02-traits-in-cairo.md), nous avons introduit des "
"limites de caractères, qui sont utilisées pour spécifier qu'un type "
"générique doit mettre en œuvre un certain caractère. De la même manière, "
"nous pouvons spécifier qu'un composant dépend d'un autre composant en "
"limitant le bloc `impl` à être disponible uniquement pour les contrats qui "
"contiennent le composant requis. Dans notre cas, cela se fait en ajoutant "
"une restriction `impl Propriétaire: propre_composante::"
"HasComponent<TContractState>`, qui indique que ce bloc `impl` n'est "
"disponible que pour les contrats qui contiennent une mise en œuvre du "
"caractère `ownable_composant::HasComponent`. Cela signifie essentiellement "
"que le type \\`TContractState' a accès au composant propre. Voir [Components "
"under the hood](ch16-02-01-under-the-hood.md#inside-components-generic-"
"impls) pour plus d'informations."

#: src/ch16-02-02-component-dependencies.md:76
msgid ""
"Although most of the trait bounds were defined using \\[anonymous "
"parameters\\]\\[anonymous generic impl operator\\], the dependency on the "
"`Ownable` component is defined using a named parameter (here, `Owner`). We "
"will need to use this explicit name when accessing the `Ownable`component "
"within the`impl` block."
msgstr ""
"Bien que la plupart des limites des caractères aient été définies en "
"utilisant \\[paramètres anonymes\\]\\[opérateur générique anonyme d'impl\\], "
"la dépendance à l'égard du composant `Ownable` est définie en utilisant un "
"paramètre nommé (ici, `Owner`). Nous devrons utiliser ce nom explicite lors "
"de l'accès au composant `Ownable` dans le bloc`impl`."

#: src/ch16-02-02-component-dependencies.md:78
msgid ""
"While this mechanism is verbose and may not be easy to approach at first, it "
"is a powerful leverage of the trait system in Cairo. The inner workings of "
"this mechanism are abstracted away from the user, and all you need to know "
"is that when you embed a component in a contract, all other components in "
"the same contract can access it."
msgstr ""
"Bien que ce mécanisme soit verbeux et ne soit peut-être pas facile à "
"approcher au début, il est un puissant levier du système de caractères au "
"Caire. Le fonctionnement intérieur de ce mécanisme est retiré de "
"l'utilisateur, et tout ce que vous devez savoir est que lorsque vous "
"intégrez un composant dans un contrat, tous les autres composants dans le "
"même contrat peuvent y accéder."

#: src/ch16-02-02-component-dependencies.md:82
msgid ""
"\\[anonymous generic impl operator\\]: ./ch08-01-generic-data-types "
"md#anonymous-generic-implementation-parameter--operator"
msgstr ""
"\\[anonyme générique impl operator\\]:./ch08-01-generic-data-types "
"md#anonyme-generic-implementation-parameter--operator"

#: src/ch16-02-02-component-dependencies.md:84
msgid "Using the Dependency"
msgstr "Utilisation de la dépendance"

#: src/ch16-02-02-component-dependencies.md:86
msgid ""
"Now that we have made our `impl` depend on the `Ownable` component, we can "
"access its functions, storage, and events within the implementation block. "
"To bring the `Ownable` component into scope, we have two choices, depending "
"on whether we intend to mutate the state of the `Ownable` component or not. "
"If we want to access the state of the `Ownable` component without mutating "
"it, we use the `get_dep_component!` macro. If we want to mutate the state of "
"the `Ownable` component (for example, change the current owner), we use the "
"`get_dep_component_mut!` macro. Both macros take two arguments: the first is "
"`self`, either as a snapshot or by reference depending on mutability, "
"representing the state of the component using the dependency, and the second "
"is the component to access."
msgstr ""
"Maintenant que nous avons fait dépendre notre `impl` du composant `Ownable`, "
"nous pouvons accéder à ses fonctions, stockage et événements dans le bloc "
"d'implémentation. Pour faire entrer le composant `Ownable` dans la portée, "
"nous avons deux choix, selon que nous avons l'intention de muter ou non "
"l'état du composant `Ownable`. Si nous voulons accéder à l'état du composant "
"`Ownable` sans le muter, nous utilisons la macro `get_dep_component!`. Si "
"nous voulons muter l'état du composant `Ownable` (par exemple, modifier le "
"propriétaire actuel), nous utilisons la macro `get_dep_component_mut!`. Les "
"deux macros prennent deux arguments: le premier est `self`, soit comme "
"instantané, soit par référence selon la mutabilité, représentant l'état du "
"composant utilisant la dépendance, et le second est le composant à accéder."

#: src/ch16-02-02-component-dependencies.md:98
msgid ""
"In this function, we want to make sure that only the owner can call the "
"`increment` function. We need to use the `assert_only_owner` function from "
"the `Ownable` component. We'll use the `get_dep_component!` macro which will "
"return a snapshot of the requested component state, and call "
"`assert_only_owner` on it, as a method of that component."
msgstr ""
"Dans cette fonction, nous voulons nous assurer que seul le propriétaire peut "
"appeler la fonction `increment`. Nous devons utiliser la fonction "
"`assert_only_owner` du composant `Ownable`. Nous allons utiliser la macro "
"`get_dep_component!` qui retournera un instantané de l'état du composant "
"demandé, et appeler `assert_only_owner` dessus, comme méthode de ce "
"composant."

#: src/ch16-02-02-component-dependencies.md:101
msgid ""
"For the `transfer_ownership` function, we want to mutate that state to "
"change the current owner. We need to use the `get_dep_component_mut!` macro, "
"which will return the requested component state as a mutable reference, and "
"call `transfer_ownership` on it."
msgstr ""
"Pour la fonction `transfer_ownership`, nous voulons muter cet état pour "
"changer le propriétaire actuel. Nous devons utiliser la macro "
"`get_dep_component_mut!`, qui retournera l'état de composant demandé comme "
"référence mutable, et appeler `transfer_ownership` dessus."

#: src/ch16-02-02-component-dependencies.md:112
msgid ""
"It works exactly the same as `get_dep_component!` except that we need to "
"pass the state as a `ref` so we can mutate it to transfer the ownership."
msgstr ""
"Cela fonctionne exactement comme `get_dep_component!` sauf que nous devons "
"passer l'état comme un `ref` pour pouvoir le muter pour transférer la "
"propriété."

#: src/ch16-02-03-testing-components.md:3
msgid ""
"Testing components is a bit different than testing contracts. Contracts need "
"to be tested against a specific state, which can be achieved by either "
"deploying the contract in a test, or by simply getting the `ContractState` "
"object and modifying it in the context of your tests."
msgstr ""
"Les composants d'essai sont un peu différents des contrats d'essai. Les "
"contrats doivent être testés selon un état spécifique, qui peut être réalisé "
"en déployant le contrat dans un test, ou simplement en obtenant l'objet "
"`ContractState` et en le modifiant dans le contexte de vos tests."

#: src/ch16-02-03-testing-components.md:6
msgid ""
"Components are a generic construct, meant to be integrated in contracts, "
"that can't be deployed on their own and don't have a `ContractState` object "
"that we could use. So how do we test them?"
msgstr ""
"Les composants sont une construction générique, destinée à être intégrée "
"dans les contrats, qui ne peut pas être déployé par eux-mêmes et n'ont pas "
"d'objet \"ContractState\" que nous pourrions utiliser."

#: src/ch16-02-03-testing-components.md:8
msgid ""
"Let's consider that we want to test a very simple component called "
"\"Counter\", that will allow each contract to have a counter that can be "
"incremented. The component is defined in Listing 16-2:"
msgstr ""
"Considérons que nous voulons tester un composant très simple appelé "
"\"Counter\", qui permettra à chaque contrat d'avoir un compteur qui peut "
"être incrémenté. Le composant est défini dans Listing 16-2:"

#: src/ch16-02-03-testing-components.md:33
msgid "<span class=\"caption\">Listing 16-2: A simple Counter component</span>"
msgstr ""
"<span class=\"caption\">Liste 16-2: Un composant de comptoir simple</span>"

#: src/ch16-02-03-testing-components.md:35
msgid "Testing the Component by Deploying a Mock Contract"
msgstr "Tester le composant en déployant un contrat Mock"

#: src/ch16-02-03-testing-components.md:37
msgid ""
"The easiest way to test a component is to integrate it within a mock "
"contract. This mock contract is only used for testing purposes, and only "
"integrates the component you want to test. This allows you to test the "
"component in the context of a contract, and to use a Dispatcher to call the "
"component's entry points."
msgstr ""
"La façon la plus simple de tester un composant est de l'intégrer dans un "
"contrat simulé. Ce contrat simulé n'est utilisé qu'à des fins de test, et "
"intègre uniquement le composant que vous voulez tester. Cela vous permet de "
"tester le composant dans le contexte d'un contrat, et d'utiliser un "
"Expéditeur pour appeler les points d'entrée du composant."

#: src/ch16-02-03-testing-components.md:39
msgid "We can define such a mock contract as follows:"
msgstr "Nous pouvons définir un tel contrat fictif comme suit:"

#: src/ch16-02-03-testing-components.md:65
msgid ""
"This contract is entirely dedicated to testing the `Counter` component. It "
"embeds the component with the `component!` macro, exposes the component's "
"entry points by annotating the impl aliases with `#[abi(embed_v0)]`."
msgstr ""
"Ce contrat est entièrement dédié à tester le composant `Counter`. Il intègre "
"le composant avec la macro `component!`, expose les points d'entrée du "
"composant en annotant les alias impl avec `#[abi(embed_v0)]`."

#: src/ch16-02-03-testing-components.md:67
msgid ""
"We also need to define an interface that will be required to interact "
"externally with this mock contract."
msgstr ""
"Nous devons également définir une interface qui sera nécessaire pour "
"interagir avec l'extérieur avec ce contrat fictif."

#: src/ch16-02-03-testing-components.md:77
msgid ""
"We can now write tests for the component by deploying this mock contract and "
"calling its entry points, as we would with a typical contract."
msgstr ""
"Nous pouvons maintenant passer des tests pour le composant en déployant ce "
"contrat fictif et en appelant ses points d'entrée, comme nous le ferions "
"avec un contrat typique."

#: src/ch16-02-03-testing-components.md:107
msgid "Testing Components Without Deploying a Contract"
msgstr "Composants d'essai sans déploiement d'un contrat"

#: src/ch16-02-03-testing-components.md:109
msgid ""
"In [Components under the hood](./ch16-02-01-under-the-hood.md), we saw that "
"components leveraged genericity to define storage and logic that could be "
"embedded in multiple contracts. If a contract embeds a component, a "
"`HasComponent` trait is created in this contract, and the component methods "
"are made available."
msgstr ""
"Dans [Components under the hood](../ch16-02-01-under-the-hood.md), nous "
"avons vu que les composants ont utilisé la généricité pour définir le "
"stockage et la logique qui pourraient être intégrés dans plusieurs contrats. "
"Si un contrat intègre un composant, un caractère `HasComponent` est créé "
"dans ce contrat, et les méthodes des composants sont mises à disposition."

#: src/ch16-02-03-testing-components.md:111
msgid ""
"This informs us that if we can provide a concrete `TContractState` that "
"implements the `HasComponent` trait to the `ComponentState` struct, should "
"be able to directly invoke the methods of the component using this concrete "
"`ComponentState` object, without having to deploy a mock."
msgstr ""
"Cela nous informe que si nous pouvons fournir un \"TContractState\" concret "
"qui met en œuvre le caractère `HasComponent` à la structure "
"`ComponentState`, devrait pouvoir invoquer directement les méthodes du "
"composant en utilisant cet objet concret `ComponentState`, sans avoir à "
"déployer une maquette."

#: src/ch16-02-03-testing-components.md:113
msgid ""
"Let's see how we can do that by using type aliases. We still need to define "
"a mock contract - let's use the same as above - but this time, we won't need "
"to deploy it."
msgstr ""
"Voyons comment nous pouvons le faire en utilisant des alias de type. Nous "
"devons encore définir un contrat fictif - utilisons le même que ci-dessus - "
"mais cette fois, nous n'aurons pas besoin de le déployer."

#: src/ch16-02-03-testing-components.md:115
msgid ""
"First, we need to define a concrete implementation of the generic "
"`ComponentState` type using a type alias. We will use the `MockContract::"
"ContractState` type to do so."
msgstr ""
"Premièrement, nous devons définir une mise en œuvre concrète du type "
"générique `ComponentState` en utilisant un alias de type. Nous utiliserons "
"le type `MockContract::ContractState` pour le faire."

#: src/ch16-02-03-testing-components.md:123
#: src/ch16-02-03-testing-components.md:167
msgid "// You can derive even `Default` on this type alias\n"
msgstr "// Vous pouvez déduire même `Défaut` sur ce type d'alias\n"

#: src/ch16-02-03-testing-components.md:144
msgid ""
"We defined the `TestingState` type as an alias of the `CounterComponent::"
"ComponentState<MockContract::ContractState>` type. By passing the "
"`MockContract::ContractState` type as a concrete type for `ComponentState`, "
"we aliased a concrete implementation of the `ComponentState` struct to "
"`TestingState`."
msgstr ""
"Nous avons défini le type `TestingState` comme un alias du "
"`CounterComponent::ComponentState<MockContract::ContractState>` type. En "
"passant le `MockContract::ContractState` type comme un type concret pour "
"`ComponentState`, nous avons alias une mise en œuvre concrète de la "
"structure `ComponentState` à `TestingState`."

#: src/ch16-02-03-testing-components.md:146
msgid ""
"Because `MockContract` embeds `CounterComponent`, the methods of "
"`CounterComponent` defined in the `CounterImpl` block can now be used on a "
"`TestingState` object."
msgstr ""
"Parce que `MockContract` intègre `CounterComponent`, les méthodes de "
"`CounterComponent` définies dans le bloc `CounterImpl` peuvent maintenant "
"être utilisées sur un objet `TestingState`."

#: src/ch16-02-03-testing-components.md:148
msgid ""
"Now that we have made these methods available, we need to instantiate an "
"object of type `TestingState`, that we will use to test the component. We "
"can do so by calling the `component_state_for_testing` function, which "
"automatically infers that it should return an object of type `TestingState`."
msgstr ""
"Maintenant que nous avons mis ces méthodes à disposition, nous avons besoin "
"d'instituer un objet de type `TestingState`, que nous allons utiliser pour "
"tester le composant. Nous pouvons le faire en appelant la fonction "
"`component_state_for_testing`, qui indique automatiquement qu'il doit "
"retourner un objet de type `TestingState`."

#: src/ch16-02-03-testing-components.md:150
msgid ""
"We can even implement this as part of the `Default` trait, which allows us "
"to return an empty `TestingState` with the `Default::default()` syntax."
msgstr ""
"Nous pouvons même implémenter cela dans le cadre du caractère `Default`, qui "
"nous permet de retourner un `TestingState` vide avec la syntaxe `Default::"
"default()`."

#: src/ch16-02-03-testing-components.md:152
msgid "Let's summarize what we've done so far:"
msgstr "Résumons ce que nous avons fait jusqu'ici :"

#: src/ch16-02-03-testing-components.md:154
msgid "We defined a mock contract that embeds the component we want to test."
msgstr ""
"Nous avons défini un contrat fictif qui intègre le composant que nous "
"voulons tester."

#: src/ch16-02-03-testing-components.md:155
msgid ""
"We defined a concrete implementation of `ComponentState<TContractState>` "
"using a type alias with `MockContract::ContractState`, that we named "
"`TestingState`."
msgstr ""
"Nous avons défini une mise en œuvre concrète de "
"`ComponentState<TContractState>` en utilisant un alias de type "
"`MockContract::ContractState`, que nous avons nommé `TestingState`."

#: src/ch16-02-03-testing-components.md:156
msgid ""
"We defined a function that uses `component_state_for_testing` to return a "
"`TestingState` object."
msgstr ""
"Nous avons défini une fonction qui utilise `component_state_for_testing` "
"pour renvoyer un objet `TestingState`."

#: src/ch16-02-03-testing-components.md:158
msgid ""
"We can now write tests for the component by calling its functions directly, "
"without having to deploy a mock contract. This approach is more lightweight "
"than the previous one, and it allows testing internal functions of the "
"component that are not exposed to the outside world trivially."
msgstr ""
"Nous pouvons maintenant écrire des tests pour le composant en appelant ses "
"fonctions directement, sans avoir à déployer un contrat simulé. Cette "
"approche est plus légère que la précédente, et elle permet de tester les "
"fonctions internes du composant qui ne sont pas exposés au monde extérieur "
"trivialement."

#: src/ch16-03-upgradeability.md:1
msgid "Upgradeable Contracts"
msgstr "Contrats susceptibles d'être mis à niveau"

#: src/ch16-03-upgradeability.md:3
msgid ""
"Starknet separates contracts into classes and instances, making it simple to "
"upgrade a contract's logic without affecting its state."
msgstr ""
"Starknet sépare les contrats en classes et en instances, ce qui facilite la "
"mise à niveau de la logique d'un contrat sans affecter son état."

#: src/ch16-03-upgradeability.md:5
msgid ""
"A contract class is the definition of the semantics of a contract. It "
"includes the entire logic of a contract: the name of the entry points, the "
"addresses of the storage variables, the events that can be emitted, etc. "
"Each class is uniquely identified by its class hash. A class does not have "
"its own storage: it's only a definition of logic."
msgstr ""
"Une classe de contrat est la définition de la sémantique d'un contrat. Elle "
"comprend toute la logique d'un contrat : le nom des points d'entrée, "
"l'adresse des variables de stockage, les événements qui peuvent être émis, "
"etc. Chaque classe est identifiée de façon unique par son hash de classe. "
"Une classe n'a pas son propre stockage : c'est seulement une définition de "
"logique."

#: src/ch16-03-upgradeability.md:7
msgid ""
"Classes are typically identified by a [class hash](https://docs.starknet.io/"
"documentation/architecture_and_concepts/Smart_Contracts/class-hash). When "
"declaring a class, the network registers it and assigns a unique hash used "
"to identify the class and deploy contract instances from it."
msgstr ""
"Les classes sont généralement identifiées par [class hash] (https://docs."
"starknet.io/documentation/architecture_and_concepts/Smart_Contracts/class-"
"hash). Lorsqu'il déclare une classe, le réseau l'enregistre et attribue un "
"hash unique utilisé pour identifier la classe et déployer des instances "
"contractuelles à partir de celle-ci."

#: src/ch16-03-upgradeability.md:9
msgid ""
"A contract instance is a deployed contract corresponding to a class, with "
"its own storage."
msgstr ""
"Une instance contractuelle est un contrat déployé correspondant à une "
"classe, avec son propre stockage."

#: src/ch16-03-upgradeability.md:11
msgid ""
"Starknet natively supports upgradeable contracts through the "
"`replace_class_syscall` [system call](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/system-calls-cairo1/), enabling "
"simple contract upgrades without affecting the contract's state."
msgstr ""
"Starknet prend en charge nativement les contrats à mise à niveau via le "
"`replace_class_syscall` [system call](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/system-calls-cairo1/), permettant "
"des mises à niveau simples sans affecter l'état du contrat."

#: src/ch16-03-upgradeability.md:16
msgid "Upgrading Contracts"
msgstr "Modernisation des contrats"

#: src/ch16-03-upgradeability.md:18
msgid ""
"To upgrade a contract, expose an entry point that executes "
"`replace_class_syscall` with the new class hash as an argument:"
msgstr ""
"Pour mettre à niveau un contrat, exposez un point d'entrée qui exécute "
"`remplace_class_syscall` avec le nouveau hachage de classe comme argument :"

#: src/ch16-03-upgradeability.md:31
msgid ""
"<span class=\"caption\">Listing 16-3: Exposing `replace_class_syscall` to "
"update the contract's class</span>"
msgstr ""
"<span class=\"caption\">Liste 16-3: Exposer `remplace_class_syscall` pour "
"mettre à jour la classe du contrat</span>"

#: src/ch16-03-upgradeability.md:33
msgid ""
"Note: Thoroughly review changes and potential impacts before upgrading, as "
"it's a delicate procedure with security implications. Don't allow arbitrary "
"addresses to upgrade your contract."
msgstr ""
"Note: Examiner attentivement les changements et les impacts potentiels avant "
"de mettre à niveau, car c'est une procédure délicate avec des implications "
"de sécurité. Ne pas permettre des adresses arbitraires pour mettre à niveau "
"votre contrat."

#: src/ch16-03-upgradeability.md:35
msgid "Upgradeable Component"
msgstr "Composante à mettre à jour"

#: src/ch16-03-upgradeability.md:37
msgid ""
"OpenZeppelin Contracts for Cairo provides the `Upgradeable` component that "
"can be embedded into your contract to make it upgradeable. This component is "
"a simple way to add upgradeability to your contract while relying on an "
"audited library. It can be combined with the `Ownable` component to restrict "
"the upgradeability to a single address, so that the contract owner has the "
"exclusive right to upgrade the contract."
msgstr ""
"OpenZeppelin Contracts for Cairo fournit le composant `Upgradeable` qui peut "
"être intégré dans votre contrat pour le rendre upgradeable. Ce composant est "
"un moyen simple d'ajouter la mise à niveau à votre contrat tout en "
"s'appuyant sur une bibliothèque vérifiée. Il peut être combiné avec le "
"composant `Ownable` pour limiter la mise à niveau à une seule adresse, de "
"sorte que le propriétaire du contrat a le droit exclusif de mettre à niveau "
"le contrat."

#: src/ch16-03-upgradeability.md:51
msgid "/// Ownable\n"
msgstr "/// Possible\n"

#: src/ch16-03-upgradeability.md:56
msgid "/// Upgradeable\n"
msgstr "/// Mise à jour\n"

#: src/ch16-03-upgradeability.md:84
msgid "// This function can only be called by the owner\n"
msgstr "// Cette fonction ne peut être appelée que par le propriétaire\n"

#: src/ch16-03-upgradeability.md:87
msgid "// Replace the class hash upgrading the contract\n"
msgstr "// Remplacer le hachage de classe par la mise à niveau du contrat\n"

#: src/ch16-03-upgradeability.md:94
msgid ""
"<span class=\"caption\">Listing 16-4 Integrating OpenZeppelin's Upgradeable "
"component in a contract</span>"
msgstr ""
"<span class=\"caption\">Liste 16-4 Intégration de la composante de mise à "
"niveau d'OpenZeppelin dans un contrat</span>"

#: src/ch16-03-upgradeability.md:96
msgid ""
"For more information, please refer to the [OpenZeppelin docs API reference]"
"(https://docs.openzeppelin.com/contracts-cairo/0.9.0/api/upgrades)."
msgstr ""
"Pour plus d'informations, veuillez vous référer à l'API [OpenZeppelin docs "
"reference] (https://docs.openzeppelin.com/contracts-cairo/0.9.0/api/"
"upgrades)."

#: src/ch16-04-L1-L2-messaging.md:1
msgid "L1-L2 Messaging"
msgstr "L1-L2 Messagerie"

#: src/ch16-04-L1-L2-messaging.md:3
msgid "A crucial feature of a Layer 2 is its ability to interact with Layer 1."
msgstr ""
"Une caractéristique essentielle d'un calque 2 est sa capacité à interagir "
"avec le calque 1."

#: src/ch16-04-L1-L2-messaging.md:5
msgid ""
"Starknet has its own `L1-L2` messaging system, which is different from its "
"consensus mechanism and the submission of state updates on L1. Messaging is "
"a way for smart-contracts on L1 to interact with smart-contracts on L2 (or "
"the other way around), allowing us to do \"cross-chain\" transactions. For "
"example, we can do some computations on a chain and use the result of this "
"computation on the other chain."
msgstr ""
"Starknet dispose de son propre système de messagerie `L1-L2`, qui est "
"différent de son mécanisme de consensus et la soumission de mises à jour "
"d'état sur L1. Messagerie est un moyen pour les contrats intelligents sur L1 "
"d'interagir avec les contrats intelligents sur L2 (ou l'autre manière), nous "
"permettant de faire des transactions \"cross-chain\". Par exemple, nous "
"pouvons faire certains calculs sur une chaîne et utiliser le résultat de ce "
"calcul sur l'autre chaîne."

#: src/ch16-04-L1-L2-messaging.md:7
msgid ""
"Bridges on Starknet all use `L1-L2` messaging. Let's say that you want to "
"bridge tokens from Ethereum to Starknet. You will simply have to deposit "
"your tokens in the L1 bridge contract, which will automatically trigger the "
"minting of the same token on L2. Another good use case for `L1-L2` messaging "
"would be [DeFi pooling](https://starkware.co/resource/defi-pooling/)."
msgstr ""
"Les ponts sur Starknet utilisent tous la messagerie `L1-L2`. Disons que vous "
"voulez relier les jetons d'Ethereum à Starknet. Il vous suffit de déposer "
"vos jetons dans le contrat de pont L1, ce qui déclenchera automatiquement la "
"fusion du même jeton sur L2. Un autre cas de bonne utilisation pour la "
"messagerie `L1-L2` serait [DeFi pooling](https://starkware.co/resource/defi-"
"pooling/)."

#: src/ch16-04-L1-L2-messaging.md:9
msgid ""
"On Starknet, it's important to note that the messaging system is "
"**asynchronous** and **asymmetric**."
msgstr ""
"Sur Starknet, il est important de noter que le système de messagerie est "
"**asynchrone** et **asymétrique**."

#: src/ch16-04-L1-L2-messaging.md:11
msgid ""
"**Asynchronous**: this means that in your contract code (being Solidity or "
"Cairo), you can't wait the result of the message being sent on the other "
"chain within your contract code execution."
msgstr ""
"**Asynchrone**: cela signifie que dans votre code de contrat (étant Solidité "
"ou Le Caire), vous ne pouvez pas attendre le résultat du message envoyé sur "
"l'autre chaîne dans l'exécution de votre code de contrat."

#: src/ch16-04-L1-L2-messaging.md:12
msgid ""
"**Asymmetric**: sending a message from Ethereum to Starknet (`L1->L2`) is "
"fully automated by the Starknet sequencer, which means that the message is "
"being automatically delivered to the target contract on L2. However, when "
"sending a message from Starknet to Ethereum (`L2->L1`), only the hash of the "
"message is sent on L1 by the Starknet sequencer. You must then consume the "
"message manually via a transaction on L1."
msgstr ""
"**Asymétrique**: l'envoi d'un message d'Ethereum à Starknet (`L1->L2`) est "
"entièrement automatisé par le séquenceur Starknet, ce qui signifie que le "
"message est automatiquement livré au contrat cible sur L2. Cependant, lors "
"de l'envoi d'un message de Starknet à Ethereum (`L2->L1`), seul le hachage "
"du message est envoyé sur L1 par le séquenceur Starknet. Vous devez ensuite "
"le consommer manuellement via une transaction sur L1."

#: src/ch16-04-L1-L2-messaging.md:14
msgid "Let's dive into the details."
msgstr "Plongons dans les détails."

#: src/ch16-04-L1-L2-messaging.md:18
msgid "The StarknetMessaging Contract"
msgstr "Le contrat StarknetMessage"

#: src/ch16-04-L1-L2-messaging.md:20
msgid ""
"The crucial component of the `L1-L2` Messaging system is the [`StarknetCore`]"
"(https://etherscan.io/address/0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4) "
"contract. It is a set of Solidity contracts deployed on Ethereum that allows "
"Starknet to function properly. One of the contracts of `StarknetCore` is "
"called `StarknetMessaging` and it is the contract responsible for passing "
"messages between Starknet and Ethereum. `StarknetMessaging` follows an "
"[interface](https://github.com/starkware-libs/cairo-lang/"
"blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/eth/"
"IStarknetMessaging.sol#L6) with functions allowing to send message to L2, "
"receiving messages on L1 from L2 and canceling messages."
msgstr ""
"L'élément crucial du système de messagerie `L1-L2` est le contrat "
"[`StarknetCore`](https://etherscan.io/"
"address/0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4). Il s'agit d'un ensemble "
"de contrats de solidarité déployés sur Ethereum qui permet à Starknet de "
"fonctionner correctement. L'un des contrats de `StarknetCore` s'appelle "
"`StarknetMessage` et c'est le contrat responsable de la transmission des "
"messages entre Starknet et Ethereum. `StarknetMessage` suit une [interface]"
"(https://github.com/starkware-libs/cairo-lang/"
"brob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/eth/"
"IStarknetMessage.sol#L6) avec des fonctions permettant d'envoyer des "
"messages à L2 et d'annuler des messages sur des messages."

#: src/ch16-04-L1-L2-messaging.md:51
msgid "<span class=\"caption\"> Starknet messaging contract interface</span>"
msgstr ""
"<span class=\"caption\"> Interface du contrat de messagerie Starknet</span>"

#: src/ch16-04-L1-L2-messaging.md:53
msgid ""
"In the case of `L1->L2` messages, the Starknet sequencer is constantly "
"listening to the logs emitted by the `StarknetMessaging` contract on "
"Ethereum. Once a message is detected in a log, the sequencer prepares and "
"executes a `L1HandlerTransaction` to call the function on the target L2 "
"contract. This takes up to 1-2 minutes to be done (few seconds for ethereum "
"block to be mined, and then the sequencer must build and execute the "
"transaction)."
msgstr ""
"Dans le cas des messages `L1->L2`, le séquenceur Starknet écoute en "
"permanence les journaux émis par le contrat `StarknetMessage` sur Ethereum. "
"Une fois qu'un message est détecté dans un journal, le séquenceur prépare et "
"exécute un `L1HandlerTransaction` pour appeler la fonction sur le contrat L2 "
"cible. Cela prend jusqu'à 1-2 minutes à faire (peu de secondes pour que le "
"bloc éthéré soit extrait, puis le séquenceur doit construire et exécuter la "
"transaction)."

#: src/ch16-04-L1-L2-messaging.md:56
msgid ""
"`L2->L1` messages are prepared by contracts execution on L2 and are part of "
"the block produced. When the sequencer produces a block, it sends the hash "
"of each message prepared by contracts execution to the `StarknetCore` "
"contract on L1, where they can then be consumed once the block they belong "
"to is proven and verified on Ethereum (which for now is around 3-4 hours)."
msgstr ""
"Les messages `L2->L1` sont préparés par l'exécution de contrats sur L2 et "
"font partie du bloc produit. Lorsque le séquenceur produit un bloc, il "
"envoie le hachage de chaque message préparé par l'exécution de contrats au "
"contrat `StarknetCore` sur L1, où ils peuvent ensuite être consommés une "
"fois le bloc auquel ils appartiennent prouvé et vérifié sur Ethereum (qui "
"pour l'instant est d'environ 3-4 heures)."

#: src/ch16-04-L1-L2-messaging.md:62
msgid "Sending Messages from Ethereum to Starknet"
msgstr "Envoi de messages d'Ethereum à Starknet"

#: src/ch16-04-L1-L2-messaging.md:64
msgid ""
"If you want to send messages from Ethereum to Starknet, your Solidity "
"contracts must call the `sendMessageToL2` function of the "
"`StarknetMessaging` contract. To receive these messages on Starknet, you "
"will need to annotate functions that can be called from L1 with the "
"`#[l1_handler]` attribute."
msgstr ""
"Si vous souhaitez envoyer des messages d'Ethereum à Starknet, vos contrats "
"Solidity doivent appeler la fonction `sendMessageToL2` du contrat "
"`StarknetMessage`. Pour recevoir ces messages sur Starknet, vous devrez "
"annoter les fonctions qui peuvent être appelées à partir de L1 avec "
"l'attribut `#[l1_handler]`."

#: src/ch16-04-L1-L2-messaging.md:66
msgid ""
"Let's take a simple contract taken from [this tutorial](https://github.com/"
"glihm/starknet-messaging-dev/blob/main/solidity/src/ContractMsg.sol) where "
"we want to send a message to Starknet. The `_snMessaging` is a state "
"variable already initialized with the address of the `StarknetMessaging` "
"contract. You can check all Starknet contract and sequencer addresses [here]"
"(https://docs.starknet.io/documentation/tools/important_addresses/)."
msgstr ""
"Prenons un simple contrat tiré de [ce tutoriel](https://github.com/glihm/"
"starknet-messaging-dev/blob/main/solidity/src/ContractMsg.sol) où nous "
"voulons envoyer un message à Starknet. La variable `_snMessaging` est une "
"variable d'état déjà initialisée avec l'adresse du contrat "
"`StarknetMessaging`. Vous pouvez vérifier toutes les adresses de contrat et "
"de séquenceur de Starknet [ici](https://docs.starknet.io/documentation/tools/"
"important_address/)."

#: src/ch16-04-L1-L2-messaging.md:70
msgid "// Sends a message on Starknet with a single felt.\n"
msgstr "// Envoie un message sur Starknet avec un seul feutre.\n"

#: src/ch16-04-L1-L2-messaging.md:79
msgid ""
"// We \"serialize\" here the felt into a payload, which is an array of "
"uint256.\n"
msgstr ""
"// Nous \"sérialisons\" ici le feutre dans une charge utile, qui est un "
"tableau d'uint256.\n"

#: src/ch16-04-L1-L2-messaging.md:83
msgid "// msg.value must always be >= 20_000 wei.\n"
msgstr "// msg.value doit toujours être >= 20_000 wei.\n"

#: src/ch16-04-L1-L2-messaging.md:92
msgid ""
"The function sends a message with a single felt value to the "
"`StarknetMessaging` contract. Please note that if you want to send more "
"complex data you can. Just be aware that your Cairo contract will only "
"understand `felt252` data type. So you must ensure that the serialization of "
"your data into the `uint256` array follow the Cairo serialization scheme."
msgstr ""
"La fonction envoie un message avec une seule valeur en feutre au contrat "
"`StarknetMessaging`. Veuillez noter que si vous voulez envoyer des données "
"plus complexes, vous pouvez. Soyez simplement conscient que votre contrat du "
"Caire ne comprendra que le type de données `felt252`. Vous devez donc vous "
"assurer que la sérialisation de vos données dans le tableau `uint256` suit "
"le schéma de sérialisation du Caire."

#: src/ch16-04-L1-L2-messaging.md:95
msgid ""
"It's important to note that we have `{value: msg.value}`. In fact, the "
"minimum value we've to send here is `20k wei`, due to the fact that the "
"`StarknetMessaging` contract will register the hash of our message in the "
"storage of Ethereum."
msgstr ""
"Il est important de noter que nous avons `{value: msg.value}`. En fait, la "
"valeur minimale que nous devons envoyer ici est `20k wei`, en raison du fait "
"que le contrat `StarknetMessaging` enregistrera le hachage de notre message "
"dans le stockage de Ethereum."

#: src/ch16-04-L1-L2-messaging.md:98
msgid ""
"In addition to those `20k wei`, since the `L1HandlerTransaction` executed by "
"the sequencer is not tied to any account (the message originates from L1), "
"you must also ensure that you pay enough fees on L1 for your message to be "
"deserialized and processed on L2."
msgstr ""
"En plus de ces `20k wei`, puisque le `L1HandlerTransaction` exécuté par le "
"séquenceur n'est lié à aucun compte (le message provient de L1), vous devez "
"également vous assurer que vous payez suffisamment de frais sur L1 pour que "
"votre message soit désérialisé et traité sur L2."

#: src/ch16-04-L1-L2-messaging.md:101
msgid ""
"The fees of the `L1HandlerTransaction` are computed in a regular manner as "
"it would be done for an `Invoke` transaction. For this, you can profile the "
"gas consumption using `starkli` or `snforge` to estimate the cost of your "
"message execution."
msgstr ""
"Les frais de la `L1HandlerTransaction` sont calculés de manière régulière "
"comme il serait fait pour une transaction `Invoke`. Pour cela, vous pouvez "
"profiler la consommation de gaz en utilisant `starkli` ou `snforge` pour "
"estimer le coût de l'exécution de votre message."

#: src/ch16-04-L1-L2-messaging.md:104
msgid "The signature of the `sendMessageToL2` is:"
msgstr "La signature du `sendMessageToL2` est:"

#: src/ch16-04-L1-L2-messaging.md:114
msgid "The parameters are as follows:"
msgstr "Les paramètres sont les suivants:"

#: src/ch16-04-L1-L2-messaging.md:116
msgid "`toAddress`: The contract address on L2 that will be called."
msgstr "`toAddress`: L'adresse du contrat sur L2 qui sera appelé."

#: src/ch16-04-L1-L2-messaging.md:117
msgid ""
"`selector`: The selector of the function of this contract at `toAddress`. "
"This selector (function) must have the `#[l1_handler]` attribute to be "
"callable."
msgstr ""
"`selector`: Le sélecteur de la fonction de ce contrat à `toAddress`. Ce "
"sélecteur (fonction) doit avoir l'attribut `#[l1_handler]` à appeler."

#: src/ch16-04-L1-L2-messaging.md:118
msgid ""
"`payload`: The payload is always an array of `felt252` (which are "
"represented by `uint256` in Solidity). For this reason we've inserted the "
"input `myFelt` into the array. This is why we need to insert the input data "
"into an array."
msgstr ""
"`payload`: La charge utile est toujours un tableau de `felt252` (qui sont "
"représentés par `uint256` dans Solidity). Pour cette raison, nous avons "
"inséré l`entrée `myFelt` dans le tableau. C`est pourquoi nous devons insérer "
"les données d`entrée dans un tableau."

#: src/ch16-04-L1-L2-messaging.md:121
msgid "On the Starknet side, to receive this message, we have:"
msgstr "Du côté de Starknet, pour recevoir ce message, nous avons :"

#: src/ch16-04-L1-L2-messaging.md:128
msgid ""
"// You can now use the data, automatically deserialized from the message "
"payload.\n"
msgstr ""
"// Vous pouvez maintenant utiliser les données, automatiquement "
"désérialisées à partir de la charge utile du message.\n"

#: src/ch16-04-L1-L2-messaging.md:133
msgid ""
"We need to add the `#[l1_handler]` attribute to our function. L1 handlers "
"are special functions that can only be executed by a `L1HandlerTransaction`. "
"There is nothing particular to do to receive transactions from L1, as the "
"message is relayed by the sequencer automatically. In your `#[l1_handler]` "
"functions, it is important to verify the sender of the L1 message to ensure "
"that our contract can only receive messages from a trusted L1 contract."
msgstr ""
"Nous devons ajouter l'attribut `#[l1_handler]` à notre fonction. Les "
"gestionnaires L1 sont des fonctions spéciales qui ne peuvent être exécutées "
"que par un `L1HandlerTransaction`. Il n'y a rien de particulier à faire pour "
"recevoir des transactions de L1, car le message est relayé automatiquement "
"par le séquenceur. Dans vos fonctions `#[l1_handler]`, il est important de "
"vérifier l'expéditeur du message L1 pour s'assurer que notre contrat ne peut "
"recevoir que des messages d'un contrat L1 de confiance."

#: src/ch16-04-L1-L2-messaging.md:138
msgid "Sending Messages from Starknet to Ethereum"
msgstr "Envoi de messages de Starknet à Ethereum"

#: src/ch16-04-L1-L2-messaging.md:140
msgid ""
"When sending messages from Starknet to Ethereum, you will have to use the "
"`send_message_to_l1` syscall in your Cairo contracts. This syscall allows "
"you to send messages to the `StarknetMessaging` contract on L1. Unlike `L1-"
">L2` messages, `L2->L1` messages must be consumed manually, which means that "
"you will need your Solidity contract to call the `consumeMessageFromL2` "
"function of the `StarknetMessaging` contract explicitly in order to consume "
"the message."
msgstr ""
"Lorsque vous envoyez des messages de Starknet à Ethereum, vous devrez "
"utiliser le syscall `send_message_to_l1` dans vos contrats du Caire. Ce "
"syscall vous permet d'envoyer des messages au contrat `StarknetMessage` sur "
"L1. Contrairement aux messages `L1->L2`, `L2->L1` doivent être consommés "
"manuellement, ce qui signifie que vous aurez besoin de votre contrat "
"Solidity pour appeler la fonction `consumeMessageFromL2` du contrat "
"`StarknetMessage` explicitement afin de consommer le message."

#: src/ch16-04-L1-L2-messaging.md:142
msgid "To send a message from L2 to L1, what we would do on Starknet is:"
msgstr ""
"Pour envoyer un message de L2 à L1, ce que nous ferions sur Starknet est :"

#: src/ch16-04-L1-L2-messaging.md:146
msgid ""
"// Note here, we \"serialize\" my_felt, as the payload must be\n"
"            // a `Span<felt252>`.\n"
msgstr ""
"// Notez ici que nous \"sérialisons\" my_felt, car la charge utile doit "
"être // un `Span<felt252>`.\n"

#: src/ch16-04-L1-L2-messaging.md:153
msgid ""
"We simply build the payload and pass it, along with the L1 contract address, "
"to the syscall function."
msgstr ""
"Nous construisons simplement la charge utile et la transmettons, avec "
"l'adresse du contrat L1, à la fonction syscall."

#: src/ch16-04-L1-L2-messaging.md:155
msgid ""
"On L1, the important part is to build the same payload sent by the L2. Then "
"you call `consumeMessageFromL2` in you Solidity contract by passing the L2 "
"contract address and the payload. Please be aware that the L2 contract "
"address expected by the `consumeMessageFromL2` is the address of the "
"contract that sends the message on the L2 by calling "
"`send_message_to_l1_syscall`."
msgstr ""
"Sur L1, la partie importante est de construire la même charge utile envoyée "
"par le L2. Ensuite, vous appelez `consumeMessageFromL2` dans votre contrat "
"Solidity en passant l'adresse du contrat L2 et la charge utile. Veuillez "
"noter que l'adresse du contrat L2 attendue par le `consumeMessageFromL2` est "
"l'adresse du contrat qui envoie le message sur le L2 en appelant "
"`send_message_to_l1_syscall`."

#: src/ch16-04-L1-L2-messaging.md:166
msgid "// You can use the message hash if you want here.\n"
msgstr "// Vous pouvez utiliser le hash du message si vous le souhaitez ici.\n"

#: src/ch16-04-L1-L2-messaging.md:168
msgid ""
"// We expect the payload to contain only a felt252 value (which is a uint256 "
"in Solidity).\n"
msgstr ""
"// Nous nous attendons à ce que la charge utile ne contienne qu'une valeur "
"feutre252 (qui est un uint256 dans Solidity).\n"

#: src/ch16-04-L1-L2-messaging.md:169
msgid "\"Invalid payload\""
msgstr "\"Charge utile non valide\""

#: src/ch16-04-L1-L2-messaging.md:173
msgid ""
"// From here, you can safely use `my_felt` as the message has been verified "
"by StarknetMessaging.\n"
msgstr ""
"// D'ici, vous pouvez utiliser `my_felt` en toute sécurité car le message a "
"été vérifié par StarknetMessaging.\n"

#: src/ch16-04-L1-L2-messaging.md:174
msgid "\"Invalid value\""
msgstr "\"Valeur invalide\""

#: src/ch16-04-L1-L2-messaging.md:178
msgid ""
"As you can see, in this context we don't have to verify which contract from "
"L2 is sending the message (as we do on the L2 to verify which contract from "
"L1 is sending the message). But we are actually using the "
"`consumeMessageFromL2` of the `StarknetCore` contract to validate the inputs "
"(the contract address on L2 and the payload) to ensure we are only consuming "
"valid messages."
msgstr ""
"Comme vous pouvez le voir, dans ce contexte, nous n'avons pas à vérifier "
"quel contrat de L2 envoie le message (comme nous le faisons sur le L2 pour "
"vérifier quel contrat de L1 envoie le message). Mais nous utilisons en fait "
"le \"consumeMessageFromL2` du contrat `StarknetCore` pour valider les "
"entrées (l'adresse du contrat sur L2 et la charge utile) pour nous assurer "
"que nous ne consommons que des messages valides."

#: src/ch16-04-L1-L2-messaging.md:180
msgid ""
"**Note:** The `consumeMessageFromL2` function of the `StarknetCore` contract "
"is expected to be called from a Solidity contract, and not directly on the "
"`StarknetCore` contract. The reason of that is because the `StarknetCore` "
"contract is using `msg.sender` to actually compute the hash of the message. "
"And this `msg.sender` must correspond to the `to_address` field that is "
"given to the function `send_message_to_l1_syscall` that is called on "
"Starknet."
msgstr ""
"**Note :** La fonction `consumeMessageFromL2` du contrat `StarknetCore` "
"devrait être appelée à partir d'un contrat Solidity, et non pas directement "
"sur le contrat `StarknetCore`. La raison en est que le contrat "
"`StarknetCore` utilise `msg.sender` pour calculer le hash du message. Et ce "
"`msg.sender` doit correspondre au champ `to_address` qui est donné à la "
"fonction `send_message_to_l1_syscall` qui est appelée sur Starknet."

#: src/ch16-04-L1-L2-messaging.md:182
msgid ""
"It is important to remember that on L1 we are sending a payload of "
"`uint256`, but the basic data type on Starknet is `felt252`; however, "
"`felt252` are approximately 4 bits smaller than `uint256`. So we have to pay "
"attention to the values contained in the payload of the messages we are "
"sending. If, on L1, we build a message with values above the maximum "
"`felt252`, the message will be stuck and never consumed on L2."
msgstr ""
"Il est important de se rappeler que sur L1 nous envoyons une charge utile de "
"`uint256`, mais le type de données de base sur Starknet est `felt252`; "
"cependant, `felt252` sont environ 4 bits plus petits que `uint256`. Donc, "
"nous devons prêter attention aux valeurs contenues dans la charge utile des "
"messages que nous envoyons. Si, sur L1, nous construisons un message avec "
"des valeurs au-dessus du `felt252` maximum, le message sera coincé et jamais "
"consommé sur L2."

#: src/ch16-04-L1-L2-messaging.md:184
msgid "Cairo Serde"
msgstr "Serde du Caire"

#: src/ch16-04-L1-L2-messaging.md:186
msgid ""
"Before sending messages between L1 and L2, you must remember that Starknet "
"contracts, written in Cairo, can only understand serialized data. And "
"serialized data is always an array of `felt252`. In Solidity we have "
"`uint256` type, and `felt252` are approximately 4 bits smaller than "
"`uint256`. So we have to pay attention to the values contained in the "
"payload of the messages we are sending. If, on L1, we build a message with "
"values above the maximum `felt252`, the message will be stuck and never "
"consumed on L2."
msgstr ""
"Avant d'envoyer des messages entre L1 et L2, vous devez vous rappeler que "
"les contrats Starknet, écrits au Caire, ne peuvent comprendre que les "
"données sérialisées. Et les données sérialisées sont toujours un tableau de "
"`felt252`. Dans Solidity, nous avons `uint256` type, et `felt252` sont "
"environ 4 bits plus petits que `uint256`. Donc, nous devons prêter attention "
"aux valeurs contenues dans la charge utile des messages que nous envoyons. "
"Si, sur L1, nous construisons un message avec des valeurs au-dessus de la "
"`felt252` maximale, le message sera bloqué et jamais consommé sur L2."

#: src/ch16-04-L1-L2-messaging.md:190
msgid ""
"So for instance, an actual `uint256` value in Cairo is represented by a "
"struct like:"
msgstr ""
"Ainsi, par exemple, une valeur `uint256` réelle au Caire est représentée par "
"une structure comme:"

#: src/ch16-04-L1-L2-messaging.md:199
msgid ""
"which will be serialized as **TWO** felts, one for the `low`, and one for "
"the `high`. This means that to send only one `u256` to Cairo, you'll need to "
"send a payload from L1 with **TWO** values."
msgstr ""
"Ce qui signifie que pour envoyer un seul `u256` au Caire, vous devrez "
"envoyer une charge utile de L1 avec des valeurs **TWO**."

#: src/ch16-04-L1-L2-messaging.md:202
msgid "// Let's send the value 1 as a u256 in cairo: low = 1, high = 0.\n"
msgstr "// Envoyons la valeur 1 comme u256 dans cairo: low = 1, high = 0.\n"

#: src/ch16-04-L1-L2-messaging.md:208
msgid ""
"If you want to learn more about the messaging mechanism, you can visit the "
"[Starknet documentation](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Network_Architecture/messaging-mechanism/)."
msgstr ""
"Si vous souhaitez en savoir plus sur le mécanisme de messagerie, vous pouvez "
"consulter la [documentation Starknet](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Réseau_Architecture/messaging-mechanism/)."

#: src/ch16-04-L1-L2-messaging.md:210
msgid ""
"You can also find a [detailed guide here](https://github.com/glihm/starknet-"
"messaging-dev) to test the messaging system locally."
msgstr ""
"Vous pouvez également trouver un [guide détaillé ici](https://github.com/"
"glihm/starknet-messaging-dev) pour tester localement le système de "
"messagerie."

#: src/ch16-05-oracle-interactions.md:3
msgid ""
"This section focuses on the concept of bringing off-chain data to the "
"Starknet blockchain using oracles. Oracles are third-party services that "
"serve as intermediaries, securely transmitting external data, such as asset "
"prices, weather information, or other real-world data, to blockchains and "
"smart contracts. It also provides practical examples and code snippets "
"demonstrating how developers can interact with a specific oracle named "
"Pragma on Starknet network, covering topics like querying and handling price "
"data, and verifiable random function (VRF) to generate random numbers."
msgstr ""
"Les Oracles sont des services de tiers qui servent d'intermédiaires, "
"transmettent en toute sécurité des données externes, telles que les prix des "
"actifs, les informations météorologiques ou d'autres données du monde réel, "
"aux blockchains et aux contrats intelligents. Ils fournissent également des "
"exemples pratiques et des extraits de code démontrant comment les "
"développeurs peuvent interagir avec un oracle spécifique nommé Pragma sur le "
"réseau Starknet, couvrant des sujets tels que la requête et le traitement "
"des données de prix, et la fonction aléatoire vérifiable (VRF) pour générer "
"des nombres aléatoires."

#: src/ch16-05-01-price-feeds.md:3
msgid ""
"Price feeds enabled by an oracle serve as a bridge between real-world data "
"feed and the blockchain. They provide real time pricing data that is "
"aggregated from multiple trusted external sources ( e.g. crypto exchanges, "
"financial data providers, etc. ) to the blockchain network."
msgstr ""
"Les flux de prix activés par un oracle servent de pont entre le flux de "
"données du monde réel et la blockchain. Ils fournissent des données de "
"tarification en temps réel qui sont agrégées à partir de sources externes de "
"confiance multiples (par exemple, les échanges de crypto, les fournisseurs "
"de données financières, etc.) au réseau de blockchain."

#: src/ch16-05-01-price-feeds.md:5
msgid ""
"For the example in this book section, we will use Pragma Oracle to read the "
"price feed for `ETH/USD` asset pair and also showcase a mini application "
"that utilizes this feed."
msgstr ""
"Pour l'exemple dans cette section de livre, nous allons utiliser Pragma "
"Oracle pour lire le flux de prix de la paire d'actifs `ETH/USD` et aussi "
"présenter une mini application qui utilise ce flux."

#: src/ch16-05-01-price-feeds.md:7
msgid ""
"[Pragma Oracle](https://www.pragma.build/) is a leading zero knowledge "
"oracle that provides access to off-chain data on Starknet blockchain in a "
"verifiable way."
msgstr ""
"[Pragma Oracle](https://www.pragma.build/) est un oracle de connaissance de "
"premier plan qui fournit un accès aux données hors chaîne sur Starknet "
"blockchain d'une manière vérifiable."

#: src/ch16-05-01-price-feeds.md:9
msgid "Add Pragma as a Project Dependency"
msgstr "Ajouter Pragma comme dépendance au projet"

#: src/ch16-05-01-price-feeds.md:11
msgid ""
"To get started with integrating Pragma on your Cairo smart contract for "
"price feed data, edit your project's `Scarb.toml` file to include the path "
"to use Pragma."
msgstr ""
"Pour commencer avec l'intégration de Pragma sur votre contrat intelligent du "
"Caire pour les données de flux de prix, modifiez le fichier `Scarb.toml` de "
"votre projet pour inclure le chemin d'utilisation de Pragma."

#: src/ch16-05-01-price-feeds.md:13 src/ch16-05-02-randomness.md:20
msgid ""
"```toml\n"
"[dependencies]\n"
"pragma_lib = { git = \"https://github.com/astraly-labs/pragma-lib\" }\n"
"```"
msgstr ""
"```toml [dependences] pragma_lib = { git = \"https://github.com/astraly-labs/"
"pragma-lib\" } ``"

#: src/ch16-05-01-price-feeds.md:18
msgid "Creating a Price Feed Contract"
msgstr "Création d'un contrat de distribution de prix"

#: src/ch16-05-01-price-feeds.md:20
msgid ""
"After adding the required dependencies for your project, you'll need to "
"define a contract interface that includes the required pragma price feed "
"entry point."
msgstr ""
"Après avoir ajouté les dépendances requises pour votre projet, vous aurez "
"besoin de définir une interface contractuelle qui inclut le point d'entrée "
"pragma de prix requis."

#: src/ch16-05-01-price-feeds.md:22
msgid "Contract Interface"
msgstr "Interface contractuelle"

#: src/ch16-05-01-price-feeds.md:32
msgid ""
"Of the two public functions exposed in the `IPriceFeedExample`, the one "
"necessary to interact with the pragma price feed oracle is the "
"`get_asset_price` function, a view function that takes in the `asset_id` "
"argument and returns a `u128` value."
msgstr ""
"Parmi les deux fonctions publiques exposées dans le `IPriceFeedExample`, "
"celle nécessaire pour interagir avec le pragma price feed oracle est la "
"fonction `get_asset_price`, une fonction de vue qui prend dans l'argument "
"`asset_id` et retourne une valeur `u128`."

#: src/ch16-05-01-price-feeds.md:34
msgid "Pragma Dependency Import to Contract"
msgstr "Importation de Pragma Dépendance au contrat"

#: src/ch16-05-01-price-feeds.md:41
msgid ""
"The snippet above shows the necessary imports you need to add to your "
"contract module in order to interact with the Pragma oracle."
msgstr ""
"L'extrait ci-dessus montre les importations nécessaires que vous devez "
"ajouter à votre module de contrat afin d'interagir avec l'oracle Pragma."

#: src/ch16-05-01-price-feeds.md:43
msgid "Required Price Feed Function Impl in Contract"
msgstr "Requis fonction d'alimentation des prix Impl dans le contrat"

#: src/ch16-05-01-price-feeds.md:47 src/ch16-05-01-price-feeds.md:117
msgid "// Retrieve the oracle dispatcher\n"
msgstr "// Récupérer l'expéditeur d'oracle\n"

#: src/ch16-05-01-price-feeds.md:52 src/ch16-05-01-price-feeds.md:122
msgid "// Call the Oracle contract, for a spot entry\n"
msgstr "// Appelez le contrat Oracle, pour une entrée ponctuelle\n"

#: src/ch16-05-01-price-feeds.md:60
msgid ""
"The `get_asset_price` function is responsible for retrieving the price of "
"the asset specified by the `asset_id` argument from Pragma Oracle. The "
"`get_data_median` method is called from the `IPragmaDispatcher` instance by "
"passing the `DataType::SpotEntry(asset_id)` as an argument and its output is "
"assigned to a variable named `output` of type `PragmaPricesResponse`. "
"Finally, the function returns the price of the requested asset as a `u128`."
msgstr ""
"La fonction `get_asset_price` est responsable de la récupération du prix de "
"l`actif spécifié par l`argument `asset_id` de Pragma Oracle. La méthode "
"`get_data_median` est appelée à partir de l`instance `IPragmaDispatcher` en "
"passant le `DataType::SpotEntry(asset_id)` comme argument et sa sortie est "
"attribuée à une variable nommée `output` de type `PragmaPricesResponse`. "
"Enfin, la fonction retourne le prix de l`actif demandé comme un `u128`."

#: src/ch16-05-01-price-feeds.md:62
msgid "Example Application Using Pragma Price Feed"
msgstr "Exemple d'application utilisant Pragma Price Feed"

#: src/ch16-05-01-price-feeds.md:96
msgid "// Calculate the amount of ETH needed\n"
msgstr "// Calculer la quantité d'ETH nécessaire\n"

#: src/ch16-05-01-price-feeds.md:102 src/ch16-05-02-randomness.md:228
msgid "// ETH Contract Address\n"
msgstr "// Adresse du contrat ETH\n"

#: src/ch16-05-01-price-feeds.md:105
msgid "// Transfer the ETH to the caller\n"
msgstr "// Transférer l'ETH à l'appelant\n"

#: src/ch16-05-01-price-feeds.md:132
msgid ""
"Note: Pragma returns the value of different token pairs using the decimal "
"factor of 6 or 8. You can convert the value to the required decimal factor "
"by dividing the value by \\\\( {10^{n}} \\\\), where `n` is the decimal "
"factor."
msgstr ""
"Note : Pragma retourne la valeur de différentes paires de jetons en "
"utilisant le facteur décimal de 6 ou 8. Vous pouvez convertir la valeur en "
"facteur décimal requis en divisant la valeur par \\\\( {10^{n}} \\\\), où "
"`n` est le facteur décimal."

#: src/ch16-05-01-price-feeds.md:134
msgid ""
"The code above is an example implementation of an applications consuming a "
"price feed from the Pragma oracle. The contract imports necessary modules "
"and interfaces, including the `IPragmaABIDispatcher` for interacting with "
"the Pragma oracle contract and the `ERC20ABIDispatcher` for interacting with "
"the ETH ERC20 token contract."
msgstr ""
"Le code ci-dessus est un exemple d'applications consommant un flux de prix "
"de l'oracle de Pragma. Le contrat importe les modules et interfaces "
"nécessaires, y compris le `IPragmaABIDispatcher` pour interagir avec le "
"contrat d'oracle de Pragma et le `ERC20ABIDispatcher` pour interagir avec le "
"contrat de jeton ETH ERC20."

#: src/ch16-05-01-price-feeds.md:136
msgid ""
"The contract has a `const` that stores the token pair ID of `ETH/USD`, and a "
"`Storage` struct that holds two fields `pragma_contract` and "
"`product_price_in_usd`. The constructor function initializes the "
"`pragma_contract` address and sets the `product_price_in_usd` to 100."
msgstr ""
"Le contrat a un `const` qui stocke l'ID de paire de jetons de `ETH/USD`, et "
"une structure `Storage` qui contient deux champs `pragma_contract` et "
"`product_price_in_usd`. La fonction constructeur initialise l'adresse "
"`pragma_contract` et définit le `product_price_in_usd` à 100."

#: src/ch16-05-01-price-feeds.md:138
msgid ""
"The `buy_item` function is the main entry point for a user to purchase an "
"item. It retrieves the caller's address. It calls the `get_asset_price` "
"function to get the current price of ETH in USD using the `ETH_USD` asset "
"ID. It calculates the amount of ETH needed to buy the product based on the "
"product price in USD at the corresponding ETH price. It then checks if the "
"caller has enough ETH by calling the `balance_of` method on the ERC20 ETH "
"contract. If the caller has enough ETH, it calls the `transfer_from` method "
"of the `eth_dispatcher` instance to transfer the required amount of ETH from "
"the caller to another contract address."
msgstr ""
"La fonction `buy_item` est le point d'entrée principal d'un utilisateur pour "
"acheter un article. Elle récupère l'adresse de l'appelant. Elle appelle la "
"fonction `get_asset_price` pour obtenir le prix actuel d'ETH en USD en "
"utilisant l'identifiant d'actif `ETH_USD`. Elle calcule le montant d'ETH "
"nécessaire pour acheter le produit en fonction du prix du produit en USD au "
"prix correspondant d'ETH. Elle vérifie ensuite si l'appelant a suffisamment "
"d'ETH en appelant la méthode `balance_of` sur le contrat ERC20 ETH. Si "
"l'appelant a assez d'ETH, elle appelle la méthode `transfer_from` de "
"l'instance `eth_dispatcher` pour transférer le montant requis d'ETH de "
"l'appelant à une autre adresse contractuelle."

#: src/ch16-05-01-price-feeds.md:140
msgid ""
"The `get_asset_price` function is the entry point to interact with the "
"Pragma oracle and has been explained in the section above."
msgstr ""
"La fonction `get_asset_price` est le point d'entrée pour interagir avec "
"l'oracle Pragma et a été expliquée dans la section ci-dessus."

#: src/ch16-05-01-price-feeds.md:142
msgid ""
"You can get a detailed guide on consuming data using Pragma price feeds "
"[here](https://docs.pragma.build/Resources/Cairo%201/data-feeds/consuming-"
"data)."
msgstr ""
"Vous pouvez obtenir un guide détaillé sur la consommation de données à "
"l'aide des flux de prix de Pragma [ici] (https://docs.pragma.build/Resources/"
"Cairo%201/data-feeds/mouse-data)."

#: src/ch16-05-02-randomness.md:3
msgid ""
"Since all blockchains are fundamentally deterministic and most are public "
"ledgers, generating truly unpredictatable randomness on-chain presents a "
"challenge. This randomness is crucial for fair outcomes in gaming, "
"lotteries, and unique generation of NFTs. To address this, verifiable random "
"functions (VRFs) provided by oracles offer a solution. VRFs guarantee that "
"the randomness can't be predicted or tampered with, ensuring trust and "
"transparency in these applications."
msgstr ""
"Comme toutes les blockchains sont fondamentalement déterministes et la "
"plupart sont des livres publics, générant une randomité vraiment "
"imprévisible sur la chaîne présente un défi. Cette randomité est cruciale "
"pour des résultats équitables dans le jeu, les loteries, et la génération "
"unique de NFT. Pour répondre à cela, des fonctions aléatoires vérifiables "
"(VRF) fournies par oracles offrent une solution. Les VRF garantissent que la "
"randomité ne peut pas être prédite ou altérée, assurant la confiance et la "
"transparence dans ces applications."

#: src/ch16-05-02-randomness.md:5
msgid "Overview on VRFs"
msgstr "Aperçu des FRV"

#: src/ch16-05-02-randomness.md:7
msgid ""
"Pseudo-random but secure: VRFs use a secret key and a nonce (a unique input) "
"to generate an output that appears random. While technically 'pseudo-"
"random', it's practically impossible for another party to predict the "
"outcome without knowing the secret key."
msgstr ""
"Pseudo-random mais sécurisé: les VRF utilisent une clé secrète et un nonce "
"(une entrée unique) pour générer une sortie qui apparaît aléatoire. Alors "
"que techniquement 'pseudo-random', il est pratiquement impossible pour une "
"autre partie de prédire le résultat sans connaître la clé secrète."

#: src/ch16-05-02-randomness.md:9
msgid ""
"Verifiable output: VRFs produce not only the random number but also a proof "
"that anyone can use to independently verify that the result was generated "
"correctly according to the function's parameters."
msgstr ""
"Sortie vérifiable : les VRF produisent non seulement le nombre aléatoire, "
"mais aussi une preuve que tout le monde peut utiliser pour vérifier "
"indépendamment que le résultat a été généré correctement selon les "
"paramètres de la fonction."

#: src/ch16-05-02-randomness.md:11
msgid "Generating Randomness with Pragma"
msgstr "Génération de Randomness avec Pragma"

#: src/ch16-05-02-randomness.md:13
msgid ""
"[Pragma](https://www.pragma.build/), an oracle on Starknet provides a "
"solution for generating random numbers using VRFs. Let's dive into how to "
"use Pragma VRF to generate a random number in a simple dice game contract."
msgstr ""
"[Pragma](https://www.pragma.build/), un oracle sur Starknet fournit une "
"solution pour générer des nombres aléatoires à l'aide de VRF. Plongons dans "
"la façon d'utiliser Pragma VRF pour générer un nombre aléatoire dans un "
"simple contrat de jeu de dés."

#: src/ch16-05-02-randomness.md:16
msgid "Add Pragma as a Dependency"
msgstr "Ajouter Pragma comme dépendance"

#: src/ch16-05-02-randomness.md:18
msgid ""
"Edit your cairo project's `Scarb.toml` file to include the path to use "
"Pragma."
msgstr ""
"Modifier le fichier `Scarb.toml` de votre projet de cairo pour inclure le "
"chemin pour utiliser Pragma."

#: src/ch16-05-02-randomness.md:61
msgid ""
"<span class=\"caption\">Listing 16-5 shows a contract interfaces for Pragma "
"VRF and a simple dice game.</span>"
msgstr ""
"<span class=\"caption\">Liste 16-5 montre une interface contractuelle pour "
"Pragma VRF et un jeu de dés simple.</span>"

#: src/ch16-05-02-randomness.md:63
msgid "Description of Key IPragmaVRF Entrypoints and Their Inputs"
msgstr "Description des points d'entrée IPragmaVRF clés et de leurs entrées"

#: src/ch16-05-02-randomness.md:65
msgid ""
"The function `request_randomness_from_pragma` initiates a request for "
"verifiable randomness from the Pragma oracle. It does this by emitting an "
"event that triggers the following actions off-chain:"
msgstr ""
"La fonction `request_randomness_from_pragma` lance une demande de aléatoire "
"vérifiable à partir de l'oracle de Pragma. Il le fait en émettant un "
"événement qui déclenche les actions suivantes hors-chaîne:"

#: src/ch16-05-02-randomness.md:67
msgid ""
"Randomness generation: The oracle generates random values and a "
"corresponding proof."
msgstr ""
"Génération du hasard : L'oracle génère des valeurs aléatoires et une preuve "
"correspondante."

#: src/ch16-05-02-randomness.md:68
msgid ""
"On-chain submission: The oracle submits the generated randomness and proof "
"back to the blockchain via the `receive_random_words` callback function."
msgstr ""
"Soumission en chaîne : L'oracle soumet le caractère aléatoire généré et la "
"preuve à la blockchain via la fonction de callback `receive_random_words`."

#: src/ch16-05-02-randomness.md:70
msgid "`request_randomness_from_pragma` Inputs"
msgstr "`request_randomness_from_pragma` Entrées"

#: src/ch16-05-02-randomness.md:72
msgid ""
"`seed`: A value used to initialize the randomness generation process. This "
"should be unique to ensure unpredictable results."
msgstr ""
"`seed`: Une valeur utilisée pour initialiser le processus de génération du "
"hasard, ce qui devrait être unique pour garantir des résultats imprévisibles."

#: src/ch16-05-02-randomness.md:73
msgid ""
"`callback_address`: The contract address where the `receive_random_words` "
"function will be called to deliver the generated randomness. It is typically "
"the address of your deployed contract implementing Pragma VRF."
msgstr ""
"`callback_address`: L'adresse du contrat où la fonction "
"`receive_random_words` sera appelée pour livrer le hasard généré. C'est "
"généralement l'adresse de votre contrat déployé mettant en œuvre Pragma VRF."

#: src/ch16-05-02-randomness.md:74
msgid ""
"`callback_fee_limit`: The maximum amount of gas you're willing to spend on "
"executing the `receive_random_words` callback function."
msgstr ""
"`callback_fee_limit`: La quantité maximale de gaz que vous êtes prêt à "
"dépenser pour exécuter la fonction de callback `receive_random_words`."

#: src/ch16-05-02-randomness.md:75
msgid ""
"`publish_delay`: The minimum delay (in blocks) between requesting randomness "
"and the oracle fulfilling the request."
msgstr ""
"`publich_delay`: Le délai minimum (en blocs) entre la demande de aléatoire "
"et l'oracle répondant à la demande."

#: src/ch16-05-02-randomness.md:76
msgid ""
"`num_words`: The number of random values (each represented as a `felt252`) "
"you want to receive in a single callback."
msgstr ""
"`num_words`: Le nombre de valeurs aléatoires (chacun représenté par un "
"`felt252`) que vous souhaitez recevoir en un seul callback."

#: src/ch16-05-02-randomness.md:77
msgid ""
"`calldata`: Additional data you want to pass to the `receive_random_words` "
"callback function."
msgstr ""
"`calldata`: Données supplémentaires que vous souhaitez transmettre à la "
"fonction de callback `receive_random_words`."

#: src/ch16-05-02-randomness.md:79
msgid "`receive_randomn_words` Inputs"
msgstr "Entrées `receive_randomn_words`"

#: src/ch16-05-02-randomness.md:81
msgid ""
"`requester_address`: The contract address that initiated the randomness "
"request."
msgstr ""
"`requester_address`: L'adresse du contrat qui a lancé la demande aléatoire."

#: src/ch16-05-02-randomness.md:82
msgid "`request_id`: A unique identifier assigned to the randomness request."
msgstr ""
"`request_id`: Un identificateur unique attribué à la requête aléatoire."

#: src/ch16-05-02-randomness.md:83
msgid ""
"`random_words`:  An array (span) of the generated random values (represented "
"as `felt252`)."
msgstr ""
"`random_words`: Un tableau (span) des valeurs aléatoires générées "
"(représenté comme `felt252`)."

#: src/ch16-05-02-randomness.md:84
msgid ""
"`calldata`:  Additional data passed along with the initial randomness "
"request."
msgstr ""
"`calldata`: Données supplémentaires transmises avec la demande initiale de "
"randomité."

#: src/ch16-05-02-randomness.md:86
msgid "Dice Game Contract"
msgstr "Contrat de jeu de dés"

#: src/ch16-05-02-randomness.md:88
msgid ""
"This dice game contract allows players to guess a number between 1 & 6 "
"during an active game window. The contract owner then has the ability to "
"toggle the game window to disable new guesses from players. To determine the "
"winning number, the contract owner calls the "
"`request_randomness_from_pragma` function to request a random number from "
"the Pragma VRF oracle. Once the random number is received through the "
"`receive_random_words` callback function, it is stored in the "
"`last_random_number` storage variable. Each player has to call "
"`process_game_winners` function to determine if they have won or lost. The "
"`last_random_number` generated is then reduced to a number between 1 & 6, "
"and compared to the guesses of the players stored in the `user_guesses` "
"mapping, which leads to the emission of an event `GameWinner` or `GameLost`."
msgstr ""
"Ce contrat de jeu de dés permet aux joueurs de deviner un nombre entre 1 et "
"6 pendant une fenêtre de jeu active. Le propriétaire du contrat a alors la "
"possibilité de basculer la fenêtre de jeu pour désactiver de nouvelles "
"devinettes des joueurs. Pour déterminer le nombre gagnant, le propriétaire "
"du contrat appelle la fonction `request_randomness_from_pragma` pour "
"demander un nombre aléatoire de l'oracle Pragma VRF. Une fois que le nombre "
"aléatoire est reçu par la fonction `receive_random_words` callback, il est "
"stocké dans la variable de stockage `last_random_number`. Chaque joueur doit "
"appeler la fonction `process_game_winners` pour déterminer s'il a gagné ou "
"perdu. Le `last_random_number` généré est alors réduit à un nombre entre 1 "
"et 6 et comparé aux devinettes des joueurs stockées dans la cartographie "
"`user_guess`, ce qui conduit à l'émission d'un événement `GameWinner` ou "
"`GameLost`."

#: src/ch16-05-02-randomness.md:223
msgid ""
"// Approve the randomness contract to transfer the callback fee\n"
"            // You would need to send some ETH to this contract first to "
"cover the fees\n"
msgstr ""
"// Approuver le contrat aléatoire pour transférer les frais de callback // "
"Vous devriez envoyer un certain ETH à ce contrat d'abord pour couvrir les "
"frais\n"

#: src/ch16-05-02-randomness.md:236
msgid "// Request the randomness\n"
msgstr "// Demander le caractère aléatoire\n"

#: src/ch16-05-02-randomness.md:253
msgid ""
"// Have to make sure that the caller is the Pragma Randomness Oracle "
"contract\n"
msgstr ""
"// Il faut s'assurer que l'appelant est le contrat Pragma Randomness Oracle\n"

#: src/ch16-05-02-randomness.md:259
msgid ""
"// and that the current block is within publish_delay of the request block\n"
msgstr "// et que le bloc courant est dans edit_delay du bloc request\n"

#: src/ch16-05-02-randomness.md:273
msgid "// ETH Contract Address            \n"
msgstr "// Adresse du contrat ETH\n"

#: src/ch16-05-02-randomness.md:282
msgid ""
"<span class=\"caption\">Listing 16-6: Simple Dice Game Contract using Pragma "
"VRF.</span>"
msgstr ""
"<span class=\"caption\">Liste 16-6: Contrat de jeu de dés simple utilisant "
"Pragma VRF.</span>"

#: src/ch16-05-02-randomness.md:284
msgid "NB: Fund Your Contract After Deployment to Utilize Pragma VRF"
msgstr ""
"NB: Financez votre contrat après le déploiement pour utiliser Pragma VRF"

#: src/ch16-05-02-randomness.md:286
msgid ""
"After deploying your contract that includes Pragma VRF functionalities, "
"ensure it holds sufficient ETH to cover the expenses related to requesting "
"random values. Pragma VRF requires payment for both generating the random "
"numbers and executing the callback function defined in your contract."
msgstr ""
"Après avoir déployé votre contrat qui inclut les fonctionnalités de Pragma "
"VRF, assurez-vous qu'il détient suffisamment d'ETH pour couvrir les dépenses "
"liées à la demande de valeurs aléatoires. Pragma VRF nécessite le paiement "
"pour générer les numéros aléatoires et exécuter la fonction de rappel "
"définie dans votre contrat."

#: src/ch16-05-02-randomness.md:288
msgid ""
"For more information, please refer to the [Pragma](https://docs.pragma.build/"
"Resources/Cairo%201/randomness/randomness) docs."
msgstr ""
"Pour plus d'informations, veuillez consulter les documents [Pragma](https://"
"docs.pragma.build/Resources/Cairo%201/randomness/randomness)."

#: src/ch16-06-00-other-examples.md:3
msgid ""
"This section contains additional examples of Starknet smart contracts, "
"utilizing various features of the Cairo programming language. Your "
"contributions are welcome and encouraged, as we aim to gather as many "
"diverse examples as possible."
msgstr ""
"Cette section contient d'autres exemples de contrats intelligents Starknet, "
"utilisant diverses fonctionnalités du langage de programmation du Caire. Vos "
"contributions sont les bienvenues et encouragées, car nous visons à "
"rassembler le plus d'exemples possibles."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:1
msgid "Deploying and Interacting with a Voting contract"
msgstr "Déployer et interagir avec un contrat de vote"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:3
msgid ""
"The **`Vote`** contract in Starknet begins by registering voters through the "
"contract's constructor. Three voters are initialized at this stage, and "
"their addresses are passed to an internal function **`_register_voters`**. "
"This function adds the voters to the contract's state, marking them as "
"registered and eligible to vote."
msgstr ""
"Le contrat **`Vote`** à Starknet commence par enregistrer les électeurs par "
"l'intermédiaire du constructeur du contrat. Trois électeurs sont initialisés "
"à ce stade, et leurs adresses sont passées à une fonction interne "
"**`_register_voters`**. Cette fonction ajoute les électeurs à l'état du "
"contrat, les marquant comme inscrits et éligibles au vote."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:5
msgid ""
"Within the contract, the constants **`YES`** and **`NO`** are defined to "
"represent the voting options (1 and 0, respectively). These constants "
"facilitate the voting process by standardizing the input values."
msgstr ""
"Dans le cadre du contrat, les constantes **`YES`** et **`NO`** sont définies "
"pour représenter les options de vote (1 et 0, respectivement). Ces "
"constantes facilitent le processus de vote en standardisant les valeurs "
"d'entrée."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:7
msgid ""
"Once registered, a voter is able to cast a vote using the **`vote`** "
"function, selecting either the 1 (YES) or 0 (NO) as their vote. When voting, "
"the state of the contract is updated, recording the vote and marking the "
"voter as having voted. This ensures that the voter is not able to cast a "
"vote again within the same proposal. The casting of a vote triggers the "
"**`VoteCast`** event, logging the action."
msgstr ""
"Une fois inscrit, un électeur peut voter en utilisant la fonction "
"**`vote`**, en sélectionnant soit le 1 (YES) ou 0 (NO) comme leur vote. Lors "
"du vote, l'état du contrat est mis à jour, l'enregistrement du vote et la "
"notation de l'électeur comme ayant voté. Cela garantit que l'électeur n'est "
"pas en mesure de voter à nouveau dans la même proposition."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:9
msgid ""
"The contract also monitors unauthorized voting attempts. If an unauthorized "
"action is detected, such as a non-registered user attempting to vote or a "
"user trying to vote again, the **`UnauthorizedAttempt`** event is emitted."
msgstr ""
"Le contrat surveille également les tentatives de vote non autorisées. Si une "
"action non autorisée est détectée, comme un utilisateur non enregistré qui "
"tente de voter ou un utilisateur qui tente de voter à nouveau, l'événement "
"**`Non autoriséAttente`** est émis."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:11
msgid ""
"Together, these functions, states, constants, and events create a structured "
"voting system, managing the lifecycle of a vote from registration to "
"casting, event logging, and result retrieval within the Starknet "
"environment. Constants like **`YES`** and **`NO`** help streamline the "
"voting process, while events play a vital role in ensuring transparency and "
"traceability."
msgstr ""
"Ensemble, ces fonctions, états, constantes et événements créent un système "
"de vote structuré, gérant le cycle de vie d'un vote, de l'inscription au "
"casting, à l'enregistrement des événements et à la récupération des "
"résultats dans l'environnement de Starknet. Les constantes comme **'YES'** "
"et **`NO'** aident à rationaliser le processus de vote, tandis que les "
"événements jouent un rôle vital dans la transparence et la traçabilité."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:13
msgid "Listing 16-7 shows the `Vote` contract in detail:"
msgstr "La liste 16-7 montre le contrat \"Vote\" en détail:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:16
msgid ""
"/// @dev Core Library Imports for the Traits outside the Starknet Contract\n"
msgstr ""
"/// @dev Importations de bibliothèque de base pour les caractères en dehors "
"du contrat Starknet\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:18
msgid ""
"/// @dev Trait defining the functions that can be implemented or called by "
"the Starknet Contract\n"
msgstr ""
"/// @dev Trait définissant les fonctions qui peuvent être implémentées ou "
"appelées par le contrat Starknet\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:22
msgid "/// @dev Function that returns the current vote status\n"
msgstr "/// @dev Fonction qui retourne le statut de vote actuel\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:24
msgid ""
"/// @dev Function that checks if the user at the specified address is "
"allowed to vote\n"
msgstr ""
"/// @dev Fonction qui vérifie si l'utilisateur à l'adresse spécifiée est "
"autorisé à voter\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:26
msgid ""
"/// @dev Function that checks if the specified address is registered as a "
"voter\n"
msgstr ""
"/// @dev Fonction qui vérifie si l'adresse spécifiée est enregistrée comme "
"électeur\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:28
msgid "/// @dev Function that allows a user to vote\n"
msgstr "/// @dev Fonction qui permet à un utilisateur de voter\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:31
msgid ""
"/// @dev Starknet Contract allowing three registered voters to vote on a "
"proposal\n"
msgstr ""
"/// @dev Starknet Contrat permettant à trois électeurs inscrits de voter sur "
"une proposition\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:41
msgid "/// @dev Structure that stores vote counts and voter states\n"
msgstr ""
"/// @dev Structure qui stocke les comptes de vote et les états d'électeur\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:50
msgid ""
"/// @dev Contract constructor initializing the contract with a list of "
"registered voters and 0 vote count\n"
msgstr ""
"/// @dev Constructeur de contrat initialisant le contrat avec une liste "
"d'électeurs inscrits et 0 compte de vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:58
msgid "// Register all voters by calling the _register_voters function\n"
msgstr ""
"// Enregistrez tous les électeurs en appelant la fonction _register_voters\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:61
msgid "// Initialize the vote count to 0\n"
msgstr "// Initialiser le nombre de votes à 0\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:66
msgid "/// @dev Event that gets emitted when a vote is cast\n"
msgstr "/// @dev Événement émis lors d'un vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:74
msgid "/// @dev Represents a vote that was cast\n"
msgstr "/// @dev Représente un vote qui a été lancé\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:81
msgid "/// @dev Represents an unauthorized attempt to vote\n"
msgstr "/// @dev Représente une tentative non autorisée de vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:87
msgid "/// @dev Implementation of VoteTrait for ContractState\n"
msgstr "/// @dev Mise en œuvre du voteTraitement pour l'État contractant\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:90
msgid "/// @dev Returns the voting results\n"
msgstr "/// @dev Retourne les résultats du vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:97
msgid "/// @dev Check whether a voter is allowed to vote\n"
msgstr "/// @dev Vérifiez si un électeur est autorisé à voter\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:102
msgid "/// @dev Check whether an address is registered as a voter\n"
msgstr "/// @dev Vérifiez si une adresse est enregistrée comme électeur\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:107
msgid "/// @dev Submit a vote\n"
msgstr "/// @dev Soumettre un vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:109
msgid "\"VOTE_0_OR_1\""
msgstr "\"VOTE_0_OR_1\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:125
msgid "/// @dev Internal Functions implementation for the Vote contract\n"
msgstr ""
"/// @dev Mise en œuvre des fonctions internes pour le contrat de vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:128
msgid ""
"/// @dev Registers the voters and initializes their voting status to true "
"(can vote)\n"
msgstr ""
"/// @dev Enregistre les électeurs et initialise leur statut de vote à vrai "
"(peut voter)\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:146
msgid "/// @dev Asserts implementation for the Vote contract\n"
msgstr "/// @dev Asserts implémentation pour le contrat de vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:149
msgid ""
"// @dev Internal function that checks if an address is allowed to vote\n"
msgstr ""
"// @dev Fonction interne qui vérifie si une adresse est autorisée à voter\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:158
msgid "\"USER_NOT_REGISTERED\""
msgstr "\"USER_NOT_REGISTRÉ\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:159
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:440
msgid "\"USER_ALREADY_VOTED\""
msgstr "\"USER_ALREADY_VOTED\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:163
msgid "/// @dev Implement the VotingResultTrait for the Vote contract\n"
msgstr ""
"/// @dev Mettre en œuvre le voteRésultatTraitement pour le contrat de vote\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:166
msgid ""
"// @dev Internal function to get the voting results (yes and no vote "
"counts)\n"
msgstr ""
"// @dev Fonction interne pour obtenir les résultats du vote (oui et pas de "
"compte de vote)\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:174
msgid ""
"// @dev Internal function to calculate the voting results in percentage\n"
msgstr ""
"// @dev Fonction interne pour calculer les résultats de vote en pourcentage\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:192
msgid "<span class=\"caption\">Listing 16-7: A voting smart contract</span>"
msgstr ""
"<span class=\"caption\">Liste 16-7: Un contrat intelligent de vote</span>"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:194
msgid "Deploying, Calling and Invoking the Voting Contract"
msgstr "Déployer, appeler et invoquer le contrat de vote"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:196
msgid ""
"Part of the Starknet experience is deploying and interacting with smart "
"contracts."
msgstr ""
"Une partie de l'expérience Starknet est en train de déployer et d'interagir "
"avec des contrats intelligents."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:198
msgid ""
"Once the contract is deployed, we can interact with it by calling and "
"invoking its functions:"
msgstr ""
"Une fois le contrat déployé, nous pouvons interagir avec lui en appelant et "
"en invoquant ses fonctions :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:200
msgid ""
"Calling contracts: Interacting with external functions that only read from "
"the state. These functions do not alter the state of the network, so they "
"don't require fees or signing."
msgstr ""
"Contrats d'appel : Interagir avec des fonctions externes qui ne lisent que "
"de l'état. Ces fonctions ne modifient pas l'état du réseau, de sorte "
"qu'elles n'exigent ni frais ni signature."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:201
msgid ""
"Invoking contracts: Interacting with external functions that can write to "
"the state. These functions do alter the state of the network and require "
"fees and signing."
msgstr ""
"Invocation de contrats : Interagir avec des fonctions externes qui peuvent "
"écrire à l'état. Ces fonctions modifient l'état du réseau et exigent des "
"frais et la signature."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:203
msgid ""
"We will setup a local development node using `katana` to deploy the voting "
"contract. Then, we'll interact with the contract by calling and invoking its "
"functions. You can also use the Goerli Testnet instead of `katana`. However, "
"we recommend using `katana` for local development and testing. You can find "
"the complete tutorial for `katana` in the [\"Katana: A Local Node\"](https://"
"book.starknet.io/ch02-04-katana.html) chapter of the Starknet Book."
msgstr ""
"Nous allons configurer un nœud de développement local en utilisant `katana` "
"pour déployer le contrat de vote. Ensuite, nous interagirons avec le contrat "
"en appelant et en invoquant ses fonctions. Vous pouvez également utiliser le "
"Goerli Testnet au lieu de `katana`. Cependant, nous recommandons d'utiliser "
"`katana` pour le développement local et les tests. Vous pouvez trouver le "
"tutoriel complet pour `katana` dans le chapitre [\"Katana: A Local Node\"]"
"(https://book.starknet.io/ch02-04-katana.html) du livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:207
msgid "The `katana` Local Starknet Node"
msgstr "Le nœud local \"katana\" de Starknet"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:209
msgid ""
"`katana` is designed to support local development by the [Dojo team](https://"
"github.com/dojoengine/dojo/blob/main/crates/katana). It will allow you to do "
"everything you need to do with Starknet, but locally. It is a great tool for "
"development and testing."
msgstr ""
"`katana` est conçu pour soutenir le développement local par l`équipe [Dojo] "
"(https://github.com/dojoengine/dojo/blob/main/crates/katana). Il vous "
"permettra de faire tout ce que vous devez faire avec Starknet, mais "
"localement. C`est un excellent outil pour le développement et les tests."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:211
msgid ""
"To install `katana` from the source code, please refer to the [\"Basic "
"Installation\"](https://book.starknet.io/ch02-01-basic-installation."
"html#katana-node-installation) chapter of the Starknet Book."
msgstr ""
"Pour installer `katana` à partir du code source, veuillez consulter le "
"chapitre [\"Installation de base\"] (https://book.starknet.io/ch02-01-basic-"
"installation.html#katana-node-installation) du livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:213
msgid ""
"Note: Please verify that the version of `katana` match the specified version "
"provided below."
msgstr ""
"Note: Veuillez vérifier que la version de `katana` correspond à la version "
"spécifiée ci-dessous."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:220
msgid ""
"To upgrade `katana` version, refer to the [\"Basic Installation\"](https://"
"book.starknet.io/ch02-01-basic-installation.html#katana-node-installation) "
"chapter of the Starknet Book."
msgstr ""
"Pour mettre à jour la version `katana`, reportez-vous au chapitre "
"[\"Installation de base\"] (https://book.starknet.io/ch02-01-basic-"
"installation.html#katana-node-installation) du livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:222
msgid ""
"Once you have `katana` installed, you can start the local Starknet node with:"
msgstr ""
"Une fois que vous avez installé `katana`, vous pouvez démarrer le noeud "
"local Starknet avec:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:228
msgid ""
"This command will start a local Starknet node with 3 deployed accounts. We "
"will use these accounts to deploy and interact with the voting contract:"
msgstr ""
"Cette commande lancera un nœud local Starknet avec 3 comptes déployés. Nous "
"utiliserons ces comptes pour déployer et interagir avec le contrat de vote:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:233
msgid "================="
msgstr "Il s'agit d'un groupe d'experts."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:249
msgid ""
"Before we can interact with the voting contract, we need to prepare the "
"voter and admin accounts on Starknet. Each voter account must be registered "
"and sufficiently funded for voting. For a more detailed understanding of how "
"accounts operate with Account Abstraction, refer to the [\"Account "
"Abstraction\"](https://book.starknet.io/ch04-00-account-abstraction.html) "
"chapter of the Starknet Book."
msgstr ""
"Avant de pouvoir interagir avec le contrat de vote, nous devons préparer les "
"comptes d'électeurs et d'administrateurs sur Starknet. Chaque compte "
"d'électeurs doit être enregistré et suffisamment financé pour voter. Pour "
"une compréhension plus détaillée du fonctionnement des comptes avec Account "
"Abstraction, reportez-vous au chapitre [\"Account Abstraction\"](https://"
"book.starknet.io/ch04-00-account-abstraction.html) du livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:255
msgid "Smart Wallets for Voting"
msgstr "Portefeuilles intelligents pour le vote"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:257
msgid ""
"Aside from Scarb you will need to have Starkli installed. Starkli is a "
"command line tool that allows you to interact with Starknet. You can find "
"the installation instructions in the \\[\"Basic Installation\"\\]\\[starkli "
"installation\\] chapter of the Starknet Book."
msgstr ""
"En dehors de Scarb, vous devrez installer Starkli. Starkli est un outil en "
"ligne de commande qui vous permet d'interagir avec Starknet. Vous pouvez "
"trouver les instructions d'installation dans le chapitre \\[\"Installation "
"de base\"\\]\\[installation de Starkli\\] du livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:259
msgid ""
"Note: Please verify that the version of `starkli` match the specified "
"version provided below."
msgstr ""
"Note: Veuillez vérifier que la version de `starkli` correspond à la version "
"spécifiée ci-dessous."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:266
msgid ""
"To upgrade `starkli` to `0.2.9`, use the `starkliup -v 0.2.9` command, or "
"simply `starkliup` which installed the latest stable version."
msgstr ""
"Pour mettre à niveau `starkli` vers `0.2.9`, utilisez la commande `starkliup "
"-v 0.2.9` ou simplement `starkliup` qui a installé la dernière version "
"stable."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:268
msgid ""
"For each smart wallet we'll use, we must create a Signer within the "
"encrypted keystore and an Account Descriptor. This process is also detailed "
"in the \\[\"Testnet Deployment\"\\]\\[signer creation\\] chapter of the "
"Starknet Book."
msgstr ""
"Pour chaque portefeuille intelligent que nous utiliserons, nous devons créer "
"un Signer dans le keystore crypté et un Descripteur de compte. Ce processus "
"est également détaillé dans le chapitre \\[\"Testnet "
"Deployment\"\\]\\[signer creation\\] du Livre Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:270
msgid ""
"We can create Signers and Account Descriptors for the accounts we want to "
"use for voting. Let's create a smart wallet for voting in our smart contract."
msgstr ""
"Nous pouvons créer des Signers et des Descripteurs de comptes pour les "
"comptes que nous voulons utiliser pour voter. Créons un portefeuille "
"intelligent pour voter dans notre contrat intelligent."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:272
msgid "Firstly, we create a signer from a private key:"
msgstr "Premièrement, nous créons un signataire à partir d'une clé privée :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:278
msgid ""
"Then, we create the Account Descriptor by fetching the katana account we "
"want to use:"
msgstr ""
"Ensuite, nous créons le Descripteur de compte en récupérant le compte katana "
"que nous voulons utiliser:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:284
msgid ""
"This command will create a new `account0_account.json` file containing the "
"following details:"
msgstr ""
"Cette commande créera un nouveau fichier `account0_account.json` contenant "
"les détails suivants:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:288
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:291
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:401
msgid "\"version\""
msgstr "\"version\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:289
msgid "\"variant\""
msgstr "\"variante\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:290
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:407
msgid "\"type\""
msgstr "\"type\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:290
msgid "\"open_zeppelin\""
msgstr "\"open_zeppelin\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:292
msgid "\"public_key\""
msgstr "\"clé publique\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:292
msgid "\"<SMART_WALLET_PUBLIC_KEY>\""
msgstr "\"<SMART_WALLET_PUBLIC_KEY>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:294
msgid "\"deployment\""
msgstr "\"déploiement\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:295
msgid "\"status\""
msgstr "\"statut\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:295
msgid "\"deployed\""
msgstr "\"déployé\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:296
msgid "\"class_hash\""
msgstr "\"classe_hash\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:296
msgid "\"<SMART_WALLET_CLASS_HASH>\""
msgstr "\"<SMART_WALLET_CLASS_HASH>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:297
msgid "\"address\""
msgstr "\"adresse\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:297
msgid "\"<SMART_WALLET_ADDRESS>\""
msgstr "\"<SMART_WALLET_ADDRESS>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:302
msgid ""
"You can retrieve the smart wallet class hash (it will be the same for all "
"your smart wallets) with the following command. Notice the use of the `--"
"rpc` flag and the RPC endpoint provided by `katana`:"
msgstr ""
"Vous pouvez récupérer le hash de classe portefeuille intelligent (il sera le "
"même pour tous vos portefeuilles intelligents) avec la commande suivante. "
"Remarquez l'utilisation du drapeau `--rpc` et le paramètre RPC fourni par "
"`katana`:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:304
msgid ""
"```\n"
"starkli class-hash-at <SMART_WALLET_ADDRESS> --rpc http://0.0.0.0:5050\n"
"```"
msgstr ""
"``` Starkli class-hash-at <SMART_WALLET_ADDRESS> --rpc http://0.0.0.0:5050 ``"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:308
msgid ""
"For the public key, you can use the `starkli signer keystore inspect` "
"command with the directory of the keystore json file:"
msgstr ""
"Pour la clé publique, vous pouvez utiliser la commande `starkli signer "
"keystore inspect` avec le répertoire du fichier json de keystore:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:314
msgid ""
"This process is identical for `account_1` and `account_2` in case you want "
"to have a second and a third voter."
msgstr ""
"Ce processus est identique pour `account_1` et `account_2` si vous voulez "
"avoir un deuxième et un troisième électeur."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:316
msgid ""
"\\[starkli installation\\]: https://book.starknet.io/ch02-01-basic-"
"installation.html#starkli-installation) \\[signer creation\\]: https://book."
"starknet.io/ch02-05-testnet-deployment.html?highlight=signer#creating-a-"
"signer"
msgstr ""
"\\[starkli installation\\]: https://book.starknet.io/ch02-01-basic-"
"installation.html#starkli-installation) \\[signer creation\\]: https://book."
"starknet.io/ch02-05-testnet-deployment.html?highlight=signer#creating-a-"
"signer"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:319
msgid "Contract Deployment"
msgstr "Déploiement du contrat"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:321
msgid ""
"Before deploying, we need to declare the contract. We can do this with the "
"`starkli declare` command:"
msgstr ""
"Avant de déployer, nous devons déclarer le contrat. Nous pouvons le faire "
"avec la commande `starkli declare`:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:327
msgid ""
"If the compiler version you're using is older than the one used by Starkli "
"and you encounter a `compiler-version` error while using the command above, "
"you can specify a compiler version to use in the command by adding the `--"
"compiler-version x.y.z` flag."
msgstr ""
"Si la version du compilateur que vous utilisez est plus ancienne que celle "
"utilisée par Starkli et que vous rencontrez une erreur `compiler-version` en "
"utilisant la commande ci-dessus, vous pouvez spécifier une version du "
"compilateur à utiliser dans la commande en ajoutant le drapeau `--compiler-"
"version x.y.z`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:329
msgid ""
"If you're still encountering issues with the compiler version, try upgrading "
"Starkli using the command: `starkliup` to make sure you're using the latest "
"version of starkli."
msgstr ""
"Si vous rencontrez toujours des problèmes avec la version du compilateur, "
"essayez de mettre à jour Starkli en utilisant la commande `starkliup` pour "
"vous assurer d'utiliser la dernière version de Starkli."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:331
msgid ""
"The class hash of the contract is: "
"`0x06974677a079b7edfadcd70aa4d12aac0263a4cda379009fca125e0ab1a9ba52`. You "
"can declare this contract on Sepolia testnet and see that the class hash "
"will correspond."
msgstr ""
"Le hash de classe du contrat est: "
"`0x06974677a079b7edfadcd70aa4d12aac0263a4cda379009fca125e0ab1a9ba52`. Vous "
"pouvez déclarer le présent contrat sur Sepolia testnet et voir que le hash "
"de classe correspondra."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:333
msgid ""
"The `--rpc` flag specifies the RPC endpoint to use (the one provided by "
"`katana`). The `--account` flag specifies the account to use for signing the "
"transaction. The account we use here is the one we created in the previous "
"step. The `--keystore` flag specifies the keystore file to use for signing "
"the transaction."
msgstr ""
"L'option `--rpc` spécifie le paramètre RPC à utiliser (celui fourni par "
"`katana`). L'option `--account` spécifie le compte à utiliser pour signer la "
"transaction. Le compte que nous utilisons ici est celui que nous avons créé "
"à l'étape précédente. L'option `--keystore` spécifie le fichier keystore à "
"utiliser pour signer la transaction."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:335
msgid ""
"Since we are using a local node, the transaction will achieve finality "
"immediately. If you are using the Goerli Testnet, you will need to wait for "
"the transaction to be final, which usually takes a few seconds."
msgstr ""
"Puisque nous utilisons un nœud local, la transaction atteindra immédiatement "
"la finalité. Si vous utilisez le Goerli Testnet, vous devrez attendre que la "
"transaction soit définitive, ce qui prend généralement quelques secondes."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:337
msgid ""
"The following command deploys the voting contract and registers voter_0, "
"voter_1, and voter_2 as eligible voters. These are the constructor "
"arguments, so add a voter account that you can later vote with."
msgstr ""
"La commande suivante déploie le contrat de vote et enregistre voter_0, "
"voter_1 et voter_2 en tant qu'électeurs éligibles. Ce sont les arguments du "
"constructeur, donc ajoutez un compte d'électeur avec lequel vous pouvez "
"voter ultérieurement."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:343
msgid "An example command:"
msgstr "Une commande exemple :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:349
msgid ""
"In this case, the contract has been deployed at an specific address: "
"`0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349`. This "
"address will be different for you. We will use this address to interact with "
"the contract."
msgstr ""
"Dans ce cas, le contrat a été déployé à une adresse spécifique: "
"`0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349`. Cette "
"adresse sera différente pour vous. Nous utiliserons cette adresse pour "
"interagir avec le contrat."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:351
msgid "Voter Eligibility Verification"
msgstr "Vérification de l'admissibilité des électeurs"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:353
msgid ""
"In our voting contract, we have two functions to validate voter eligibility, "
"`voter_can_vote` and `is_voter_registered`. These are external read "
"functions, which mean they don't alter the state of the contract but only "
"read the current state."
msgstr ""
"Dans notre contrat de vote, nous avons deux fonctions pour valider "
"l'éligibilité des électeurs, `voter_can_vote` et `is_voter_registred`. Ce "
"sont des fonctions de lecture externe, ce qui signifie qu'elles ne modifient "
"pas l'état du contrat mais seulement l'état actuel."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:355
msgid ""
"The `is_voter_registered` function checks whether a particular address is "
"registered as an eligible voter in the contract. The `voter_can_vote` "
"function, on the other hand, checks whether the voter at a specific address "
"is currently eligible to vote, i.e., they are registered and haven't voted "
"already."
msgstr ""
"La fonction `is_voter_registred` vérifie si une adresse particulière est "
"inscrite comme électeur admissible dans le contrat. La fonction "
"`voter_can_vote`, en revanche, vérifie si l'électeur à une adresse "
"spécifique est actuellement admissible au vote, c'est-à-dire qu'il est "
"inscrit et n'a pas déjà voté."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:357
msgid ""
"You can call these functions using the `starkli call` command. Note that the "
"`call` command is used for read functions, while the `invoke` command is "
"used for functions that can also write to storage. The `call` command does "
"not require signing, while the `invoke` command does."
msgstr ""
"Vous pouvez appeler ces fonctions en utilisant la commande `starkli call`. "
"Notez que la commande `call` est utilisée pour les fonctions de lecture, "
"tandis que la commande `invoke` est utilisée pour les fonctions qui peuvent "
"également écrire dans le stockage. La commande `call` ne nécessite pas de "
"signature, tandis que la commande `invoke` le fait."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:359
msgid ""
"```bash+\n"
"starkli call "
"0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349 "
"voter_can_vote "
"0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0 --rpc "
"http://0.0.0.0:5050\n"
"```"
msgstr ""
"```bash+ starkli call "
"0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349 "
"voter_can_vote "
"0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0 --rpc "
"http://0.0.0.0:5050 ```"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:363
msgid ""
"First we added the address of the contract, then the function we want to "
"call, and finally the input for the function. In this case, we are checking "
"whether the voter at the address "
"`0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0` can "
"vote."
msgstr ""
"Nous avons d'abord ajouté l'adresse du contrat, puis la fonction que nous "
"voulons appeler, et enfin l'entrée pour la fonction. Dans ce cas, nous "
"vérifions si l'électeur à l'adresse "
"`0x03ee9e18eedc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0` peut "
"voter."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:365
msgid ""
"Since we provided a registered voter address as an input, the result is 1 "
"(boolean true), indicating the voter is eligible to vote."
msgstr ""
"Puisque nous avons fourni une adresse d'électeur inscrit à titre d'entrée, "
"le résultat est 1 (booléen vrai), indiquant que l'électeur est admissible au "
"vote."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:367
msgid ""
"Next, let's call the `is_voter_registered` function using an unregistered "
"account address to observe the output:"
msgstr ""
"Ensuite, appelons la fonction `is_voter_registred` en utilisant une adresse "
"de compte non enregistrée pour observer la sortie :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:373
msgid ""
"With an unregistered account address, the terminal output is 0 (i.e., "
"false), confirming that the account is not eligible to vote."
msgstr ""
"Avec une adresse de compte non enregistrée, la sortie du terminal est 0 (c.-"
"à-d. faux), confirmant que le compte n'est pas admissible au vote."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:375
msgid "Casting a Vote"
msgstr "La présentation d'un vote"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:377
msgid ""
"Now that we have established how to verify voter eligibility, we can vote! "
"To vote, we interact with the `vote` function, which is flagged as external, "
"necessitating the use of the `starknet invoke` command."
msgstr ""
"Maintenant que nous avons établi comment vérifier l'éligibilité des "
"électeurs, nous pouvons voter! Pour voter, nous interagissons avec la "
"fonction `vote`, qui est indiquée comme externe, nécessitant l'utilisation "
"de la commande `starknet invoquer`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:379
msgid ""
"The `invoke` command syntax resembles the `call` command, but for voting, we "
"submit either `1` (for Yes) or `0` (for No) as our input. When we invoke the "
"`vote` function, we are charged a fee, and the transaction must be signed by "
"the voter; we are writing to the contract's storage."
msgstr ""
"La syntaxe de commande `invoce` ressemble à la commande `appel`, mais pour "
"le vote, nous soumettons `1` (pour Oui) ou `0` (pour Non) comme notre "
"entrée. Lorsque nous invoquons la fonction `vote`, nous sommes facturés, et "
"la transaction doit être signée par l'électeur; nous écrivons au stockage du "
"contrat."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:389
msgid ""
"You will be prompted to enter the password for the signer. Once you enter "
"the password, the transaction will be signed and submitted to the Starknet "
"network. You will receive the transaction hash as output. With the starkli "
"transaction command, you can get more details about the transaction:"
msgstr ""
"Vous serez invité à saisir le mot de passe du signataire. Une fois que vous "
"aurez saisi le mot de passe, la transaction sera signée et soumise au réseau "
"Starknet. Vous recevrez le hash de transaction en sortie. Avec la commande "
"de transaction Starkli, vous pouvez obtenir plus de détails sur la "
"transaction :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:395
msgid "This returns:"
msgstr "Ceci retourne :"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:399
msgid "\"transaction_hash\""
msgstr "\"transaction_hash\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:399
msgid "\"0x5604a97922b6811060e70ed0b40959ea9e20c726220b526ec690de8923907fd\""
msgstr "\"0x5604a97922b6811060e70ed0b40959ea9e20c726220b526ec690de8923907fd\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:400
msgid "\"max_fee\""
msgstr "\"max_fee\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:400
msgid "\"0x430e81\""
msgstr "\"0x430e81\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:401
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:410
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:414
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:415
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:416
msgid "\"0x1\""
msgstr "\"0x1\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:402
msgid "\"signature\""
msgstr "\"signature\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:403
msgid "\"0x75e5e4880d7a8301b35ff4a1ed1e3d72fffefa64bb6c306c314496e6e402d57\""
msgstr "\"0x75e5e4880d7a8301b35ff4a1ed1e3d72fffefa64bb6c306c314496e6e402d57\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:404
msgid "\"0xbb6c459b395a535dcd00d8ab13d7ed71273da4a8e9c1f4afe9b9f4254a6f51\""
msgstr "\"0xbb6c459b395a535dcd00d8ab13d7ed71273da4a8e9c1f4afe9b9f4254a6f51\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:406
msgid "\"nonce\""
msgstr "\"rien\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:406
msgid "\"0x3\""
msgstr "\"0x3\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:407
msgid "\"INVOKE\""
msgstr "\"ENVOYEZ\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:408
msgid "\"sender_address\""
msgstr "\"adresse de l'enfant\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:408
msgid "\"0x3ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0\""
msgstr "\"0x3ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:409
msgid "\"calldata\""
msgstr "\"calldata\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:411
msgid "\"0x5ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349\""
msgstr "\"0x5ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f3349\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:412
msgid "\"0x132bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41\""
msgstr "\"0x132bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:413
msgid "\"0x0\""
msgstr "\"0x0\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:421
msgid "If you try to vote twice with the same signer you will get an error:"
msgstr ""
"Si vous essayez de voter deux fois avec le même signataire, vous obtiendrez "
"une erreur:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:424
msgid "\"Contract error\""
msgstr "\"Erreur de contrat\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:427
msgid ""
"The error is not very informative, but you can get more details when looking "
"at the output in the terminal where you started `katana` (our local Starknet "
"node):"
msgstr ""
"L'erreur n'est pas très informative, mais vous pouvez obtenir plus de "
"détails lorsque vous regardez la sortie dans le terminal où vous avez "
"commencé `katana` (notre noeud local Starknet):"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:431
msgid ""
"\"Error in the called contract "
"(0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0):\n"
"    Error at pc=0:81:\n"
"    Got an exception while executing a hint: Custom Hint Error: Execution "
"failed. Failure reason: \\\"USER_ALREADY_VOTED\\\".\n"
"    ...\n"
msgstr ""
"\"Erreur dans le contrat appelé "
"(0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0): Erreur "
"à pc=0:81: J'ai une exception lors de l'exécution d'un indice: Astuce "
"personnalisée Erreur: L'exécution a échoué. Raison de la défaillance: \\"
"\"USER_ALREADY_VOTED\\\"....\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:437
msgid "The key for the error is `USER_ALREADY_VOTED`."
msgstr "La clé de l'erreur est `USER_ALREADY_VOTED`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:443
msgid ""
"We can repeat the process to create Signers and Account Descriptors for the "
"accounts we want to use for voting. Remember that each Signer must be "
"created from a private key, and each Account Descriptor must be created from "
"a public key, a smart wallet address, and the smart wallet class hash (which "
"is the same for each voter)."
msgstr ""
"Nous pouvons répéter le processus pour créer Signers et Descripteurs de "
"compte pour les comptes que nous voulons utiliser pour voter. Rappelez-vous "
"que chaque Signer doit être créé à partir d'une clé privée, et chaque "
"Descripteur de compte doit être créé à partir d'une clé publique, une "
"adresse de portefeuille intelligente, et le hash de classe de portefeuille "
"intelligent (qui est le même pour chaque électeur)."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:451
msgid "Visualizing Vote Outcomes"
msgstr "Visualisation des résultats du crédit"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:453
msgid ""
"To examine the voting results, we invoke the `get_vote_status` function, "
"another view function, through the `starknet call` command."
msgstr ""
"Pour examiner les résultats du vote, nous invoquons la fonction "
"`get_vote_status`, une autre fonction de vue, par la commande `starknet "
"call`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:459
msgid ""
"The output reveals the tally of \"Yes\" and \"No\" votes along with their "
"relative percentages."
msgstr ""
"La sortie révèle le nombre de votes \"Oui\" et \"Non\" ainsi que leurs "
"pourcentages relatifs."

#: src/ch17-01-general-recommendations.md:3
msgid ""
"When developing software, ensuring it functions as intended is usually "
"straightforward. However, preventing unintended usage and vulnerabilities "
"can be more challenging."
msgstr ""
"Lors du développement de logiciels, s'assurer qu'il fonctionne comme prévu "
"est généralement simple. Cependant, prévenir l'utilisation involontaire et "
"les vulnérabilités peut être plus difficile."

#: src/ch17-01-general-recommendations.md:5
msgid ""
"In smart contract development, security is very important. A single error "
"can result in the loss of valuable assets or the improper functioning of "
"certain features."
msgstr ""
"Dans le développement de contrats intelligents, la sécurité est très "
"importante. Une seule erreur peut entraîner la perte d'actifs précieux ou le "
"mauvais fonctionnement de certaines fonctionnalités."

#: src/ch17-01-general-recommendations.md:7
msgid ""
"Smart contracts are executed in a public environment where anyone can "
"examine the code and interact with it. Any errors or vulnerabilities in the "
"code can be exploited by malicious actors."
msgstr ""
"Les contrats intelligents sont exécutés dans un environnement public où tout "
"le monde peut examiner le code et interagir avec celui-ci. Toute erreur ou "
"vulnérabilité dans le code peut être exploitée par des acteurs malveillants."

#: src/ch17-01-general-recommendations.md:9
msgid ""
"This chapter presents general recommendations for writing secure smart "
"contracts. By incorporating these concepts during development, you can "
"create robust and reliable smart contracts. This reduces the chance of "
"unexpected behavior or vulnerabilities."
msgstr ""
"Ce chapitre présente des recommandations générales pour l'écriture de "
"contrats intelligents sécurisés. En intégrant ces concepts pendant le "
"développement, vous pouvez créer des contrats intelligents robustes et "
"fiables."

#: src/ch17-01-general-recommendations.md:11
msgid "Disclaimer"
msgstr "Avertissement"

#: src/ch17-01-general-recommendations.md:13
msgid ""
"This chapter does not provide an exhaustive list of all possible security "
"issues, and it does not guarantee that your contracts will be completely "
"secure."
msgstr ""
"Ce chapitre ne fournit pas une liste exhaustive de tous les problèmes de "
"sécurité possibles, et il ne garantit pas que vos contrats seront "
"complètement sécurisés."

#: src/ch17-01-general-recommendations.md:15
msgid ""
"If you are developing smart contracts for production use, it is highly "
"recommended to conduct external audits performed by security experts."
msgstr ""
"Si vous développez des contrats intelligents pour l'utilisation de la "
"production, il est fortement recommandé d'effectuer des audits externes "
"effectués par des experts en sécurité."

#: src/ch17-01-general-recommendations.md:17
msgid "Mindset"
msgstr "L'esprit"

#: src/ch17-01-general-recommendations.md:19
msgid ""
"Cairo is a highly safe language inspired by Rust. It is designed in a way "
"that forces you to cover all possible cases. Security issues on Starknet "
"mostly arise from the way smart contract flows are designed, not much from "
"the language itself."
msgstr ""
"Le Caire est un langage très sûr inspiré par Rust. Il est conçu d'une "
"manière qui vous oblige à couvrir tous les cas possibles. Les problèmes de "
"sécurité sur Starknet proviennent principalement de la façon dont les flux "
"de contrats intelligents sont conçus, pas beaucoup de la langue elle-même."

#: src/ch17-01-general-recommendations.md:21
msgid ""
"Adopting a security mindset is the initial step in writing secure smart "
"contracts. Try to always consider all possible scenarios when writing code."
msgstr ""
"Adopter un état d'esprit de sécurité est l'étape initiale dans l'écriture de "
"contrats intelligents sécurisés. Essayez de toujours considérer tous les "
"scénarios possibles lors de l'écriture de code."

#: src/ch17-01-general-recommendations.md:23
msgid "Viewing Smart Contracts as Finite State Machines"
msgstr "Voir les contrats intelligents comme des machines d'État Finite"

#: src/ch17-01-general-recommendations.md:25
msgid ""
"Transactions in smart contracts are atomic, meaning they either succeed or "
"fail without making any changes."
msgstr ""
"Les transactions dans les contrats intelligents sont atomiques, ce qui "
"signifie qu'elles réussissent ou échouent sans apporter de changements."

#: src/ch17-01-general-recommendations.md:27
msgid ""
"Think of smart contracts as state machines: they have a set of initial "
"states defined by the constructor constraints, and external functions "
"represent a set of possible state transitions. A transaction is nothing more "
"than a state transition."
msgstr ""
"Considérez les contrats intelligents comme des machines d'état : elles ont "
"un ensemble d'états initiaux définis par les contraintes du constructeur, et "
"les fonctions externes représentent un ensemble de transitions d'état "
"possibles. Une transaction n'est rien de plus qu'une transition d'état."

#: src/ch17-01-general-recommendations.md:29
msgid ""
"The `assert!` or `panic!` macros can be used to validate conditions before "
"performing specific actions. You can learn more about these on the "
"[Unrecoverable Errors with panic](./ch09-01-unrecoverable-errors-with-panic."
"md) page."
msgstr ""
"Les macros `assert!` ou `panic!` peuvent être utilisées pour valider les "
"conditions avant d'effectuer des actions spécifiques. Vous pouvez en savoir "
"plus sur celles-ci sur la page [Inrecoverable Errors with panic](./ch09-01-"
"unrecoverable-errors-with-panic.md)."

#: src/ch17-01-general-recommendations.md:31
msgid "These validations can include:"
msgstr "Ces validations peuvent comprendre:"

#: src/ch17-01-general-recommendations.md:33
msgid "Inputs provided by the caller"
msgstr "Entrées fournies par l'appelant"

#: src/ch17-01-general-recommendations.md:34
msgid "Execution requirements"
msgstr "Exigences en matière d'exécution"

#: src/ch17-01-general-recommendations.md:35
msgid "Invariants (conditions that must always be true)"
msgstr "Invariants (conditions qui doivent toujours être vraies)"

#: src/ch17-01-general-recommendations.md:36
msgid "Return values from other function calls"
msgstr "Valeurs de retour d'autres appels de fonction"

#: src/ch17-01-general-recommendations.md:38
msgid ""
"For example, you could use the `assert!` macro to validate that a user has "
"enough funds to perform a withdraw transaction. If the condition is not met, "
"the transaction will fail and the state of the contract will not change."
msgstr ""
"Par exemple, vous pouvez utiliser la macro `assert!` pour valider qu'un "
"utilisateur dispose de suffisamment de fonds pour effectuer une opération de "
"retrait. Si la condition n'est pas remplie, la transaction échouera et "
"l'état du contrat ne changera pas."

#: src/ch17-01-general-recommendations.md:45
msgid "\"Insufficient funds\""
msgstr "\"Insuffisance des fonds\""

#: src/ch17-01-general-recommendations.md:51
msgid ""
"Using these functions to check conditions adds constraints that help clearly "
"define the boundaries of possible state transitions for each function in "
"your smart contract. These checks ensure that the behavior of the contract "
"stays within the expected limits."
msgstr ""
"L'utilisation de ces fonctions pour vérifier les conditions ajoute des "
"contraintes qui aident à définir clairement les limites des transitions "
"d'état possibles pour chaque fonction de votre contrat intelligent. Ces "
"vérifications garantissent que le comportement du contrat reste dans les "
"limites prévues."

#: src/ch17-01-general-recommendations.md:53
msgid "Recommendations"
msgstr "Recommandations"

#: src/ch17-01-general-recommendations.md:55
msgid "Checks Effects Interactions Pattern"
msgstr "Contrôle des effets Interactions Pattern"

#: src/ch17-01-general-recommendations.md:57
msgid ""
"The Checks Effects Interactions pattern is a common design pattern used to "
"prevent reentrancy attacks on Ethereum. While reentrancy is harder to "
"achieve in Starknet, it is still recommended to use this pattern in your "
"smart contracts."
msgstr ""
"Le modèle Checks Effects Interactions est un modèle de conception commun "
"utilisé pour prévenir les attaques de réentrance sur Ethereum. Bien que la "
"réentrance est plus difficile à réaliser dans Starknet, il est toujours "
"recommandé d'utiliser ce modèle dans vos contrats intelligents."

#: src/ch17-01-general-recommendations.md:61
msgid ""
"The pattern consists of following a specific order of operations in your "
"functions:"
msgstr ""
"Le modèle consiste à suivre un ordre spécifique d'opérations dans vos "
"fonctions:"

#: src/ch17-01-general-recommendations.md:63
msgid ""
"**Checks**: Validate all conditions and inputs before performing any state "
"changes."
msgstr ""
"**Checks**: Valider toutes les conditions et entrées avant d'effectuer des "
"changements d'état."

#: src/ch17-01-general-recommendations.md:64
msgid "**Effects**: Perform all state changes."
msgstr "**Effets**: Effectuez tous les changements d'état."

#: src/ch17-01-general-recommendations.md:65
msgid ""
"**Interactions**: All external calls to other contracts should be made at "
"the end of the function."
msgstr ""
"**Interactions**: Tous les appels externes à d'autres contrats doivent être "
"effectués à la fin de la fonction."

#: src/ch17-01-general-recommendations.md:67
msgid "Access Control"
msgstr "Contrôle d'accès"

#: src/ch17-01-general-recommendations.md:69
msgid ""
"Access control is the process of restricting access to certain features or "
"resources. It is a common security mechanism used to prevent unauthorized "
"access to sensitive information or actions. In smart contracts, some "
"functions may often be restricted to specific users or roles."
msgstr ""
"Le contrôle d'accès est le processus de restriction de l'accès à certaines "
"fonctionnalités ou ressources. Il s'agit d'un mécanisme de sécurité commun "
"utilisé pour empêcher l'accès non autorisé à des informations ou à des "
"actions sensibles."

#: src/ch17-01-general-recommendations.md:71
msgid ""
"You can implement the access control pattern to easily manage permissions. "
"This pattern consists of defining a set of roles and assigning them to "
"specific users. Each function can then be restricted to specific roles."
msgstr ""
"Vous pouvez implémenter le modèle de contrôle d'accès pour gérer facilement "
"les permissions. Ce modèle consiste à définir un ensemble de rôles et à les "
"assigner à des utilisateurs spécifiques. Chaque fonction peut alors être "
"limitée à des rôles spécifiques."

#: src/ch17-01-general-recommendations.md:92
msgid "// Role 'owner': only one address\n"
msgstr "// Rôle 'propriétaire' : une seule adresse\n"

#: src/ch17-01-general-recommendations.md:94
msgid "// Role 'role_a': a set of addresses\n"
msgstr "// Rôle 'role_a' : un ensemble d'adresses\n"

#: src/ch17-01-general-recommendations.md:103
msgid "// Guard functions to check roles\n"
msgstr "// Fonctions de garde pour vérifier les rôles\n"

#: src/ch17-01-general-recommendations.md:118
msgid "\"Not owner\""
msgstr "\"Pas propriétaire\""

#: src/ch17-01-general-recommendations.md:123
msgid "\"Not role A\""
msgstr "\"Pas le rôle A\""

#: src/ch17-01-general-recommendations.md:126
msgid "// You can easily combine guards to perform complex checks\n"
msgstr ""
"// Vous pouvez facilement combiner des gardes pour effectuer des "
"vérifications complexes\n"

#: src/ch17-01-general-recommendations.md:128
msgid "\"Not allowed\""
msgstr "\"Non autorisé\""

#: src/ch17-01-general-recommendations.md:131
msgid "// Functions to manage roles\n"
msgstr "// Fonctions de gestion des rôles\n"

#: src/ch17-01-general-recommendations.md:138
msgid ""
"// You can now focus on the business logic of your contract\n"
"        // and reduce the complexity of your code by using guard functions\n"
msgstr ""
"// Vous pouvez maintenant vous concentrer sur la logique commerciale de "
"votre contrat // et réduire la complexité de votre code en utilisant des "
"fonctions de garde\n"

#: src/ch17-02-testing-smart-contracts.md:3
msgid ""
"Testing smart contracts is a critical part of the development process. It is "
"important to ensure that smart contracts behave as expected and that they "
"are secure."
msgstr ""
"La mise à l'essai de contrats intelligents est un élément essentiel du "
"processus de développement. Il est important de s'assurer que les contrats "
"intelligents se comportent comme prévu et qu'ils sont sécurisés."

#: src/ch17-02-testing-smart-contracts.md:5
msgid ""
"In a previous section of the Cairo Book, we learned how to write and "
"structure our tests for Cairo programs. We demonstrated how these tests "
"could be run using the `scarb` command-line tool. While this approach is "
"useful for testing standalone Cairo programs and functions, it lacks "
"functionality for testing smart contracts that require control over the "
"contract state and execution context. Therefore, in this section, we will "
"introduce how to use Starknet Foundry, a smart contract development "
"toolchain for Starknet, to test your Cairo contracts."
msgstr ""
"Dans une section précédente du livre du Caire, nous avons appris comment "
"écrire et structurer nos tests pour les programmes du Caire. Nous avons "
"démontré comment ces tests pouvaient être exécutés à l'aide de l'outil de "
"ligne de commande `scarb`. Bien que cette approche soit utile pour tester "
"les programmes et fonctions du Caire autonome, il manque de fonctionnalité "
"pour tester des contrats intelligents qui nécessitent un contrôle sur l'état "
"du contrat et le contexte d'exécution."

#: src/ch17-02-testing-smart-contracts.md:8
msgid ""
"Throughout this chapter, we will be using as an example the `PizzaFactory` "
"contract in Listing 17-1 to demonstrate how to write tests with Starknet "
"Foundry."
msgstr ""
"Tout au long de ce chapitre, nous utiliserons comme exemple le contrat "
"`PizzaFactory` dans Listing 17-1 pour démontrer comment écrire des tests "
"avec Starknet Foundry."

#: src/ch17-02-testing-smart-contracts.md:59
#: src/ch17-02-testing-smart-contracts.md:64
msgid "\"Amount cannot be 0\""
msgstr "\"Le montant ne peut pas être 0\""

#: src/ch17-02-testing-smart-contracts.md:69
msgid "\"Not enough pepperoni\""
msgstr "\"Pas assez de pepperoni\""

#: src/ch17-02-testing-smart-contracts.md:70
msgid "\"Not enough pineapple\""
msgstr "\"Pas assez d'ananas\""

#: src/ch17-02-testing-smart-contracts.md:75
#: src/ch17-02-testing-smart-contracts.md:210
#: src/ch17-02-testing-smart-contracts.md:326
#: src/ch17-02-testing-smart-contracts.md:438
#: src/ch17-02-testing-smart-contracts.md:550
#: src/ch17-02-testing-smart-contracts.md:664
msgid "\"Only the owner can make pizza\""
msgstr "\"Seul le propriétaire peut faire de la pizza\""

#: src/ch17-02-testing-smart-contracts.md:101
#: src/ch17-02-testing-smart-contracts.md:200
#: src/ch17-02-testing-smart-contracts.md:316
#: src/ch17-02-testing-smart-contracts.md:428
#: src/ch17-02-testing-smart-contracts.md:540
#: src/ch17-02-testing-smart-contracts.md:654
msgid "\"Only the owner can set ownership\""
msgstr "\"Seul le propriétaire peut définir la propriété\""

#: src/ch17-02-testing-smart-contracts.md:109
msgid ""
"<span class=\"caption\">Listing 17-1: A pizza factory that needs to be "
"tested</span>"
msgstr ""
"<span class=\"caption\">Liste 17-1: Une usine de pizza qui doit être testée</"
"span>"

#: src/ch17-02-testing-smart-contracts.md:111
msgid "Configuring your Scarb project with Starknet Foundry"
msgstr "Configuration de votre projet Scarb avec Starknet Foundry"

#: src/ch17-02-testing-smart-contracts.md:113
msgid ""
"The settings of your Scarb project can be configured in the `Scarb.toml` "
"file. To use Starknet Foundry as your testing tool, you will need to add it "
"as a dev dependency in your `Scarb.toml` file. At the time of writing, the "
"latest version of Starknet Foundry is `v0.22.0` - but you should use the "
"latest version."
msgstr ""
"Les paramètres de votre projet Scarb peuvent être configurés dans le fichier "
"`Scarb.toml`. Pour utiliser Starknet Foundry comme outil de test, vous "
"devrez l`ajouter comme dépendance dev dans votre fichier `Scarb.toml`. Au "
"moment de l`écriture, la dernière version de Starknet Foundry est `v0.22.0` "
"- mais vous devriez utiliser la dernière version."

#: src/ch17-02-testing-smart-contracts.md:115
msgid ""
"```toml,noplayground\n"
"[dev-dependencies]\n"
"snforge_std = { git = \"https://github.com/foundry-rs/starknet-foundry."
"git\", tag = \"v0.22.0\" }\n"
"\n"
"[scripts]\n"
"test = \"snforge test\"\n"
"```"
msgstr ""
"```toml,noplayground [dev-dependences] snforge_std = { git = \"https://"
"github.com/foundry-rs/starknet-foundry.git\", tag = \"v0.22\" } [scripts] "
"test = \"snforge test\" ``"

#: src/ch17-02-testing-smart-contracts.md:123
msgid ""
"The `scarb test` command is configured to execute `scarb cairo-test` by "
"default. In our settings, we have configured it to execute `snforge test` "
"instead. This will allow us to run our tests using Starknet Foundry when we "
"run the `scarb test` command."
msgstr ""
"La commande `scarb test` est configurée pour exécuter `scarb cairo-test` par "
"défaut. Dans nos paramètres, nous l'avons configuré pour exécuter `snforge "
"test` à la place. Cela nous permettra d'exécuter nos tests en utilisant "
"Starknet Foundry lors de l'exécution de la commande `scarb test`."

#: src/ch17-02-testing-smart-contracts.md:125
msgid ""
"Once your project is configured, you will need to install Starknet Foundry "
"by following the installation guide from the [Starknet Foundry Documentation]"
"(https://foundry-rs.github.io/starknet-foundry/getting-started/installation."
"html). As usual, we recommend to use `asdf` to manage versions of your "
"development tools."
msgstr ""
"Une fois votre projet configuré, vous devrez installer Starknet Foundry en "
"suivant le guide d'installation du [Starknet Foundry Documentation] (https://"
"foundry-rs.github.io/starknet-Foundry/getting-started/installation.html). "
"Comme d'habitude, nous vous recommandons d'utiliser `asdf` pour gérer les "
"versions de vos outils de développement."

#: src/ch17-02-testing-smart-contracts.md:127
msgid "Testing Smart Contracts with Starknet Foundry"
msgstr "Tester des contrats intelligents avec Starknet Foundry"

#: src/ch17-02-testing-smart-contracts.md:129
msgid ""
"The usual command to run your tests using Starknet Foundry is `snforge "
"test`. However, when we configured our projects, we defined that the `scarb "
"test` command will run the `snforge test` command. Therefore, during the "
"rest of this chapter, consider that the `scarb test` command will be using "
"`snforge test` under the hood."
msgstr ""
"La commande habituelle pour exécuter vos tests en utilisant Starknet Foundry "
"est `snforge test`. Cependant, lorsque nous avons configuré nos projets, "
"nous avons défini que la commande `scarb test` exécutera la commande "
"`snforge test`. Par conséquent, pendant le reste de ce chapitre, considérez "
"que la commande `scarb test` utilisera `snforge test` sous le capot."

#: src/ch17-02-testing-smart-contracts.md:131
msgid "The usual testing flow of a contract is as follows:"
msgstr "Le flux d'essai habituel d'un contrat est le suivant:"

#: src/ch17-02-testing-smart-contracts.md:133
msgid "Declare the class of the contract to test, identified by its name"
msgstr "Déclarer la classe du contrat à tester, identifiée par son nom"

#: src/ch17-02-testing-smart-contracts.md:134
msgid "Serialize the constructor calldata into an array"
msgstr "Sérialiser les calldata du constructeur dans un tableau"

#: src/ch17-02-testing-smart-contracts.md:135
msgid "Deploy the contract and retrieve its address"
msgstr "Déployer le contrat et récupérer son adresse"

#: src/ch17-02-testing-smart-contracts.md:136
msgid "Interact with the contract's entrypoint to test various scenarios"
msgstr ""
"Interagir avec le point d'entrée du contrat pour tester divers scénarios"

#: src/ch17-02-testing-smart-contracts.md:138
msgid "Deploying the Contract to Test"
msgstr "Déploiement du contrat d'essai"

#: src/ch17-02-testing-smart-contracts.md:140
msgid ""
"In Listing 17-2, we wrote a function that deploys the `PizzaFactory` "
"contract and sets up the dispatcher for interactions."
msgstr ""
"Dans Listing 17-2, nous avons écrit une fonction qui déploie le contrat "
"`PizzaFactory` et met en place le régulateur pour les interactions."

#: src/ch17-02-testing-smart-contracts.md:162
#: src/ch17-02-testing-smart-contracts.md:278
#: src/ch17-02-testing-smart-contracts.md:390
#: src/ch17-02-testing-smart-contracts.md:502
#: src/ch17-02-testing-smart-contracts.md:616
msgid "\"PizzaFactory\""
msgstr "\"PizzaFactory\""

#: src/ch17-02-testing-smart-contracts.md:178
#: src/ch17-02-testing-smart-contracts.md:294
#: src/ch17-02-testing-smart-contracts.md:406
#: src/ch17-02-testing-smart-contracts.md:518
#: src/ch17-02-testing-smart-contracts.md:632
msgid "\"pepperoni\""
msgstr "\"pepperoni\""

#: src/ch17-02-testing-smart-contracts.md:179
#: src/ch17-02-testing-smart-contracts.md:295
#: src/ch17-02-testing-smart-contracts.md:407
#: src/ch17-02-testing-smart-contracts.md:519
#: src/ch17-02-testing-smart-contracts.md:633
msgid "\"pineapple\""
msgstr "\"Pineapple\""

#: src/ch17-02-testing-smart-contracts.md:221
#: src/ch17-02-testing-smart-contracts.md:337
#: src/ch17-02-testing-smart-contracts.md:449
#: src/ch17-02-testing-smart-contracts.md:561
#: src/ch17-02-testing-smart-contracts.md:675
msgid "// Setup\n"
msgstr "// Configuration\n"

#: src/ch17-02-testing-smart-contracts.md:226
#: src/ch17-02-testing-smart-contracts.md:342
#: src/ch17-02-testing-smart-contracts.md:454
#: src/ch17-02-testing-smart-contracts.md:566
#: src/ch17-02-testing-smart-contracts.md:680
msgid "// When\n"
msgstr "// Quand\n"

#: src/ch17-02-testing-smart-contracts.md:229
#: src/ch17-02-testing-smart-contracts.md:345
#: src/ch17-02-testing-smart-contracts.md:457
#: src/ch17-02-testing-smart-contracts.md:569
#: src/ch17-02-testing-smart-contracts.md:683
msgid "// Then\n"
msgstr "// Ensuite\n"

#: src/ch17-02-testing-smart-contracts.md:246
msgid ""
"<span class=\"caption\">Listing 17-2 Deploying the contract to test</span>"
msgstr ""
"<span class=\"caption\">Liste 17-2 Déployer le contrat pour tester</span>"

#: src/ch17-02-testing-smart-contracts.md:248
msgid "Testing our Contract"
msgstr "Tester notre contrat"

#: src/ch17-02-testing-smart-contracts.md:250
msgid ""
"Determining the behavior that your contract should respect is the first step "
"in writing tests. In the `PizzaFactory` contract, we determined that the "
"contract should have the following behavior:"
msgstr ""
"Déterminer le comportement que votre contrat devrait respecter est la "
"première étape dans les tests écrits. Dans le contrat `PizzaFactory`, nous "
"avons déterminé que le contrat devrait avoir le comportement suivant:"

#: src/ch17-02-testing-smart-contracts.md:252
msgid ""
"Upon deployment, the contract owner should be set to the address provided in "
"the constructor, and the factory should have 10 units of pepperoni and "
"pineapple, and no pizzas created."
msgstr ""
"Au moment du déploiement, le propriétaire du contrat devrait être fixé à "
"l'adresse indiquée dans le constructeur, et l'usine devrait avoir 10 unités "
"de pepperoni et d'ananas, et pas de pizzas créées."

#: src/ch17-02-testing-smart-contracts.md:253
msgid ""
"If someone tries to make a pizza and they are not the owner, the operation "
"should fail. Otherwise, the pizza count should be incremented, and an event "
"should be emitted."
msgstr ""
"Si quelqu'un essaie de faire une pizza et qu'ils ne sont pas le "
"propriétaire, l'opération devrait échouer. Sinon, le nombre de pizzas "
"devrait être augmenté, et un événement devrait être émis."

#: src/ch17-02-testing-smart-contracts.md:254
msgid ""
"If someone tries to take ownership of the contract and they are not the "
"owner, the operation should fail. Otherwise, the owner should be updated."
msgstr ""
"Si quelqu'un tente de s'approprier le contrat et qu'il n'est pas le "
"propriétaire, l'opération doit échouer. Sinon, le propriétaire doit être mis "
"à jour."

#: src/ch17-02-testing-smart-contracts.md:256
msgid "Accessing Storage Variables with `load`"
msgstr "Accès aux variables de stockage avec `load`"

#: src/ch17-02-testing-smart-contracts.md:362
msgid ""
"<span class=\"caption\">Listing 17-3: Testing the initial state by loading "
"storage variables </span>"
msgstr ""
"<span class=\"caption\">Liste 17-3: Test de l'état initial en chargeant les "
"variables de stockage </span>"

#: src/ch17-02-testing-smart-contracts.md:364
msgid ""
"Once our contract is deployed, we want to assert that the initial values are "
"set as expected. If our contract has an entrypoint that returns the value of "
"a storage variable, we can call this entrypoint. Otherwise, we can use the "
"`load` function from `snforge` to load the value of a storage variable "
"inside our contract, even if not exposed by an entrypoint."
msgstr ""
"Une fois notre contrat déployé, nous voulons affirmer que les valeurs "
"initiales sont définies comme prévu. Si notre contrat a un point d'entrée "
"qui renvoie la valeur d'une variable de stockage, nous pouvons appeler ce "
"point d'entrée. Sinon, nous pouvons utiliser la fonction `load` de `snforge` "
"pour charger la valeur d'une variable de stockage dans notre contrat, même "
"si elle n'est pas exposée par un point d'entrée."

#: src/ch17-02-testing-smart-contracts.md:366
msgid "Mocking the Caller Address with `start_cheat_caller_address`"
msgstr "Cacher l'adresse de l'appelant avec `start_cheat_caller_address`"

#: src/ch17-02-testing-smart-contracts.md:368
msgid ""
"The security of our factory relies on the owner being the only one able to "
"make pizzas and transfer ownership. To test this, we can use the "
"`start_cheat_caller_address` function to mock the caller address and assert "
"that the contract behaves as expected."
msgstr ""
"La sécurité de notre usine repose sur le propriétaire étant le seul capable "
"de faire des pizzas et de transférer la propriété. Pour tester cela, nous "
"pouvons utiliser la fonction `start_cheat_caller_address` pour se moquer de "
"l'adresse de l'appelant et affirmer que le contrat se comporte comme prévu."

#: src/ch17-02-testing-smart-contracts.md:474
msgid ""
"<span class=\"caption\">Listing 17-4: Testing ownership of the contract by "
"mocking the caller address </span>"
msgstr ""
"<span class=\"caption\">Liste 17-4: Test de la propriété du contrat en se "
"moquant de l'adresse de l'appelant </span>"

#: src/ch17-02-testing-smart-contracts.md:476
msgid ""
"Using `start_cheat_caller_address`, we call the `change_owner` function "
"first as the owner, and then as a different address. We assert that the "
"operation fails when the caller is not the owner, and that the owner is "
"updated when the caller is the owner."
msgstr ""
"En utilisant `start_cheat_caller_address`, nous appelons la fonction "
"`change_owner` d'abord comme propriétaire, puis comme adresse différente. "
"Nous affirmons que l'opération échoue lorsque l'appelant n'est pas le "
"propriétaire, et que le propriétaire est mis à jour lorsque l'appelant est "
"le propriétaire."

#: src/ch17-02-testing-smart-contracts.md:478
msgid "Capturing Events with `spy_events`"
msgstr "Capturer des événements avec `spy_events`"

#: src/ch17-02-testing-smart-contracts.md:480
msgid ""
"When a pizza is created, the contract emits an event. To test this, we can "
"use the `spy_events` function to capture the emitted events and assert that "
"the event was emitted with the expected parameters. Naturally, we can also "
"assert that the pizza count was incremented, and that only the owner can "
"make a pizza."
msgstr ""
"Quand une pizza est créée, le contrat émet un événement. Pour tester cela, "
"nous pouvons utiliser la fonction `spy_events` pour capturer les événements "
"émis et affirmer que l'événement a été émis avec les paramètres attendus. "
"Naturellement, nous pouvons également affirmer que le nombre de pizzas a été "
"incrémenté, et que seul le propriétaire peut faire une pizza."

#: src/ch17-02-testing-smart-contracts.md:586
msgid ""
"<span class=\"caption\">Listing 17-5: Testing the events emitted when a "
"pizza is created</span>"
msgstr ""
"<span class=\"caption\">Liste 17-5: Test des événements émis lors de la "
"création d'une pizza</span>"

#: src/ch17-02-testing-smart-contracts.md:588
msgid "Accessing Internal Functions with `contract_state_for_testing`"
msgstr "Accès aux fonctions internes avec `contract_state_for_testing`"

#: src/ch17-02-testing-smart-contracts.md:590
msgid ""
"All the tests we have seen so far have been using a workflow that involves "
"deploying the contract and interacting with the contract's entrypoints. "
"However, sometimes we may want to test the internals of the contract "
"directly, without deploying the contract. How could this be done, if we were "
"reasoning in purely Cairo terms?"
msgstr ""
"Tous les tests que nous avons vus jusqu'à présent ont été l'utilisation d'un "
"workflow qui implique le déploiement du contrat et interagir avec les points "
"d'entrée du contrat. Cependant, parfois, nous pouvons vouloir tester les "
"internes du contrat directement, sans déployer le contrat."

#: src/ch17-02-testing-smart-contracts.md:592
msgid ""
"Recall the struct `ContractState`, which is used as a parameter to all the "
"entrypoints of a contract. To make it short, this struct contains zero-sized "
"fields, corresponding to the storage variables of the contract. The only "
"purpose of these fields is to allow the Cairo compiler to generate the "
"correct code for accessing the storage variables. If we could create an "
"instance of this struct, we could access these storage variables directly, "
"without deploying the contract..."
msgstr ""
"Rappelons le struct `ContractState`, qui est utilisé comme paramètre pour "
"tous les points d'entrée d'un contrat. Pour le rendre court, cette struct "
"contient des champs de taille zéro, correspondant aux variables de stockage "
"du contrat. Le seul but de ces champs est de permettre au compilateur du "
"Caire de générer le code correct pour accéder aux variables de stockage. Si "
"nous pouvions créer une instance de cette struct, nous pourrions accéder à "
"ces variables de stockage directement, sans déployer le contrat..."

#: src/ch17-02-testing-smart-contracts.md:594
msgid ""
"...and this is exactly what the `contract_state_for_testing` function does! "
"It creates an instance of the `ContractState` struct, allowing us to call "
"any function that takes as parameter a `ContractState` struct, without "
"deploying the contract. To interact with the storage variables properly, we "
"need to manually import the traits that define access to the storage "
"variables."
msgstr ""
"...et c'est exactement ce que fait la fonction `contract_state_for_testing`! "
"Elle crée une instance de la structure `ContractState`, nous permettant "
"d'appeler n'importe quelle fonction qui prend comme paramètre une structure "
"`ContractState`, sans déployer le contrat. Pour interagir correctement avec "
"les variables de stockage, nous devons importer manuellement les caractères "
"qui définissent l'accès aux variables de stockage."

#: src/ch17-02-testing-smart-contracts.md:700
msgid ""
"<span class=\"caption\">Listing 17-6: Unit testing our contract without "
"deployment</span>"
msgstr ""
"<span class=\"caption\">Liste 17-6: Unité testant notre contrat sans "
"déploiement</span>"

#: src/ch17-02-testing-smart-contracts.md:702
msgid ""
"These imports give us access to our internal functions (notably, "
"`set_owner`), as well as the read/write access to the `owner` storage "
"variable. Once we have these, we can interact with the contract directly, "
"changing the address of the owner by calling the `set_owner` method, "
"accessible through `InternalTrait`, and reading the `owner` storage variable."
msgstr ""
"Ces importations nous donnent accès à nos fonctions internes (notamment "
"`set_owner`), ainsi qu`à l`accès lecture/écriture à la variable de stockage "
"`owner`. Une fois que nous les avons, nous pouvons interagir directement "
"avec le contrat, changer l`adresse du propriétaire en appelant la méthode "
"`set_owner`, accessible par `InternalTrait`, et en lisant la variable de "
"stockage `owner`."

#: src/ch17-02-testing-smart-contracts.md:707
msgid ""
"Note: Both approaches cannot be used at the same time. If you decide to "
"deploy the contract, you interact with it using the dispatcher. If you "
"decide to test the internal functions, you interact with the `ContractState` "
"object directly."
msgstr ""
"Remarque: Les deux approches ne peuvent pas être utilisées en même temps. Si "
"vous décidez de déployer le contrat, vous interagissez avec lui en utilisant "
"le répartiteur. Si vous décidez de tester les fonctions internes, vous "
"interagissez directement avec l'objet `ContractState`."

#: src/ch17-02-testing-smart-contracts.md:728
msgid ""
"The output of the tests shows that all the tests passed successfully, along "
"with an estimation of the gas consumed by each test."
msgstr ""
"La sortie des essais montre que tous les essais ont été réussis, ainsi "
"qu'une estimation du gaz consommé par chaque essai."

#: src/ch17-02-testing-smart-contracts.md:732
msgid ""
"In this chapter, we learned how to test smart contracts using Starknet "
"Foundry. We demonstrated how to deploy a contract and interact with it using "
"the dispatcher. We also showed how to test the contract's behavior by "
"mocking the caller address and capturing events. Finally, we demonstrated "
"how to test the internal functions of the contract directly, without "
"deploying the contract."
msgstr ""
"Dans ce chapitre, nous avons appris à tester les contrats intelligents en "
"utilisant Starknet Foundry. Nous avons démontré comment déployer un contrat "
"et interagir avec lui en utilisant le répartiteur. Nous avons également "
"montré comment tester le comportement du contrat en se moquant de l'adresse "
"de l'appelant et en capturant les événements. Enfin, nous avons démontré "
"comment tester les fonctions internes du contrat directement, sans déployer "
"le contrat."

#: src/ch17-02-testing-smart-contracts.md:734
msgid ""
"To learn more about Starknet Foundry, refer to the [Starknet Foundry "
"documentation](https://foundry-rs.github.io/starknet-foundry/index.html)."
msgstr ""
"Pour en savoir plus sur Starknet Foundry, consultez la [document Starknet "
"Foundry] (https://foundry-rs.github.io/starknet-Foundry/index.html)."

#: src/ch17-03-static-analysis-tools.md:3
msgid ""
"Static analysis refers to the process of examining code without its "
"execution, focusing on its structure, syntax, and properties. It involves "
"analyzing the source code to identify potential issues, vulnerabilities, or "
"violations of specified rules."
msgstr ""
"L'analyse statique se réfère au processus d'examen du code sans son "
"exécution, en se concentrant sur sa structure, sa syntaxe et ses propriétés. "
"Il s'agit d'analyser le code source pour identifier les problèmes "
"potentiels, les vulnérabilités ou les violations de règles spécifiées."

#: src/ch17-03-static-analysis-tools.md:5
msgid ""
"By defining rules, such as coding conventions or security guidelines, "
"developers can utilize static analysis tools to automatically check the code "
"against these standards."
msgstr ""
"En définissant des règles, telles que des conventions de codage ou des "
"lignes directrices de sécurité, les développeurs peuvent utiliser des outils "
"d'analyse statique pour vérifier automatiquement le code par rapport à ces "
"normes."

#: src/ch17-03-static-analysis-tools.md:7
msgid "Reference:"
msgstr "Référence:"

#: src/ch17-03-static-analysis-tools.md:9
msgid ""
"[Semgrep Cairo 1.0 support](https://semgrep.dev/blog/2023/semgrep-now-"
"supports-cairo-1-0)"
msgstr ""
"[Semgrep Cairo 1.0 support](https://semgrep.dev/blog/2023/semgrep-now-"
"supports-cairo-1-0)"

#: src/ch17-03-static-analysis-tools.md:10
msgid ""
"[Caracal, a Starknet static analyzer](https://github.com/crytic/caracal)"
msgstr ""
"[Caracal, un analyseur statique Starknet] (https://github.com/crytic/caracal)"

#: src/appendix-000.md
msgid ""
"The following sections contain reference material you may find useful in "
"your Starknet journey."
msgstr ""
"Les sections suivantes contiennent du matériel de référence que vous pouvez "
"trouver utile dans votre voyage Starknet."

#: src/appendix-08-system-calls.md:1
msgid "Appendix A - System Calls"
msgstr "Annexe A - Appels système"

#: src/appendix-08-system-calls.md:3
msgid ""
"This chapter is based on the StarkNet documentation available at [StarkNet "
"Docs](https://docs.starknet.io/documentation/architecture_and_concepts/"
"Smart_Contracts/system-calls-cairo1/)."
msgstr ""
"Ce chapitre est basé sur la documentation de StarkNet disponible à [StarkNet "
"Docs] (https://docs.starknet.io/documentation/architecture_and_concepts/"
"Smart_Contracts/system-calls-cairo1/)."

#: src/appendix-08-system-calls.md:5
msgid ""
"Writing smart contracts requires various associated operations, such as "
"calling another contract or accessing the contract’s storage, that "
"standalone programs do not require."
msgstr ""
"La rédaction de contrats intelligents nécessite diverses opérations "
"connexes, telles que l'appel d'un autre contrat ou l'accès au stockage du "
"contrat, que les programmes autonomes n'exigent pas."

#: src/appendix-08-system-calls.md:7
msgid ""
"The Starknet contract language supports these operations by using system "
"calls. System calls enable a contract to require services from the Starknet "
"OS. You can use system calls in a function to get information that depends "
"on the broader state of Starknet, which would otherwise be inaccessible, "
"rather than local variables that appear in the function’s scope."
msgstr ""
"Le langage du contrat Starknet prend en charge ces opérations en utilisant "
"des appels système. Les appels système permettent à un contrat d'exiger des "
"services du système d'exploitation Starknet. Vous pouvez utiliser des appels "
"système dans une fonction pour obtenir des informations qui dépendent de "
"l'état plus large de Starknet, qui autrement serait inaccessible, plutôt que "
"des variables locales qui apparaissent dans la portée de la fonction."

#: src/appendix-08-system-calls.md:9
msgid "Here is a list of the system calls available in Cairo 1.0:"
msgstr "Voici une liste des appels système disponibles au Caire 1.0:"

#: src/appendix-08-system-calls.md:11
msgid "[get_block_hash](#get_block_hash)"
msgstr "[get_block_hash](#get_block_hash)"

#: src/appendix-08-system-calls.md:12
msgid "[get_execution_info](#get_execution_info)"
msgstr "[get_execution_info](#get_execution_info)"

#: src/appendix-08-system-calls.md:13
msgid "[call_contract](#call_contract)"
msgstr "[contrat d'appel] (#contrat d'appel)"

#: src/appendix-08-system-calls.md:14
msgid "[deploy](#deploy)"
msgstr "[déploiement] (#déploiement)"

#: src/appendix-08-system-calls.md:15
msgid "[emit_event](#emit_event)"
msgstr "[emit_event](#emit_event)"

#: src/appendix-08-system-calls.md:16
msgid "[library_call](#library_call)"
msgstr "[appel_bibliothèque] (#appel_bibliothèque)"

#: src/appendix-08-system-calls.md:17
msgid "[send_message_to_L1](#send_message_to_l1)"
msgstr "[send_message_to_L1](#send_message_to_l1)"

#: src/appendix-08-system-calls.md:18
msgid "[replace_class](#replace_class)"
msgstr "[remplacer_classe](#remplace_classe)"

#: src/appendix-08-system-calls.md:19
msgid "[storage_read](#storage_read)"
msgstr "[Lisez_stockage](#Lisez_stockage)"

#: src/appendix-08-system-calls.md:20
msgid "[storage_write](#storage_write)"
msgstr "[storage_write](#storage_write)"

#: src/appendix-08-system-calls.md:22
msgid "`get_block_hash`"
msgstr "`get_block_hash`"

#: src/appendix-08-system-calls.md:24 src/appendix-08-system-calls.md:51
#: src/appendix-08-system-calls.md:79 src/appendix-08-system-calls.md:117
#: src/appendix-08-system-calls.md:153 src/appendix-08-system-calls.md:198
#: src/appendix-08-system-calls.md:230 src/appendix-08-system-calls.md:273
#: src/appendix-08-system-calls.md:305 src/appendix-08-system-calls.md:348
msgid "Syntax"
msgstr "Syntaxe"

#: src/appendix-08-system-calls.md:32 src/appendix-08-system-calls.md:59
#: src/appendix-08-system-calls.md:87 src/appendix-08-system-calls.md:128
#: src/appendix-08-system-calls.md:161 src/appendix-08-system-calls.md:206
#: src/appendix-08-system-calls.md:238 src/appendix-08-system-calls.md:281
#: src/appendix-08-system-calls.md:313 src/appendix-08-system-calls.md:356
msgid "Description"
msgstr "Désignation des marchandises"

#: src/appendix-08-system-calls.md:34
msgid ""
"Gets the hash of a specific StarkNet block within the range of "
"`[first_v0_12_0_block, current_block - 10]`."
msgstr ""
"Get le hash d'un bloc spécifique StarkNet dans la plage de "
"`[first_v0_12_0_block, current_block - 10]`."

#: src/appendix-08-system-calls.md:36 src/appendix-08-system-calls.md:69
#: src/appendix-08-system-calls.md:103 src/appendix-08-system-calls.md:139
#: src/appendix-08-system-calls.md:173 src/appendix-08-system-calls.md:220
#: src/appendix-08-system-calls.md:252 src/appendix-08-system-calls.md:295
#: src/appendix-08-system-calls.md:327 src/appendix-08-system-calls.md:372
msgid "Return Values"
msgstr "Valeurs de retour"

#: src/appendix-08-system-calls.md:38
msgid "Returns the hash of the given block."
msgstr "Renvoie le hash du bloc donné."

#: src/appendix-08-system-calls.md:40
msgid "Error Messages"
msgstr "Messages d'erreur"

#: src/appendix-08-system-calls.md:42
msgid ""
"`Block number out of range`: `block_number` is greater than "
"_`current_block`_`- 10`."
msgstr ""
"`Block number out of range`: `block_number` est plus grand que "
"_`current_block`_`- 10`."

#: src/appendix-08-system-calls.md:43
msgid "`0`: `block_number` is less than the first block number of v0.12.0."
msgstr ""
"`0`: `block_number` est inférieur au premier numéro de bloc de v0.12.0."

#: src/appendix-08-system-calls.md:45 src/appendix-08-system-calls.md:73
#: src/appendix-08-system-calls.md:107 src/appendix-08-system-calls.md:147
#: src/appendix-08-system-calls.md:192 src/appendix-08-system-calls.md:224
#: src/appendix-08-system-calls.md:267 src/appendix-08-system-calls.md:299
#: src/appendix-08-system-calls.md:342 src/appendix-08-system-calls.md:376
msgid "Common Library"
msgstr "Bibliothèque commune"

#: src/appendix-08-system-calls.md:47
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/0c882679fdb24a818cad19f2c18decbf6ef66153/corelib/src/starknet/syscalls."
"cairo#L37)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/0c882679fdb24a818cad19f2c18decbf6ef66153/corelib/src/starknet/syscalls."
"cairo#L37)"

#: src/appendix-08-system-calls.md:49
msgid "`get_execution_info`"
msgstr "`get_execution_info`"

#: src/appendix-08-system-calls.md:61
msgid "Gets information about the original transaction."
msgstr "Obtient des informations sur la transaction initiale."

#: src/appendix-08-system-calls.md:63
msgid ""
"In Cairo 1.0, all block/transaction/execution context getters are batched "
"into this single system call."
msgstr ""
"Au Caire 1.0, tous les getters de contexte bloc/transaction/exécution sont "
"regroupés dans cet appel système unique."

#: src/appendix-08-system-calls.md:65 src/appendix-08-system-calls.md:97
#: src/appendix-08-system-calls.md:132 src/appendix-08-system-calls.md:167
#: src/appendix-08-system-calls.md:212 src/appendix-08-system-calls.md:246
#: src/appendix-08-system-calls.md:291 src/appendix-08-system-calls.md:321
#: src/appendix-08-system-calls.md:364
msgid "Arguments"
msgstr "Arguments"

#: src/appendix-08-system-calls.md:67 src/appendix-08-system-calls.md:175
#: src/appendix-08-system-calls.md:254 src/appendix-08-system-calls.md:297
#: src/appendix-08-system-calls.md:374
msgid "None."
msgstr "Aucune."

#: src/appendix-08-system-calls.md:71
msgid ""
"Returns a [struct](https://github.com/starkware-libs/cairo/blob/"
"efbf69d4e93a60faa6e1363fd0152b8fcedbb00a/corelib/src/starknet/info.cairo#L8) "
"containing the execution info."
msgstr ""
"Retourne une [struct](https://github.com/starkware-libs/cairo/blob/"
"efbf69d4e93a60faa6e1363fd0152b8fcedbb00a/corelib/src/starknet/info.cairo#L8) "
"contenant les informations d'exécution."

#: src/appendix-08-system-calls.md:75
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L35)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L35)"

#: src/appendix-08-system-calls.md:77
msgid "`call_contract`"
msgstr "`appel_contrat`"

#: src/appendix-08-system-calls.md:89
msgid ""
"Calls a given contract. This system call expects the address of the called "
"contract, a selector for a function within that contract, and call arguments."
msgstr ""
"Appele un contrat donné. Cet appel système s'attend à l'adresse du contrat "
"appelé, un sélecteur pour une fonction dans ce contrat, et appel arguments."

#: src/appendix-08-system-calls.md:91 src/appendix-08-system-calls.md:285
msgid "**Note:**"
msgstr "**Note :**"

#: src/appendix-08-system-calls.md:93
msgid ""
"An internal call can’t return Err(\\_) as this is not handled by the "
"sequencer and the Starknet OS."
msgstr ""
"Un appel interne ne peut pas renvoyer Err(\\_) car cela n'est pas géré par "
"le séquenceur et le système d'exploitation Starknet."

#: src/appendix-08-system-calls.md:95
msgid ""
"If call_contract_syscall fails, this can’t be caught and will therefore "
"result in the entire transaction being reverted."
msgstr ""
"Si call_contract_syscall échoue, cela ne peut pas être pris et entraînera "
"donc le retour de toute la transaction."

#: src/appendix-08-system-calls.md:99
msgid "_`address`_: The address of the contract you want to call."
msgstr "_`address`_: L'adresse du contrat que vous souhaitez appeler."

#: src/appendix-08-system-calls.md:100
msgid ""
"_`entry_point_selector`_: A selector for a function within that contract, "
"can be computed with the `selector!` macro."
msgstr ""
"_`entry_point_selector`_: Un sélecteur pour une fonction dans ce contrat, "
"peut être calculé avec la macro `selector!`."

#: src/appendix-08-system-calls.md:101
msgid "_`calldata`_: The calldata array."
msgstr "_`calldata`_: Le tableau calldata."

#: src/appendix-08-system-calls.md:105 src/appendix-08-system-calls.md:222
msgid "The call response, of type `SyscallResult<Span<felt252>>`."
msgstr "La réponse à l'appel, de type `SyscallResult<Span<felt252>>`."

#: src/appendix-08-system-calls.md:109
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L10)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L10)"

#: src/appendix-08-system-calls.md:111
msgid ""
"**Note:** This is considered a lower-level syntax for calling contracts. If "
"the interface of the called contract is available, then you can use a more "
"straightforward syntax."
msgstr ""
"**Note:** Ceci est considéré comme une syntaxe de niveau inférieur pour les "
"appels de contrats. Si l'interface du contrat appelé est disponible, alors "
"vous pouvez utiliser une syntaxe plus simple."

#: src/appendix-08-system-calls.md:115
msgid "`deploy`"
msgstr "\"déploiement\""

#: src/appendix-08-system-calls.md:130
msgid "Deploys a new instance of a previously declared class."
msgstr "Déploye une nouvelle instance d'une classe précédemment déclarée."

#: src/appendix-08-system-calls.md:134
msgid "_`class_hash`_: The class hash of the contract to be deployed."
msgstr "_`class_hash`_: Le hachage de classe du contrat à déployer."

#: src/appendix-08-system-calls.md:135
msgid ""
"_`contract_address_salt`_: The salt, an arbitrary value provided by the "
"sender. It is used in the computation of the contract’s address."
msgstr ""
"_`contract_address_salt`_: Le sel, une valeur arbitraire fournie par "
"l'expéditeur. Il est utilisé dans le calcul de l'adresse du contrat."

#: src/appendix-08-system-calls.md:136
msgid "_`calldata`_: The constructor’s calldata. An array of felts."
msgstr "_`calldata`_: Le constructeur='s calldata. Un tableau de feutres."

#: src/appendix-08-system-calls.md:137
msgid ""
"_`deploy_from_zero`_: A flag used for the contract address computation. If "
"not set, the caller address will be used as the new contract’s deployer "
"address, otherwise 0 is used."
msgstr ""
"_`deploy_from_zero`_: Un drapeau utilisé pour le calcul de l'adresse du "
"contrat. Si ce n'est pas défini, l'adresse de l'appelant sera utilisée comme "
"nouvelle adresse de déploiement du contrat, sinon 0 est utilisé."

#: src/appendix-08-system-calls.md:141
msgid "A tuple wrapped with SyscallResult where:"
msgstr "Un tuple enroulé avec SyscallResult où:"

#: src/appendix-08-system-calls.md:143
msgid ""
"The first element is the address of the deployed contract, of type "
"`ContractAddress`."
msgstr ""
"Le premier élément est l'adresse du contrat déployé, de type "
"\"ContractAddress\"."

#: src/appendix-08-system-calls.md:145
msgid ""
"The second element is the response array from the contract’s constructor, of "
"type `Span::<felt252>`."
msgstr ""
"Le deuxième élément est le tableau de réponse du constructeur du contrat, de "
"type `Span::<felt252>`."

#: src/appendix-08-system-calls.md:149
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/4821865770ac9e57442aef6f0ce82edc7020a4d6/corelib/src/starknet/syscalls."
"cairo#L22)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/4821865770ac9e57442aef6f0ce82edc7020a4d6/corelib/src/starknet/syscalls."
"cairo#L22)"

#: src/appendix-08-system-calls.md:151
msgid "`emit_event`"
msgstr "`emit_event`"

#: src/appendix-08-system-calls.md:163
msgid "Emits an event with a given set of keys and data."
msgstr "Emit un événement avec un ensemble donné de clés et de données."

#: src/appendix-08-system-calls.md:165
msgid ""
"For more information and a higher-level syntax for emitting events, see "
"[Starknet events](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/starknet-events/)."
msgstr ""
"Pour plus d'informations et une syntaxe de niveau supérieur pour émettre des "
"événements, voir [Events Starknet](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/starknet-events/)."

#: src/appendix-08-system-calls.md:169
msgid ""
"_`keys`_: The event’s keys. These are analogous to Ethereum’s event topics, "
"you can use the starknet_getEvents method to filter by these keys."
msgstr ""
"_`keys`_: Les touches event='s. Elles sont analogues aux sujets event "
"Ethereum='s, vous pouvez utiliser la méthode starknet_getEvents pour filtrer "
"par ces touches."

#: src/appendix-08-system-calls.md:171
msgid "_`data`_: The event’s data."
msgstr "_`data`_: Les données de l'événement."

#: src/appendix-08-system-calls.md:179
msgid ""
"The following example emits an event with two keys, the strings `status` and "
"`deposit` and three data elements: `1`, `2`, and `3`."
msgstr ""
"L'exemple suivant émet un événement avec deux touches, les chaînes `status` "
"et `dépôt` et trois éléments de données: `1`, `2` et `3`."

#: src/appendix-08-system-calls.md:194
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L30)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L30)"

#: src/appendix-08-system-calls.md:196
msgid "`library_call`"
msgstr "`library_call`"

#: src/appendix-08-system-calls.md:208
msgid ""
"Calls the requested function in any previously declared class. The class is "
"only used for its logic."
msgstr ""
"Appelle la fonction demandée dans n'importe quelle classe précédemment "
"déclarée. La classe n'est utilisée que pour sa logique."

#: src/appendix-08-system-calls.md:210
msgid ""
"This system call replaces the known delegate call functionality from "
"Ethereum, with the important difference that there is only one contract "
"involved."
msgstr ""
"Cet appel système remplace la fonctionnalité connue d'appel délégué de "
"Ethereum, avec la différence importante qu'il n'y a qu'un seul contrat en "
"cause."

#: src/appendix-08-system-calls.md:214
msgid "_`class_hash`_: The hash of the class you want to use."
msgstr "_`class_hash`_: Le hachage de la classe que vous voulez utiliser."

#: src/appendix-08-system-calls.md:216
msgid ""
"_`function_selector`_: A selector for a function within that class, can be "
"computed with the `selector!` macro."
msgstr ""
"_`fonction_selector`_: Un sélecteur pour une fonction dans cette classe, "
"peut être calculé avec la macro `selector!`."

#: src/appendix-08-system-calls.md:218
msgid "_`calldata`_: The calldata."
msgstr "_`calldata`_: Les calldata."

#: src/appendix-08-system-calls.md:226
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L43)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L43)"

#: src/appendix-08-system-calls.md:228
msgid "`send_message_to_L1`"
msgstr "`send_message_to_L1`"

#: src/appendix-08-system-calls.md:240
msgid "Sends a message to L1."
msgstr "Envoie un message à L1."

#: src/appendix-08-system-calls.md:242
msgid ""
"This system call includes the message parameters as part of the proof’s "
"output and exposes these parameters to the `StarknetCore` contract on L1 "
"once the state update, including the transaction, is received."
msgstr ""
"Cet appel système inclut les paramètres de message dans le cadre de la "
"sortie de proof-S et expose ces paramètres au contrat `StarknetCore` sur L1 "
"une fois que la mise à jour de l'état, y compris la transaction, est reçue."

#: src/appendix-08-system-calls.md:244
msgid ""
"For more information, see Starknet’s [messaging mechanism](https://docs."
"starknet.io/documentation/architecture_and_concepts/Network_Architecture/"
"messaging-mechanism/)."
msgstr ""
"Pour plus d'informations, voir Starknets [mécanisme de messagerie] (https://"
"docs.starknet.io/documentation/architecture_and_concepts/"
"Network_Architecture/messaging-mechanism/)."

#: src/appendix-08-system-calls.md:248
msgid "_`to_address`_: The recipient’s L1 address."
msgstr "_`to_address`_: L'adresse L1 du destinataire."

#: src/appendix-08-system-calls.md:250
msgid "_`payload`_: The array containing the message payload."
msgstr "_`payload`_: Le tableau contenant la charge utile du message."

#: src/appendix-08-system-calls.md:258
msgid ""
"The following example sends a message whose content is `(1,2)` to the L1 "
"contract whose address is `3423542542364363`."
msgstr ""
"L'exemple suivant envoie un message dont le contenu est `(1,2)` au contrat "
"L1 dont l'adresse est `3423542542364363`."

#: src/appendix-08-system-calls.md:269
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L51)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L51)"

#: src/appendix-08-system-calls.md:271
msgid "`replace_class`"
msgstr "`remplacer_classe`"

#: src/appendix-08-system-calls.md:283
msgid ""
"Once `replace_class` is called, the class of the calling contract (i.e. the "
"contract whose address is returned by `get_contract_address` at the time the "
"syscall is called) will be replaced by the class whose hash is given by the "
"class_hash argument."
msgstr ""
"Une fois que `replace_class` est appelé, la classe du contrat d'appel (c'est-"
"à-dire le contrat dont l'adresse est retournée par `get_contract_address` au "
"moment où le syscall est appelé) sera remplacée par la classe dont le hash "
"est donné par l'argument class_hash."

#: src/appendix-08-system-calls.md:287
msgid ""
"After calling `replace_class`, the code currently executing from the old "
"class will finish running."
msgstr ""
"Après avoir appelé `remplace_class`, le code en cours d'exécution à partir "
"de l'ancienne classe finira en cours d'exécution."

#: src/appendix-08-system-calls.md:289
msgid ""
"The new class will be used from the next transaction onwards or if the "
"contract is called via the `call_contract` syscall in the same transaction "
"(after the replacement)."
msgstr ""
"La nouvelle classe sera utilisée à partir de la prochaine transaction ou si "
"le contrat est appelé via le syscall `call_contract` dans la même "
"transaction (après le remplacement)."

#: src/appendix-08-system-calls.md:293
msgid "_`class_hash`_: The hash of the class you want to use as a replacement."
msgstr ""
"_`class_hash`_: Le hachage de la classe que vous voulez utiliser comme "
"remplacement."

#: src/appendix-08-system-calls.md:301
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L77)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L77)"

#: src/appendix-08-system-calls.md:303
msgid "`storage_read`"
msgstr "`stockage_read`"

#: src/appendix-08-system-calls.md:315
msgid "Gets the value of a key in the storage of the calling contract."
msgstr "Obtient la valeur d'une clé dans le stockage du contrat d'appel."

#: src/appendix-08-system-calls.md:317
msgid ""
"This system call provides direct access to any possible key in storage, in "
"contrast with `var.read()`, which enables you to read storage variables that "
"are defined explicitly in the contract."
msgstr ""
"Cet appel système fournit un accès direct à toute clé possible dans le "
"stockage, contrairement à `var.read()`, qui vous permet de lire les "
"variables de stockage qui sont définies explicitement dans le contrat."

#: src/appendix-08-system-calls.md:319 src/appendix-08-system-calls.md:362
msgid ""
"For information on accessing storage by using the storage variables, see "
"[storage variables](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/contract-storage/"
"#storage_variables)."
msgstr ""
"Pour plus d'informations sur l'accès au stockage en utilisant les variables "
"de stockage, voir [variables de stockage] (https://docs.starknet.io/"
"documentation/architecture_and_concepts/Smart_Contracts/contract-stockage/"
"#storage_variables)."

#: src/appendix-08-system-calls.md:323 src/appendix-08-system-calls.md:366
msgid ""
"_`address_domain`_: The domain of the key, used to separate between "
"different data availability modes. This separation is used in Starknet to "
"offer different data availability modes. Currently, only the onchain mode "
"(where all updates go to L1), indicated by domain `0`, is supported. Other "
"address domains which will be introduced in the future will behave "
"differently in terms of publication (in particular, they will not be posted "
"on L1, creating a tradeoff between cost and security)."
msgstr ""
"_`address_domain`_: Le domaine de la clé, utilisé pour séparer les "
"différents modes de disponibilité des données. Cette séparation est utilisée "
"dans Starknet pour offrir différents modes de disponibilité des données. "
"Actuellement, seul le mode onchain (où toutes les mises à jour vont à L1), "
"indiqué par le domaine `0`, est supporté. D'autres domaines d'adresses qui "
"seront introduits dans le futur se comporteront différemment en termes de "
"publication (en particulier, ils ne seront pas affichés sur L1, créant un "
"compromis entre coût et sécurité)."

#: src/appendix-08-system-calls.md:325 src/appendix-08-system-calls.md:368
msgid "_`address`_: The requested storage address."
msgstr "_`adresse`_: L'adresse de stockage demandée."

#: src/appendix-08-system-calls.md:329
msgid "The value of the key, of type `SyscallResult<felt252>`."
msgstr "La valeur de la clé, de type `SyscallResult<felt252>`."

#: src/appendix-08-system-calls.md:344
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L60)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L60)"

#: src/appendix-08-system-calls.md:346
msgid "`storage_write`"
msgstr "`storage_write`"

#: src/appendix-08-system-calls.md:358
msgid "Sets the value of a key in the storage of the calling contract."
msgstr "Définit la valeur d'une clé dans le stockage du contrat d'appel."

#: src/appendix-08-system-calls.md:360
msgid ""
"This system call provides direct access to any possible key in storage, in "
"contrast with `var.write()`, which enables you to write to storage variables "
"that are defined explicitly in the contract."
msgstr ""
"Cet appel système fournit un accès direct à toute clé possible dans le "
"stockage, contrairement à `var.write()`, qui vous permet d'écrire sur des "
"variables de stockage qui sont définies explicitement dans le contrat."

#: src/appendix-08-system-calls.md:370
msgid "_`value`_: The value to write to the key."
msgstr "_`value`_: La valeur à écrire à la clé."

#: src/appendix-08-system-calls.md:378
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L70)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L70)"

#~ msgid "\"result is not 4\""
#~ msgstr "\"le résultat n'est pas 4\""

#~ msgid "First of all, add the following code in your _lib.cairo_ file:"
#~ msgstr ""
#~ "Tout d'abord, ajoutez le code suivant dans votre fichier _lib.cairo_ :"

#~ msgid ""
#~ "Note that we still need to use the `#[cfg(test)]` attribute here, because "
#~ "we are in the _lib.cairo_ file of the _src_ directory. Then, create a "
#~ "_tests.cairo_ file and fill it as follows:"
#~ msgstr ""
#~ "Notez que nous avons encore besoin d'utiliser l'attribut `#[cfg(test)]` "
#~ "ici, parce que nous sommes dans le fichier _lib.cairo_ du répertoire "
#~ "_src_. Ensuite, créez un fichier _tests.cairo_ et remplissez-le comme "
#~ "suit:"

#~ msgid ""
#~ "The result of the tests is the same as what we've been seeing: one line "
#~ "for each test."
#~ msgstr ""
#~ "Le résultat des tests est le même que ce que nous avons vu : une ligne "
#~ "pour chaque test."
