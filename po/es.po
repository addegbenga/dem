#
msgid ""
msgstr ""
"Project-Id-Version: The Cairo Programming Language\n"
"POT-Creation-Date: 2024-07-01T00:37:38+01:00\n"
"PO-Revision-Date: 2023-06-26 00:08+0100\n"
"Last-Translator: dami <pinonesdamian@gmail.com>\n"
"Language-Team: es <es@example.com>\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 3.3.1\n"

#: src/SUMMARY.md src/title-page.md
msgid "The Cairo Book"
msgstr "El libro de El Cairo"

#: src/SUMMARY.md
msgid "The Cairo Book Foreword Introduction"
msgstr "Introducción al prólogo del libro de El Cairo"

#: src/SUMMARY.md
msgid "The Cairo Programming Language"
msgstr "El lenguaje de programación de El Cairo"

#: src/SUMMARY.md src/ch01-00-getting-started.md
msgid "Getting Started"
msgstr "Comenzando"

#: src/SUMMARY.md src/ch01-01-installation.md:1 src/ch01-01-installation.md:22
msgid "Installation"
msgstr "Instalación"

#: src/SUMMARY.md
msgid "Hello, World!"
msgstr "¡Hola, Mundo!"

#: src/SUMMARY.md src/ch02-00-common-programming-concepts.md
msgid "Common Programming Concepts"
msgstr "Conceptos comunes de programación"

#: src/SUMMARY.md src/ch02-01-variables-and-mutability.md:1
msgid "Variables and Mutability"
msgstr "Variables y mutabilidad"

#: src/SUMMARY.md src/ch02-02-data-types.md:1
msgid "Data Types"
msgstr "Tipos de datos"

#: src/SUMMARY.md src/ch02-03-functions.md:1
msgid "Functions"
msgstr "Funciones"

#: src/SUMMARY.md src/ch02-04-comments.md:1
msgid "Comments"
msgstr "Observaciones"

#: src/SUMMARY.md src/ch02-05-control-flow.md:1
msgid "Control Flow"
msgstr "Flujo de control"

#: src/SUMMARY.md src/ch03-00-common-collections.md
msgid "Common Collections"
msgstr "Colecciones comunes"

#: src/SUMMARY.md src/ch03-01-arrays.md:1
msgid "Arrays"
msgstr "Arrays"

#: src/SUMMARY.md src/ch03-02-dictionaries.md:1
msgid "Dictionaries"
msgstr "Diccionarios"

#: src/SUMMARY.md
msgid "Understanding Ownership"
msgstr "Comprensión de la propiedad"

#: src/SUMMARY.md
msgid "What is Ownership?"
msgstr "¿Qué es la propiedad?"

#: src/SUMMARY.md src/ch04-02-references-and-snapshots.md:1
msgid "References and Snapshots"
msgstr "Referencias e instantáneas"

#: src/SUMMARY.md src/ch05-00-using-structs-to-structure-related-data.md
msgid "Using Structs to Structure Related Data"
msgstr "Usando Estructuras para Estructurar Datos Relacionados"

#: src/SUMMARY.md src/ch05-01-defining-and-instantiating-structs.md:1
msgid "Defining and Instantiating Structs"
msgstr "Definición e instantánea de estructuras"

#: src/SUMMARY.md src/ch05-02-an-example-program-using-structs.md:1
msgid "An Example Program Using Structs"
msgstr "Un programa de ejemplo que utiliza estructuras"

#: src/SUMMARY.md src/ch05-03-method-syntax.md:1
msgid "Method Syntax"
msgstr "Sintaxis del método"

#: src/SUMMARY.md src/ch06-00-enums-and-pattern-matching.md
msgid "Enums and Pattern Matching"
msgstr "Enumes y coincidencia de patrones"

#: src/SUMMARY.md src/ch06-01-enums.md:1 src/ch08-01-generic-data-types.md:181
msgid "Enums"
msgstr "Enumes"

#: src/SUMMARY.md src/ch06-02-the-match-control-flow-construct.md:1
msgid "The Match Control Flow Construct"
msgstr "La construcción de flujo de control de coincidencia"

#: src/SUMMARY.md
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:1
msgid "Concise Control Flow with `if let` and `while let`"
msgstr ""
"Control conciso del flujo con `si lo permites` y `mientras lo permites`"

#: src/SUMMARY.md
#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid "Managing Cairo Projects with Packages, Crates and Modules"
msgstr "Gestión de proyectos de El Cairo con paquetes, cajas y módulos"

#: src/SUMMARY.md src/ch07-01-packages-and-crates.md:1
msgid "Packages and Crates"
msgstr "Paquetes y dados"

#: src/SUMMARY.md src/ch07-02-defining-modules-to-control-scope.md:1
msgid "Defining Modules to Control Scope"
msgstr "Definir módulos para controlar el alcance"

#: src/SUMMARY.md
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:1
msgid "Paths for Referring to an Item in the Module Tree"
msgstr "Rutas para referirse a un elemento en el árbol del módulo"

#: src/SUMMARY.md
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:1
msgid "Bringing Paths into Scope with the `use` Keyword"
msgstr "Llevar los senderos al alcance con la palabra clave `usar`"

#: src/SUMMARY.md src/ch07-05-separating-modules-into-different-files.md:1
msgid "Separating Modules into Different Files"
msgstr "Separando módulos en diferentes archivos"

#: src/SUMMARY.md src/ch08-01-generic-data-types.md:1
msgid "Generic Data Types"
msgstr "Tipos de datos genéricos"

#: src/SUMMARY.md src/ch08-00-generic-types-and-traits.md
msgid "Generic Types and Traits"
msgstr "Tipos y rasgos genéricos"

#: src/SUMMARY.md src/ch08-02-traits-in-cairo.md:1
msgid "Traits in Cairo"
msgstr "Rasgos en El Cairo"

#: src/SUMMARY.md
msgid "Error Handling"
msgstr "Manejo de errores"

#: src/SUMMARY.md
msgid "Unrecoverable Errors with panic"
msgstr "Errores irrecuperables con pánico"

#: src/SUMMARY.md
msgid "Recoverable Errors with Result"
msgstr "Errores recuperables con resultado"

#: src/SUMMARY.md src/ch10-00-testing-cairo-programs.md
msgid "Testing Cairo Programs"
msgstr "Pruebas de los programas de El Cairo"

#: src/SUMMARY.md src/ch10-01-how-to-write-tests.md:1
msgid "How To Write Tests"
msgstr "Cómo escribir pruebas"

#: src/SUMMARY.md src/ch10-02-test-organization.md:1
msgid "Testing Organization"
msgstr "Organización de ensayos"

#: src/SUMMARY.md
msgid "Advanced Cairo Features"
msgstr "Características avanzadas de El Cairo"

#: src/SUMMARY.md src/ch11-01-custom-data-structures.md:1
msgid "Custom Data Structures"
msgstr "Estructuras de datos personalizadas"

#: src/SUMMARY.md src/ch11-02-smart-pointers.md:1
msgid "Smart Pointers"
msgstr "Smart Pointers"

#: src/SUMMARY.md src/ch11-03-operator-overloading.md:1
msgid "Operator Overloading"
msgstr "Sobrecarga del operador"

#: src/SUMMARY.md src/ch11-04-hash.md:24
msgid "Working with Hashes"
msgstr "Trabajar con Hashés"

#: src/SUMMARY.md src/ch11-05-macros.md:1
msgid "Macros"
msgstr "Macros"

#: src/SUMMARY.md src/ch11-06-inlining-in-cairo.md:1
msgid "Inlining in Cairo"
msgstr "Inlining en El Cairo"

#: src/SUMMARY.md src/ch11-08-printing.md:1
msgid "Printing"
msgstr "Impresión"

#: src/SUMMARY.md
msgid "Appendix (Cairo)"
msgstr "Apéndice (El Cairo)"

#: src/SUMMARY.md
msgid "A - Keywords"
msgstr "A - Palabras clave"

#: src/SUMMARY.md
msgid "B - Operators and Symbols"
msgstr "B - Operadores y símbolos"

#: src/SUMMARY.md
msgid "C - Derivable Traits"
msgstr "C - Rasgos derivados"

#: src/SUMMARY.md
msgid "D - The Cairo Prelude"
msgstr "D - El Preludio de El Cairo"

#: src/SUMMARY.md
msgid "E - Common Error Messages"
msgstr "E - Mensajes de error comunes"

#: src/SUMMARY.md
msgid "F - Useful Development Tools"
msgstr "F - Herramientas de desarrollo útiles"

#: src/SUMMARY.md
msgid "G - Installing Cairo binaries"
msgstr "G - Instalación de binarios en El Cairo"

#: src/SUMMARY.md
msgid "Smart Contracts in Cairo"
msgstr "Contratos inteligentes en El Cairo"

#: src/SUMMARY.md src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Introduction to Starknet Smart Contracts"
msgstr "Introducción a los contratos inteligentes de Starknet"

#: src/SUMMARY.md src/ch13-01-general-introduction-to-smart-contracts.md:1
msgid "General Introduction to Smart Contracts"
msgstr "Introducción general a los contratos inteligentes"

#: src/SUMMARY.md src/ch13-02-anatomy-of-a-simple-contract.md:1
msgid "Anatomy of a Simple Contract"
msgstr "Anatomía de un contrato sencillo"

#: src/SUMMARY.md src/ch14-00-building-starknet-smart-contracts.md
msgid "Building Starknet Smart Contracts"
msgstr "Construcción de contratos inteligentes Starknet"

#: src/SUMMARY.md src/ch14-01-contract-storage.md:1
msgid "Contract Storage"
msgstr "Almacenamiento de contratos"

#: src/SUMMARY.md src/ch14-02-contract-functions.md:1
msgid "Contract Functions"
msgstr "Funciones contractuales"

#: src/SUMMARY.md src/ch14-03-contract-events.md:1
msgid "Contract Events"
msgstr "Acontecimientos contractuales"

#: src/SUMMARY.md src/ch15-00-starknet-cross-contract-interactions.md
msgid "Starknet Cross-Contract Interactions"
msgstr "Interacciones cruzadas de Starknet"

#: src/SUMMARY.md src/ch15-01-abis-and-contract-interfaces.md:1
msgid "ABIs and Contract Interfaces"
msgstr "ABIs e interfaces contractuales"

#: src/SUMMARY.md
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:1
msgid "Contract Dispatchers, Library Dispatchers and System Calls"
msgstr ""
"Expedidores de contratos, despachadores de bibliotecas y llamadas al sistema"

#: src/SUMMARY.md src/ch16-00-building-advanced-starknet-smart-contracts.md
msgid "Building Advanced Starknet Smart Contracts"
msgstr "Construcción avanzada de contratos inteligentes Starknet"

#: src/SUMMARY.md src/ch16-01-optimizing-storage-costs.md:1
msgid "Optimizing Storage Costs"
msgstr "Optimización de los costos de almacenamiento"

#: src/SUMMARY.md
msgid "Composability and Components"
msgstr "Composibilidad y componentes"

#: src/SUMMARY.md
msgid "Under the Hood"
msgstr "Bajo el capó"

#: src/SUMMARY.md src/ch16-02-02-component-dependencies.md:1
msgid "Component Dependencies"
msgstr "Dependencias de los componentes"

#: src/SUMMARY.md src/ch16-02-03-testing-components.md:1
msgid "Testing Components"
msgstr "Componentes de ensayo"

#: src/SUMMARY.md
msgid "Upgradeability"
msgstr "Mejorabilidad"

#: src/SUMMARY.md
msgid "L1 \\<\\> L2 Messaging"
msgstr "L1  L2 Mensajería"

#: src/SUMMARY.md src/ch16-05-oracle-interactions.md:1
msgid "Oracle Interactions"
msgstr "Interacciones con Oracle"

#: src/SUMMARY.md src/ch16-05-01-price-feeds.md:1
msgid "Price Feeds"
msgstr "Precio de los piensos"

#: src/SUMMARY.md src/ch16-05-02-randomness.md:1
msgid "Randomness"
msgstr "Al azar"

#: src/SUMMARY.md src/ch16-06-00-other-examples.md:1
msgid "Other Examples"
msgstr "Otros ejemplos"

#: src/SUMMARY.md
msgid "Deploying and Interacting with a Voting Contract"
msgstr "Implementación e interacción con un contrato de votación"

#: src/SUMMARY.md src/ch17-00-starknet-smart-contracts-security.md
msgid "Starknet Smart Contracts Security"
msgstr "Starknet Smart Contracts Security"

#: src/SUMMARY.md src/ch17-01-general-recommendations.md:1
msgid "General Recommendations"
msgstr "Recomendaciones generales"

#: src/SUMMARY.md src/ch17-02-testing-smart-contracts.md:1
msgid "Testing Smart Contracts"
msgstr "Pruebas de contratos inteligentes"

#: src/SUMMARY.md src/ch17-03-static-analysis-tools.md:1
msgid "Static Analysis Tools"
msgstr "Herramientas de análisis estáticas"

#: src/SUMMARY.md
msgid "Formal Verification"
msgstr "Verificación formal"

#: src/SUMMARY.md src/appendix-00.md src/appendix-000.md
msgid "Appendix"
msgstr "Apéndice"

#: src/SUMMARY.md
msgid "Appendix (Starknet)"
msgstr "Apéndice (Starknet)"

#: src/SUMMARY.md
msgid "A - System Calls"
msgstr "A - Llamadas del sistema"

#: src/SUMMARY.md
msgid "Cairo VM"
msgstr "Cairo VM"

#: src/SUMMARY.md src/ch00-00-introduction.md src/ch200-introduction.md
msgid "Introduction"
msgstr "Introducción"

#: src/SUMMARY.md
msgid "Architecture"
msgstr "Arquitectura"

#: src/SUMMARY.md
msgid "Memory"
msgstr "Memoria"

#: src/SUMMARY.md
msgid "Non-Deterministic Read-only Memory"
msgstr "Memoria de sólo lectura no determinista"

#: src/SUMMARY.md
msgid "Segments"
msgstr "Segmentos"

#: src/SUMMARY.md
msgid "Segment Value"
msgstr "Valor del segmento"

#: src/SUMMARY.md
msgid "Relocation"
msgstr "Reubicación"

#: src/SUMMARY.md
msgid "Layout"
msgstr "Distribución"

#: src/SUMMARY.md
msgid "Execution Model"
msgstr "Modelo de ejecución"

#: src/SUMMARY.md
msgid "Registers"
msgstr "Registros"

#: src/SUMMARY.md
msgid "Instructions"
msgstr "Instrucciones"

#: src/SUMMARY.md
msgid "Cairo Assembly (CASM)"
msgstr "Asamblea de El Cairo (CASM)"

#: src/SUMMARY.md
msgid "State transition"
msgstr "Transición del Estado"

#: src/SUMMARY.md
msgid "Builtins"
msgstr "Builtins"

#: src/SUMMARY.md
msgid "Memory Communication"
msgstr "Comunicación de memoria"

#: src/SUMMARY.md
msgid "List of builtins"
msgstr "Lista de construcciones"

#: src/SUMMARY.md
msgid "Hints"
msgstr "Consejos"

#: src/SUMMARY.md
msgid "Structure"
msgstr "Estructura"

#: src/SUMMARY.md
msgid "Hint runner"
msgstr "Corredor de la pista"

#: src/SUMMARY.md
msgid "List of hints"
msgstr "Lista de sugerencias"

#: src/SUMMARY.md
msgid "Runner"
msgstr "Runner"

#: src/SUMMARY.md
msgid "Program"
msgstr "Programa"

#: src/SUMMARY.md
msgid "Program Artifacts"
msgstr "Artefactos del programa"

#: src/SUMMARY.md
msgid "Program Parsing"
msgstr "Análisis del programa"

#: src/SUMMARY.md
msgid "Runner Mode"
msgstr "Modo runner"

#: src/SUMMARY.md
msgid "Execution Mode"
msgstr "Modo de ejecución"

#: src/SUMMARY.md
msgid "Proof Mode"
msgstr "Modo de prueba"

#: src/SUMMARY.md
msgid "Output"
msgstr "Producto"

#: src/SUMMARY.md
msgid "Cairo PIE"
msgstr "El Cairo PIE"

#: src/SUMMARY.md
msgid "Memory File"
msgstr "Archivo de memoria"

#: src/SUMMARY.md
msgid "Trace file"
msgstr "Archivo de rastreo"

#: src/SUMMARY.md
msgid "AIR public input"
msgstr "Contribución pública de AIR"

#: src/SUMMARY.md
msgid "AIR private input"
msgstr "Entrada privada de AIR"

#: src/SUMMARY.md
msgid "Tracer"
msgstr "Tracer"

#: src/SUMMARY.md
msgid "Implementations"
msgstr "Ejecución"

#: src/SUMMARY.md
msgid "Resources"
msgstr "Recursos"

#: src/title-page.md
msgid ""
"By the Cairo Community and its [contributors](https://github.com/cairo-book/"
"cairo-book.github.io). Special thanks to [StarkWare](https://starkware.co/) "
"through [OnlyDust](https://www.onlydust.xyz/), and [Voyager](https://voyager."
"online/) for supporting the creation of this book."
msgstr ""
"Por la Comunidad de El Cairo y sus [contribuyentes](https://github.com/cairo-"
"book/cairo-book.github.io).Agradecimiento especial a [StarkWare](https://"
"starkware.co/) a través de [OnlyDust](https://www.onlydust.xyz/), y [Voyager]"
"(https://voyager.online/) por apoyar la creación de este libro."

#: src/title-page.md
msgid ""
"This version of the text assumes you’re using the [Cairo Compiler](https://"
"github.com/starkware-libs/cairo) [version 2.6.3](https://github.com/"
"starkware-libs/cairo/releases). See the [Installation](ch01-01-installation."
"md) section of Chapter 1 to install or update Cairo."
msgstr ""
"Esta versión del texto asume que está utilizando el [Compilador de El Cairo] "
"(https://github.com/starkware-libs/cairo) [versión 2.6.3] (https://github."
"com/starkware-libs/cairo/releases). Vea la sección [Instalación](ch01-01-"
"installation.md) del capítulo 1 para instalar o actualizar El Cairo."

#: src/title-page.md
msgid ""
"If you want to play around with Cairo code and see how it compiles into "
"Sierra (Intermediate Representation) and CASM (Cairo Assembly), you can use "
"[cairovm.codes](https://cairovm.codes/) playground."
msgstr ""
"Si quieres jugar con el código de El Cairo y ver cómo se compila en Sierra "
"(Representación Intermedia) y CASM (El Cairo Assembly), puedes usar [cairovm."
"codes](https://cairovm.codes/)."

#: src/ch00-01-foreword.md
msgid "Foreword"
msgstr "Prólogo"

#: src/ch00-01-foreword.md
msgid ""
"In 2020, StarkWare released Cairo 0, a Turing-complete programming language "
"supporting verifiable computation. Cairo started as an assembly language and "
"gradually became more expressive. The learning curve was initially steep, as "
"Cairo 0.x was a low-level language that did not entirely abstract the "
"underlying cryptographic primitives required to build a proof for the "
"execution of a program."
msgstr ""
"En 2020, StarkWare lanzó El Cairo 0, un lenguaje de programación completo "
"Turing que soporta la computación verificable. El Cairo comenzó como un "
"lenguaje ensamblador y gradualmente se volvió más expresivo. La curva de "
"aprendizaje fue inicialmente empinada, ya que El Cairo 0.x era un lenguaje "
"de bajo nivel que no abstraía completamente las primitivas criptográficas "
"subyacentes requeridas para construir una prueba para la ejecución de un "
"programa."

#: src/ch00-01-foreword.md
msgid ""
"With the release of Cairo 1, the developer experience has considerably "
"improved, abstracting away the underlying immutable memory model of the "
"Cairo architecture where possible. Strongly inspired by Rust, Cairo 1 has "
"been built to help you create provable programs without specific knowledge "
"of its underlying architecture so that you can focus on the program itself, "
"increasing the overall security of Cairo programs. Powered by a Rust VM, the "
"execution of Cairo programs is now _blazingly_ fast, allowing you to build "
"an extensive test suite without compromising on performance."
msgstr ""
"Con el lanzamiento de Cairo 1, la experiencia del desarrollador ha mejorado "
"considerablemente, abstrayendo el modelo de memoria inmutable subyacente de "
"la arquitectura de El Cairo siempre que sea posible. Fuertemente inspirado "
"en Rust, El Cairo 1 ha sido construido para ayudarle a crear programas "
"demostrables sin conocimiento específico de su arquitectura subyacente para "
"que pueda centrarse en el propio programa, aumentando la seguridad general "
"de los programas de El Cairo. Powered by a Rust VM, the ejecution of Cairo "
"programs is now _blazingly_ fast, lo que le permite construir una amplia "
"suite de pruebas sin comprometer el rendimiento."

#: src/ch00-01-foreword.md
msgid ""
"Blockchain developers that want to deploy contracts on Starknet will use the "
"Cairo programming language to code their smart contracts. This allows the "
"Starknet OS to generate execution traces for transactions to be proved by a "
"prover, which is then verified on Ethereum L1 prior to updating the state "
"root of Starknet."
msgstr ""
"Los desarrolladores de Blockchain que quieran implementar contratos en "
"Starknet utilizarán el lenguaje de programación de El Cairo para codificar "
"sus contratos inteligentes. Esto permite al sistema operativo Starknet "
"generar trazas de ejecución de transacciones para ser probadas por un "
"probador, que luego se verifica en Ethereum L1 antes de actualizar la raíz "
"de estado de Starknet."

#: src/ch00-01-foreword.md
msgid ""
"However, Cairo is not only for blockchain developers. As a general purpose "
"programming language, it can be used for any computation that would benefit "
"from being proved on one computer and verified on other machines with lower "
"hardware requirements."
msgstr ""
"Sin embargo, El Cairo no es sólo para desarrolladores de blockchain. Como un "
"lenguaje de programación de propósito general, se puede utilizar para "
"cualquier cálculo que se beneficiaría de ser probado en un ordenador y "
"verificado en otras máquinas con menores necesidades de hardware."

#: src/ch00-01-foreword.md
msgid ""
"This book is designed for developers with a basic understanding of "
"programming concepts. It is a friendly and approachable text intended to "
"help you level up your knowledge of Cairo, but also help you develop your "
"programming skills in general. So, dive in and get ready to learn all there "
"is to know about Cairo!"
msgstr ""
"Este libro está diseñado para desarrolladores con una comprensión básica de "
"los conceptos de programación. Es un texto amigable y accesible destinado a "
"ayudarle a nivelar sus conocimientos de El Cairo, pero también ayudarle a "
"desarrollar sus habilidades de programación en general. Por lo tanto, bucear "
"y prepararse para aprender todo lo que hay que saber sobre El Cairo!"

#: src/ch00-01-foreword.md
msgid "Acknowledgements"
msgstr "Agradecimientos"

#: src/ch00-01-foreword.md
msgid ""
"This book would not have been possible without the help of the Cairo "
"community. We would like to thank every contributor for their contributions "
"to this book!"
msgstr ""
"Este libro no habría sido posible sin la ayuda de la comunidad de El Cairo. "
"Nos gustaría dar las gracias a cada contribuyente por sus contribuciones a "
"este libro!"

#: src/ch00-01-foreword.md
msgid ""
"We would like to thank the Rust community for the [Rust Book](https://doc."
"rust-lang.org/book/), which has been a great source of inspiration for this "
"book. Many examples and explanations have been adapted from the Rust Book to "
"fit the Cairo programming language, as the two languages share many "
"similarities."
msgstr ""
"Nos gustaría dar las gracias a la comunidad Rust por el [Rust Book] (https://"
"doc.rust-lang.org/book/), que ha sido una gran fuente de inspiración para "
"este libro. Muchos ejemplos y explicaciones se han adaptado del Rust Book "
"para adaptarse al lenguaje de programación de El Cairo, ya que los dos "
"idiomas comparten muchas similitudes."

#: src/ch00-00-introduction.md
msgid "What is Cairo?"
msgstr "¿Qué es El Cairo?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo is a programming language designed for a virtual CPU of the same name. "
"The unique aspect of this processor is that it was not created for the "
"physical constraints of our world but for cryptographic ones, making it "
"capable of efficiently proving the execution of any program running on it. "
"This means that you can perform time consuming operations on a machine you "
"don't trust, and check the result very quickly on a cheaper machine. While "
"Cairo 0 used to be directly compiled to CASM, the Cairo CPU assembly, Cairo "
"1 is a higher level language. It first compiles to Sierra, an intermediate "
"representation of Cairo which will compile later down to a safe subset of "
"CASM. The point of Sierra is to ensure your CASM will always be provable, "
"even when the computation fails."
msgstr ""
"El Cairo es un lenguaje de programación diseñado para una CPU virtual del "
"mismo nombre. El aspecto único de este procesador es que no fue creado para "
"las limitaciones físicas de nuestro mundo, sino para las criptográficas, lo "
"que lo hace capaz de probar de manera eficiente la ejecución de cualquier "
"programa que se ejecuta en él. Esto significa que usted puede realizar "
"operaciones que consumen tiempo en una máquina en la que no confía, y "
"comprobar el resultado muy rápidamente en una máquina más barata. Mientras "
"El Cairo 0 solía ser compilado directamente a CASM, el conjunto de CPU de El "
"Cairo, El Cairo 1 es un lenguaje de nivel superior. Primero compila a "
"Sierra, una representación intermedia de El Cairo que se compilará más tarde "
"hasta un subconjunto seguro de CASM. El punto de Sierra es asegurar que su "
"CASM siempre será demostrable, incluso cuando el cálculo falla."

#: src/ch00-00-introduction.md
msgid "What Can you Do with It?"
msgstr "¿Qué puedes hacer con él?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo allows you to compute trustworthy values on untrusted machines. One "
"major usecase is Starknet, a solution to Ethereum scaling. Ethereum is a "
"decentralized blockchain platform that enables the creation of decentralized "
"applications where every single interaction between a user and a d-app is "
"verified by all the participants. Starknet is a Layer 2 built on top of "
"Ethereum. Instead of having all the participants of the network to verify "
"all user interactions, only one node, called the prover, executes the "
"programs and generates proofs that the computations were done correctly. "
"These proofs are then verified by an Ethereum smart contract, requiring "
"significantly less computational power compared to executing the "
"interactions themselves. This approach allows for increased throughput and "
"reduced transaction costs while preserving Ethereum security."
msgstr ""
"El Cairo le permite calcular valores confiables en máquinas no de confianza. "
"Un caso de uso importante es Starknet, una solución para escalar Ethereum. "
"Ethereum es una plataforma de blockchain descentralizada que permite la "
"creación de aplicaciones descentralizadas donde cada interacción entre un "
"usuario y una aplicación d es verificada por todos los participantes. "
"Starknet es una capa 2 construida encima de Ethereum. En lugar de tener "
"todos los participantes de la red para verificar todas las interacciones de "
"usuario, sólo un nodo, llamado el probador, ejecuta los programas y genera "
"pruebas de que los cálculos se hicieron correctamente. Estas pruebas son "
"verificadas por un contrato inteligente Ethereum, que requiere "
"significativamente menos potencia computacional en comparación con la "
"ejecución de las interacciones en sí. Este enfoque permite aumentar el "
"rendimiento y reducir los costos de transacción mientras se preserva la "
"seguridad de Ethereum."

#: src/ch00-00-introduction.md
msgid "What Are the Differences with Other Programming Languages?"
msgstr "¿Cuáles son las diferencias con otros idiomas de programación?"

#: src/ch00-00-introduction.md
msgid ""
"Cairo is quite different from traditional programming languages, especially "
"when it comes to overhead costs and its primary advantages. Your program can "
"be executed in two different ways:"
msgstr ""
"El Cairo es muy diferente de los lenguajes de programación tradicionales, "
"especialmente cuando se trata de gastos generales y sus principales "
"ventajas. Su programa se puede ejecutar de dos maneras diferentes:"

#: src/ch00-00-introduction.md
msgid ""
"When executed by the prover, it is similar to any other language. Because "
"Cairo is virtualized, and because the operations were not specifically "
"designed for maximum efficiency, this can lead to some performance overhead "
"but it is not the most relevant part to optimize."
msgstr ""
"Cuando se ejecuta por el probador, es similar a cualquier otro idioma. "
"Debido a que El Cairo está virtualizado, y debido a que las operaciones no "
"fueron diseñadas específicamente para la máxima eficiencia, esto puede "
"conducir a algunos gastos generales de rendimiento, pero no es la parte más "
"relevante para optimizar."

#: src/ch00-00-introduction.md
msgid ""
"When the generated proof is verified by a verifier, it is a bit different. "
"This has to be as cheap as possible since it could potentially be verified "
"on many very small machines. Fortunately verifying is faster than computing "
"and Cairo has some unique advantages to improve it even more. A notable one "
"is non-determinism. This is a topic you will cover in more detail later in "
"this book, but the idea is that you can theoretically use a different "
"algorithm for verifying than for computing. Currently, writing custom non-"
"deterministic code is not supported for the developers, but the standard "
"library leverages non-determinism for improved performance. For example "
"sorting an array in Cairo costs the same price as copying it. Because the "
"verifier doesn't sort the array, it just checks that it is sorted, which is "
"cheaper."
msgstr ""
"Cuando la prueba generada es verificada por un verificador, es un poco "
"diferente. Esto tiene que ser tan barato como sea posible ya que podría ser "
"verificado en muchas máquinas muy pequeñas. Afortunadamente verificar es más "
"rápido que la computación y El Cairo tiene algunas ventajas únicas para "
"mejorarlo aún más. Una notable es el no-determinismo. Este es un tema que "
"usted cubrirá en más detalle más adelante en este libro, pero la idea es que "
"se puede utilizar teóricamente un algoritmo diferente para verificar que "
"para la computación. Actualmente, la escritura de código personalizado no-"
"determinista no es compatible con los desarrolladores, pero la biblioteca "
"estándar aprovecha el no-determinismo para mejorar el rendimiento. Por "
"ejemplo, ordenar una matriz en El Cairo cuesta el mismo precio que copiarlo. "
"Debido a que el verificador no clasifica la matriz, sólo comprueba que está "
"clasificado, que es más barato."

#: src/ch00-00-introduction.md
msgid ""
"Another aspect that sets the language apart is its memory model. In Cairo, "
"memory access is immutable, meaning that once a value is written to memory, "
"it cannot be changed. Cairo 1 provides abstractions that help developers "
"work with these constraints, but it does not fully simulate mutability. "
"Therefore, developers must think carefully about how they manage memory and "
"data structures in their programs to optimize performance."
msgstr ""
"Otro aspecto que diferencia el lenguaje es su modelo de memoria. En El "
"Cairo, el acceso a la memoria es inmutable, lo que significa que una vez que "
"se escribe un valor a la memoria, no se puede cambiar. El Cairo 1 "
"proporciona abstracciones que ayudan a los desarrolladores a trabajar con "
"estas limitaciones, pero no simula completamente la mutabilidad. Por lo "
"tanto, los desarrolladores deben pensar cuidadosamente sobre cómo gestionan "
"la memoria y las estructuras de datos en sus programas para optimizar el "
"rendimiento."

#: src/ch00-00-introduction.md
msgid "References"
msgstr "Bibliografía"

#: src/ch00-00-introduction.md
msgid "Cairo CPU Architecture: <https://eprint.iacr.org/2021/1063>"
msgstr "El Cairo CPU Architecture: <https://eprint.iacr.org/2021/1063>"

#: src/ch00-00-introduction.md
msgid ""
"Cairo, Sierra and Casm: <https://medium.com/nethermind-eth/under-the-hood-of-"
"cairo-1-0-exploring-sierra-7f32808421f5>"
msgstr ""
"El Cairo, Sierra y Casm: <https://medium.com/nethermind-eth/under-the-hood-"
"of-cairo-1-0-exploring-sierra-7f32808421f5>"

#: src/ch00-00-introduction.md
msgid ""
"State of non determinism: <https://twitter.com/PapiniShahar/"
"status/1638203716535713798>"
msgstr ""
"Estado de no determinismo: <https://twitter.com/PapiniShahar/"
"status/1638203716535713798>"

#: src/ch01-00-getting-started.md
msgid ""
"Let’s start your Cairo journey! There’s a lot to learn, but every journey "
"starts somewhere. In this chapter, we’ll discuss:"
msgstr ""
"¡Comencemos tu viaje a El Cairo! Hay mucho que aprender, pero cada viaje "
"comienza en alguna parte. En este capítulo, vamos a discutir:"

#: src/ch01-00-getting-started.md
msgid ""
"Installing Scarb, which is Cairo's build toolchain and package manager, on "
"Linux, macOS, and Windows."
msgstr ""
"Instalar Scarb, que es la cadena de herramientas de compilación y gestor de "
"paquetes de El Cairo, en Linux, macOS y Windows."

#: src/ch01-00-getting-started.md
msgid "Writing a program that prints `Hello, world!`."
msgstr "Escribiendo un programa que imprime `¡Hola, mundo!`."

#: src/ch01-00-getting-started.md
msgid "Using basic Scarb commands to create a project and execute a program."
msgstr ""
"Usando comandos Scarb básicos para crear un proyecto y ejecutar un programa."

#: src/ch01-00-getting-started.md
msgid "Getting Help"
msgstr "Obtener ayuda"

#: src/ch01-00-getting-started.md
msgid ""
"If you have any questions about Starknet or Cairo, you can ask them in the "
"[Starknet Discord server](https://discord.gg/starknet-community). The "
"community is friendly and always willing to help."
msgstr ""
"Si tiene alguna pregunta sobre Starknet o El Cairo, puede preguntarles en el "
"[Servidor Starknet Discord] (https://discord.gg/starknet-community). La "
"comunidad es amable y siempre está dispuesta a ayudar."

#: src/ch01-00-getting-started.md
msgid "Interacting with the Cairo Chatbot"
msgstr "Interactuando con el Chatbot de El Cairo"

#: src/ch01-00-getting-started.md
msgid ""
"Cairo has its own chatbot, which can help you with Cairo-related questions. "
"The chatbot is trained on the Cairo book, and uses RAG to efficiently "
"retrieve information to provide help. You can find the chatbot on the [Cairo-"
"Chatbot](https://cairo-chatbot.vercel.app/) website."
msgstr ""
"El Cairo tiene su propio chatbot, que puede ayudarle con preguntas "
"relacionadas con El Cairo. El chatbot está entrenado en el libro de El "
"Cairo, y utiliza RAG para recuperar información de manera eficiente para "
"proporcionar ayuda. Usted puede encontrar el chatbot en el [El Cairo-"
"Chatbot] (https://cairo-chatbot.vercel.app/) sitio web."

#: src/ch01-01-installation.md:3
msgid ""
"Cairo can be installed by simply downloading [Scarb](https://docs.swmansion."
"com/scarb/docs). Scarb bundles the Cairo compiler and the Cairo language "
"server together in an easy-to-install package so that you can start writing "
"Cairo code right away."
msgstr ""
"El Cairo se puede instalar simplemente descargando [Scarb](https://docs."
"swmansion.com/scarb/docs). Scarb agrupa el compilador de El Cairo y el "
"servidor de idioma El Cairo en un paquete fácil de instalar para que pueda "
"empezar a escribir código El Cairo de inmediato."

#: src/ch01-01-installation.md:5
msgid ""
"Scarb is also Cairo's package manager and is heavily inspired by [Cargo]"
"(https://doc.rust-lang.org/cargo/), Rust’s build system and package manager."
msgstr ""
"Scarb es también el gestor de paquetes de El Cairo y está fuertemente "
"inspirado en [Cargo] (https://doc.rust-lang.org/cargo/), el gestor de "
"sistemas de construcción y paquetes de Rust."

#: src/ch01-01-installation.md:7
msgid ""
"Scarb handles a lot of tasks for you, such as building your code (either "
"pure Cairo or Starknet contracts), downloading the libraries your code "
"depends on, building those libraries, and provides LSP support for the "
"VSCode Cairo 1 extension."
msgstr ""
"Scarb se encarga de muchas tareas para usted, como la construcción de su "
"código (ya sea puro El Cairo o Starknet contratos), la descarga de las "
"bibliotecas de su código depende de, la construcción de esas bibliotecas, y "
"proporciona apoyo LSP para la extensión VSOde El Cairo 1."

#: src/ch01-01-installation.md:9
msgid ""
"As you write more complex Cairo programs, you might add dependencies, and if "
"you start a project using Scarb, managing external code and dependencies "
"will be a lot easier to do."
msgstr ""
"A medida que escriba programas más complejos de El Cairo, puede agregar "
"dependencias, y si comienza un proyecto usando Scarb, la gestión de código "
"externo y dependencias será mucho más fácil de hacer."

#: src/ch01-01-installation.md:11
msgid "Let's start by installing Scarb."
msgstr "Empecemos instalando Scarb."

#: src/ch01-01-installation.md:16
msgid "Installing Scarb"
msgstr "Instalación de Scarb"

#: src/ch01-01-installation.md:18
msgid "Requirements"
msgstr "Necesidades"

#: src/ch01-01-installation.md:20
msgid ""
"Scarb requires a Git executable to be available in the `PATH` environment "
"variable."
msgstr ""
"Scarb requiere un ejecutable Git para estar disponible en la variable de "
"entorno `PATH`."

#: src/ch01-01-installation.md:24
msgid ""
"To install Scarb, please refer to the [installation instructions](https://"
"docs.swmansion.com/scarb/download). We strongly recommend that you install "
"Scarb [via asdf](https://docs.swmansion.com/scarb/download.html#install-via-"
"asdf), a CLI tool that can manage multiple language runtime versions on a "
"per-project basis. This will ensure that the version of Scarb you use to "
"work on a project always matches the one defined in the project settings, "
"avoiding problems related to version mismatches."
msgstr ""
"Para instalar Scarb, consulte las instrucciones de instalación (https://docs."
"swmansion.com/scarb/download). Recomendamos encarecidamente que instale "
"Scarb [via asdf](https://docs.swmansion.com/scarb/download.html#install-via-"
"asdf), una herramienta CLI que puede gestionar versiones en múltiples "
"idiomas en tiempo de ejecución por proyecto. Esto asegurará que la versión "
"de Scarb que utilice para trabajar en un proyecto siempre coincida con la "
"definida en la configuración del proyecto, evitando problemas relacionados "
"con desajustes de versiones."

#: src/ch01-01-installation.md:28
msgid ""
"Please refer to the [asdf documentation](https://asdf-vm.com/guide/getting-"
"started.html) to install all prerequisites."
msgstr ""
"Consulte la documentación [asdf] (https://asdf-vm.com/guide/getting-started."
"html) para instalar todos los requisitos previos."

#: src/ch01-01-installation.md:30
msgid ""
"Once you have asdf installed locally, you can download Scarb plugin with the "
"following command:"
msgstr ""
"Una vez que haya instalado asdf localmente, puede descargar el plugin Scarb "
"con el siguiente comando:"

#: src/ch01-01-installation.md:36
msgid "This will allow you to download specific versions:"
msgstr "Esto le permitirá descargar versiones específicas:"

#: src/ch01-01-installation.md:42
msgid "and set a global version:"
msgstr "y establecer una versión global:"

#: src/ch01-01-installation.md:48
msgid ""
"Otherwise, you can simply run the following command in your terminal, and "
"follow the onscreen instructions. This will install the latest stable "
"release of Scarb."
msgstr ""
"De lo contrario, simplemente puede ejecutar el siguiente comando en su "
"terminal, y siga las instrucciones en pantalla. Esto instalará la última "
"versión estable de Scarb."

#: src/ch01-01-installation.md:51
msgid "'=https'"
msgstr "'=https'"

#: src/ch01-01-installation.md:68
msgid "Installing the VSCode Extension"
msgstr "Instalación de la extensión VSCode"

#: src/ch01-01-installation.md:70
msgid ""
"Cairo has a VSCode extension that provides syntax highlighting, code "
"completion, and other useful features. You can install it from the [VSCode "
"Marketplace](https://marketplace.visualstudio.com/items?itemName=starkware."
"cairo1). Once installed, go into the extension settings, and make sure to "
"tick the `Enable Language Server` and `Enable Scarb` options."
msgstr ""
"El Cairo tiene una extensión VSOde que proporciona resaltado de sintaxis, "
"terminación de código, y otras características útiles. Puede instalarlo "
"desde [VSOde Marketplace](https://marketplace.visualstudio.com/items?"
"itemName=starkware.cairo1). Una vez instalado, vaya a la configuración de la "
"extensión y asegúrese de marcar las opciones `Enable Language Server` y "
"`Enable Scarb`."

#: src/ch01-01-installation.md:75
msgid "{{#quiz ../quizzes/ch01-01-installation.toml}}"
msgstr "quiz../quizzes/ch01-01-instalación.toml"

#: src/ch01-02-hello-world.md:1
msgid "Hello, World"
msgstr "Hola, Mundo."

#: src/ch01-02-hello-world.md:3
msgid ""
"Now that you’ve installed Cairo through Scarb, it’s time to write your first "
"Cairo program. It’s traditional when learning a new language to write a "
"little program that prints the text `Hello, world!` to the screen, so we’ll "
"do the same here!"
msgstr ""
"Ahora que ha instalado El Cairo a través de Scarb, es hora de escribir su "
"primer programa de El Cairo. Es tradicional cuando se aprende un nuevo "
"idioma para escribir un pequeño programa que imprime el texto `Hola, mundo!` "
"a la pantalla, así que vamos a hacer lo mismo aquí!"

#: src/ch01-02-hello-world.md:7
msgid ""
"Note: This book assumes basic familiarity with the command line. Cairo makes "
"no specific demands about your editing or tooling or where your code lives, "
"so if you prefer to use an integrated development environment (IDE) instead "
"of the command line, feel free to use your favorite IDE. The Cairo team has "
"developed a VSCode extension for the Cairo language that you can use to get "
"the features from the language server and code highlighting. See [Appendix F]"
"(./appendix-06-useful-development-tools.md) for more details."
msgstr ""
"Nota: Este libro asume la familiaridad básica con la línea de comandos. El "
"Cairo no hace ninguna exigencia específica sobre su edición o herramientas o "
"dónde vive su código, por lo que si prefiere utilizar un entorno de "
"desarrollo integrado (IDE) en lugar de la línea de comandos, no dude en "
"utilizar su IDE favorito. El equipo de El Cairo ha desarrollado una "
"extensión de VSOde para el idioma El Cairo que puede utilizar para obtener "
"las características del servidor de idiomas y resaltado de código. Vea "
"[Apéndice F](./apéndice-06-useful-development-tools.md) para más detalles."

#: src/ch01-02-hello-world.md:17
msgid "Creating a Project Directory"
msgstr "Crear un directorio de proyectos"

#: src/ch01-02-hello-world.md:19
msgid ""
"You’ll start by making a directory to store your Cairo code. It doesn’t "
"matter to Cairo where your code lives, but for the exercises and projects in "
"this book, we suggest making a _cairo_projects_ directory in your home "
"directory and keeping all your projects there."
msgstr ""
"Usted comenzará por hacer un directorio para almacenar su código de El "
"Cairo. No importa a El Cairo donde vive su código, pero para los ejercicios "
"y proyectos en este libro, sugerimos hacer un directorio _cairo_projects_ en "
"su directorio personal y mantener todos sus proyectos allí."

#: src/ch01-02-hello-world.md:24
msgid ""
"Open a terminal and enter the following commands to make a _cairo_projects_ "
"directory."
msgstr ""
"Abra un terminal e introduzca los siguientes comandos para hacer un "
"directorio _cairo_projects_."

#: src/ch01-02-hello-world.md:26
msgid "For Linux, macOS, and PowerShell on Windows, enter this:"
msgstr "Para Linux, macOS y PowerShell en Windows, introduzca lo siguiente:"

#: src/ch01-02-hello-world.md:33
msgid "For Windows CMD, enter this:"
msgstr "Para Windows CMD, introduzca esto:"

#: src/ch01-02-hello-world.md:36 src/ch01-02-hello-world.md:37
msgid "\"%USERPROFILE%\\cairo_projects\""
msgstr "«%USERPROFILE%\\cairo_projects»"

#: src/ch01-02-hello-world.md:40
msgid ""
"Note: From now on, for each example shown in the book, we assume that you "
"will be working from a Scarb project directory. If you are not using Scarb, "
"and try to run the examples from a different directory, you might need to "
"adjust the commands accordingly or create a Scarb project."
msgstr ""
"Nota: A partir de ahora, para cada ejemplo que se muestra en el libro, "
"suponemos que trabajará desde un directorio de proyecto Scarb. Si no está "
"usando Scarb, e intenta ejecutar los ejemplos desde un directorio diferente, "
"es posible que tenga que ajustar los comandos en consecuencia o crear un "
"proyecto Scarb."

#: src/ch01-02-hello-world.md:43
msgid "Creating a Project with Scarb"
msgstr "Creación de un proyecto con cicatrices"

#: src/ch01-02-hello-world.md:45
msgid "Let’s create a new project using Scarb."
msgstr "Vamos a crear un nuevo proyecto usando Scarb."

#: src/ch01-02-hello-world.md:47
msgid ""
"Navigate to your _cairo_projects_ directory (or wherever you decided to "
"store your code). Then run the following:"
msgstr ""
"Navegue a su directorio _cairo_projects_ (o donde quiera que decida "
"almacenar su código). Luego ejecute lo siguiente:"

#: src/ch01-02-hello-world.md:53
msgid ""
"It creates a new directory and project called _hello_world_. We’ve named our "
"project _hello_world_, and Scarb creates its files in a directory of the "
"same name."
msgstr ""
"Crea un nuevo directorio y proyecto llamado _hello_world_. Hemos nombrado "
"nuestro proyecto _hello_world_, y Scarb crea sus archivos en un directorio "
"del mismo nombre."

#: src/ch01-02-hello-world.md:55
msgid ""
"Go into the _hello_world_ directory with the command `cd hello_world`. "
"You’ll see that Scarb has generated two files and one directory for us: a "
"_Scarb.toml_ file and a _src_ directory with a _lib.cairo_ file inside."
msgstr ""
"Entra en el directorio _hello_world_ con el comando `cd hello_world`. Verás "
"que Scarb ha generado dos archivos y un directorio para nosotros: un archivo "
"_Scarb.toml_ y un directorio _src_ con un archivo _lib.cairo_ dentro."

#: src/ch01-02-hello-world.md:57
msgid ""
"It has also initialized a new Git repository along with a `.gitignore` file"
msgstr ""
"También ha inicializado un nuevo repositorio Git junto con un archivo `."
"gitignore`"

#: src/ch01-02-hello-world.md:59
msgid ""
"Note: Git is a common version control system. You can stop using version "
"control system by using the `--no-vcs` flag. Run `scarb new --help` to see "
"the available options."
msgstr ""
"Nota: Git es un sistema de control de versiones común. Puede dejar de usar "
"el sistema de control de versiones utilizando el indicador `--no-vcs`. "
"Ejecute `scarb new --help` para ver las opciones disponibles."

#: src/ch01-02-hello-world.md:62
msgid ""
"Open _Scarb.toml_ in your text editor of choice. It should look similar to "
"the code in Listing 1-1."
msgstr ""
"Abrir _Scarb.toml_ en el editor de texto de su elección. Debe parecer "
"similar al código en Listado 1-1."

#: src/ch01-02-hello-world.md:64
msgid "<span class=\"filename\">Filename: Scarb.toml</span>"
msgstr "<span class=\"filename\">Filename: Scarb.toml</span>"

#: src/ch01-02-hello-world.md:66
msgid ""
"```toml\n"
"[package]\n"
"name = \"hello_world\"\n"
"version = \"0.1.0\"\n"
"edition = \"2023_11\"\n"
"\n"
"# See more keys and their definitions at https://docs.swmansion.com/scarb/"
"docs/reference/manifest\n"
"\n"
"[dependencies]\n"
"# foo = { path = \"vendor/foo\" }\n"
"```"
msgstr ""
"* Nombre del paquete = \"hello_world\" versión = \"0.1.0\" edición = "
"\"2023_11\" # Ver más claves y sus definiciones en https://docs.swmansion."
"com/scarb/docs/reference/manifest [dependencias] # foo = { path = \"vendor/"
"foo\" }"

#: src/ch01-02-hello-world.md:78
msgid ""
"<span class=\"caption\">Listing 1-1: Contents of _Scarb.toml_ generated by "
"`scarb new`</span>"
msgstr ""
"<span class=\"caption\">Lista 1-1: Contenido de _Scarb.toml_ generado por "
"`scarb new/span>"

#: src/ch01-02-hello-world.md:80
msgid ""
"This file is in the [TOML](https://toml.io/) (Tom’s Obvious, Minimal "
"Language) format, which is Scarb’s configuration format."
msgstr ""
"Este archivo está en el formato [TOML](https://toml.io/) (Tom Obvious, "
"Minimal Language), que es el formato de configuración de Scarb."

#: src/ch01-02-hello-world.md:82
msgid ""
"The first line, `[package]`, is a section heading that indicates that the "
"following statements are configuring a package. As we add more information "
"to this file, we’ll add other sections."
msgstr ""
"La primera línea, `[paquete]`, es un encabezado de sección que indica que "
"las siguientes instrucciones están configurando un paquete. A medida que "
"añadamos más información a este archivo, añadiremos otras secciones."

#: src/ch01-02-hello-world.md:84
msgid ""
"The next three lines set the configuration information Scarb needs to "
"compile your program: the name of the package and the version of Scarb to "
"use, and the edition of the prelude to use. The prelude is the collection of "
"the most commonly used items that are automatically imported into every "
"Cairo program. You can learn more about the prelude in [Appendix D](./"
"appendix-04-cairo-prelude.md)."
msgstr ""
"Las siguientes tres líneas establecen la información de configuración que "
"Scarb necesita para compilar su programa: el nombre del paquete y la versión "
"de Scarb a usar, y la edición del preludio a usar. El preludio es la "
"colección de los elementos más comúnmente utilizados que se importan "
"automáticamente en cada programa de El Cairo. Puede aprender más sobre el "
"preludio en [Apéndice D](./apéndice-04-cairo-prelude.md)."

#: src/ch01-02-hello-world.md:86
msgid ""
"The last line, `[dependencies]`, is the start of a section for you to list "
"any of your project’s dependencies. In Cairo, packages of code are referred "
"to as crates. We won’t need any other crates for this project."
msgstr ""
"La última línea, `[dependencias]', es el inicio de una sección para que "
"usted pueda enumerar cualquiera de las dependencias de su proyecto. En El "
"Cairo, paquetes de código se denominan cajas. No necesitaremos ninguna otra "
"caja para este proyecto."

#: src/ch01-02-hello-world.md:88
msgid ""
"Note: If you're building contracts for Starknet, you will need to add the "
"`starknet` dependency as mentioned in the [Scarb documentation](https://docs."
"swmansion.com/scarb/docs/extensions/starknet/starknet-package.html)."
msgstr ""
"Nota: Si está construyendo contratos para Starknet, tendrá que añadir la "
"dependencia `starknet` como se menciona en la [Documentación de Scarb]"
"(https://docs.swmansion.com/scarb/docs/extensions/starknet/starknet-package."
"html)."

#: src/ch01-02-hello-world.md:90
msgid ""
"The other file created by Scarb is _src/lib.cairo_, let's delete all the "
"content and put in the following content, we will explain the reason later."
msgstr ""
"El otro archivo creado por Scarb es _src/lib.cairo_, vamos a eliminar todo "
"el contenido y poner en el siguiente contenido, vamos a explicar la razón "
"más adelante."

#: src/ch01-02-hello-world.md:96
msgid ""
"Then create a new file called _src/hello_world.cairo_ and put the following "
"code in it:"
msgstr ""
"A continuación, crear un nuevo archivo llamado _src/hello_world.cairo_ y "
"poner el siguiente código en él:"

#: src/ch01-02-hello-world.md:98
msgid "<span class=\"filename\">Filename: src/hello_world.cairo</span>"
msgstr "<span class=\"filename\">Filename: src/hello_world.cairo</span>"

#: src/ch01-02-hello-world.md:102 src/ch01-02-hello-world.md:185
msgid "\"Hello, World!\""
msgstr "\"¡Hola, Mundo!\""

#: src/ch01-02-hello-world.md:106
msgid ""
"We have just created a file called _lib.cairo_, which contains a module "
"declaration referencing another module named `hello_world`, as well as the "
"file _hello_world.cairo_, containing the implementation details of the "
"`hello_world` module."
msgstr ""
"Acabamos de crear un archivo llamado _lib.cairo_, que contiene una "
"declaración de módulo que hace referencia a otro módulo llamado "
"`hello_world`, así como el archivo _hello_world.cairo_, que contiene los "
"detalles de implementación del módulo `hello_world`."

#: src/ch01-02-hello-world.md:108
msgid ""
"Scarb requires your source files to be located within the _src_ directory."
msgstr ""
"Scarb requiere que sus archivos de origen se encuentren dentro del "
"directorio _src_."

#: src/ch01-02-hello-world.md:110
msgid ""
"The top-level project directory is reserved for README files, license "
"information, configuration files, and any other non-code-related content. "
"Scarb ensures a designated location for all project components, maintaining "
"a structured organization."
msgstr ""
"El directorio de proyectos de nivel superior está reservado para archivos "
"README, información sobre licencias, archivos de configuración y cualquier "
"otro contenido no relacionado con códigos. Scarb garantiza una ubicación "
"designada para todos los componentes del proyecto, manteniendo una "
"organización estructurada."

#: src/ch01-02-hello-world.md:113
msgid ""
"If you started a project that doesn’t use Scarb, you can convert it to a "
"project that does use Scarb. Move the project code into the _src_ directory "
"and create an appropriate _Scarb.toml_ file. You can also use `scarb init` "
"command to generate the _src_ folder and the _Scarb.toml_ it contains."
msgstr ""
"Si ha iniciado un proyecto que no utilice Scarb, puede convertirlo a un "
"proyecto que utilice Scarb. Mueva el código del proyecto al directorio _src_ "
"y cree un archivo _Scarb.toml_ apropiado. También puede utilizar el comando "
"`scarb init` para generar la carpeta _src_ y el _Scarb.toml_ que contiene."

#: src/ch01-02-hello-world.md:122
msgid "<span class=\"caption\"> A sample Scarb project structure</span>"
msgstr ""
"<span class=\"caption\"> Una muestra de la estructura del proyecto Scarb</"
"span>"

#: src/ch01-02-hello-world.md:128
msgid "Building a Scarb Project"
msgstr "Construcción de un proyecto de escarcha"

#: src/ch01-02-hello-world.md:130
msgid ""
"From your _hello_world_ directory, build your project by entering the "
"following command:"
msgstr ""
"Desde tu directorio _hello_world_, construye tu proyecto introduciendo el "
"siguiente comando:"

#: src/ch01-02-hello-world.md:138
msgid ""
"This command creates a `sierra` file in _target/dev_, let's ignore the "
"`sierra` file for now."
msgstr ""
"Este comando crea un archivo `sierra` en _target/dev_, vamos a ignorar el "
"archivo `sierra` por ahora."

#: src/ch01-02-hello-world.md:140
msgid ""
"If you have installed Cairo correctly, you should be able to run the `main` "
"function of your program with the `scarb cairo-run` command and see the "
"following output:"
msgstr ""
"Si ha instalado El Cairo correctamente, debe ser capaz de ejecutar la "
"función `main` de su programa con el comando `scarb cairo-run` y ver la "
"siguiente salida:"

#: src/ch01-02-hello-world.md:149
msgid ""
"Regardless of your operating system, the string `Hello, world!` should be "
"printed to the terminal."
msgstr ""
"Independientemente de su sistema operativo, la cadena `Hola, mundo!` debe "
"imprimirse en la terminal."

#: src/ch01-02-hello-world.md:152
msgid ""
"If `Hello, world!` did print, congratulations! You’ve officially written a "
"Cairo program. That makes you a Cairo programmer — welcome!"
msgstr ""
"Si `¡Hola, mundo!` hizo imprimir, felicitaciones! Usted ha escrito "
"oficialmente un programa de El Cairo. Eso le hace un programador de El Cairo "
"— bienvenido!"

#: src/ch01-02-hello-world.md:155
msgid "Anatomy of a Cairo Program"
msgstr "Anatomía de un programa de El Cairo"

#: src/ch01-02-hello-world.md:157
msgid ""
"Let’s review this “Hello, world!” program in detail. Here’s the first piece "
"of the puzzle:"
msgstr ""
"Repasemos este programa “Hola, mundo!” en detalle. Aquí está la primera "
"pieza del rompecabezas:"

#: src/ch01-02-hello-world.md:166
msgid ""
"These lines define a function named `main`. The `main` function is special: "
"it is always the first code that runs in every executable Cairo program. "
"Here, the first line declares a function named `main` that has no parameters "
"and returns nothing. If there were parameters, they would go inside the "
"parentheses `()`."
msgstr ""
"Estas líneas definen una función llamada `main`. La función `main` es "
"especial: siempre es el primer código que se ejecuta en cada programa "
"ejecutable de El Cairo. Aquí, la primera línea declara una función llamada "
"`main` que no tiene parámetros y no devuelve nada. Si hubiera parámetros, "
"entrarían dentro de los paréntesis `()`."

#: src/ch01-02-hello-world.md:171
msgid ""
"The function body is wrapped in `{}`. Cairo requires curly brackets around "
"all function bodies. It’s good style to place the opening curly bracket on "
"the same line as the function declaration, adding one space in between."
msgstr ""
"El cuerpo de la función está envuelto en. El Cairo requiere soportes rizados "
"alrededor de todos los cuerpos de la función. Es buen estilo para colocar el "
"soporte rizado de apertura en la misma línea que la declaración de la "
"función, añadiendo un espacio en el medio."

#: src/ch01-02-hello-world.md:175
msgid ""
"Note: If you want to stick to a standard style across Cairo projects, you "
"can use the automatic formatter tool available with `scarb fmt` to format "
"your code in a particular style (more on `scarb fmt` in [Appendix F](./"
"appendix-06-useful-development-tools.md)). The Cairo team has included this "
"tool with the standard Cairo distribution, as `cairo-run` is, so it should "
"already be installed on your computer!"
msgstr ""
"Nota: Si desea seguir un estilo estándar a través de los proyectos de El "
"Cairo, puede utilizar la herramienta formateria automática disponible con "
"`scarb fmt` para formatear su código en un estilo particular (más en `scarb "
"fmt` en [Apéndice F](./apéndice-06-util-development-tools.md)). El equipo de "
"El Cairo ha incluido esta herramienta con la distribución estándar de El "
"Cairo, como `cairo-run` es, por lo que ya debe estar instalado en su "
"computadora!"

#: src/ch01-02-hello-world.md:182
msgid "The body of the `main` function holds the following code:"
msgstr "El cuerpo de la función \" principal \" contiene el siguiente código:"

#: src/ch01-02-hello-world.md:188
msgid ""
"This line does all the work in this little program: it prints text to the "
"screen. There are four important details to notice here."
msgstr ""
"Esta línea hace todo el trabajo en este pequeño programa: imprime texto a la "
"pantalla. Hay cuatro detalles importantes para notar aquí."

#: src/ch01-02-hello-world.md:191
msgid "First, Cairo style is to indent with four spaces, not a tab."
msgstr ""
"En primer lugar, el estilo de El Cairo es de sangría con cuatro espacios, no "
"una pestaña."

#: src/ch01-02-hello-world.md:193
msgid ""
"Second, `println!` calls a Cairo macro. If it had called a function instead, "
"it would be entered as `println` (without the `!`). We’ll discuss Cairo "
"macros in more detail in the [\"Macros\"](./ch11-05-macros.md) chapter. For "
"now, you just need to know that using a `!` means that you’re calling a "
"macro instead of a normal function and that macros don’t always follow the "
"same rules as functions."
msgstr ""
"En segundo lugar, `println!` llama a una macro de El Cairo. Si hubiera "
"llamado a una función en su lugar, se introduciría como `println` (sin el `!"
"`). Vamos a discutir macros de El Cairo en más detalle en el [\"Macros\"](./"
"ch11-05-macros.md) capítulo. Por ahora, usted sólo necesita saber que usando "
"un `!` significa que usted está llamando a una macro en lugar de una función "
"normal y que las macros no siempre siguen las mismas reglas que las "
"funciones."

#: src/ch01-02-hello-world.md:196
msgid ""
"Third, you see the `\"Hello, world!\"` string. We pass this string as an "
"argument to `println!`, and the string is printed to the screen."
msgstr ""
"En tercer lugar, se ve el `\"Hola, mundo!\"` cadena. Pasamos esta cadena "
"como un argumento a `println! ', y la cadena se imprime en la pantalla."

#: src/ch01-02-hello-world.md:198
msgid ""
"Fourth, we end the line with a semicolon (`;`), which indicates that this "
"expression is over and the next one is ready to begin. Most lines of Cairo "
"code end with a semicolon."
msgstr ""
"Cuarto, terminamos la línea con un punto y coma (`;`), que indica que esta "
"expresión ha terminado y la siguiente está lista para comenzar. La mayoría "
"de las líneas del código de El Cairo terminan con un punto y coma."

#: src/ch01-02-hello-world.md:205
msgid "{{#quiz ../quizzes/ch01-02-hello-world.toml}}"
msgstr "quiz../quizzes/ch01-02-hello-world.toml"

#: src/ch01-02-hello-world.md:207 src/ch02-05-control-flow.md:311
#: src/ch07-05-separating-modules-into-different-files.md:97
#: src/ch09-02-recoverable-errors.md:188 src/ch10-02-test-organization.md:265
#: src/ch11-01-custom-data-structures.md:345
#: src/ch11-06-inlining-in-cairo.md:269
#: src/ch17-02-testing-smart-contracts.md:730
msgid "Summary"
msgstr "Resumen"

#: src/ch01-02-hello-world.md:209
msgid "Let’s recap what we’ve learned so far about Scarb:"
msgstr "Repasemos lo que hemos aprendido hasta ahora sobre Scarb:"

#: src/ch01-02-hello-world.md:211
msgid ""
"We can install one or multiple Scarb versions, either the latest stable or a "
"specific one, using asdf."
msgstr ""
"Podemos instalar una o varias versiones de Scarb, ya sea el último estable o "
"uno específico, utilizando asdf."

#: src/ch01-02-hello-world.md:212
msgid "We can create a project using `scarb new`."
msgstr "Podemos crear un proyecto usando `scarb new`."

#: src/ch01-02-hello-world.md:213
msgid ""
"We can build a project using `scarb build` to generate the compiled Sierra "
"code."
msgstr ""
"Podemos construir un proyecto utilizando `scarb build` para generar el "
"código de Sierra compilado."

#: src/ch01-02-hello-world.md:214
msgid "We can execute a Cairo program using the `scarb cairo-run` command."
msgstr ""
"Podemos ejecutar un programa de El Cairo usando el comando `scarb cairo-run`."

#: src/ch01-02-hello-world.md:216
msgid ""
"An additional advantage of using Scarb is that the commands are the same no "
"matter which operating system you’re working on. So, at this point, we’ll no "
"longer provide specific instructions for Linux and macOS versus Windows."
msgstr ""
"Una ventaja adicional de usar Scarb es que los comandos son los mismos sin "
"importar en qué sistema operativo estés trabajando. Así que, en este punto, "
"ya no proporcionaremos instrucciones específicas para Linux y macOS frente a "
"Windows."

#: src/ch01-02-hello-world.md:218
msgid ""
"You’re already off to a great start on your Cairo journey! This is a great "
"time to build a more substantial program to get used to reading and writing "
"Cairo code."
msgstr ""
"Usted ya está a un gran comienzo en su viaje de El Cairo! Este es un gran "
"momento para construir un programa más sustancial para acostumbrarse a leer "
"y escribir el código de El Cairo."

#: src/ch02-00-common-programming-concepts.md
msgid ""
"This chapter covers concepts that appear in almost every programming "
"language and how they work in Cairo. Many programming languages have much in "
"common at their core. None of the concepts presented in this chapter are "
"unique to Cairo, but we’ll discuss them in the context of Cairo and explain "
"the conventions around using these concepts."
msgstr ""
"Este capítulo abarca conceptos que aparecen en casi todos los lenguajes de "
"programación y cómo funcionan en El Cairo. Muchos lenguajes de programación "
"tienen mucho en común en su núcleo. Ninguno de los conceptos presentados en "
"este capítulo son exclusivos de El Cairo, pero los discutiremos en el "
"contexto de El Cairo y explicaremos las convenciones en torno a la "
"utilización de estos conceptos."

#: src/ch02-00-common-programming-concepts.md
msgid ""
"Specifically, you’ll learn about variables, basic types, functions, "
"comments, and control flow. These foundations will be in every Cairo "
"program, and learning them early will give you a strong core to start from."
msgstr ""
"Específicamente, aprenderás sobre variables, tipos básicos, funciones, "
"comentarios y flujo de control. Estas fundaciones estarán en cada programa "
"de El Cairo, y aprenderlas temprano te dará un núcleo fuerte para empezar."

#: src/ch02-01-variables-and-mutability.md:3
msgid ""
"Cairo uses an immutable memory model, meaning that once a memory cell is "
"written to, it can't be overwritten but only read from. To reflect this "
"immutable memory model, variables in Cairo are immutable by default. "
"However, the language abstracts this model and gives you the option to make "
"your variables mutable. Let’s explore how and why Cairo enforces "
"immutability, and how you can make your variables mutable."
msgstr ""
"El Cairo utiliza un modelo de memoria inmutable, lo que significa que una "
"vez que se escribe una celda de memoria, no se puede sobrescribir, pero sólo "
"leer de. Para reflejar este modelo de memoria inmutable, variables en El "
"Cairo son inmutables por defecto. Sin embargo, el lenguaje abstrae este "
"modelo y le da la opción de hacer sus variables mutables. Vamos a explorar "
"cómo y por qué El Cairo impone la inmutabilidad, y cómo puede hacer que sus "
"variables mutables."

#: src/ch02-01-variables-and-mutability.md:10
msgid ""
"When a variable is immutable, once a value is bound to a name, you can’t "
"change that value. To illustrate this, generate a new project called "
"_variables_ in your _cairo_projects_ directory by using `scarb new "
"variables`."
msgstr ""
"Cuando una variable es inmutable, una vez que un valor está vinculado a un "
"nombre, no se puede cambiar ese valor. Para ilustrar esto, generar un nuevo "
"proyecto llamado _variables_ en su directorio _cairo_projects_ mediante el "
"uso de `scarb nuevas variables`."

#: src/ch02-01-variables-and-mutability.md:14
msgid ""
"Then, in your new _variables_ directory, open _src/lib.cairo_ and replace "
"its code with the following code, which won’t compile just yet:"
msgstr ""
"Luego, en su nuevo directorio _variables_, abra _src/lib.cairo_ y reemplace "
"su código con el siguiente código, que no se compilará todavía:"

#: src/ch02-01-variables-and-mutability.md:17
#: src/ch04-01-what-is-ownership.md:265 src/ch04-01-what-is-ownership.md:310
#: src/ch04-02-references-and-snapshots.md:26
#: src/ch04-02-references-and-snapshots.md:118
#: src/ch05-01-defining-and-instantiating-structs.md:7
#: src/ch05-01-defining-and-instantiating-structs.md:27
#: src/ch05-01-defining-and-instantiating-structs.md:53
#: src/ch05-01-defining-and-instantiating-structs.md:89
#: src/ch05-01-defining-and-instantiating-structs.md:125
#: src/ch05-01-defining-and-instantiating-structs.md:167
#: src/ch05-01-defining-and-instantiating-structs.md:203
#: src/ch05-02-an-example-program-using-structs.md:7
#: src/ch05-02-an-example-program-using-structs.md:50
#: src/ch05-02-an-example-program-using-structs.md:75
#: src/ch07-02-defining-modules-to-control-scope.md:80
#: src/ch07-02-defining-modules-to-control-scope.md:137
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:14
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:90
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:116
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:150
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:10
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:36
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:81
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:133
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:206
#: src/ch07-05-separating-modules-into-different-files.md:18
#: src/ch09-01-unrecoverable-errors-with-panic.md:9
#: src/ch10-01-how-to-write-tests.md:32 src/ch10-01-how-to-write-tests.md:95
#: src/ch10-01-how-to-write-tests.md:146 src/ch10-01-how-to-write-tests.md:228
#: src/ch10-01-how-to-write-tests.md:340 src/ch10-01-how-to-write-tests.md:564
#: src/ch10-01-how-to-write-tests.md:658 src/ch10-01-how-to-write-tests.md:747
msgid "<span class=\"filename\">Filename: src/lib.cairo</span>"
msgstr "<span class=\"filename\">Filename: src/lib.cairo</span>"

#: src/ch02-01-variables-and-mutability.md:22
#: src/ch02-01-variables-and-mutability.md:24
#: src/ch02-01-variables-and-mutability.md:89
#: src/ch02-01-variables-and-mutability.md:91
#: src/ch02-01-variables-and-mutability.md:248
#: src/ch02-01-variables-and-mutability.md:250 src/ch02-03-functions.md:71
#: src/ch02-03-functions.md:287 src/ch02-03-functions.md:325
#: src/ch02-03-functions.md:341
msgid "\"The value of x is: {}\""
msgstr "\"El valor de x es:"

#: src/ch02-01-variables-and-mutability.md:29
msgid ""
"Save and run the program using `scarb cairo-run`. You should receive an "
"error message regarding an immutability error, as shown in this output:"
msgstr ""
"Guardar y ejecutar el programa usando `scarb cairo-run`. Usted debe recibir "
"un mensaje de error con respecto a un error de inmutabilidad, como se "
"muestra en esta salida:"

#: src/ch02-01-variables-and-mutability.md:45
msgid ""
"This example shows how the compiler helps you find errors in your programs. "
"Compiler errors can be frustrating, but they only mean your program isn’t "
"safely doing what you want it to do yet; they do _not_ mean that you’re not "
"a good programmer! Experienced Caironautes still get compiler errors."
msgstr ""
"Este ejemplo muestra cómo el compilador le ayuda a encontrar errores en sus "
"programas. Los errores del compilador pueden ser frustrantes, pero sólo "
"significan que su programa no está haciendo con seguridad lo que usted "
"quiere que haga todavía; lo hacen _not_ significa que usted no es un buen "
"programador!"

#: src/ch02-01-variables-and-mutability.md:50
msgid ""
"You received the error message `Cannot assign to an immutable variable.` "
"because you tried to assign a second value to the immutable `x` variable."
msgstr ""
"Recibió el mensaje de error `No se puede asignar a una variable inmutable.` "
"porque trató de asignar un segundo valor a la variable `x` inmutable."

#: src/ch02-01-variables-and-mutability.md:53
msgid ""
"It’s important that we get compile-time errors when we attempt to change a "
"value that’s designated as immutable because this specific situation can "
"lead to bugs. If one part of our code operates on the assumption that a "
"value will never change and another part of our code changes that value, "
"it’s possible that the first part of the code won’t do what it was designed "
"to do. The cause of this kind of bug can be difficult to track down after "
"the fact, especially when the second piece of code changes the value only "
"_sometimes_."
msgstr ""
"Es importante que obtengamos errores de tiempo de compilación cuando "
"intentamos cambiar un valor que es designado como inmutable porque esta "
"situación específica puede conducir a errores. Si una parte de nuestro "
"código opera bajo la suposición de que un valor nunca cambiará y otra parte "
"de nuestro código cambia ese valor, es posible que la primera parte del "
"código no haga lo que fue diseñado para hacer. La causa de este tipo de "
"error puede ser difícil de rastrear después del hecho, especialmente cuando "
"la segunda pieza de código cambia el valor sólo _a veces_."

#: src/ch02-01-variables-and-mutability.md:61
msgid ""
"Cairo, unlike most other languages, has immutable memory. This makes a whole "
"class of bugs impossible, because values will never change unexpectedly. "
"This makes code easier to reason about."
msgstr ""
"El Cairo, a diferencia de la mayoría de los otros idiomas, tiene memoria "
"inmutable. Esto hace imposible toda una clase de errores, porque los valores "
"nunca cambiarán inesperadamente. Esto hace que el código sea más fácil de "
"razonar."

#: src/ch02-01-variables-and-mutability.md:65
msgid ""
"But mutability can be very useful, and can make code more convenient to "
"write. Although variables are immutable by default, you can make them "
"mutable by adding `mut` in front of the variable name. Adding `mut` also "
"conveys intent to future readers of the code by indicating that other parts "
"of the code will be changing the value associated to this variable."
msgstr ""
"Pero la mutabilidad puede ser muy útil y puede hacer que el código sea más "
"conveniente para escribir. Aunque las variables son inmutables por defecto, "
"puede hacer que sean mutables añadiendo `mut` delante del nombre de la "
"variable. Agregar `mut` también transmite la intención a los futuros "
"lectores del código indicando que otras partes del código cambiarán el valor "
"asociado a esta variable."

#: src/ch02-01-variables-and-mutability.md:73
msgid ""
"However, you might be wondering at this point what exactly happens when a "
"variable is declared as `mut`, as we previously mentioned that Cairo's "
"memory is immutable. The answer is that the _value_ is immutable, but the "
"_variable_ isn't. The value associated to the variable can be changed. "
"Assigning to a mutable variable in Cairo is essentially equivalent to "
"redeclaring it to refer to another value in another memory cell, but the "
"compiler handles that for you, and the keyword `mut` makes it explicit. Upon "
"examining the low-level Cairo Assembly code, it becomes clear that variable "
"mutation is implemented as syntactic sugar, which translates mutation "
"operations into a series of steps equivalent to variable shadowing. The only "
"difference is that at the Cairo level, the variable is not redeclared so its "
"type cannot change."
msgstr ""
"Sin embargo, usted podría preguntarse en este punto qué sucede exactamente "
"cuando una variable se declara como `mut`, como mencionamos anteriormente "
"que la memoria de El Cairo es inmutable. La respuesta es que el _value_ es "
"inmutable, pero el _variable_ no lo es. El valor asociado a la variable "
"puede ser cambiado. Asignar a una variable mutable en El Cairo es "
"esencialmente equivalente a volver a declarar que se refiere a otro valor en "
"otra celda de memoria, pero el compilador maneja eso para usted, y la "
"palabra clave `mut` lo hace explícito. Al examinar el código de la Asamblea "
"de El Cairo de bajo nivel, se hace evidente que la mutación variable se "
"implementa como azúcar sintáctico, que traduce operaciones de mutación en "
"una serie de pasos equivalentes a sombra variable. La única diferencia es "
"que en el nivel de El Cairo, la variable no se vuelve a declarar por lo que "
"su tipo no puede cambiar."

#: src/ch02-01-variables-and-mutability.md:84
msgid "For example, let’s change _src/lib.cairo_ to the following:"
msgstr "Por ejemplo, cambiemos _src/lib.cairo_ a lo siguiente:"

#: src/ch02-01-variables-and-mutability.md:95
msgid "When we run the program now, we get this:"
msgstr "Cuando ejecutamos el programa ahora, obtenemos esto:"

#: src/ch02-01-variables-and-mutability.md:108
msgid ""
"We’re allowed to change the value bound to `x` from `5` to `6` when `mut` is "
"used. Ultimately, deciding whether to use mutability or not is up to you and "
"depends on what you think is clearest in that particular situation."
msgstr ""
"Se nos permite cambiar el valor vinculado a `x` de `5` a `6` cuando se "
"utiliza `mut`. En última instancia, decidir si usar o no la mutabilidad "
"depende de usted y depende de lo que usted considere más claro en esa "
"situación particular."

#: src/ch02-01-variables-and-mutability.md:112
msgid "Constants"
msgstr "Constantes"

#: src/ch02-01-variables-and-mutability.md:114
msgid ""
"Like immutable variables, _constants_ are values that are bound to a name "
"and are not allowed to change, but there are a few differences between "
"constants and variables."
msgstr ""
"Como variables inmutables, _constants_ son valores que están ligados a un "
"nombre y no se les permite cambiar, pero hay algunas diferencias entre "
"constantes y variables."

#: src/ch02-01-variables-and-mutability.md:118
msgid ""
"First, you aren’t allowed to use `mut` with constants. Constants aren’t just "
"immutable by default—they’re always immutable. You declare constants using "
"the `const` keyword instead of the `let` keyword, and the type of the value "
"_must_ be annotated. We’ll cover types and type annotations in the next "
"section, [“Data Types”](./ch02-02-data-types.md), so don’t worry about the "
"details right now. Just know that you must always annotate the type."
msgstr ""
"En primer lugar, no se le permite utilizar `mut` con constantes. Las "
"constantes no son sólo inmutables por defecto - siempre son inmutables. "
"Declara constantes utilizando la palabra clave `const` en lugar de la "
"palabra clave `let`, y el tipo de valor _must_ ser anotado. Vamos a cubrir "
"los tipos y anotaciones de tipo en la siguiente sección, [ \"Tipos de "
"datos\"](./ch02-02-data-types.md), así que no se preocupe por los detalles "
"en este momento. Sólo sepa que siempre debe anotar el tipo."

#: src/ch02-01-variables-and-mutability.md:125
msgid ""
"Constant variables can be declared with any usual data type, including "
"structs, enums and fixed-size arrays."
msgstr ""
"Las variables constantes pueden ser declaradas con cualquier tipo de datos "
"habitual, incluyendo structs, enums y arrays de tamaño fijo."

#: src/ch02-01-variables-and-mutability.md:127
msgid ""
"Constants can only be declared in the global scope, which makes them useful "
"for values that many parts of code need to know about."
msgstr ""
"Las constantes sólo pueden ser declaradas en el ámbito global, lo que las "
"hace útiles para valores que muchas partes del código necesitan conocer."

#: src/ch02-01-variables-and-mutability.md:130
msgid ""
"The last difference is that constants may natively be set only to a constant "
"expression, not the result of a value that could only be computed at runtime."
msgstr ""
"La última diferencia es que las constantes se pueden establecer nativamente "
"sólo a una expresión constante, no el resultado de un valor que sólo podría "
"ser calculado en tiempo de ejecución."

#: src/ch02-01-variables-and-mutability.md:133
msgid "Here’s an example of constants declaration:"
msgstr "He aquí un ejemplo de la declaración de constantes:"

#: src/ch02-01-variables-and-mutability.md:152
msgid ""
"Nonetheless, it is possible to use the `consteval_int!` macro to create a "
"`const` variable that is the result of some computation:"
msgstr ""
"Sin embargo, es posible utilizar la macro `consteval_int!` para crear una "
"variable `const` que es el resultado de algún cálculo:"

#: src/ch02-01-variables-and-mutability.md:158
msgid ""
"We will dive into more detail about macros in the [dedicated section](./"
"ch11-05-macros.md)."
msgstr ""
"Nos sumergiremos en más detalles sobre macros en la [sección dedicada](./"
"ch11-05-macros.md)."

#: src/ch02-01-variables-and-mutability.md:160
msgid ""
"Cairo's naming convention for constants is to use all uppercase with "
"underscores between words."
msgstr ""
"La convención de El Cairo para nombrar constantes es usar todas las "
"mayúsculas con subrayados entre palabras."

#: src/ch02-01-variables-and-mutability.md:162
msgid ""
"Constants are valid for the entire time a program runs, within the scope in "
"which they were declared. This property makes constants useful for values in "
"your application domain that multiple parts of the program might need to "
"know about, such as the maximum number of points any player of a game is "
"allowed to earn, or the speed of light."
msgstr ""
"Las constantes son válidas durante todo el tiempo que se ejecuta un "
"programa, dentro del ámbito en el que fueron declaradas. Esta propiedad hace "
"que las constantes sean útiles para valores en el dominio de tu aplicación "
"que varias partes del programa podrían necesitar saber, como el número "
"máximo de puntos que cualquier jugador de un juego puede ganar, o la "
"velocidad de la luz."

#: src/ch02-01-variables-and-mutability.md:168
msgid ""
"Naming hardcoded values used throughout your program as constants is useful "
"in conveying the meaning of that value to future maintainers of the code. It "
"also helps to have only one place in your code you would need to change if "
"the hardcoded value needed to be updated in the future."
msgstr ""
"Nombrar valores codificados utilizados en todo el programa como constantes "
"es útil para transmitir el significado de ese valor a los futuros "
"mantenedores del código. También ayuda tener un solo lugar en el código que "
"necesitarías cambiar si el valor codificado necesitara ser actualizado en el "
"futuro."

#: src/ch02-01-variables-and-mutability.md:175
msgid "Shadowing"
msgstr "Sombras"

#: src/ch02-01-variables-and-mutability.md:177
msgid ""
"Variable shadowing refers to the declaration of a new variable with the same "
"name as a previous variable. Caironautes say that the first variable is "
"_shadowed_ by the second, which means that the second variable is what the "
"compiler will see when you use the name of the variable. In effect, the "
"second variable overshadows the first, taking any uses of the variable name "
"to itself until either it itself is shadowed or the scope ends. We can "
"shadow a variable by using the same variable’s name and repeating the use of "
"the `let` keyword as follows:"
msgstr ""
"El Caironautes dice que la primera variable es _shadowed_ por la segunda, lo "
"que significa que la segunda variable es lo que el compilador verá cuando "
"use el nombre de la variable. En efecto, la segunda variable eclipsa a la "
"primera, tomando cualquier uso del nombre de la variable para sí mismo hasta "
"que sea en la sombra o el alcance termina. Podemos sombra una variable "
"usando el nombre de la misma variable y repitiendo el uso de la palabra "
"clave `let` como sigue:"

#: src/ch02-01-variables-and-mutability.md:192
msgid "\"Inner scope x value is: {}\""
msgstr "\"Ámbito de visión interior x valor es:"

#: src/ch02-01-variables-and-mutability.md:194
msgid "\"Outer scope x value is: {}\""
msgstr "\"Ámbito de visión exterior x valor es:"

#: src/ch02-01-variables-and-mutability.md:198
msgid ""
"This program first binds `x` to a value of `5`. Then it creates a new "
"variable `x` by repeating `let x =`, taking the original value and adding "
"`1` so the value of `x` is then `6`. Then, within an inner scope created "
"with the curly brackets, the third `let` statement also shadows `x` and "
"creates a new variable, multiplying the previous value by `2` to give `x` a "
"value of `12`. When that scope is over, the inner shadowing ends and `x` "
"returns to being `6`. When we run this program, it will output the following:"
msgstr ""
"Este programa primero une `x` a un valor de `5`. Luego crea una nueva "
"variable `x` repitiendo `let x =`, tomando el valor original y añadiendo `1` "
"por lo que el valor de `x` es entonces `6`. Luego, dentro de un ámbito "
"interno creado con los corchetes rizados, la tercera declaración `let` "
"también sombras `x` y crea una nueva variable, multiplicando el valor "
"anterior por `2` para dar `x` un valor de `12`. Cuando ese alcance haya "
"terminado, el sombra interior termina y `x` vuelve a ser `6`. Cuando "
"ejecutemos este programa, producirá lo siguiente:"

#: src/ch02-01-variables-and-mutability.md:217
msgid ""
"Shadowing is different from marking a variable as `mut` because we’ll get a "
"compile-time error if we accidentally try to reassign to this variable "
"without using the `let` keyword. By using `let`, we can perform a few "
"transformations on a value but have the variable be immutable after those "
"transformations have been completed."
msgstr ""
"El sombreado es diferente de marcar una variable como `mut` porque "
"obtendremos un error de tiempo de compilación si accidentalmente intentamos "
"reasignar a esta variable sin usar la palabra clave `let`. Al usar `let`, "
"podemos realizar algunas transformaciones en un valor pero tener la variable "
"inmutable después de que esas transformaciones hayan sido completadas."

#: src/ch02-01-variables-and-mutability.md:223
msgid ""
"Another distinction between `mut` and shadowing is that when we use the "
"`let` keyword again, we are effectively creating a new variable, which "
"allows us to change the type of the value while reusing the same name. As "
"mentioned before, variable shadowing and mutable variables are equivalent at "
"the lower level. The only difference is that by shadowing a variable, the "
"compiler will not complain if you change its type. For example, say our "
"program performs a type conversion between the `u64` and `felt252` types."
msgstr ""
"Otra distinción entre `mut` y sombra es que cuando usamos la palabra clave "
"`let` de nuevo, estamos creando efectivamente una nueva variable, que nos "
"permite cambiar el tipo de valor mientras reutilizamos el mismo nombre. Como "
"se mencionó anteriormente, la sombra variable y las variables mutables son "
"equivalentes en el nivel inferior. La única diferencia es que al sombrar una "
"variable, el compilador no se quejará si cambia su tipo. Por ejemplo, "
"digamos que nuestro programa realiza una conversión de tipo entre los tipos "
"`u64` y `felt252`."

#: src/ch02-01-variables-and-mutability.md:234
msgid "\"The value of x is {} of type u64\""
msgstr "\"El valor de x es de tipo u64\""

#: src/ch02-01-variables-and-mutability.md:235
msgid "// converts x to a felt, type annotation is required.\n"
msgstr "// convierte x a un fieltro, se requiere anotación de tipo.\n"

#: src/ch02-01-variables-and-mutability.md:236
msgid "\"The value of x is {} of type felt252\""
msgstr "\"El valor de x es  de tipo fieltro252\""

#: src/ch02-01-variables-and-mutability.md:240
msgid ""
"The first `x` variable has a `u64` type while the second `x` variable has a "
"`felt252` type. Shadowing thus spares us from having to come up with "
"different names, such as `x_u64` and `x_felt252`; instead, we can reuse the "
"simpler `x` name. However, if we try to use `mut` for this, as shown here, "
"we’ll get a compile-time error:"
msgstr ""
"La primera variable `x` tiene un tipo `u64`, mientras que la segunda "
"variable `x` tiene un tipo `felt252`. Sombreado por lo tanto nos ahorra de "
"tener que llegar a diferentes nombres, tales como `x_u64` y `x_felt252`; en "
"cambio, podemos reutilizar el nombre `x` más simple. Sin embargo, si "
"tratamos de utilizar `mut` para esto, como se muestra aquí, vamos a obtener "
"un error de tiempo de compilación:"

#: src/ch02-01-variables-and-mutability.md:254
msgid ""
"The error says we were expecting a `u64` (the original type) but we got a "
"different type:"
msgstr ""
"El error dice que estábamos esperando un `u64` (el tipo original) pero "
"tenemos un tipo diferente:"

#: src/ch02-01-variables-and-mutability.md:269
msgid "{{#quiz ../quizzes/ch02-01-variables-and-mutability.toml}}"
msgstr "quiz../quizzes/ch02-01-variables-y-mutabilidad.toml"

#: src/ch02-01-variables-and-mutability.md:271
msgid ""
"Now that we’ve explored how variables work, let’s look at more data types "
"they can have."
msgstr ""
"Ahora que hemos explorado cómo funcionan las variables, vamos a ver más "
"tipos de datos que pueden tener."

#: src/ch02-02-data-types.md:3
msgid ""
"Every value in Cairo is of a certain _data type_, which tells Cairo what "
"kind of data is being specified so it knows how to work with that data. This "
"section covers two subsets of data types: scalars and compounds."
msgstr ""
"Cada valor en El Cairo es de cierto _data type_, que le dice a El Cairo qué "
"tipo de datos se están especificando para que sepa cómo trabajar con esos "
"datos. Esta sección cubre dos subconjuntos de tipos de datos: escalares y "
"compuestos."

#: src/ch02-02-data-types.md:6
msgid ""
"Keep in mind that Cairo is a _statically typed_ language, which means that "
"it must know the types of all variables at compile time. The compiler can "
"usually infer the desired type based on the value and its usage. In cases "
"when many types are possible, we can use a cast method where we specify the "
"desired output type."
msgstr ""
"Tenga en cuenta que El Cairo es un lenguaje _statically typed_, lo que "
"significa que debe conocer los tipos de todas las variables en el momento de "
"la compilación. El compilador puede generalmente inferir el tipo deseado "
"basado en el valor y su uso. En los casos en que muchos tipos son posibles, "
"podemos utilizar un método de reparto donde especificamos el tipo de salida "
"deseado."

#: src/ch02-02-data-types.md:16
msgid "You’ll see different type annotations for other data types."
msgstr "Verás diferentes anotaciones de tipo para otros tipos de datos."

#: src/ch02-02-data-types.md:18
msgid "Scalar Types"
msgstr "Tipos escalares"

#: src/ch02-02-data-types.md:20
msgid ""
"A _scalar_ type represents a single value. Cairo has three primary scalar "
"types: felts, integers, and booleans. You may recognize these from other "
"programming languages. Let’s jump into how they work in Cairo."
msgstr ""
"Un tipo _scalar_ representa un solo valor. El Cairo tiene tres tipos de "
"escalar primarios: fieltros, enteros y booleanos. Usted puede reconocer "
"estos de otros lenguajes de programación. Vamos a saltar en cómo funcionan "
"en El Cairo."

#: src/ch02-02-data-types.md:24
msgid "Felt Type"
msgstr "Tipo de fieltro"

#: src/ch02-02-data-types.md:26
msgid ""
"In Cairo, if you don't specify the type of a variable or argument, its type "
"defaults to a field element, represented by the keyword `felt252`. In the "
"context of Cairo, when we say “a field element” we mean an integer in the "
"range \\\\( 0 \\leq x \\< P \\\\), where \\\\( P \\\\) is a very large prime "
"number currently equal to \\\\( {2^{251}} + 17 \\cdot {2^{192}} + 1 \\\\). "
"When adding, subtracting, or multiplying, if the result falls outside the "
"specified range of the prime number, an overflow (or underflow) occurs, and "
"an appropriate multiple of \\\\( P \\\\) is added or subtracted to bring the "
"result back within the range (i.e., the result is computed \\\\( \\mod P \\"
"\\) )."
msgstr ""
"En El Cairo, si no se especifica el tipo de variable o argumento, su tipo "
"por defecto a un elemento de campo, representado por la palabra clave "
"`felt252`. En el contexto de El Cairo, cuando decimos \"un elemento de "
"campo\" nos referimos a un entero en el rango"

#: src/ch02-02-data-types.md:29
msgid ""
"The most important difference between integers and field elements is "
"division: Division of field elements (and therefore division in Cairo) is "
"unlike regular CPUs division, where integer division \\\\( \\frac{x}{y} \\"
"\\) is defined as \\\\( \\left\\lfloor \\frac{x}{y} \\right\\rfloor \\\\) "
"where the integer part of the quotient is returned (so you get \\"
"\\( \\frac{7}{3} = 2 \\\\)) and it may or may not satisfy the equation \\"
"\\( \\frac{x}{y} \\cdot y == x \\\\), depending on the divisibility of `x` "
"by `y`."
msgstr ""
"La diferencia más importante entre los enteros y los elementos de campo es "
"la división: la división de elementos de campo (y por lo tanto la división "
"en El Cairo) es diferente a la división regular de CPUs, donde la división "
"de enteros"

#: src/ch02-02-data-types.md:34
msgid ""
"In Cairo, the result of \\\\( \\frac{x}{y} \\\\) is defined to always "
"satisfy the equation \\\\( \\frac{x}{y} \\cdot y == x \\\\). If y divides x "
"as integers, you will get the expected result in Cairo (for example \\"
"\\( \\frac{6}{2} \\\\) will indeed result in `3`). But when y does not "
"divide x, you may get a surprising result: for example, since \\\\( 2 \\cdot "
"\\frac{P + 1}{2} = P + 1 \\equiv 1 \\mod P \\\\), the value of \\"
"\\( \\frac{1}{2} \\\\) in Cairo is \\\\( \\frac{P + 1}{2} \\\\) (and not 0 "
"or 0.5), as it satisfies the above equation."
msgstr ""
"En El Cairo, se define el resultado de ♥( \\frac{xÃ3y} l) para satisfacer "
"siempre la ecuaciÃ3n  tambiÃ©n ( \\frac{xÃ3y} \\cdot y == x Ã3. Si y divide "
"x como números enteros, obtendrá el resultado esperado en El Cairo (por "
"ejemplo, Ãfrac{6Ã32} lÃ¡s efectivamente dar lugar a `3`). Pero cuando y no "
"divide x, usted puede obtener un resultado sorprendente: por ejemplo, puesto "
"que Ã2 \\cdot \\frac{P + 1Ã32} = P + 1 \\equiv 1 \\mod PÃ3), el valor de"

#: src/ch02-02-data-types.md:37
msgid "Integer Types"
msgstr "Tipos enteros"

#: src/ch02-02-data-types.md:39
msgid ""
"The felt252 type is a fundamental type that serves as the basis for creating "
"all types in the core library. However, it is highly recommended for "
"programmers to use the integer types instead of the `felt252` type whenever "
"possible, as the `integer` types come with added security features that "
"provide extra protection against potential vulnerabilities in the code, such "
"as overflow and underflow checks. By using these integer types, programmers "
"can ensure that their programs are more secure and less susceptible to "
"attacks or other security threats. An `integer` is a number without a "
"fractional component. This type declaration indicates the number of bits the "
"programmer can use to store the integer. Table 3-1 shows the built-in "
"integer types in Cairo. We can use any of these variants to declare the type "
"of an integer value."
msgstr ""
"El tipo feed252 es un tipo fundamental que sirve de base para crear todos "
"los tipos en la biblioteca central. Sin embargo, es muy recomendable que los "
"programadores utilicen los tipos enteros en lugar del tipo `felt252` siempre "
"que sea posible, ya que los tipos `integer` vienen con características de "
"seguridad añadidas que proporcionan protección adicional contra "
"vulnerabilidades potenciales en el código, tales como controles de "
"desbordamiento y subflujo. Al utilizar estos tipos enteros, los "
"programadores pueden asegurarse de que sus programas son más seguros y menos "
"susceptibles a ataques u otras amenazas de seguridad. Un `integer` es un "
"número sin componente fraccionario. Esta declaración de tipo indica el "
"número de bits que el programador puede utilizar para almacenar el entero. "
"El cuadro 3-1 muestra los tipos enteros incorporados en El Cairo. Podemos "
"utilizar cualquiera de estas variantes para declarar el tipo de valor entero."

#: src/ch02-02-data-types.md:44
msgid "Length"
msgstr "Longitud"

#: src/ch02-02-data-types.md:44
msgid "Unsigned"
msgstr "Sin firmar"

#: src/ch02-02-data-types.md:46
msgid "8-bit"
msgstr "8 bits"

#: src/ch02-02-data-types.md:46
msgid "`u8`"
msgstr "`u8`"

#: src/ch02-02-data-types.md:47
msgid "16-bit"
msgstr "16-bit"

#: src/ch02-02-data-types.md:47
msgid "`u16`"
msgstr "`u16`"

#: src/ch02-02-data-types.md:48 src/ch02-02-data-types.md:52
msgid "32-bit"
msgstr "32-bit"

#: src/ch02-02-data-types.md:48
msgid "`u32`"
msgstr "`u32`"

#: src/ch02-02-data-types.md:49
msgid "64-bit"
msgstr "64-bit"

#: src/ch02-02-data-types.md:49
msgid "`u64`"
msgstr "`u64`"

#: src/ch02-02-data-types.md:50
msgid "128-bit"
msgstr "128-bit"

#: src/ch02-02-data-types.md:50
msgid "`u128`"
msgstr "`u128`"

#: src/ch02-02-data-types.md:51
msgid "256-bit"
msgstr "256-bit"

#: src/ch02-02-data-types.md:51
msgid "`u256`"
msgstr "`u256`"

#: src/ch02-02-data-types.md:52
msgid "`usize`"
msgstr "`usar`"

#: src/ch02-02-data-types.md:57
msgid ""
"Each variant has an explicit size. Note that for now, the `usize` type is "
"just an alias for `u32`; however, it might be useful when in the future "
"Cairo can be compiled to MLIR. As variables are unsigned, they can't contain "
"a negative number. This code will cause the program to panic:"
msgstr ""
"Cada variante tiene un tamaño explícito. Tenga en cuenta que por ahora, el "
"tipo `usize` es sólo un alias para `u32`; sin embargo, podría ser útil "
"cuando en el futuro El Cairo se puede compilar a MLIR. Como las variables no "
"están firmadas, no pueden contener un número negativo. Este código hará que "
"el programa entre en pánico:"

#: src/ch02-02-data-types.md:70
msgid ""
"All integer types previously mentioned fit into a `felt252`, except for "
"`u256` which needs 4 more bits to be stored. Under the hood, `u256` is "
"basically a struct with 2 fields: `u256 {low: u128, high: u128}`."
msgstr ""
"Todos los tipos enteros mencionados anteriormente encajan en un `felt252`, a "
"excepción de `u256` que necesita 4 bits más para almacenarse. Bajo el capó, "
"`u256` es básicamente una estructura con 2 campos: `u256 {bajo: u128, alto: "
"u128."

#: src/ch02-02-data-types.md:72
msgid ""
"Cairo also provides support for signed integers, starting with the prefix "
"`i`. These integers can represent both positive and negative values, with "
"sizes ranging from `i8` to `i128`. Each signed variant can store numbers "
"from \\\\( -({2^{n - 1}}) \\\\) to \\\\( {2^{n - 1}} - 1 \\\\) inclusive, "
"where `n` is the number of bits that variant uses. So an i8 can store "
"numbers from \\\\( -({2^7}) \\\\) to \\\\( {2^7} - 1 \\\\), which equals "
"`-128` to `127`."
msgstr ""
"El Cairo también presta apoyo a los números enteros firmados, empezando por "
"el prefijo `i`. Estos números enteros pueden representar valores positivos y "
"negativos, con tamaños que van de `i8` a `i128`. Cada variante firmada puede "
"almacenar números de فارسى(({2»), a فارسى({2}, a 1 y 1 inclusive, donde `n` "
"es el número de bits que utiliza la variante. Por lo tanto, un i8 puede "
"almacenar números de فارسى({2^7}) a ♥({2^7} - 1 فارسى), lo que equivale a "
"`-128` a `127."

#: src/ch02-02-data-types.md:75
msgid ""
"You can write integer literals in any of the forms shown in Table 3-2. Note "
"that number literals that can be multiple numeric types allow a type suffix, "
"such as `57_u8`, to designate the type. It is also possible to use a visual "
"separator `_` for number literals, in order to improve code readability."
msgstr ""
"Puede escribir literales enteros en cualquiera de las formas mostradas en la "
"Tabla 3-2. Tenga en cuenta que los literales numerales que pueden ser "
"múltiples tipos numéricos permiten que un sufijo de tipo, como `57_u8`, "
"designe el tipo. También es posible utilizar un separador visual `_` para "
"números literales, con el fin de mejorar la legibilidad del código."

#: src/ch02-02-data-types.md:80
msgid "Numeric literals"
msgstr "literales numéricos"

#: src/ch02-02-data-types.md:80 src/appendix-02-operators-and-symbols.md:9
#: src/appendix-08-system-calls.md:177 src/appendix-08-system-calls.md:256
#: src/appendix-08-system-calls.md:331
msgid "Example"
msgstr "Ejemplo"

#: src/ch02-02-data-types.md:82
msgid "Decimal"
msgstr "Decimal"

#: src/ch02-02-data-types.md:82
msgid "`98222`"
msgstr "`98222`"

#: src/ch02-02-data-types.md:83
msgid "Hex"
msgstr "Hex"

#: src/ch02-02-data-types.md:83
msgid "`0xff`"
msgstr "`0xff`"

#: src/ch02-02-data-types.md:84
msgid "Octal"
msgstr "Octal"

#: src/ch02-02-data-types.md:84
msgid "`0o04321`"
msgstr "`0o04321`"

#: src/ch02-02-data-types.md:85
msgid "Binary"
msgstr "Binario"

#: src/ch02-02-data-types.md:85
msgid "`0b01`"
msgstr "`0b01`"

#: src/ch02-02-data-types.md:90
msgid ""
"So how do you know which type of integer to use? Try to estimate the max "
"value your int can have and choose the good size. The primary situation in "
"which you’d use `usize` is when indexing some sort of collection."
msgstr ""
"Así que, ¿cómo sabes qué tipo de entero a utilizar? Trate de estimar el "
"valor máximo que su int puede tener y elegir el buen tamaño. La situación "
"primaria en la que se utiliza `usize` es al indexar algún tipo de colección."

#: src/ch02-02-data-types.md:93
msgid "Numeric Operations"
msgstr "Operaciones numéricas"

#: src/ch02-02-data-types.md:95
msgid ""
"Cairo supports the basic mathematical operations you’d expect for all the "
"integer types: addition, subtraction, multiplication, division, and "
"remainder. Integer division truncates toward zero to the nearest integer. "
"The following code shows how you’d use each numeric operation in a `let` "
"statement:"
msgstr ""
"El Cairo soporta las operaciones matemáticas básicas que usted esperaría "
"para todos los tipos enteros: suma, resta, multiplicación, división, y el "
"resto. La división enteger trunca hacia cero al entero más cercano. El "
"siguiente código muestra cómo usted usaría cada operación numérica en una "
"declaración `let`:"

#: src/ch02-02-data-types.md:102
msgid "// addition\n"
msgstr "// adición\n"

#: src/ch02-02-data-types.md:105
msgid "// subtraction\n"
msgstr "// resta\n"

#: src/ch02-02-data-types.md:108
msgid "// multiplication\n"
msgstr "// multiplicación\n"

#: src/ch02-02-data-types.md:111
msgid "// division\n"
msgstr "// división\n"

#: src/ch02-02-data-types.md:112
msgid "//result is 1\n"
msgstr "//resultado es 1\n"

#: src/ch02-02-data-types.md:113
msgid "//result is 2\n"
msgstr "//resultado es 2\n"

#: src/ch02-02-data-types.md:115
msgid "// remainder\n"
msgstr "// Resto\n"

#: src/ch02-02-data-types.md:116
msgid "// result is 3\n"
msgstr "// resultado es 3\n"

#: src/ch02-02-data-types.md:120
msgid ""
"Each expression in these statements uses a mathematical operator and "
"evaluates to a single value, which is then bound to a variable."
msgstr ""
"Cada expresión en estas declaraciones utiliza un operador matemático y "
"evalúa a un solo valor, que luego se une a una variable."

#: src/ch02-02-data-types.md:123
msgid ""
"[Appendix B](./appendix-02-operators-and-symbols.md#operators) contains a "
"list of all operators that Cairo provides."
msgstr ""
"[Apéndice B](./apéndice-02-operadores-y-símbolos.md#operadores) contiene una "
"lista de todos los operadores que El Cairo proporciona."

#: src/ch02-02-data-types.md:127
msgid "The Boolean Type"
msgstr "El tipo booleano"

#: src/ch02-02-data-types.md:129
msgid ""
"As in most other programming languages, a Boolean type in Cairo has two "
"possible values: `true` and `false`. Booleans are one `felt252` in size. The "
"Boolean type in Cairo is specified using `bool`. For example:"
msgstr ""
"Al igual que en la mayoría de los demás idiomas de programación, un tipo "
"booleano en El Cairo tiene dos valores posibles: `true` y `false`. Los "
"booleanos son de un tamaño `felt252`. El tipo booleano en El Cairo se "
"especifica usando `bool`. Por ejemplo:"

#: src/ch02-02-data-types.md:137
msgid "// with explicit type annotation\n"
msgstr "// con anotación explícita de tipo\n"

#: src/ch02-02-data-types.md:141
msgid ""
"When declaring a `bool` variable, it is mandatory to use either `true` or "
"`false` literals as value. Hence, it is not allowed to use integer literals "
"(i.e. `0` instead of false) for `bool` declarations."
msgstr ""
"Al declarar una variable \" bool \", es obligatorio utilizar literales \" "
"true \" o \" false \" como valor, por lo que no se permite utilizar "
"literales enteros (es decir, \" 0 \", en lugar de falsos) para las "
"declaraciones \" bool \"."

#: src/ch02-02-data-types.md:143
msgid ""
"The main way to use Boolean values is through conditionals, such as an `if` "
"expression. We’ll cover how `if` expressions work in Cairo in the [\"Control "
"Flow\"](./ch02-05-control-flow.md) section."
msgstr ""
"La forma principal de utilizar los valores booleanos es a través de "
"condicionales, como una expresión `if`. Cubriremos cómo funcionan las "
"expresiones `if` en El Cairo en la sección [\"Flow de control\"](./ch02-05-"
"control-flow.md)."

#: src/ch02-02-data-types.md:148
msgid "String Types"
msgstr "Tipos de cadenas"

#: src/ch02-02-data-types.md:150
msgid ""
"Cairo doesn't have a native type for strings but provides two ways to handle "
"them: short strings using simple quotes and ByteArray using double quotes."
msgstr ""
"El Cairo no tiene un tipo nativo para las cadenas, pero proporciona dos "
"maneras de manejarlas: cadenas cortas usando comillas simples y ByteArray "
"usando comillas dobles."

#: src/ch02-02-data-types.md:152
msgid "Short strings"
msgstr "Cadenas cortas"

#: src/ch02-02-data-types.md:154
msgid ""
"A short string is an ASCII string where each character is encoded on one "
"byte (see the [ASCII table](https://www.asciitable.com/)). For example:"
msgstr ""
"Una cadena corta es una cadena ASCII donde cada carácter está codificado en "
"un byte (véase la tabla [ASCII](https://www.asciitable.com/)). Por ejemplo:"

#: src/ch02-02-data-types.md:156
msgid "`'a'` is equivalent to `0x61`"
msgstr "`a' es equivalente a `0x61 '"

#: src/ch02-02-data-types.md:157
msgid "`'b'` is equivalent to `0x62`"
msgstr "`'b' es equivalente a `0x62 '"

#: src/ch02-02-data-types.md:158
msgid "`'c'` is equivalent to `0x63`"
msgstr "`c' es equivalente a `0x63 '"

#: src/ch02-02-data-types.md:159
msgid "`0x616263` is equivalent to `'abc'`."
msgstr "`0x616263` es equivalente a `'abc'."

#: src/ch02-02-data-types.md:161
msgid ""
"Cairo uses the `felt252` for short strings. As the `felt252` is on 251 bits, "
"a short string is limited to 31 characters (31 \\* 8 = 248 bits, which is "
"the maximum multiple of 8 that fits in 251 bits)."
msgstr ""
"El Cairo utiliza el `felt252` para cadenas cortas. Como el `felt252` está en "
"251 bits, una cadena corta está limitada a 31 caracteres (31 \\* 8 = 248 "
"bits, que es el múltiplo máximo de 8 que cabe en 251 bits)."

#: src/ch02-02-data-types.md:163
msgid ""
"You can choose to represent your short string with an hexadecimal value like "
"`0x616263` or by directly writing the string using simple quotes like "
"`'abc'`, which is more convenient."
msgstr ""
"Puede elegir representar su cadena corta con un valor hexadecimal como "
"`0x616263` o escribiendo directamente la cadena usando comillas simples como "
"`'abc`, lo cual es más conveniente."

#: src/ch02-02-data-types.md:165
msgid "Here are some examples of declaring short strings in Cairo:"
msgstr "Estos son algunos ejemplos de declarar cadenas cortas en El Cairo:"

#: src/ch02-02-data-types.md:169 src/ch02-02-data-types.md:187
msgid "'C'"
msgstr "'C'"

#: src/ch02-02-data-types.md:175 src/ch02-02-data-types.md:193
msgid "\"this is a string which has more than 31 characters\""
msgstr "\"esta es una cadena que tiene más de 31 caracteres\""

#: src/ch02-02-data-types.md:181
msgid "Byte Array Strings"
msgstr "Cuerdas de arco de bytes"

#: src/ch02-02-data-types.md:183
msgid ""
"With the `ByteArray` struct added in Cairo 2.4.0, you are not limited to 31 "
"characters anymore. These `ByteArray` strings are written in double quotes "
"like in the following example:"
msgstr ""
"Con la estructura `ByteArray` añadida en El Cairo 2.4.0, ya no se limita a "
"31 caracteres. Estas cadenas `ByteArray` están escritas en comillas dobles "
"como en el siguiente ejemplo:"

#: src/ch02-02-data-types.md:197
msgid "Type Casting"
msgstr "Tipo de fundición"

#: src/ch02-02-data-types.md:199
msgid ""
"In Cairo, you can convert scalar types from one type to another by using the "
"`try_into` and `into` methods provided by the `TryInto` and `Into` traits "
"from the core library."
msgstr ""
"En El Cairo, puede convertir tipos escalares de un tipo a otro utilizando "
"los métodos `try_into` y `into` proporcionados por los rasgos `TryInto` e "
"`Into` de la biblioteca principal."

#: src/ch02-02-data-types.md:201
msgid ""
"The `try_into` method allows for safe type casting when the target type "
"might not fit the source value. Keep in mind that `try_into` returns an "
"`Option<T>` type, which you'll need to unwrap to access the new value."
msgstr ""
"El método `try_into` permite el casting de tipo seguro cuando el tipo de "
"destino puede no encajar con el valor de fuente. Tenga en cuenta que "
"`try_into` devuelve un tipo `Option<TÃ3n, que necesitará desenvolver para "
"acceder al nuevo valor."

#: src/ch02-02-data-types.md:203
msgid ""
"On the other hand, the `into` method can be used for type casting when "
"success is guaranteed, such as when the source type is smaller than the "
"destination type."
msgstr ""
"Por otra parte, el método \" in \" puede utilizarse para la fundición de "
"tipos cuando se garantiza el éxito, por ejemplo cuando el tipo de fuente es "
"menor que el tipo de destino."

#: src/ch02-02-data-types.md:205
msgid ""
"To perform the conversion, call `var.into()` or `var.try_into()` on the "
"source value to cast it to another type. The new variable's type must be "
"explicitly defined, as demonstrated in the example below."
msgstr ""
"Para realizar la conversión, llame a `var.into()` o `var.try_into()` en el "
"valor fuente para lanzarlo a otro tipo. El tipo de la nueva variable debe "
"definirse explícitamente, como se demuestra en el ejemplo a continuación."

#: src/ch02-02-data-types.md:210
msgid ""
"// Since a felt252 might not fit in a u8, we need to unwrap the Option<T> "
"type\n"
msgstr ""
"// Dado que un feeled252 puede no caber en un u8, necesitamos desenvolver el "
"tipo Opción<T>\n"

#: src/ch02-02-data-types.md:216
msgid "// As a felt252 is smaller than a u256, we can use the into() method\n"
msgstr ""
"// Como un feeld252 es más pequeño que un u256, podemos utilizar el método "
"into()\n"

#: src/ch02-02-data-types.md:224
msgid "The Tuple Type"
msgstr "El tipo de tupla"

#: src/ch02-02-data-types.md:226
msgid ""
"A _tuple_ is a general way of grouping together a number of values with a "
"variety of types into one compound type. Tuples have a fixed length: once "
"declared, they cannot grow or shrink in size."
msgstr ""
"Un _tuple_ es una forma general de agrupar una serie de valores con una "
"variedad de tipos en un tipo compuesto. Las tuplas tienen una longitud fija: "
"una vez declaradas, no pueden crecer ni reducirse de tamaño."

#: src/ch02-02-data-types.md:230
msgid ""
"We create a tuple by writing a comma-separated list of values inside "
"parentheses. Each position in the tuple has a type, and the types of the "
"different values in the tuple don’t have to be the same. We’ve added "
"optional type annotations in this example:"
msgstr ""
"Creamos una tupla escribiendo una lista separada por comas de valores dentro "
"de paréntesis. Cada posición en la tupla tiene un tipo, y los tipos de los "
"diferentes valores en la tupla no tienen que ser los mismos. Hemos añadido "
"anotaciones opcionales de tipo en este ejemplo:"

#: src/ch02-02-data-types.md:241
msgid ""
"The variable `tup` binds to the entire tuple because a tuple is considered a "
"single compound element. To get the individual values out of a tuple, we can "
"use pattern matching to destructure a tuple value, like this:"
msgstr ""
"La variable `tup` se une a toda la tupla porque una tupla se considera un "
"único elemento compuesto. Para obtener los valores individuales de una "
"tupla, podemos usar el patrón emparejado para desestructurar un valor de "
"tupla, como este:"

#: src/ch02-02-data-types.md:252
msgid "\"y is 6!\""
msgstr "\"¡Y es 6!\""

#: src/ch02-02-data-types.md:257
msgid ""
"This program first creates a tuple and binds it to the variable `tup`. It "
"then uses a pattern with `let` to take `tup` and turn it into three separate "
"variables, `x`, `y`, and `z`. This is called _destructuring_ because it "
"breaks the single tuple into three parts. Finally, the program prints `y is "
"6!` as the value of `y` is `6`."
msgstr ""
"Este programa crea primero una tupla y la une a la variable `tup`. Luego "
"utiliza un patrón con `let` para tomar `tup` y convertirlo en tres variables "
"separadas, `x`, `y` y `z`. Esto se llama _destructuring_ porque rompe la "
"sola tupla en tres partes. Finalmente, el programa imprime `y es 6!` ya que "
"el valor de `y` es `6`."

#: src/ch02-02-data-types.md:263
msgid ""
"We can also declare the tuple with value and types, and destructure it at "
"the same time. For example:"
msgstr ""
"También podemos declarar la tupla con valor y tipos, y desestructurarla al "
"mismo tiempo. Por ejemplo:"

#: src/ch02-02-data-types.md:272
msgid "The Unit Type ()"
msgstr "Tipo de unidad ()"

#: src/ch02-02-data-types.md:274
msgid ""
"A _unit type_ is a type which has only one value `()`. It is represented by "
"a tuple with no elements. Its size is always zero, and it is guaranteed to "
"not exist in the compiled code."
msgstr ""
"Un _unidad type_ es un tipo que tiene sólo un valor `()`. Está representado "
"por una tupla sin elementos. Su tamaño es siempre cero, y está garantizado "
"que no existe en el código compilado."

#: src/ch02-02-data-types.md:278
msgid ""
"You might be wondering why you would even need a unit type? In Cairo, "
"everything is an expression, and an expression that returns nothing actually "
"returns `()` implicitly."
msgstr ""
"En El Cairo, todo es una expresión, y una expresión que no devuelve nada "
"realmente devuelve `()` implícitamente."

#: src/ch02-02-data-types.md:280
msgid "{{#quiz ../quizzes/ch02-02-data-types.toml}}"
msgstr "quiz../quizzes/ch02-02-data-types.toml"

#: src/ch02-03-functions.md:3
msgid ""
"Functions are prevalent in Cairo code. You’ve already seen one of the most "
"important functions in the language: the `main` function, which is the entry "
"point of many programs. You’ve also seen the `fn` keyword, which allows you "
"to declare new functions."
msgstr ""
"Las funciones son frecuentes en el código de El Cairo. Ya ha visto una de "
"las funciones más importantes en el idioma: la función `main`, que es el "
"punto de entrada de muchos programas. También ha visto la palabra clave "
"`fn`, que le permite declarar nuevas funciones."

#: src/ch02-03-functions.md:8
msgid ""
"Cairo code uses _snake case_ as the conventional style for function and "
"variable names, in which all letters are lowercase and underscores separate "
"words. Here’s a program that contains an example function definition:"
msgstr ""
"El código de El Cairo utiliza _snake case_ como el estilo convencional para "
"nombres de funciones y variables, en el que todas las letras son minúsculas "
"y subraya palabras separadas. He aquí un programa que contiene una "
"definición de función de ejemplo:"

#: src/ch02-03-functions.md:14
msgid "\"Another function.\""
msgstr "\"Otra función\"."

#: src/ch02-03-functions.md:18
msgid "\"Hello, world!\""
msgstr "\"¡Hola, mundo!\""

#: src/ch02-03-functions.md:23
msgid ""
"We define a function in Cairo by entering `fn` followed by a function name "
"and a set of parentheses. The curly brackets tell the compiler where the "
"function body begins and ends."
msgstr ""
"Definimos una función en El Cairo introduciendo `fn` seguida de un nombre de "
"función y un conjunto de paréntesis. Los corchetes rizados indican al "
"compilador donde el cuerpo de función comienza y termina."

#: src/ch02-03-functions.md:27
msgid ""
"We can call any function we’ve defined by entering its name followed by a "
"set of parentheses. Because `another_function` is defined in the program, it "
"can be called from inside the `main` function. Note that we defined "
"`another_function` _before_ the `main` function in the source code; we could "
"have defined it after as well. Cairo doesn’t care where you define your "
"functions, only that they’re defined somewhere in a scope that can be seen "
"by the caller."
msgstr ""
"Podemos llamar a cualquier función que hemos definido introduciendo su "
"nombre seguido de un conjunto de paréntesis. Debido a que `other_function` "
"se define en el programa, se puede llamar desde el interior de la función "
"`main`. Tenga en cuenta que definimos `another_function` _before_ la función "
"`main` en el código fuente; podríamos haberlo definido después también. El "
"Cairo no le importa dónde define sus funciones, sólo que se definen en algún "
"lugar en un ámbito que puede ser visto por el llamante."

#: src/ch02-03-functions.md:34
msgid ""
"Let’s start a new project with Scarb named _functions_ to explore functions "
"further. Place the `another_function` example in _src/lib.cairo_ and run it. "
"You should see the following output:"
msgstr ""
"Comencemos un nuevo proyecto con Scarb llamado _funciones_ para explorar más "
"a fondo las funciones. Coloque el ejemplo `another_function` en _src/lib."
"cairo_ y ejecútelo. Debería ver la siguiente salida:"

#: src/ch02-03-functions.md:49
msgid ""
"The lines execute in the order in which they appear in the `main` function. "
"First the `Hello, world!` message prints, and then `another_function` is "
"called and its message is printed."
msgstr ""
"Las líneas se ejecutan en el orden en que aparecen en la función `main`. "
"Primero se imprime el mensaje `Hello, world!` y luego se llama "
"`other_function` y se imprime su mensaje."

#: src/ch02-03-functions.md:53
msgid "Parameters"
msgstr "Parámetros"

#: src/ch02-03-functions.md:55
msgid ""
"We can define functions to have _parameters_, which are special variables "
"that are part of a function’s signature. When a function has parameters, you "
"can provide it with concrete values for those parameters. Technically, the "
"concrete values are called _arguments_, but in casual conversation, people "
"tend to use the words _parameter_ and _argument_ interchangeably for either "
"the variables in a function’s definition or the concrete values passed in "
"when you call a function."
msgstr ""
"Podemos definir funciones para tener _parámetros_, que son variables "
"especiales que forman parte de la firma de una función. Cuando una función "
"tiene parámetros, se puede proporcionar valores concretos para esos "
"parámetros. Técnicamente, los valores concretos se llaman _argumentos_, pero "
"en la conversación casual, la gente tiende a utilizar las palabras "
"_parametro_ y _argumento_ intercambiable para las variables en la definición "
"de una función o los valores concretos pasados cuando se llama una función."

#: src/ch02-03-functions.md:63
msgid "In this version of `another_function` we add a parameter:"
msgstr "En esta versión de `other_function` añadimos un parámetro:"

#: src/ch02-03-functions.md:75
msgid "Try running this program; you should get the following output:"
msgstr "Intente ejecutar este programa; debe obtener la siguiente salida:"

#: src/ch02-03-functions.md:87
msgid ""
"The declaration of `another_function` has one parameter named `x`. The type "
"of `x` is specified as `felt252`. When we pass `5` in to `another_function`, "
"the `println!` macro puts `5` where the pair of curly brackets containing "
"`x` was in the format string."
msgstr ""
"La declaración `other_function` tiene un parámetro llamado `x`. El tipo de "
"`x` se especifica como `felt252`. Cuando pasamos `5` a `other_function`, la "
"macro `println!` pone `5` donde el par de corchetes rizados que contiene `x` "
"estaba en la cadena de formato."

#: src/ch02-03-functions.md:91
msgid ""
"In function signatures, you _must_ declare the type of each parameter. This "
"is a deliberate decision in Cairo’s design: requiring type annotations in "
"function definitions means the compiler almost never needs you to use them "
"elsewhere in the code to figure out what type you mean. The compiler is also "
"able to give more helpful error messages if it knows what types the function "
"expects."
msgstr ""
"En las firmas de funciones, usted _debe_ declarar el tipo de cada parámetro. "
"Esta es una decisión deliberada en el diseño de El Cairo: requerir "
"anotaciones de tipo en definiciones de funciones significa que el compilador "
"casi nunca necesita que los use en otra parte del código para averiguar qué "
"tipo quiere decir. El compilador también es capaz de dar mensajes de error "
"más útiles si sabe qué tipos espera la función."

#: src/ch02-03-functions.md:97
msgid ""
"When defining multiple parameters, separate the parameter declarations with "
"commas, like this:"
msgstr ""
"Al definir varios parámetros, separe las declaraciones de parámetros con "
"comas, así:"

#: src/ch02-03-functions.md:102
msgid "\"h\""
msgstr "\"h\""

#: src/ch02-03-functions.md:106
msgid "\"The measurement is: {value}{unit_label}\""
msgstr "\"La medición es: {valor} {unit_label}\""

#: src/ch02-03-functions.md:110
msgid ""
"This example creates a function named `print_labeled_measurement` with two "
"parameters. The first parameter is named `value` and is a `u128`. The second "
"is named `unit_label` and is of type `ByteArray` - Cairo's internal type to "
"represent string literals. The function then prints text containing both the "
"`value` and the `unit_label`."
msgstr ""
"Este ejemplo crea una función llamada `print_labeled_measurement` con dos "
"parámetros. El primer parámetro se llama `value` y es un `u128`. El segundo "
"se llama `unit_label` y es de tipo `ByteArray` - El Cairo tipo interno para "
"representar literales de cadena. La función entonces imprime texto que "
"contiene tanto el `value` como el `unit_label`."

#: src/ch02-03-functions.md:114
msgid ""
"Let’s try running this code. Replace the program currently in your "
"_functions_ project’s _src/lib.cairo_ file with the preceding example and "
"run it using `scarb cairo-run`:"
msgstr ""
"Vamos a intentar ejecutar este código. Reemplace el programa actualmente en "
"el archivo _src/lib.cairo_ de su proyecto _funciones_ con el ejemplo "
"anterior y ejecutarlo usando `scarb cairo-run`:"

#: src/ch02-03-functions.md:127
msgid ""
"Because we called the function with `5` as the value for value and `\"h\"` "
"as the value for `unit_label`, the program output contains those values."
msgstr ""
"Debido a que llamamos a la función con `5` como el valor para el valor y "
"`\"h\"` como el valor para `unit_label`, la salida del programa contiene "
"esos valores."

#: src/ch02-03-functions.md:129
msgid "Named Parameters"
msgstr "Parámetros designados"

#: src/ch02-03-functions.md:131
msgid ""
"In Cairo, named parameters allow you to specify the names of arguments when "
"you call a function. This makes the function calls more readable and self-"
"descriptive. If you want to use named parameters, you need to specify the "
"name of the parameter and the value you want to pass to it. The syntax is "
"`parameter_name: value`. If you pass a variable that has the same name as "
"the parameter, you can simply write `:parameter_name` instead of "
"`parameter_name: variable_name`."
msgstr ""
"En El Cairo, los parámetros nombrados le permiten especificar los nombres de "
"los argumentos cuando llama a una función. Esto hace que las llamadas a la "
"función sean más legibles y autodescriptibles. Si desea utilizar parámetros "
"nombrados, necesita especificar el nombre del parámetro y el valor que desea "
"pasar a él. La sintaxis es `parameter_name: value`. Si pasa una variable que "
"tiene el mismo nombre que el parámetro, puede simplemente escribir `:"
"parameter_name` en lugar de `parameter_name: variable_name`."

#: src/ch02-03-functions.md:134
#: src/ch09-01-unrecoverable-errors-with-panic.md:72
#: src/ch09-02-recoverable-errors.md:141
#: src/appendix-03-derivable-traits.md:151
#: src/appendix-03-derivable-traits.md:200
msgid "Here is an example:"
msgstr "He aquí un ejemplo:"

#: src/ch02-03-functions.md:149
msgid "Statements and Expressions"
msgstr "Declaraciones y expresiones"

#: src/ch02-03-functions.md:151
msgid ""
"Function bodies are made up of a series of statements optionally ending in "
"an expression. So far, the functions we’ve covered haven’t included an "
"ending expression, but you have seen an expression as part of a statement. "
"Because Cairo is an expression-based language, this is an important "
"distinction to understand. Other languages don’t have the same distinctions, "
"so let’s look at what statements and expressions are and how their "
"differences affect the bodies of functions."
msgstr ""
"Los cuerpos funcionales se componen de una serie de declaraciones "
"opcionalmente que terminan en una expresión. Hasta ahora, las funciones que "
"hemos cubierto no han incluido una expresión final, pero usted ha visto una "
"expresión como parte de una declaración. Debido a que El Cairo es un "
"lenguaje basado en la expresión, esta es una distinción importante para "
"entender. Otros idiomas no tienen las mismas distinciones, así que vamos a "
"ver qué declaraciones y expresiones son y cómo sus diferencias afectan a los "
"cuerpos de funciones."

#: src/ch02-03-functions.md:159
msgid ""
"**Statements** are instructions that perform some action and do not return a "
"value."
msgstr ""
"**Las declaraciones** son instrucciones que realizan alguna acción y no "
"devuelven un valor."

#: src/ch02-03-functions.md:161
msgid ""
"**Expressions** evaluate to a resultant value. Let’s look at some examples."
msgstr ""
"**Expresiones** evaluar a un valor resultante. Echemos un vistazo a algunos "
"ejemplos."

#: src/ch02-03-functions.md:163
msgid ""
"We’ve actually already used statements and expressions. Creating a variable "
"and assigning a value to it with the `let` keyword is a statement. In "
"Listing 2-1, `let y = 6;` is a statement."
msgstr ""
"En realidad ya hemos usado frases y expresiones. Crear una variable y "
"asignarle un valor con la palabra clave `let` es una declaración. En Listado "
"2-1, `let y = 6;` es una declaración."

#: src/ch02-03-functions.md:173
msgid ""
"<span class=\"caption\">Listing 2-1: A `main` function declaration "
"containing one statement</span>"
msgstr ""
"<span class=\"caption\">Lista 2-1: Una declaración de función `main` que "
"contiene una declaración</span>"

#: src/ch02-03-functions.md:175
msgid ""
"Function definitions are also statements; the entire preceding example is a "
"statement in itself."
msgstr ""
"Las definiciones de funciones también son declaraciones; todo el ejemplo "
"anterior es una declaración en sí misma."

#: src/ch02-03-functions.md:177
msgid ""
"Statements do not return values. Therefore, you can’t assign a `let` "
"statement to another variable, as the following code tries to do; you’ll get "
"an error:"
msgstr ""
"Las declaraciones no devuelven valores. Por lo tanto, no puede asignar una "
"instrucción `let` a otra variable, como intenta hacer el siguiente código; "
"obtendrá un error:"

#: src/ch02-03-functions.md:186
msgid "When you run this program, the error you’ll get looks like this:"
msgstr "Cuando ejecute este programa, el error que obtendrá se ve así:"

#: src/ch02-03-functions.md:226
msgid ""
"The `let y = 6` statement does not return a value, so there isn’t anything "
"for `x` to bind to. This is different from what happens in other languages, "
"such as C and Ruby, where the assignment returns the value of the "
"assignment. In those languages, you can write `x = y = 6` and have both `x` "
"and `y` have the value `6`; that is not the case in Cairo."
msgstr ""
"La declaración `let y = 6` no devuelve un valor, por lo que no hay nada a lo "
"que `x` deba vincularse. Esto es diferente de lo que ocurre en otros "
"idiomas, como C y Ruby, donde la asignación devuelve el valor de la "
"asignación. En esos idiomas, puede escribir `x = y = 6` y tener tanto `x` "
"como `y` tienen el valor `6`; ese no es el caso en El Cairo."

#: src/ch02-03-functions.md:232
msgid ""
"Expressions evaluate to a value and make up most of the rest of the code "
"that you’ll write in Cairo. Consider a math operation, such as `5 + 6`, "
"which is an expression that evaluates to the value `11`. Expressions can be "
"part of statements: in Listing 2-1, the `6` in the statement `let y = 6;` is "
"an expression that evaluates to the value `6`."
msgstr ""
"Las expresiones evalúan a un valor y constituyen la mayor parte del resto "
"del código que escribirá en El Cairo. Considere una operación matemática, "
"como `5 + 6`, que es una expresión que evalúa al valor `11`. Las expresiones "
"pueden ser parte de las declaraciones: en Listado 2-1, el `6` en la "
"declaración `let y = 6;` es una expresión que evalúa al valor `6`."

#: src/ch02-03-functions.md:238
msgid ""
"Calling a function is an expression since it always evaluates to a value: "
"the function's explicit return value, if specified, or the 'unit' type `()` "
"otherwise."
msgstr ""
"Llamar a una función es una expresión ya que siempre se evalúa a un valor: "
"el valor de retorno explícito de la función, si se especifica, o el tipo "
"\"unidad\" `()` de lo contrario."

#: src/ch02-03-functions.md:240
msgid ""
"A new scope block created with curly brackets is an expression, for example:"
msgstr ""
"Un nuevo bloque de alcance creado con corchetes rizados es una expresión, "
"por ejemplo:"

#: src/ch02-03-functions.md:249
msgid "\"The value of y is: {}\""
msgstr "\"El valor de y es:"

#: src/ch02-03-functions.md:253
msgid "This expression:"
msgstr "Esta expresión:"

#: src/ch02-03-functions.md:262
msgid ""
"is a block that, in this case, evaluates to `4`. That value gets bound to "
"`y` as part of the `let` statement. Note that the `x + 1` line doesn’t have "
"a semicolon at the end, which is unlike most of the lines you’ve seen so "
"far. Expressions do not include ending semicolons. If you add a semicolon to "
"the end of an expression, you turn it into a statement, and it will then not "
"return a value. Keep this in mind as you explore function return values and "
"expressions next."
msgstr ""
"es un bloque que, en este caso, evalúa a `4`. Ese valor se fija en `y` como "
"parte de la declaración `let`. Tenga en cuenta que la línea `x + 1` no tiene "
"un punto y coma al final, que es diferente de la mayoría de las líneas que "
"ha visto hasta ahora. Las expresiones no incluyen punto y coma. Si añade un "
"punto y coma al final de una expresión, lo convierte en una declaración, y "
"entonces no devolverá un valor. Tenga esto en cuenta mientras explora "
"valores y expresiones de retorno de función siguiente."

#: src/ch02-03-functions.md:270
msgid "Functions with Return Values"
msgstr "Funciones con valores de retorno"

#: src/ch02-03-functions.md:272
msgid ""
"Functions can return values to the code that calls them. We don’t name "
"return values, but we must declare their type after an arrow (`->`). In "
"Cairo, the return value of the function is synonymous with the value of the "
"final expression in the block of the body of a function. You can return "
"early from a function by using the `return` keyword and specifying a value, "
"but most functions return the last expression implicitly. Here’s an example "
"of a function that returns a value:"
msgstr ""
"Las funciones pueden devolver valores al código que los llama. No nombramos "
"valores de retorno, pero debemos declarar su tipo después de una flecha "
"(`-). En El Cairo, el valor de retorno de la función es sinónimo del valor "
"de la expresión final en el bloque del cuerpo de una función. Puede volver "
"temprano de una función utilizando la palabra clave `return` y especificando "
"un valor, pero la mayoría de las funciones devuelven la última expresión "
"implícitamente. Aquí hay un ejemplo de una función que devuelve un valor:"

#: src/ch02-03-functions.md:291
msgid ""
"There are no function calls, or even `let` statements in the `five` function—"
"just the number `5` by itself. That’s a perfectly valid function in Cairo. "
"Note that the function’s return type is specified too, as `-> u32`. Try "
"running this code; the output should look like this:"
msgstr ""
"No hay llamadas a funciones, o incluso `let` instrucciones en la función "
"`cinco`—sólo el número `5` por sí mismo. Esa es una función perfectamente "
"válida en El Cairo. Tenga en cuenta que el tipo de retorno de la función se "
"especifica también, como `-> u32`. Intente ejecutar este código; la salida "
"debe verse así:"

#: src/ch02-03-functions.md:306
msgid ""
"The `5` in `five` is the function’s return value, which is why the return "
"type is `u32`. Let’s examine this in more detail. There are two important "
"bits: first, the line `let x = five();` shows that we’re using the return "
"value of a function to initialize a variable. Because the function `five` "
"returns a `5`, that line is the same as the following:"
msgstr ""
"El `5` en `cinco` es el valor de retorno de la función, por lo que el tipo "
"de retorno es `u32`. Examinemos esto con más detalle. Hay dos bits "
"importantes: primero, la línea `let x = cinco();` muestra que estamos "
"utilizando el valor de retorno de una función para inicializar una variable. "
"Debido a que la función `cinco` devuelve un `5`, esa línea es la misma que "
"la siguiente:"

#: src/ch02-03-functions.md:316
msgid ""
"Second, the `five` function has no parameters and defines the type of the "
"return value, but the body of the function is a lonely `5` with no semicolon "
"because it’s an expression whose value we want to return. Let’s look at "
"another example:"
msgstr ""
"En segundo lugar, la función `cinco` no tiene parámetros y define el tipo de "
"valor de retorno, pero el cuerpo de la función es un solitario `5` sin punto "
"y coma porque es una expresión cuyo valor queremos devolver. Veamos otro "
"ejemplo:"

#: src/ch02-03-functions.md:333
msgid ""
"Running this code will print `x = 6`. But if we place a semicolon at the end "
"of the line containing `x + 1`, changing it from an expression to a "
"statement, we’ll get an error:"
msgstr ""
"Ejecutando este código se imprimirá `x = 6`. Pero si colocamos un punto y "
"coma al final de la línea que contiene `x + 1`, cambiándolo de una expresión "
"a una instrucción, obtendremos un error:"

#: src/ch02-03-functions.md:349
msgid ""
"```shell\n"
"$ scarb cairo-run \n"
"   Compiling no_listing_22_function_return_invalid v0.1.0 (listings/ch02-"
"common-programming-concepts/no_listing_24_function_return_invalid/Scarb."
"toml)\n"
"error: Unexpected return type. Expected: \"core::integer::u32\", found: "
"\"()\".\n"
" --> listings/ch02-common-programming-concepts/"
"no_listing_24_function_return_invalid/src/lib.cairo:9:28\n"
"fn plus_one(x: u32) -> u32 {\n"
"                           ^\n"
"\n"
"error: could not compile `no_listing_22_function_return_invalid` due to "
"previous error\n"
"error: `scarb metadata` exited with error\n"
"\n"
"```"
msgstr ""
"Error al compilar no_listing_22_function_return_invalid v0.1.0 (listas/ch02-"
"common-programming-concepts/no_listing_24_function_return_invalid/Scarb."
"toml): Tipo de retorno inesperado. Se esperaba: \"core::integer::u32\", "
"encontrado: \"()\". --> listings/ch02-common-programming-concepts/"
"no_listing_24_function_return_invalid/src/lib.cairo:9:28 fn plus_one(x: u32) "
"-> u32 { ^ error: no se pudo compilar `no_listing_22_function_invalid` "
"debido a error previo: `metadatos de escarb` salidos con error"

#: src/ch02-03-functions.md:362
msgid ""
"The main error message, `Unexpected return type`, reveals the core issue "
"with this code. The definition of the function `plus_one` says that it will "
"return an `u32`, but statements don’t evaluate to a value, which is "
"expressed by `()`, the unit type. Therefore, nothing is returned, which "
"contradicts the function definition and results in an error."
msgstr ""
"El mensaje de error principal, `Tipo de retorno inesperado`, revela el "
"problema principal con este código. La definición de la función `plus_one` "
"dice que devolverá un `u32`, pero las declaraciones no evalúan a un valor, "
"que se expresa por `()`, el tipo de unidad. Por lo tanto, no se devuelve "
"nada, lo que contradice la definición de la función y resulta en un error."

#: src/ch02-03-functions.md:368
msgid "{{#quiz ../quizzes/ch02-03-functions.toml}}"
msgstr "quiz../quizzes/ch02-03-functions.toml"

#: src/ch02-04-comments.md:3
msgid ""
"All programmers strive to make their code easy to understand, but sometimes "
"extra explanation is warranted. In these cases, programmers leave comments "
"in their source code that the compiler will ignore but people reading the "
"source code may find useful."
msgstr ""
"Todos los programadores se esfuerzan por hacer su código fácil de entender, "
"pero a veces se justifica una explicación adicional. En estos casos, los "
"programadores dejan comentarios en su código fuente que el compilador "
"ignorará, pero las personas que leen el código fuente pueden encontrar útil."

#: src/ch02-04-comments.md:5
msgid "Here’s a simple comment:"
msgstr "He aquí un simple comentario:"

#: src/ch02-04-comments.md:8
msgid "// hello, world\n"
msgstr "// hola, mundo\n"

#: src/ch02-04-comments.md:11
msgid ""
"In Cairo, the idiomatic comment style starts a comment with two slashes, and "
"the comment continues until the end of the line. For comments that extend "
"beyond a single line, you’ll need to include `//` on each line, like this:"
msgstr ""
"En El Cairo, el estilo de comentario idiomático comienza un comentario con "
"dos cortes, y el comentario continúa hasta el final de la línea. Para "
"comentarios que se extienden más allá de una sola línea, tendrá que incluir "
"`//` en cada línea, así:"

#: src/ch02-04-comments.md:14
msgid ""
"// So we’re doing something complicated here, long enough that we need\n"
"// multiple lines of comments to do it! Whew! Hopefully, this comment will\n"
"// explain what’s going on.\n"
msgstr ""
"// Así que estamos haciendo algo complicado aquí, el tiempo suficiente que "
"necesitamos // múltiples líneas de comentarios para hacerlo! Whew! Con "
"suerte, este comentario // explicar lo que está pasando.\n"

#: src/ch02-04-comments.md:19
msgid "Comments can also be placed at the end of lines containing code:"
msgstr ""
"Los comentarios también se pueden colocar al final de las líneas que "
"contienen código:"

#: src/ch02-04-comments.md:23
msgid "// return the sum of 1 and 4\n"
msgstr "// devolver la suma de 1 y 4\n"

#: src/ch02-04-comments.md:27
msgid ""
"But you’ll more often see them used in this format, with the comment on a "
"separate line above the code it’s annotating:"
msgstr ""
"Pero usted verá más a menudo que se utilizan en este formato, con el "
"comentario en una línea separada por encima del código que está anotando:"

#: src/ch02-04-comments.md:31
msgid "// this function performs a simple addition\n"
msgstr "// esta función realiza una simple adición\n"

#: src/ch02-04-comments.md:36
msgid "Item-level Documentation"
msgstr "Documentación a nivel de tema"

#: src/ch02-04-comments.md:38
msgid ""
"Item-level documentation comments refer to specific items such as functions, "
"implementations, traits, etc. They are prefixed with three slashes (`///`). "
"These comments provide a detailed description of the item, examples of "
"usage, and any conditions that might cause a panic. In case of functions, "
"the comments may also include separate sections for parameter and return "
"value descriptions."
msgstr ""
"Los comentarios de documentación a nivel de ítem se refieren a ítems "
"específicos tales como funciones, implementaciones, rasgos, etc. Están "
"prefijados con tres cortes (`///`). Estos comentarios proporcionan una "
"descripción detallada del ítem, ejemplos de uso, y cualquier condición que "
"pueda causar pánico. En caso de funciones, los comentarios también pueden "
"incluir secciones separadas para descripciones de parámetros y valores de "
"retorno."

#: src/ch02-04-comments.md:41
msgid ""
"/// Returns the sum of `arg1` and `arg2`.\n"
"/// `arg1` cannot be zero.\n"
"///\n"
"/// # Panics\n"
"///\n"
"/// This function will panic if `arg1` is `0`.\n"
"///\n"
"/// # Examples\n"
"///\n"
"/// ```\n"
"/// let a: felt252 = 2;\n"
"/// let b: felt252 = 3;\n"
"/// let c: felt252 = add(a, b);\n"
"/// assert(c == a + b, \"Should equal a + b\");\n"
"/// ```\n"
msgstr ""
"/// Devuelve la suma de `arg1` y `arg2`. //// `arg1` no puede ser "
"cero. /// //// # Pánicos // ///// Esta función entrará en pánico si `arg1` "
"es `0`. /// /// # Ejemplos // /// // // let a: feeled252 = 2; /// let b: "
"feeled252 = 3; // let c: feeled252 = add(a, b); // asser(c) == a + b, "
"\"Debería igualar a + b\"); /// •\n"

#: src/ch02-04-comments.md:62
msgid "Module Documentation"
msgstr "Documentación del módulo"

#: src/ch02-04-comments.md:64
msgid ""
"Module documentation comments provide an overview of the entire module, "
"including its purpose and examples of use. These comments are meant to be "
"placed above the module they're describing and are prefixed with `//!`. This "
"type of documentation gives a broad understanding of what the module does "
"and how it can be used."
msgstr ""
"Los comentarios de la documentación del módulo proporcionan una visión "
"general de todo el módulo, incluyendo su propósito y ejemplos de uso. Estos "
"comentarios están destinados a colocarse por encima del módulo que están "
"describiendo y están prefijados con `//!`. Este tipo de documentación da una "
"amplia comprensión de lo que el módulo hace y cómo se puede utilizar."

#: src/ch02-04-comments.md:67
msgid ""
"//! # my_module and implementation\n"
"//!\n"
"//! This is an example description of my_module and some of its features.\n"
"//!\n"
"//! # Examples\n"
"//!\n"
"//! ```\n"
"//! mod my_other_module {\n"
"//!   use path::to::my_module;\n"
"//!\n"
"//!   fn foo() {\n"
"//!     my_module.bar();\n"
"//!   }\n"
"//! }\n"
"//! ```\n"
msgstr ""
"//! # my_module and implementation //! //! Esta es una descripción de "
"ejemplo de my_module y algunas de sus características. //! //! # "
"Ejemplos //! //! //! mod my_other_module { //! use path:::to::"
"my_module; //! //! fn foo() { //! my_module.bar(); //! } //! } //!\n"

#: src/ch02-04-comments.md:82
msgid "// rest of implementation...\n"
msgstr "// resto de la aplicación...\n"

#: src/ch02-04-comments.md:86
msgid "{{#quiz ../quizzes/ch02-04-comments.toml}}"
msgstr "quiz../quizzes/ch02-04-coments.toml"

#: src/ch02-05-control-flow.md:3
msgid ""
"The ability to run some code depending on whether a condition is true and to "
"run some code repeatedly while a condition is true are basic building blocks "
"in most programming languages. The most common constructs that let you "
"control the flow of execution of Cairo code are if expressions and loops."
msgstr ""
"La capacidad de ejecutar algún código dependiendo de si una condición es "
"verdadera y ejecutar algún código repetidamente mientras que una condición "
"es verdadera son bloques básicos de construcción en la mayoría de los "
"lenguajes de programación. Los constructos más comunes que le permiten "
"controlar el flujo de ejecución de código de El Cairo son si expresiones y "
"bucles."

#: src/ch02-05-control-flow.md:5
msgid "`if` Expressions"
msgstr "`if` Expresiones"

#: src/ch02-05-control-flow.md:7
msgid ""
"An if expression allows you to branch your code depending on conditions. You "
"provide a condition and then state, “If this condition is met, run this "
"block of code. If the condition is not met, do not run this block of code.”"
msgstr ""
"Una expresión if le permite ramificar su código dependiendo de las "
"condiciones. Usted proporciona una condición y luego indica: “Si esta "
"condición se cumple, ejecute este bloque de código. Si la condición no se "
"cumple, no ejecute este bloque de código.”"

#: src/ch02-05-control-flow.md:9
msgid ""
"Create a new project called _branches_ in your _cairo_projects_ directory to "
"explore the `if` expression. In the _src/lib.cairo_ file, input the "
"following:"
msgstr ""
"Cree un nuevo proyecto llamado _branches_ en su directorio _cairo_projects_ "
"para explorar la expresión `if`. En el archivo _src/lib.cairo_, introduzca "
"lo siguiente:"

#: src/ch02-05-control-flow.md:16
msgid "\"condition was true and number = {}\""
msgstr "\"la condición era verdadera y el número = \""

#: src/ch02-05-control-flow.md:18
msgid "\"condition was false and number = {}\""
msgstr "\"la condición era falsa y el número = \""

#: src/ch02-05-control-flow.md:23
msgid ""
"All `if` expressions start with the keyword `if`, followed by a condition. "
"In this case, the condition checks whether or not the variable `number` has "
"a value equal to 5. We place the block of code to execute if the condition "
"is `true` immediately after the condition inside curly brackets."
msgstr ""
"Todas las expresiones `if` comienzan con la palabra clave `if`, seguida de "
"una condición. En este caso, la condición comprueba si la variable `number` "
"tiene o no un valor igual a 5. Colocamos el bloque de código para ejecutar "
"si la condición es `true` inmediatamente después de la condición dentro de "
"corchetes rizados."

#: src/ch02-05-control-flow.md:25
msgid ""
"Optionally, we can also include an `else` expression, which we chose to do "
"here, to give the program an alternative block of code to execute should the "
"condition evaluate to `false`. If you don’t provide an `else` expression and "
"the condition is `false`, the program will just skip the `if` block and move "
"on to the next bit of code."
msgstr ""
"Opcionalmente, también podemos incluir una expresión `else`, que elegimos "
"hacer aquí, para dar al programa un bloque alternativo de código para "
"ejecutar si la condición evalúa a `falso`. Si no proporcionas una expresión "
"`else` y la condición es `falso`, el programa simplemente saltará el bloque "
"`if` y pasará al siguiente bit de código."

#: src/ch02-05-control-flow.md:27
msgid "Try running this code; you should see the following output:"
msgstr "Intente ejecutar este código; debería ver la siguiente salida:"

#: src/ch02-05-control-flow.md:39
msgid ""
"Let’s try changing the value of `number` to a value that makes the condition "
"`true` to see what happens:"
msgstr ""
"Vamos a tratar de cambiar el valor de `número` a un valor que hace que la "
"condición `verdadero` para ver lo que sucede:"

#: src/ch02-05-control-flow.md:51
msgid ""
"It’s also worth noting that the condition in this code must be a `bool`. If "
"the condition isn’t a `bool`, we’ll get an error. For example, try running "
"the following code:"
msgstr ""
"También vale la pena señalar que la condición en este código debe ser un "
"`bool`. Si la condición no es un `bool`, vamos a obtener un error. Por "
"ejemplo, intente ejecutar el siguiente código:"

#: src/ch02-05-control-flow.md:58
msgid "\"number was three\""
msgstr "\"El número era tres\""

#: src/ch02-05-control-flow.md:63
msgid ""
"The `if` condition evaluates to a value of 3 this time, and Cairo throws an "
"error:"
msgstr ""
"La condición `if` evalúa a un valor de 3 esta vez, y El Cairo lanza un error:"

#: src/ch02-05-control-flow.md:77
msgid ""
"The error indicates that Cairo inferred the type of `number` to be a `bool` "
"based on its later use as a condition of the `if` statement. It tries to "
"create a `bool` from the value `3`, but Cairo doesn't support instantiating "
"a `bool` from a numeric literal anyway - you can only use `true` or `false` "
"to create a `bool`. Unlike languages such as Ruby and JavaScript, Cairo will "
"not automatically try to convert non-Boolean types to a Boolean. If we want "
"the `if` code block to run only when a number is not equal to 0, for "
"example, we can change the if expression to the following:"
msgstr ""
"El error indica que El Cairo indujo el tipo de `número` a ser un `bool` "
"basado en su uso posterior como condición de la declaración `if`. Intenta "
"crear un `bool` a partir del valor `3`, pero El Cairo no soporta la "
"instancia de un `bool` de un literal numérico de todos modos - sólo se puede "
"utilizar `true` o `false` para crear un `bool`. A diferencia de idiomas como "
"Ruby y JavaScript, El Cairo no intentará automáticamente convertir tipos no "
"booleanos a un booleano. Si queremos que el bloque de código `if` se ejecute "
"sólo cuando un número no es igual a 0, por ejemplo, podemos cambiar la "
"expresión si es la siguiente:"

#: src/ch02-05-control-flow.md:91
msgid "\"number was something other than zero\""
msgstr "\"El número era algo más que cero\""

#: src/ch02-05-control-flow.md:97
msgid "Running this code will print `number was something other than zero`."
msgstr "Ejecutar este código imprimirá `número era algo más que cero`."

#: src/ch02-05-control-flow.md:99
msgid "Handling Multiple Conditions with `else if`"
msgstr "Manejo de múltiples condiciones con `else if`"

#: src/ch02-05-control-flow.md:101
msgid ""
"You can use multiple conditions by combining `if` and `else` in an `else if` "
"expression. For example:"
msgstr ""
"Puede utilizar múltiples condiciones combinando `if` y `else` en una "
"expresión `else if`. Por ejemplo:"

#: src/ch02-05-control-flow.md:108
msgid "\"number is 12\""
msgstr "\"El número es 12\""

#: src/ch02-05-control-flow.md:110
msgid "\"number is 3\""
msgstr "\"número es 3\""

#: src/ch02-05-control-flow.md:112
msgid "\"number minus 2 is 1\""
msgstr "\"número menos 2 es 1\""

#: src/ch02-05-control-flow.md:114
msgid "\"number not found\""
msgstr "\"número no encontrado\""

#: src/ch02-05-control-flow.md:119
msgid ""
"This program has four possible paths it can take. After running it, you "
"should see the following output:"
msgstr ""
"Este programa tiene cuatro rutas posibles que puede tomar. Después de "
"ejecutarlo, debe ver la siguiente salida:"

#: src/ch02-05-control-flow.md:131
msgid ""
"When this program executes, it checks each `if` expression in turn and "
"executes the first body for which the condition evaluates to `true`. Note "
"that even though `number - 2 == 1` is `true`, we don’t see the output "
"`number minus 2 is 1` nor do we see the `number not found` text from the "
"`else` block. That’s because Cairo only executes the block for the first "
"true condition, and once it finds one, it doesn’t even check the rest. Using "
"too many `else if` expressions can clutter your code, so if you have more "
"than one, you might want to refactor your code. [Chapter 6](./ch06-02-the-"
"match-control-flow-construct.md) describes a powerful Cairo branching "
"construct called `match` for these cases."
msgstr ""
"Cuando este programa se ejecuta, comprueba cada expresión `if` a su vez y "
"ejecuta el primer cuerpo para el cual la condición se evalúa a `verdadero`. "
"Tenga en cuenta que aunque `número - 2 == 1` es `verdadero`, no vemos la "
"salida `número menos 2 es 1` ni vemos el texto `número no encontrado` del "
"bloque `else`. Eso es porque El Cairo sólo ejecuta el bloque para la primera "
"condición verdadera, y una vez que encuentra uno, ni siquiera comprueba el "
"resto. Usando demasiados `else ` si'expresiones pueden desordenar su código, "
"así que si usted tiene más de uno, es posible que desee refactorizar su "
"código. [Capítulo 6](./ch06-02-the-match-control-flow-construct.md) describe "
"una poderosa construcción ramificada de El Cairo llamada `match` para estos "
"casos."

#: src/ch02-05-control-flow.md:135
msgid "Using `if` in a `let` Statement"
msgstr "Uso de `si` en una declaración `let`"

#: src/ch02-05-control-flow.md:137
msgid ""
"Because `if` is an expression, we can use it on the right side of a `let` "
"statement to assign the outcome to a variable."
msgstr ""
"Dado que `if` es una expresión, podemos utilizarla en el lado derecho de una "
"instrucción `let` para asignar el resultado a una variable."

#: src/ch02-05-control-flow.md:149
msgid "\"condition was true and number is {}\""
msgstr "\"la condición era verdadera y el número es \""

#: src/ch02-05-control-flow.md:164
msgid ""
"The `number` variable will be bound to a value based on the outcome of the "
"`if` expression, which will be 5 here."
msgstr ""
"La variable \" número \" se vinculará a un valor basado en el resultado de "
"la expresión \" si \", que será 5 aquí."

#: src/ch02-05-control-flow.md:166
msgid "Repetition with Loops"
msgstr "Repetición con Loops"

#: src/ch02-05-control-flow.md:168
msgid ""
"It’s often useful to execute a block of code more than once. For this task, "
"Cairo provides a simple loop syntax, which will run through the code inside "
"the loop body to the end and then start immediately back at the beginning. "
"To experiment with loops, let’s create a new project called _loops_."
msgstr ""
"A menudo es útil ejecutar un bloque de código más de una vez. Para esta "
"tarea, El Cairo proporciona una sintaxis de bucle simple, que se ejecutará a "
"través del código dentro del cuerpo de bucle hasta el final y luego empezar "
"inmediatamente de nuevo al principio. Para experimentar con bucles, vamos a "
"crear un nuevo proyecto llamado _loops_."

#: src/ch02-05-control-flow.md:170
msgid "Cairo has two kinds of loops: `loop` and `while`."
msgstr "El Cairo tiene dos tipos de bucles: `loop` y `while`."

#: src/ch02-05-control-flow.md:172
msgid "Repeating Code with `loop`"
msgstr "Código de repetición con `loop`"

#: src/ch02-05-control-flow.md:174
msgid ""
"The `loop` keyword tells Cairo to execute a block of code over and over "
"again forever or until you explicitly tell it to stop."
msgstr ""
"La palabra clave `loop` le dice a El Cairo que ejecute un bloque de código "
"una y otra vez para siempre o hasta que le digas explícitamente que se "
"detenga."

#: src/ch02-05-control-flow.md:176
msgid ""
"As an example, change the _src/lib.cairo_ file in your _loops_ directory to "
"look like this:"
msgstr ""
"Como ejemplo, cambie el archivo _src/lib.cairo_ en su directorio _loops_ "
"para que tenga este aspecto:"

#: src/ch02-05-control-flow.md:181
msgid "\"again!\""
msgstr "\"¡Otra vez!\""

#: src/ch02-05-control-flow.md:189
msgid ""
"Note: This program would not compile without a break condition. For the "
"purpose of the example, we added a `break` statement that will never be "
"reached, but satisfies the compiler."
msgstr ""
"Nota: Este programa no se compilaría sin una condición de ruptura. Para el "
"propósito del ejemplo, añadimos una instrucción `break` que nunca será "
"alcanzada, pero satisface el compilador."

#: src/ch02-05-control-flow.md:191
msgid ""
"When we run this program, we’ll see `again!` printed over and over "
"continuously until either the program runs out of gas or we stop the program "
"manually. Most terminals support the keyboard shortcut ctrl-c to interrupt a "
"program that is stuck in a continual loop. Give it a try:"
msgstr ""
"Cuando ejecutemos este programa, veremos `¡de nuevo!` impreso una y otra vez "
"continuamente hasta que el programa se quede sin gasolina o detengamos el "
"programa manualmente. La mayoría de los terminales soportan el acceso "
"directo al teclado ctrl-c para interrumpir un programa que está atascado en "
"un bucle continuo."

#: src/ch02-05-control-flow.md:193
msgid ""
"```shell\n"
"$ scarb cairo-run --available-gas=20000000\n"
"   Compiling loops v0.1.0 (file:///projects/loops)\n"
"    Finished release target(s) in 0 seconds\n"
"     Running loops\n"
"again!\n"
"again!\n"
"again!\n"
"^Cagain!\n"
"```"
msgstr ""
"Concha $ scarb cairo-run --disponible-gas=20000000 Compilando bucles v0.1.0 "
"(file:///projects/loops) Finalizado lanzamiento objetivo(s) en 0 segundos "
"¡Correndo bucles de nuevo! de nuevo!"

#: src/ch02-05-control-flow.md:204
msgid ""
"The symbol `^C` represents where you pressed ctrl-c. You may or may not see "
"the word `again!` printed after the ^C, depending on where the code was in "
"the loop when it received the interrupt signal."
msgstr ""
"El símbolo C` representa donde se pulsa ctrl-c. Puede o no ver la palabra "
"`otra vez!` impreso después de la ^C, dependiendo de dónde el código estaba "
"en el bucle cuando recibió la señal de interrupción."

#: src/ch02-05-control-flow.md:206
msgid ""
"Note: Cairo prevents us from running program with infinite loops by "
"including a gas meter. The gas meter is a mechanism that limits the amount "
"of computation that can be done in a program. By setting a value to the `--"
"available-gas` flag, we can set the maximum amount of gas available to the "
"program. Gas is a unit of measurement that expresses the computation cost of "
"an instruction. When the gas meter runs out, the program will stop. In the "
"previous case, we set the gas limit high enough for the program to run for "
"quite some time."
msgstr ""
"Nota: El Cairo nos impide ejecutar programas con bucles infinitos mediante "
"la inclusión de un medidor de gas. El medidor de gas es un mecanismo que "
"limita la cantidad de cálculo que se puede hacer en un programa. Al "
"establecer un valor a la bandera `--disponible-gas`, podemos establecer la "
"cantidad máxima de gas disponible para el programa. El gas es una unidad de "
"medida que expresa el costo de cálculo de una instrucción. Cuando el medidor "
"de gas se agote, el programa se detendrá. En el caso anterior, fijamos el "
"límite de gas lo suficientemente alto para que el programa funcione durante "
"bastante tiempo."

#: src/ch02-05-control-flow.md:208
msgid ""
"It is particularly important in the context of smart contracts deployed on "
"Starknet, as it prevents from running infinite loops on the network. If "
"you're writing a program that needs to run a loop, you will need to execute "
"it with the `--available-gas` flag set to a value that is large enough to "
"run the program."
msgstr ""
"Es particularmente importante en el contexto de los contratos inteligentes "
"implementados en Starknet, ya que impide ejecutar bucles infinitos en la "
"red. Si estás escribiendo un programa que necesita ejecutar un bucle, "
"necesitarás ejecutarlo con el indicador `--disponible-gas` establecido con "
"un valor lo suficientemente grande como para ejecutar el programa."

#: src/ch02-05-control-flow.md:211
msgid ""
"Now, try running the same program again, but this time with the `--available-"
"gas` flag set to `200000` instead of `2000000000000`. You will see the "
"program only prints `again!` 3 times before it stops, as it ran out of gas "
"to keep executing the loop."
msgstr ""
"Ahora, intente ejecutar el mismo programa de nuevo, pero esta vez con el `--"
"disponible-gas` conjunto de bandera a `200000` en lugar de `2000000000000`. "
"Verá el programa sólo imprime `de nuevo!'3 veces antes de que se detenga, ya "
"que se quedó sin gas para seguir ejecutando el bucle."

#: src/ch02-05-control-flow.md:213
msgid ""
"Fortunately, Cairo also provides a way to break out of a loop using code. "
"You can place the `break` keyword within the loop to tell the program when "
"to stop executing the loop."
msgstr ""
"Afortunadamente, El Cairo también proporciona una manera de salir de un "
"bucle usando código. Puede colocar la palabra clave `break` dentro del bucle "
"para decirle al programa cuándo dejar de ejecutar el bucle."

#: src/ch02-05-control-flow.md:222 src/ch02-05-control-flow.md:242
msgid "\"i = {}\""
msgstr "\"i = \""

#: src/ch02-05-control-flow.md:228
msgid ""
"The `continue` keyword tells the program to go to the next iteration of the "
"loop and to skip the rest of the code in this iteration. Let's add a "
"`continue` statement to our loop to skip the `println!` statement when `i` "
"is equal to `5`."
msgstr ""
"La palabra clave `continuar` le dice al programa que vaya a la siguiente "
"iteración del bucle y que omita el resto del código en esta iteración. "
"Añadamos una declaración `continuar` a nuestro bucle para saltar la "
"declaración `println!` cuando `i` es igual a `5`."

#: src/ch02-05-control-flow.md:248
msgid ""
"Executing this program will not print the value of `i` when it is equal to "
"`5`."
msgstr ""
"Ejecutar este programa no imprimirá el valor de `i` cuando sea igual a `5`."

#: src/ch02-05-control-flow.md:250
msgid "Returning Values from Loops"
msgstr "Devolviendo valores de Loops"

#: src/ch02-05-control-flow.md:252
msgid ""
"One of the uses of a `loop` is to retry an operation you know might fail, "
"such as checking whether an operation has succeeded. You might also need to "
"pass the result of that operation out of the loop to the rest of your code. "
"To do this, you can add the value you want returned after the `break` "
"expression you use to stop the loop; that value will be returned out of the "
"loop so you can use it, as shown here:"
msgstr ""
"Uno de los usos de un `loop` es volver a intentar una operación que usted "
"sabe podría fallar, como comprobar si una operación ha tenido éxito. También "
"puede necesitar pasar el resultado de esa operación fuera del loop al resto "
"de su código. Para hacer esto, puede agregar el valor que desea devolver "
"después de la expresión `break` que utiliza para detener el loop; ese valor "
"será devuelto del loop para que pueda usarlo, como se muestra aquí:"

#: src/ch02-05-control-flow.md:270
msgid "\"The result is {}\""
msgstr "\"El resultado es... \""

#: src/ch02-05-control-flow.md:274
msgid ""
"Before the loop, we declare a variable named `counter` and initialize it to "
"`0`. Then we declare a variable named `result` to hold the value returned "
"from the loop. On every iteration of the loop, we check whether the "
"`counter` is equal to `10`, and then add `1` to the `counter` variable. When "
"the condition is met, we use the `break` keyword with the value `counter * "
"2`. After the loop, we use a semicolon to end the statement that assigns the "
"value to `result`. Finally, we print the value in `result`, which in this "
"case is `20`."
msgstr ""
"Antes del bucle, declaramos una variable llamada `counter` y la "
"inicializamos a `0`. Luego declaramos una variable llamada `resultado` para "
"mantener el valor devuelto del bucle. En cada iteración del bucle, "
"comprobamos si el `counter` es igual a `10`, y luego añadimos `1` a la "
"variable `counter`. Cuando se cumple la condición, usamos la palabra clave "
"`break` con el valor `counter * 2`. Después del bucle, usamos un punto y "
"coma para terminar la instrucción que asigna el valor a `resultado`. Por "
"último, imprimimos el valor en `resultado`, que en este caso es `20`."

#: src/ch02-05-control-flow.md:281
msgid "Conditional Loops with `while`"
msgstr "Loops condicionales con `mientras`"

#: src/ch02-05-control-flow.md:283
msgid ""
"A program will often need to evaluate a condition within a loop. While the "
"condition is `true`, the loop runs. When the condition ceases to be `true`, "
"the program calls `break`, stopping the loop. It’s possible to implement "
"behavior like this using a combination of `loop`, `if`, `else`, and `break`; "
"you could try that now in a program, if you’d like. However, this pattern is "
"so common that Cairo has a built-in language construct for it, called a "
"`while` loop."
msgstr ""
"Un programa a menudo tendrá que evaluar una condición dentro de un bucle. "
"Mientras que la condición es `verdadera`, el bucle se ejecuta. Cuando la "
"condición deja de ser `verdadera`, el programa llama `break`, deteniendo el "
"bucle. Es posible implementar un comportamiento como este usando una "
"combinación de `loop`, `if`, `else`, y `break`; usted podría intentar eso "
"ahora en un programa, si lo desea. Sin embargo, este patrón es tan común que "
"El Cairo tiene una construcción de lenguaje incorporada para él, llamado un "
"bucle `while`."

#: src/ch02-05-control-flow.md:289
msgid ""
"In Listing 2-2, we use `while` to loop the program three times, counting "
"down each time after printing the value of `number`, and then, after the "
"loop, print a message and exit."
msgstr ""
"En Listado 2-2, usamos `while` para enroscar el programa tres veces, "
"contando hacia abajo cada vez después de imprimir el valor de `número`, y "
"luego, después del bucle, imprimir un mensaje y salir."

#: src/ch02-05-control-flow.md:296
msgid "\"{number}!\""
msgstr "\"¡{número}!\""

#: src/ch02-05-control-flow.md:300
msgid "\"LIFTOFF!!!\""
msgstr "\"LIFTOFF!!!\""

#: src/ch02-05-control-flow.md:304
msgid ""
"<span class=\"caption\">Listing 2-2: Using a `while` loop to run code while "
"a condition holds `true`.</span>"
msgstr ""
"<span class=\"caption\">Lista 2-2: Usar un bucle `while` para ejecutar "
"código mientras una condición contiene `true`.</span>"

#: src/ch02-05-control-flow.md:306
msgid ""
"This construct eliminates a lot of nesting that would be necessary if you "
"used `loop`, `if`, `else`, and `break`, and it’s clearer. While a condition "
"evaluates to `true`, the code runs; otherwise, it exits the loop."
msgstr ""
"Esta construcción elimina una gran cantidad de anidación que sería necesario "
"si se utiliza `loop`, `if`, `else`, y `break`, y es más claro. Mientras que "
"una condición evalúa a `verdadero`, el código corre; de lo contrario, sale "
"del bucle."

#: src/ch02-05-control-flow.md:309
msgid "{{#quiz ../quizzes/ch02-05-control-flow.toml}}"
msgstr "quiz../quizzes/ch02-05-control-flow.toml"

#: src/ch02-05-control-flow.md:313
msgid ""
"You made it! This was a sizable chapter: you learned about variables, data "
"types, functions, comments, `if` expressions and loops! To practice with the "
"concepts discussed in this chapter, try building programs to do the "
"following:"
msgstr ""
"¡Usted lo hizo! Este fue un capítulo considerable: usted aprendió sobre "
"variables, tipos de datos, funciones, comentarios, expresiones `if` y "
"bucles! Para practicar con los conceptos discutidos en este capítulo, "
"intente construir programas para hacer lo siguiente:"

#: src/ch02-05-control-flow.md:317
msgid "Generate the _n_\\-th Fibonacci number."
msgstr "Generar el número _n_\\-th Fibonacci."

#: src/ch02-05-control-flow.md:318
msgid "Compute the factorial of a number _n_."
msgstr "Calcular el factorial de un número _n_."

#: src/ch02-05-control-flow.md:320
msgid ""
"Now, we’ll review the common collection types in Cairo in the next chapter."
msgstr ""
"Ahora, vamos a revisar los tipos de colección común en El Cairo en el "
"próximo capítulo."

#: src/ch03-00-common-collections.md
msgid ""
"Cairo provides a set of common collection types that can be used to store "
"and manipulate data. These collections are designed to be efficient, "
"flexible, and easy to use. This section introduces the primary collection "
"types available in Cairo: Arrays and Dictionaries."
msgstr ""
"El Cairo ofrece un conjunto de tipos de recolección comunes que se pueden "
"utilizar para almacenar y manipular datos. Estas colecciones están diseñadas "
"para ser eficientes, flexibles y fáciles de usar. Esta sección presenta los "
"tipos de recolección primaria disponibles en El Cairo: Arrays y Diccionarios."

#: src/ch03-01-arrays.md:3
msgid ""
"An array is a collection of elements of the same type. You can create and "
"use array methods by using the `ArrayTrait` trait from the core library."
msgstr ""
"Un array es una colección de elementos del mismo tipo. Puede crear y "
"utilizar métodos de array usando el rasgo `ArrayTrait` de la biblioteca "
"central."

#: src/ch03-01-arrays.md:5
msgid ""
"An important thing to note is that arrays have limited modification options. "
"Arrays are, in fact, queues whose values can't be modified. This has to do "
"with the fact that once a memory slot is written to, it cannot be "
"overwritten, but only read from it. You can only append items to the end of "
"an array and remove items from the front."
msgstr ""
"Una cosa importante a tener en cuenta es que los arrays tienen opciones de "
"modificación limitadas. Los arrays son, de hecho, colas cuyos valores no se "
"pueden modificar. Esto tiene que ver con el hecho de que una vez que se "
"escribe una ranura de memoria, no se puede sobrescribir, pero sólo leer de "
"ella. Sólo se pueden añadir elementos al final de un array y eliminar "
"elementos del frente."

#: src/ch03-01-arrays.md:8
msgid "Creating an Array"
msgstr "Crear un Array"

#: src/ch03-01-arrays.md:10
msgid ""
"Creating an array is done with the `ArrayTrait::new()` call. Here's an "
"example of creating an array and appending 3 elements to it::"
msgstr ""
"Crear un array se hace con la llamada `ArrayTrait::new()`. He aquí un "
"ejemplo de crear un array y añadir 3 elementos a él:"

#: src/ch03-01-arrays.md:21
msgid ""
"When required, you can pass the expected type of items inside the array when "
"instantiating the array like this, or explicitly define the type of the "
"variable."
msgstr ""
"Cuando sea necesario, puede pasar el tipo de elementos esperados dentro del "
"array al instanciar el array como este, o definir explícitamente el tipo de "
"la variable."

#: src/ch03-01-arrays.md:31
msgid "Updating an Array"
msgstr "Actualizando un Array"

#: src/ch03-01-arrays.md:33
msgid "Adding Elements"
msgstr "Añadiendo elementos"

#: src/ch03-01-arrays.md:35
msgid ""
"To add an element to the end of an array, you can use the `append()` method:"
msgstr ""
"Para añadir un elemento al final de un array, puede utilizar el método "
"`append()`:"

#: src/ch03-01-arrays.md:46
msgid "Removing Elements"
msgstr "Eliminar elementos"

#: src/ch03-01-arrays.md:48
msgid ""
"You can only remove elements from the front of an array by using the "
"`pop_front()` method. This method returns an `Option` that can be unwrapped, "
"containing the removed element, or `Option::None` if the array is empty."
msgstr ""
"Sólo puede eliminar elementos del frente de un array utilizando el método "
"`pop_front()`. Este método devuelve una `Opción` que se puede desenvolver, "
"que contiene el elemento eliminado, o `Opción::Ninguna` si el array está "
"vacío."

#: src/ch03-01-arrays.md:59
msgid "\"The first value is {}\""
msgstr "\"El primer valor es \"\""

#: src/ch03-01-arrays.md:63
msgid ""
"The above code will print `The first value is 10` as we remove the first "
"element that was added."
msgstr ""
"El código anterior imprimirá `El primer valor es 10` mientras eliminamos el "
"primer elemento que se añadió."

#: src/ch03-01-arrays.md:65
msgid ""
"In Cairo, memory is immutable, which means that it is not possible to modify "
"the elements of an array once they've been added. You can only add elements "
"to the end of an array and remove elements from the front of an array. These "
"operations do not require memory mutation, as they involve updating pointers "
"rather than directly modifying the memory cells."
msgstr ""
"En El Cairo, la memoria es inmutable, lo que significa que no es posible "
"modificar los elementos de un array una vez que se han añadido. Sólo se "
"pueden añadir elementos al final de un array y eliminar elementos del frente "
"de un array. Estas operaciones no requieren mutación de memoria, ya que "
"implican actualizar punteros en lugar de modificar directamente las células "
"de memoria."

#: src/ch03-01-arrays.md:67
msgid "Reading Elements from an Array"
msgstr "Leyendo elementos de una matriz"

#: src/ch03-01-arrays.md:69
msgid ""
"To access array elements, you can use `get()` or `at()` array methods that "
"return different types. Using `arr.at(index)` is equivalent to using the "
"subscripting operator `arr[index]`."
msgstr ""
"Para acceder a los elementos de array, puede utilizar métodos de array "
"`get()` o `at()` que devuelven diferentes tipos. Usar `arr.at(index)` "
"equivale a usar el operador de subíndice `arr[index]`."

#: src/ch03-01-arrays.md:71
msgid "`get()` Method"
msgstr "Método `get()`"

#: src/ch03-01-arrays.md:73
msgid ""
"The `get` function returns an `Option<Box<@T>>`, which means it returns an "
"option to a Box type (Cairo's smart-pointer type) containing a snapshot to "
"the element at the specified index if that element exists in the array. If "
"the element doesn't exist, `get` returns `None`. This method is useful when "
"you expect to access indices that may not be within the array's bounds and "
"want to handle such cases gracefully without panics. Snapshots will be "
"explained in more detail in the [\"References and Snapshots\"](./ch04-02-"
"references-and-snapshots.md#snapshots) chapter."
msgstr ""
"La función `get` devuelve una `Option<BoxT, lo que significa que devuelve "
"una opción a un tipo Box (el tipo smart-pointer de El Cairo) que contiene "
"una instantánea al elemento en el índice especificado si ese elemento existe "
"en el array. Si el elemento no existe, `get` devuelve `Ninguno`. Este método "
"es útil cuando espera acceder a índices que pueden no estar dentro de los "
"límites del array y desea manejar estos casos con gracia sin pánico. Las "
"instantáneas se explicarán con más detalle en el capítulo [\"Referencias y "
"instantáneas\"](./ch04-02-referencias-and-snapshots.md#snapshots)."

#: src/ch03-01-arrays.md:75
msgid "Here is an example with the `get()` method:"
msgstr "He aquí un ejemplo con el método `get()`:"

#: src/ch03-01-arrays.md:82
msgid ""
"// Change this value to see different results, what would happen if the "
"index doesn't exist?\n"
msgstr ""
"// Cambiar este valor para ver diferentes resultados, ¿qué pasaría si el "
"índice no existe?\n"

#: src/ch03-01-arrays.md:86
msgid ""
"// Don't worry about * for now, if you are curious see Chapter 4.2 #desnap "
"operator\n"
"        // It basically means \"transform what get(idx) returned into a real "
"value\"\n"
msgstr ""
"// No se preocupe por * por ahora, si tiene curiosidad vea Capítulo 4.2 "
"#desnap operador // Básicamente significa \"transformar lo que get(idx) "
"devuelto a un valor real\"\n"

#: src/ch03-01-arrays.md:89
msgid "\"out of bounds\""
msgstr "\"fuera de límites\""

#: src/ch03-01-arrays.md:96
msgid "`at()` Method"
msgstr "Método `at()`"

#: src/ch03-01-arrays.md:98
msgid ""
"The `at` function, on the other hand, directly returns a snapshot to the "
"element at the specified index using the `unbox()` operator to extract the "
"value stored in a box. If the index is out of bounds, a panic error occurs. "
"You should only use `at` when you want the program to panic if the provided "
"index is out of the array's bounds, which can prevent unexpected behavior."
msgstr ""
"La función `at`, por otro lado, devuelve directamente una instantánea al "
"elemento en el índice especificado usando el operador `unbox()` para extraer "
"el valor almacenado en una caja. Si el índice está fuera de límites, se "
"produce un error de pánico. Sólo debe usar `at` cuando desee que el programa "
"entre en pánico si el índice proporcionado está fuera de los límites de la "
"matriz, lo que puede evitar un comportamiento inesperado."

#: src/ch03-01-arrays.md:100
msgid "Here is an example with the `at()` method:"
msgstr "He aquí un ejemplo con el método `at()`:"

#: src/ch03-01-arrays.md:113
msgid ""
"In this example, the variable named `first` will get the value `0` because "
"that is the value at index `0` in the array. The variable named `second` "
"will get the value `1` from index `1` in the array."
msgstr ""
"En este ejemplo, la variable llamada `primero` obtendrá el valor `0` porque "
"ese es el valor en el índice `0` del array. La variable llamada `segundo` "
"obtendrá el valor `1` del índice `1` del array."

#: src/ch03-01-arrays.md:117
msgid ""
"If you want to use the subscripting operator `arr[index]`, you will need to "
"explicitly define the type of the elements of the array, otherwise it will "
"not compile. For example:"
msgstr ""
"Si desea utilizar el operador de subscripting `arr[index]`, tendrá que "
"definir explícitamente el tipo de los elementos de la matriz, de lo "
"contrario no se compilará. Por ejemplo:"

#: src/ch03-01-arrays.md:130
msgid ""
"In summary, use `at` when you want to panic on out-of-bounds access "
"attempts, and use `get` when you prefer to handle such cases gracefully "
"without panicking."
msgstr ""
"En resumen, use `at` cuando quiera entrar en pánico en los intentos de "
"acceso fuera de los límites, y use `get` cuando prefiera manejar estos casos "
"con gracia sin entrar en pánico."

#: src/ch03-01-arrays.md:132
msgid "Size-related Methods"
msgstr "Métodos relacionados con el tamaño"

#: src/ch03-01-arrays.md:134
msgid ""
"To determine the number of elements in an array, use the `len()` method. The "
"return value is of type `usize`."
msgstr ""
"Para determinar el número de elementos de un array, utilice el método "
"`len()`. El valor de retorno es de tipo `usize`."

#: src/ch03-01-arrays.md:136
msgid ""
"If you want to check if an array is empty or not, you can use the "
"`is_empty()` method, which returns `true` if the array is empty and `false` "
"otherwise."
msgstr ""
"Si desea comprobar si un array está vacío o no, puede utilizar el método "
"`is_empty()`, que devuelve `true` si el array está vacío y `falso` de lo "
"contrario."

#: src/ch03-01-arrays.md:138 src/ch11-05-macros.md:25
msgid "`array!` Macro"
msgstr "`array!` Macro"

#: src/ch03-01-arrays.md:140
msgid ""
"Sometimes, we need to create arrays with values that are already known at "
"compile time. The basic way of doing that is redundant. You would first "
"declare the array and then append each value one by one. `array!` is a "
"simpler way of doing this task by combining the two steps. At compile-time, "
"the compiler will expand the macro to generate the code that appends the "
"items sequentially."
msgstr ""
"A veces, necesitamos crear arrays con valores que ya se conocen en el "
"momento de compilar. La forma básica de hacerlo es redundante. Primero "
"declararía el array y luego añadiría cada valor uno por uno. `array!` es una "
"forma más sencilla de hacer esta tarea combinando los dos pasos. En el "
"tiempo de compilar, el compilador expandirá la macro para generar el código "
"que añade los elementos secuencialmente."

#: src/ch03-01-arrays.md:143
msgid "Without `array!`:"
msgstr "Sin `array!`:"

#: src/ch03-01-arrays.md:154
msgid "With `array!`:"
msgstr "Con `array!`:"

#: src/ch03-01-arrays.md:160
msgid "Storing Multiple Types with Enums"
msgstr "Almacenamiento de múltiples tipos con enums"

#: src/ch03-01-arrays.md:162
msgid ""
"If you want to store elements of different types in an array, you can use an "
"`Enum` to define a custom data type that can hold multiple types. Enums will "
"be explained in more detail in the [\"Enums and Pattern Matching\"](./"
"ch06-00-enums-and-pattern-matching.md) chapter."
msgstr ""
"Si desea almacenar elementos de diferentes tipos en un array, puede utilizar "
"un `Enum` para definir un tipo de datos personalizado que puede contener "
"varios tipos. Los enums se explicarán con más detalle en el capítulo "
"[\"Enums and Pattern Matching\"](./ch06-00-enums-and-pattern-matching.md)."

#: src/ch03-01-arrays.md:182
msgid "Span"
msgstr "Span"

#: src/ch03-01-arrays.md:184
msgid ""
"`Span` is a struct that represents a snapshot of an `Array`. It is designed "
"to provide safe and controlled access to the elements of an array without "
"modifying the original array. Span is particularly useful for ensuring data "
"integrity and avoiding borrowing issues when passing arrays between "
"functions or when performing read-only operations, as introduced in "
"[\"References and Snapshots\"](./ch04-02-references-and-snapshots.md)."
msgstr ""
"`Span` es una estructura que representa una instantánea de un `Array`. Está "
"diseñado para proporcionar acceso seguro y controlado a los elementos de un "
"array sin modificar el array original. Span es particularmente útil para "
"garantizar la integridad de los datos y evitar problemas de préstamo al "
"pasar matrices entre funciones o al realizar operaciones de sólo lectura, "
"como se introdujo en [\"Referencias y instantáneas\"](./ch04-02-referencias-"
"and-snapshots.md)."

#: src/ch03-01-arrays.md:186
msgid ""
"All methods provided by `Array` can also be used with `Span`, except for the "
"`append()` method."
msgstr ""
"Todos los métodos proporcionados por `Array` también pueden utilizarse con "
"`Span`, excepto el método `append()`."

#: src/ch03-01-arrays.md:190
msgid "Turning an Array into Span"
msgstr "Convirtiendo un Array en Span"

#: src/ch03-01-arrays.md:192
msgid "To create a `Span` of an `Array`, call the `span()` method:"
msgstr "Para crear un `Span` de un `Array`, llame al método `span()`:"

#: src/ch03-01-arrays.md:201
msgid "{{#quiz ../quizzes/ch03-01-arrays.toml}}"
msgstr "quiz../quizzes/ch03-01-arrays.toml"

#: src/ch03-02-dictionaries.md:3
msgid ""
"Cairo provides in its core library a dictionary-like type. The "
"`Felt252Dict<T>` data type represents a collection of key-value pairs where "
"each key is unique and associated with a corresponding value. This type of "
"data structure is known differently across different programming languages "
"such as maps, hash tables, associative arrays and many others."
msgstr ""
"El Cairo proporciona en su biblioteca principal un tipo de diccionario. El "
"tipo de datos `Felt252Dict<TÃ3rs representa una colección de pares de "
"valores clave donde cada clave es única y se asocia con un valor "
"correspondiente. Este tipo de estructura de datos se conoce de manera "
"diferente en diferentes lenguajes de programación, como mapas, tablas de "
"hash, matrices asociativas y muchos otros."

#: src/ch03-02-dictionaries.md:5
msgid ""
"The `Felt252Dict<T>` type is useful when you want to organize your data in a "
"certain way for which using an `Array<T>` and indexing doesn't suffice. "
"Cairo dictionaries also allow the programmer to easily simulate the "
"existence of mutable memory when there is none."
msgstr ""
"El tipo `Felt252Dict<TÃ3r es útil cuando desea organizar sus datos de una "
"cierta manera para la que el uso de un `Array<TÃ3r y la indexación no es "
"suficiente. Los diccionarios de El Cairo también permiten al programador "
"simular fácilmente la existencia de memoria mutable cuando no hay ninguna."

#: src/ch03-02-dictionaries.md:7
msgid "Basic Use of Dictionaries"
msgstr "Uso básico de diccionarios"

#: src/ch03-02-dictionaries.md:9
msgid ""
"It is normal in other languages when creating a new dictionary to define the "
"data types of both key and value. In Cairo, the key type is restricted to "
"`felt252`, leaving only the possibility to specify the value data type, "
"represented by `T` in `Felt252Dict<T>`."
msgstr ""
"Es normal en otros idiomas cuando se crea un nuevo diccionario para definir "
"los tipos de datos tanto de clave como de valor. En El Cairo, el tipo de "
"clave se limita a `felt252`, dejando sólo la posibilidad de especificar el "
"tipo de datos de valor, representado por `T` en `Felt252Dict<T»."

#: src/ch03-02-dictionaries.md:11
msgid ""
"The core functionality of a `Felt252Dict<T>` is implemented in the trait "
"`Felt252DictTrait` which includes all basic operations. Among them we can "
"find:"
msgstr ""
"La funcionalidad básica de un `Felt252Dict<T® se implementa en el rasgo "
"`Felt252DictTrait` que incluye todas las operaciones básicas, entre ellas "
"podemos encontrar:"

#: src/ch03-02-dictionaries.md:13
msgid "`insert(felt252, T) -> ()` to write values to a dictionary instance and"
msgstr ""
"`insértese(felt252, T) -> ()` para escribir valores en una instancia del "
"diccionario y"

#: src/ch03-02-dictionaries.md:14
msgid "`get(felt252) -> T` to read values from it."
msgstr "`get(felt252) -> T` para leer los valores de él."

#: src/ch03-02-dictionaries.md:16
msgid ""
"These functions allow us to manipulate dictionaries like in any other "
"language. In the following example, we create a dictionary to represent a "
"mapping between individuals and their balance:"
msgstr ""
"Estas funciones nos permiten manipular diccionarios como en cualquier otro "
"idioma. En el siguiente ejemplo, creamos un diccionario para representar un "
"mapeo entre individuos y su equilibrio:"

#: src/ch03-02-dictionaries.md:26
msgid "\"Balance is not 100\""
msgstr "\"El equilibrio no es 100\""

#: src/ch03-02-dictionaries.md:29
msgid "\"Balance is not 200\""
msgstr "\"El equilibrio no es 200\""

#: src/ch03-02-dictionaries.md:33
msgid ""
"We can create a new instance of `Felt252Dict<u64>` by using the `default` "
"method of the `Default` trait and add two individuals, each one with their "
"own balance, using the `insert` method. Finally, we check the balance of our "
"users with the `get` method. These methods are defined in the "
"`Felt252DictTrait` trait in the core library."
msgstr ""
"Podemos crear una nueva instancia de `Felt252Dict<u64'' utilizando el método "
"`default` del rasgo `Default` y añadir dos individuos, cada uno con su "
"propio equilibrio, utilizando el método `insertar`. Finalmente, comprobamos "
"el equilibrio de nuestros usuarios con el método `get`. Estos métodos se "
"definen en el rasgo `Felt252DictTrait` en la biblioteca principal."

#: src/ch03-02-dictionaries.md:35
msgid ""
"Throughout the book we have talked about how Cairo's memory is immutable, "
"meaning you can only write to a memory cell once but the `Felt252Dict<T>` "
"type represents a way to overcome this obstacle. We will explain how this is "
"implemented later on in [\"Dictionaries Underneath\"](./ch03-02-dictionaries."
"md#dictionaries-underneath)."
msgstr ""
"A lo largo del libro hemos hablado de cómo la memoria de El Cairo es "
"inmutable, lo que significa que sólo se puede escribir a una celda de "
"memoria una vez, pero el tipo `Felt252Dict<T® representa una manera de "
"superar este obstáculo. Explicaremos cómo esto se implementa más adelante en "
"[\"Diccionarios debajo\"](./ch03-02-dictionaries.md#dictionaries-"
"subordinaryth)."

#: src/ch03-02-dictionaries.md:37
msgid ""
"Building upon our previous example, let us show a code example where the "
"balance of the same user changes:"
msgstr ""
"Sobre la base de nuestro ejemplo anterior, vamos a mostrar un ejemplo de "
"código donde el equilibrio del mismo usuario cambia:"

#: src/ch03-02-dictionaries.md:43
msgid "// Insert Alex with 100 balance\n"
msgstr "// Insertar Alex con 100 saldo\n"

#: src/ch03-02-dictionaries.md:45
msgid "// Check that Alex has indeed 100 associated with him\n"
msgstr "// Comprobar que Alex ha de hecho 100 asociados con él\n"

#: src/ch03-02-dictionaries.md:47
msgid "\"Alex balance is not 100\""
msgstr "\"El balance Alex no es 100\""

#: src/ch03-02-dictionaries.md:49
msgid "// Insert Alex again, this time with 200 balance\n"
msgstr "// Inserte Alex de nuevo, esta vez con 200 saldo\n"

#: src/ch03-02-dictionaries.md:51
msgid "// Check the new balance is correct\n"
msgstr "// Compruebe que el nuevo saldo es correcto\n"

#: src/ch03-02-dictionaries.md:53
msgid "\"Alex balance is not 200\""
msgstr "\"El balance de Alex no es 200\""

#: src/ch03-02-dictionaries.md:57
msgid ""
"Notice how in this example we added the 'Alex' individual twice, each time "
"using a different balance and each time that we checked for its balance it "
"had the last value inserted! `Felt252Dict<T>` effectively allows us to "
"\"rewrite\" the stored value for any given key."
msgstr ""
"Observe cómo en este ejemplo añadimos el individuo 'Alex' dos veces, cada "
"vez usando un balance diferente y cada vez que comprobamos su balance, "
"¡tenía el último valor insertado! `Felt252Dict<T® efectivamente nos permite "
"\"reescribir\" el valor almacenado para cualquier clave dada."

#: src/ch03-02-dictionaries.md:59
msgid ""
"Before heading on and explaining how dictionaries are implemented it is "
"worth mentioning that once you instantiate a `Felt252Dict<T>`, behind the "
"scenes all keys have their associated values initialized as zero. This means "
"that if for example, you tried to get the balance of an inexistent user you "
"will get 0 instead of an error or an undefined value. This also means there "
"is no way to delete data from a dictionary. Something to take into account "
"when incorporating this structure into your code."
msgstr ""
"Antes de dirigirnos y explicar cómo se implementan los diccionarios, vale la "
"pena mencionar que una vez que se instale un `Felt252Dict<T®, detrás de las "
"escenas todas las claves tienen sus valores asociados inicializados como "
"cero. Esto significa que si, por ejemplo, intenta obtener el saldo de un "
"usuario inexistente obtendrá 0 en lugar de un error o un valor indefinido. "
"Esto también significa que no hay manera de eliminar datos de un "
"diccionario. Algo que tener en cuenta al incorporar esta estructura en su "
"código."

#: src/ch03-02-dictionaries.md:61
msgid ""
"Until this point, we have seen all the basic features of `Felt252Dict<T>` "
"and how it mimics the same behavior as the corresponding data structures in "
"any other language, that is, externally of course. Cairo is at its core a "
"non-deterministic Turing-complete programming language, very different from "
"any other popular language in existence, which as a consequence means that "
"dictionaries are implemented very differently as well!"
msgstr ""
"Hasta este punto, hemos visto todas las características básicas de "
"`Felt252Dict<T® y cómo imita el mismo comportamiento que las estructuras de "
"datos correspondientes en cualquier otro idioma, es decir, externamente, por "
"supuesto. El Cairo es en su núcleo un lenguaje de programación no-"
"determinista Turing-completo, muy diferente de cualquier otro lenguaje "
"popular en existencia, lo que como consecuencia significa que los "
"diccionarios se implementan muy diferente también!"

#: src/ch03-02-dictionaries.md:63
msgid ""
"In the following sections, we are going to give some insights about "
"`Felt252Dict<T>` inner mechanisms and the compromises that were taken to "
"make them work. After that, we are going to take a look at how to use "
"dictionaries with other data structures as well as use the `entry` method as "
"another way to interact with them."
msgstr ""
"En las siguientes secciones, vamos a dar algunas ideas acerca de los "
"mecanismos internos `Felt252Dict<T® y los compromisos que se tomaron para "
"que funcionen. Después de eso, vamos a echar un vistazo a cómo utilizar "
"diccionarios con otras estructuras de datos, así como utilizar el método "
"`entrada` como otra forma de interactuar con ellos."

#: src/ch03-02-dictionaries.md:67
msgid "Dictionaries Underneath"
msgstr "Diccionarios inferiores"

#: src/ch03-02-dictionaries.md:69
msgid ""
"One of the constraints of Cairo's non-deterministic design is that its "
"memory system is immutable, so in order to simulate mutability, the language "
"implements `Felt252Dict<T>` as a list of entries. Each of the entries "
"represents a time when a dictionary was accessed for reading/updating/"
"writing purposes. An entry has three fields:"
msgstr ""
"Una de las limitaciones del diseño no determinista de El Cairo es que su "
"sistema de memoria es inmutable, por lo que para simular la mutabilidad, el "
"lenguaje implementa `Felt252Dict<T® como una lista de entradas. Cada una de "
"las entradas representa un momento en el que se accede a un diccionario con "
"fines de lectura/actualización/escritura. Una entrada tiene tres campos:"

#: src/ch03-02-dictionaries.md:71
msgid ""
"A `key` field that identifies the key for this key-value pair of the "
"dictionary."
msgstr ""
"Un campo `clave` que identifica la clave para este par de claves-valor del "
"diccionario."

#: src/ch03-02-dictionaries.md:72
msgid ""
"A `previous_value` field that indicates which previous value was held at "
"`key`."
msgstr ""
"Un campo `previous_value` que indica qué valor anterior se mantuvo en `key`."

#: src/ch03-02-dictionaries.md:73
msgid "A `new_value` field that indicates the new value that is held at `key`."
msgstr ""
"Un campo `new_value` que indica el nuevo valor que se mantiene en `key`."

#: src/ch03-02-dictionaries.md:75
msgid ""
"If we try implementing `Felt252Dict<T>` using high-level structures we would "
"internally define it as `Array<Entry<T>>` where each `Entry<T>` has "
"information about what key-value pair it represents and the previous and new "
"values it holds. The definition of `Entry<T>` would be:"
msgstr ""
"Si tratamos de implementar `Felt252Dict<T® usando estructuras de alto nivel "
"lo definiríamos internamente como `Array<Entry<T donde cada `Entry<T® tiene "
"información sobre qué par clave-valor representa y los valores anteriores y "
"nuevos que contiene. La definición de `Entry<T® sería:"

#: src/ch03-02-dictionaries.md:85
msgid ""
"For each time we interact with a `Felt252Dict<T>`, a new `Entry<T>` will be "
"registered:"
msgstr ""
"Por cada vez que interactúemos con un `Felt252Dict<T®, se registrará un "
"nuevo `Entrada<T®:"

#: src/ch03-02-dictionaries.md:87
msgid ""
"A `get` would register an entry where there is no change in state, and "
"previous and new values are stored with the same value."
msgstr ""
"Un `get` registraría una entrada donde no hay cambios en el estado, y los "
"valores anteriores y nuevos se almacenan con el mismo valor."

#: src/ch03-02-dictionaries.md:88
msgid ""
"An `insert` would register a new `Entry<T>` where the `new_value` would be "
"the element being inserted, and the `previous_value` the last element "
"inserted before this. In case it is the first entry for a certain key, then "
"the previous value will be zero."
msgstr ""
"Un `insértese` registraría un nuevo `Entry<T® donde el `new_value` sería el "
"elemento que se está insertando, y el `previous_value` el último elemento "
"insertado antes de esto. En caso de que sea la primera entrada de una "
"determinada clave, el valor anterior será cero."

#: src/ch03-02-dictionaries.md:90
msgid ""
"The use of this entry list shows how there isn't any rewriting, just the "
"creation of new memory cells per `Felt252Dict<T>` interaction. Let's show an "
"example of this using the `balances` dictionary from the previous section "
"and inserting the users 'Alex' and 'Maria':"
msgstr ""
"El uso de esta lista de entradas muestra cómo no hay ninguna reescritura, "
"sólo la creación de nuevas celdas de memoria por la interacción "
"`Felt252Dict<T». Vamos a mostrar un ejemplo de esto usando el diccionario "
"`balances` de la sección anterior e insertando los usuarios 'Alex' y 'Maria':"

#: src/ch03-02-dictionaries.md:108
msgid "These instructions would then produce the following list of entries:"
msgstr "Estas instrucciones producirían la siguiente lista de entradas:"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "key"
msgstr "tecla"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "previous"
msgstr "anterior"

#: src/ch03-02-dictionaries.md:110 src/ch03-02-dictionaries.md:132
#: src/ch03-02-dictionaries.md:145
msgid "new"
msgstr "nuevo"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:114
#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:138
#: src/ch03-02-dictionaries.md:139 src/ch03-02-dictionaries.md:141
#: src/ch03-02-dictionaries.md:147
msgid "Alex"
msgstr "Alex"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:113
#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:135
#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:147
#: src/ch03-02-dictionaries.md:148 src/ch03-02-dictionaries.md:149
msgid "0"
msgstr "0"

#: src/ch03-02-dictionaries.md:112 src/ch03-02-dictionaries.md:114
#: src/ch03-02-dictionaries.md:135 src/ch03-02-dictionaries.md:137
msgid "100"
msgstr "100"

#: src/ch03-02-dictionaries.md:113 src/ch03-02-dictionaries.md:115
#: src/ch03-02-dictionaries.md:135 src/ch03-02-dictionaries.md:137
#: src/ch03-02-dictionaries.md:140 src/ch03-02-dictionaries.md:148
msgid "Maria"
msgstr "María"

#: src/ch03-02-dictionaries.md:113 src/ch03-02-dictionaries.md:115
msgid "50"
msgstr "50"

#: src/ch03-02-dictionaries.md:114
msgid "200"
msgstr "200"

#: src/ch03-02-dictionaries.md:117
msgid ""
"Notice that since 'Alex' was inserted twice, it appears twice and the "
"`previous` and `current` values are set properly. Also reading from 'Maria' "
"registered an entry with no change from previous to current values."
msgstr ""
"Nótese que desde que 'Alex' se insertó dos veces, aparece dos veces y los "
"valores 'anteriores' y 'corrientes' se establecen correctamente. También la "
"lectura de 'Maria' registró una entrada sin cambios de los valores "
"anteriores a los actuales."

#: src/ch03-02-dictionaries.md:119
msgid ""
"This approach to implementing `Felt252Dict<T>` means that for each read/"
"write operation, there is a scan for the whole entry list in search of the "
"last entry with the same `key`. Once the entry has been found, its "
"`new_value` is extracted and used on the new entry to be added as the "
"`previous_value`. This means that interacting with `Felt252Dict<T>` has a "
"worst-case time complexity of `O(n)` where `n` is the number of entries in "
"the list."
msgstr ""
"Este enfoque para implementar `Felt252Dict<T® significa que para cada "
"operación de lectura/escritura, hay un escaneo para toda la lista de "
"entradas en busca de la última entrada con la misma `clave`. Una vez que se "
"ha encontrado la entrada, se extrae su `new_value` y se usa en la nueva "
"entrada que se añadirá como `previous_value`. Esto significa que interactuar "
"con `Felt252Dict<T® tiene una complejidad de tiempo peor de `O(n)` donde `n` "
"es el número de entradas en la lista."

#: src/ch03-02-dictionaries.md:121
msgid ""
"If you pour some thought into alternate ways of implementing "
"`Felt252Dict<T>` you'd surely find them, probably even ditching completely "
"the need for a `previous_value` field, nonetheless, since Cairo is not your "
"normal language this won't work. One of the purposes of Cairo is, with the "
"STARK proof system, to generate proofs of computational integrity. This "
"means that you need to verify that program execution is correct and inside "
"the boundaries of Cairo restrictions. One of those boundary checks consists "
"of \"dictionary squashing\" and that requires information on both previous "
"and new values for every entry."
msgstr ""
"Si usted vertiera algún pensamiento en formas alternativas de implementar "
"`Felt252Dict<T® seguramente los encontraría, probablemente incluso dejando "
"completamente de lado la necesidad de un campo `previous_value`, sin "
"embargo, ya que El Cairo no es su lenguaje normal esto no funcionará. Uno de "
"los propósitos de El Cairo es, con el sistema de prueba STARK, generar "
"pruebas de integridad computacional. Esto significa que usted necesita "
"verificar que la ejecución del programa es correcta y dentro de los límites "
"de las restricciones de El Cairo. Uno de esos controles de frontera consiste "
"en \"aplastamiento diccionario\" y que requiere información sobre valores "
"anteriores y nuevos para cada entrada."

#: src/ch03-02-dictionaries.md:124
msgid "Squashing Dictionaries"
msgstr "Diccionarios de Squashing"

#: src/ch03-02-dictionaries.md:126
msgid ""
"To verify that the proof generated by a Cairo program execution that used a "
"`Felt252Dict<T>` is correct, we need to check that there wasn't any illegal "
"tampering with the dictionary. This is done through a method called "
"`squash_dict` that reviews each entry of the entry list and checks that "
"access to the dictionary remains coherent throughout the execution."
msgstr ""
"Para verificar que la prueba generada por una ejecución del programa de El "
"Cairo que usó un `Felt252Dict<T® es correcta, tenemos que comprobar que no "
"hubo ninguna manipulación ilegal con el diccionario. Esto se hace a través "
"de un método llamado `squash_dict` que revisa cada entrada de la lista de "
"entradas y comprueba que el acceso al diccionario sigue siendo coherente "
"durante toda la ejecución."

#: src/ch03-02-dictionaries.md:128
msgid ""
"The process of squashing is as follows: given all entries with certain key "
"`k`, taken in the same order as they were inserted, verify that the ith "
"entry `new_value` is equal to the ith + 1 entry `previous_value`."
msgstr ""
"El proceso de aplastamiento es el siguiente: dado que todas las entradas con "
"cierta clave `k`, tomadas en el mismo orden en que fueron insertadas, "
"verificar que la entrada `new_value` es igual a la entrada ith + 1 "
"`previous_value`."

#: src/ch03-02-dictionaries.md:130
msgid "For example, given the following entry list:"
msgstr "Por ejemplo, dada la siguiente lista de entradas:"

#: src/ch03-02-dictionaries.md:134 src/ch03-02-dictionaries.md:138
msgid "150"
msgstr "150"

#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:149
msgid "Charles"
msgstr "Charles"

#: src/ch03-02-dictionaries.md:136 src/ch03-02-dictionaries.md:149
msgid "70"
msgstr "70"

#: src/ch03-02-dictionaries.md:137 src/ch03-02-dictionaries.md:140
msgid "250"
msgstr "250"

#: src/ch03-02-dictionaries.md:138 src/ch03-02-dictionaries.md:139
msgid "40"
msgstr "40"

#: src/ch03-02-dictionaries.md:139 src/ch03-02-dictionaries.md:141
msgid "300"
msgstr "300"

#: src/ch03-02-dictionaries.md:140 src/ch03-02-dictionaries.md:148
msgid "190"
msgstr "190"

#: src/ch03-02-dictionaries.md:141 src/ch03-02-dictionaries.md:147
msgid "90"
msgstr "90"

#: src/ch03-02-dictionaries.md:143
msgid "After squashing, the entry list would be reduced to:"
msgstr "Después de aplastar, la lista de entradas se reduciría a:"

#: src/ch03-02-dictionaries.md:151
msgid ""
"In case of a change on any of the values of the first table, squashing would "
"have failed during runtime."
msgstr ""
"En caso de un cambio en cualquiera de los valores de la primera tabla, el "
"aplastamiento habría fallado durante el tiempo de ejecución."

#: src/ch03-02-dictionaries.md:153
msgid "Dictionary Destruction"
msgstr "Destrucción del diccionario"

#: src/ch03-02-dictionaries.md:155
msgid ""
"If you run the examples from [\"Basic Use of Dictionaries\"](./ch03-02-"
"dictionaries.md#basic-use-of-dictionaries) section, you'd notice that there "
"was never a call to squash dictionary, but the program compiled successfully "
"nonetheless. What happened behind the scene was that squash was called "
"automatically via the `Felt252Dict<T>` implementation of the `Destruct<T>` "
"trait. This call occurred just before the `balance` dictionary went out of "
"scope."
msgstr ""
"Si usted ejecuta los ejemplos de [\"Uso básico de diccionarios\"](./ch03-02-"
"dictionarys.md#basic-use-of-dictionarys) sección, usted notaría que nunca "
"hubo una llamada al diccionario de squash, pero el programa compilado con "
"éxito sin embargo. Lo que sucedió detrás de la escena fue que squash se "
"llamó automáticamente a través de la aplicación `Felt252Dict<TÃo de la "
"`Destruct<TÃo. Esta llamada ocurrió justo antes de que el diccionario "
"`equilibrio` salió de su alcance."

#: src/ch03-02-dictionaries.md:157
msgid ""
"The `Destruct<T>` trait represents another way of removing instances out of "
"scope apart from `Drop<T>`. The main difference between these two is that "
"`Drop<T>` is treated as a no-op operation, meaning it does not generate new "
"CASM while `Destruct<T>` does not have this restriction. The only type which "
"actively uses the `Destruct<T>` trait is `Felt252Dict<T>`, for every other "
"type `Destruct<T>` and `Drop<T>` are synonyms. You can read more about these "
"traits in [Drop and Destruct](./appendix-03-derivable-traits.md#drop-and-"
"destruct) section of Appendix C."
msgstr ""
"La principal diferencia entre estos dos es que `Drop<T® se trata como una "
"operación no-op, lo que significa que no genera nuevas CASM mientras que "
"`Drop<T® no tiene esta restricción. El único tipo que utiliza activamente el "
"rasgo `Drop<T® es `Felt252Dict<T®, por cada otro tipo `Destruct<T® y "
"`Drop<T® son sinónimos. Puede leer más sobre estos rasgos en [Drop and "
"Destruct](./appendix-03-derivable-traits.md#drop-and-destruct) sección del "
"Apéndice C."

#: src/ch03-02-dictionaries.md:159
msgid ""
"Later in [\"Dictionaries as Struct Members\"](./ch11-01-custom-data-"
"structures.html#dictionaries-as-struct-members) section, we will have a "
"hands-on example where we implement the `Destruct<T>` trait for a custom "
"type."
msgstr ""
"Más tarde en la sección [\"Diccionarios como miembros de estructura\"](./"
"ch11-01-custom-data-structures.html#diccionarios como miembros de "
"estructura), tendremos un ejemplo práctico donde implementamos el rasgo "
"`Destruct<TÃ3 ́ para un tipo personalizado."

#: src/ch03-02-dictionaries.md:165
msgid "More Dictionaries"
msgstr "Más diccionarios"

#: src/ch03-02-dictionaries.md:167
msgid ""
"Up to this point, we have given a comprehensive overview of the "
"functionality of `Felt252Dict<T>` as well as how and why it is implemented "
"in a certain way. If you haven't understood all of it, don't worry because "
"in this section we will have some more examples using dictionaries."
msgstr ""
"Hasta este punto, hemos dado una visión general completa de la funcionalidad "
"de `Felt252Dict<T®, así como cómo y por qué se implementa de cierta manera. "
"Si no lo has entendido todo, no te preocupes porque en esta sección "
"tendremos algunos ejemplos más usando diccionarios."

#: src/ch03-02-dictionaries.md:169
msgid ""
"We will start by explaining the `entry` method which is part of a dictionary "
"basic functionality included in `Felt252DictTrait<T>` which we didn't "
"mention at the beginning. Soon after, we will see examples of how to use "
"`Felt252Dict<T>` with other [complex types](./ch03-02-dictionaries."
"md#dictionaries-of-types-not-supported-natively) such as `Array<T>`."
msgstr ""
"Comenzaremos explicando el método `entrada` que forma parte de una "
"funcionalidad básica del diccionario incluida en `Felt252DictTrait<T® que no "
"mencionamos al principio. Poco después, veremos ejemplos de cómo usar "
"`Felt252Dict<T® con otros [tipos complejos](./ch03-02-dictionarys."
"md#dictionarys-of-types-no-supported-natively) como `Array<T®."

#: src/ch03-02-dictionaries.md:173
msgid "Entry and Finalize"
msgstr "Entrada y finalización"

#: src/ch03-02-dictionaries.md:175
msgid ""
"In the [\"Dictionaries Underneath\"](./ch03-02-dictionaries.md#dictionaries-"
"underneath) section, we explained how `Felt252Dict<T>` internally worked. It "
"was a list of entries for each time the dictionary was accessed in any "
"manner. It would first find the last entry given a certain `key` and then "
"update it accordingly to whatever operation it was executing. The Cairo "
"language gives us the tools to replicate this ourselves through the `entry` "
"and `finalize` methods."
msgstr ""
"En la sección [\"Diccionarios debajo\"](./ch03-02-dictionarys.md#dictionarys-"
"underneath) explicamos cómo funcionaba internamente `Felt252Dict<T®. Era una "
"lista de entradas para cada vez que se accedía al diccionario de cualquier "
"manera. Primero encontraría la última entrada dada una cierta `clave` y "
"luego la actualizaría en consecuencia a cualquier operación que estuviera "
"ejecutando. El idioma de El Cairo nos da las herramientas para replicar esto "
"nosotros mismos a través de los métodos `entrada` y `finalizar`."

#: src/ch03-02-dictionaries.md:177
msgid ""
"The `entry` method comes as part of `Felt252DictTrait<T>` with the purpose "
"of creating a new entry given a certain key. Once called, this method takes "
"ownership of the dictionary and returns the entry to update. The method "
"signature is as follows:"
msgstr ""
"El método `entrada` viene como parte de `Felt252DictTrait<T® con el "
"propósito de crear una nueva entrada dada una cierta clave. Una vez llamado, "
"este método toma la propiedad del diccionario y devuelve la entrada a "
"actualizar. La firma del método es la siguiente:"

#: src/ch03-02-dictionaries.md:183
msgid ""
"The first input parameter takes ownership of the dictionary while the second "
"one is used to create the appropriate entry. It returns a tuple containing a "
"`Felt252DictEntry<T>`, which is the type used by Cairo to represent "
"dictionary entries, and a `T` representing the value held previously. The "
"`nopanic` notation simply indicates that the function is guaranteed to never "
"panic."
msgstr ""
"El primer parámetro de entrada se hace cargo del diccionario, mientras que "
"el segundo se utiliza para crear la entrada apropiada. Devuelve una tupla "
"que contiene una `Felt252DictEntry<T®, que es el tipo utilizado por El Cairo "
"para representar las entradas del diccionario, y una `T` que representa el "
"valor mantenido anteriormente. La notación `nopanic` simplemente indica que "
"la función está garantizada para nunca entrar en pánico."

#: src/ch03-02-dictionaries.md:186
msgid ""
"The next thing to do is to update the entry with the new value. For this, we "
"use the `finalize` method which inserts the entry and returns ownership of "
"the dictionary:"
msgstr ""
"Lo siguiente que hay que hacer es actualizar la entrada con el nuevo valor. "
"Para esto, utilizamos el método `finalizar` que inserta la entrada y "
"devuelve la propiedad del diccionario:"

#: src/ch03-02-dictionaries.md:192
msgid ""
"This method receives the entry and the new value as parameters, and returns "
"the updated dictionary."
msgstr ""
"Este método recibe la entrada y el nuevo valor como parámetros, y devuelve "
"el diccionario actualizado."

#: src/ch03-02-dictionaries.md:194
msgid ""
"Let us see an example using `entry` and `finalize`. Imagine we would like to "
"implement our own version of the `get` method from a dictionary. We should "
"then do the following:"
msgstr ""
"Veamos un ejemplo usando `entrada` y `finalizar`. Imaginemos que quisiéramos "
"implementar nuestra propia versión del método `get` de un diccionario. "
"Entonces deberíamos hacer lo siguiente:"

#: src/ch03-02-dictionaries.md:196
msgid "Create the new entry to add using the `entry` method."
msgstr "Crear la nueva entrada para añadir usando el método `entrada`."

#: src/ch03-02-dictionaries.md:197
msgid ""
"Insert back the entry where the `new_value` equals the `previous_value`."
msgstr ""
"Inserte de nuevo la entrada donde el `nuevo_valor` es igual al "
"`valor_anterior`."

#: src/ch03-02-dictionaries.md:198
msgid "Return the value."
msgstr "Devuelve el valor."

#: src/ch03-02-dictionaries.md:200
msgid "Implementing our custom get would look like this:"
msgstr "La implementación de nuestro get personalizado se vería así:"

#: src/ch03-02-dictionaries.md:208 src/ch03-02-dictionaries.md:252
msgid "// Get the new entry and the previous value held at `key`\n"
msgstr "// Obtener la nueva entrada y el valor anterior mantenido en `key`\n"

#: src/ch03-02-dictionaries.md:211 src/ch03-02-dictionaries.md:255
msgid "// Store the value to return\n"
msgstr "// Almacenar el valor a devolver\n"

#: src/ch03-02-dictionaries.md:214 src/ch03-02-dictionaries.md:258
msgid ""
"// Update the entry with `prev_value` and get back ownership of the "
"dictionary\n"
msgstr ""
"// Actualizar la entrada con `prev_value` y recuperar la propiedad del "
"diccionario\n"

#: src/ch03-02-dictionaries.md:217 src/ch03-02-dictionaries.md:261
msgid "// Return the read value\n"
msgstr "// Devuelve el valor de lectura\n"

#: src/ch03-02-dictionaries.md:222
msgid ""
"The `ref` keyword means that the ownership of the variable will be given "
"back at the end of the function. This concept will be explained in more "
"detail in the [\"References and Snapshots\"](./ch04-02-references-and-"
"snapshots.md) section."
msgstr ""
"La palabra clave `ref` significa que la propiedad de la variable se "
"devolverá al final de la función. Este concepto se explicará con más detalle "
"en la sección [\"Referencias y instantáneas\"](./ch04-02-references-and-"
"snapshots.md)."

#: src/ch03-02-dictionaries.md:225
msgid ""
"Implementing the `insert` method would follow a similar workflow, except for "
"inserting a new value when finalizing. If we were to implement it, it would "
"look like the following:"
msgstr ""
"La aplicación del método `insertar` seguiría un flujo de trabajo similar, "
"excepto para insertar un nuevo valor al finalizar. Si lo hiciéramos, "
"parecería lo siguiente:"

#: src/ch03-02-dictionaries.md:233
msgid ""
"// Get the last entry associated with `key`\n"
"    // Notice that if `key` does not exist, `_prev_value` will\n"
"    // be the default value of T.\n"
msgstr ""
"// Obtener la última entrada asociada con `key` // Observe que si `key` no "
"existe, `_prev_value` será // el valor predeterminado de T.\n"

#: src/ch03-02-dictionaries.md:238
msgid ""
"// Insert `entry` back in the dictionary with the updated value,\n"
"    // and receive ownership of the dictionary\n"
msgstr ""
"// Inserta `entrada` en el diccionario con el valor actualizado, // y recibe "
"la propiedad del diccionario\n"

#: src/ch03-02-dictionaries.md:244
msgid ""
"As a finalizing note, these two methods are implemented in a similar way to "
"how `insert` and `get` are implemented for `Felt252Dict<T>`. This code shows "
"some example usage:"
msgstr ""
"Como nota final, estos dos métodos se aplican de manera similar a la forma "
"en que se aplican `insertar` y `obtener` para `Felt252Dict<T®. Este código "
"muestra algunos ejemplos de uso:"

#: src/ch03-02-dictionaries.md:268
msgid "// Get the last entry associated with `key`\n"
msgstr "// Obtener la última entrada asociada con `key`\n"

#: src/ch03-02-dictionaries.md:269
msgid "// Notice that if `key` does not exist, `_prev_value` will\n"
msgstr "// Tenga en cuenta que si `clave` no existe, `_prev_value '\n"

#: src/ch03-02-dictionaries.md:270
msgid "// be the default value of T.\n"
msgstr "// ser el valor predeterminado de T.\n"

#: src/ch03-02-dictionaries.md:273
msgid "// Insert `entry` back in the dictionary with the updated value,\n"
msgstr "// Inserta `entrada` en el diccionario con el valor actualizado,\n"

#: src/ch03-02-dictionaries.md:274
msgid "// and receive ownership of the dictionary\n"
msgstr "// y recibir la propiedad del diccionario\n"

#: src/ch03-02-dictionaries.md:281 src/ch03-02-dictionaries.md:283
msgid "'0'"
msgstr "'0'"

#: src/ch03-02-dictionaries.md:285
msgid "\"Expecting 100\""
msgstr "\"Esperando 100\""

#: src/ch03-02-dictionaries.md:294
msgid "Dictionaries of Types not Supported Natively"
msgstr "Diccionarios de tipos no apoyados por los nativos"

#: src/ch03-02-dictionaries.md:296
msgid ""
"One restriction of `Felt252Dict<T>` that we haven't talked about is the "
"trait `Felt252DictValue<T>`. This trait defines the `zero_default` method "
"which is the one that gets called when a value does not exist in the "
"dictionary. This is implemented by some common data types, such as most "
"unsigned integers, `bool` and `felt252` - but it is not implemented for more "
"complex types such as arrays, structs (including `u256`), and other types "
"from the core library. This means that making a dictionary of types not "
"natively supported is not a straightforward task, because you would need to "
"write a couple of trait implementations in order to make the data type a "
"valid dictionary value type. To compensate this, you can wrap your type "
"inside a `Nullable<T>`."
msgstr ""
"Una restricción de `Felt252Dict<T® de la que no hemos hablado es el rasgo "
"`Felt252DictValue<T®. Este rasgo define el método `zero_default` que es el "
"que se llama cuando un valor no existe en el diccionario. Esto se implementa "
"por algunos tipos de datos comunes, como la mayoría de los enteros no "
"firmados, `bool` y `felt252` - pero no se implementa para tipos más "
"complejos como arrays, structs (incluyendo `u256`), y otros tipos de la "
"biblioteca central. Esto significa que hacer un diccionario de tipos no "
"soportados nativamente no es una tarea sencilla, porque necesitarías "
"escribir un par de implementaciones de rasgo para hacer que el tipo de datos "
"sea un tipo de valor válido del diccionario. Para compensar esto, puedes "
"envolver tu tipo dentro de un `Nullable<T."

#: src/ch03-02-dictionaries.md:302
msgid ""
"`Nullable<T>` is a smart pointer type that can either point to a value or be "
"`null` in the absence of value. It is usually used in Object Oriented "
"Programming Languages when a reference doesn't point anywhere. The "
"difference with `Option` is that the wrapped value is stored inside a "
"`Box<T>` data type. The `Box<T>` type is a smart pointer that allows us to "
"use a dedicated `boxed_segment` memory segment for our data, and access this "
"segment using a pointer that can only be manipulated in one place at a time. "
"See [Smart Pointers Chapter](./ch11-02-smart-pointers.md) for more "
"information."
msgstr ""
"`Nulable<T® es un tipo de puntero inteligente que puede apuntar a un valor o "
"ser `null` en ausencia de valor. Usualmente se utiliza en lenguajes de "
"programación orientados a objetos cuando una referencia no apunta a ninguna "
"parte. La diferencia con `Opción` es que el valor envuelto se almacena "
"dentro de un tipo de datos `Box<T́. El tipo `Box<T́ es un puntero inteligente "
"que nos permite utilizar un segmento de memoria dedicado `boxed_segment` "
"para nuestros datos, y acceder a este segmento utilizando un puntero que "
"sólo puede ser manipulado en un lugar a la vez. Véase [Smart Pointers "
"Chapter](./ch11-02-smart-pointers.md) para obtener más información."

#: src/ch03-02-dictionaries.md:304
msgid ""
"Let's show using an example. We will try to store a `Span<felt252>` inside a "
"dictionary. For that, we will use `Nullable<T>` and `Box<T>`. Also, we are "
"storing a `Span<T>` and not an `Array<T>` because the latter does not "
"implement the `Copy<T>` trait which is required for reading from a "
"dictionary."
msgstr ""
"Vamos a mostrar usando un ejemplo. Vamos a tratar de almacenar un "
"`Span<felt252'' dentro de un diccionario. Para ello, vamos a utilizar "
"`Nulable<TÃ3 y `Box<TÃ3. AdemÃ¡s, estamos almacenando un `Span<TÃ3 y no un "
"`Array<TÃ3 porque este último no implementa el `Copy<TÃ3 que se requiere "
"para la lectura de un diccionario."

#: src/ch03-02-dictionaries.md:310 src/ch03-02-dictionaries.md:359
msgid "// Create the dictionary\n"
msgstr "// Crear el diccionario\n"

#: src/ch03-02-dictionaries.md:313 src/ch03-02-dictionaries.md:362
msgid "// Create the array to insert\n"
msgstr "// Crear el array para insertar\n"

#: src/ch03-02-dictionaries.md:316 src/ch03-02-dictionaries.md:365
msgid "// Insert it as a `Span`\n"
msgstr "// Insértelo como un `Span`\n"

#: src/ch03-02-dictionaries.md:318 src/ch03-02-dictionaries.md:329
msgid "//...\n"
msgstr "//...\n"

#: src/ch03-02-dictionaries.md:322
msgid ""
"In this code snippet, the first thing we did was to create a new dictionary "
"`d`. We want it to hold a `Nullable<Span>`. After that, we created an array "
"and filled it with values."
msgstr ""
"En este fragmento de código, lo primero que hicimos fue crear un nuevo "
"diccionario `d`. Queremos que tenga un `Nulable<Span®. Después de eso, "
"creamos un array y lo llenamos de valores."

#: src/ch03-02-dictionaries.md:324
msgid ""
"The last step is inserting the array as a span inside the dictionary. Notice "
"that we do this using the `new` function of the `NullableTrait`."
msgstr ""
"El último paso es insertar el array como un lapso dentro del diccionario. "
"Note que lo hacemos usando la función `nuevo` del `Trait Nullable`."

#: src/ch03-02-dictionaries.md:326
msgid ""
"Once the element is inside the dictionary, and we want to get it, we follow "
"the same steps but in reverse order. The following code shows how to achieve "
"that:"
msgstr ""
"Una vez que el elemento está dentro del diccionario, y queremos conseguirlo, "
"seguimos los mismos pasos pero en orden inverso. El siguiente código muestra "
"cómo lograrlo:"

#: src/ch03-02-dictionaries.md:331 src/ch03-02-dictionaries.md:368
msgid "// Get value back\n"
msgstr "// Recuperar valor\n"

#: src/ch03-02-dictionaries.md:334 src/ch03-02-dictionaries.md:371
msgid "// Search the value and assert it is not null\n"
msgstr "// Buscar el valor y afirmar que no es nulo\n"

#: src/ch03-02-dictionaries.md:336 src/ch03-02-dictionaries.md:373
msgid "\"No value found\""
msgstr "\"No se encontró valor\""

#: src/ch03-02-dictionaries.md:340 src/ch03-02-dictionaries.md:377
msgid "// Verify we are having the right values\n"
msgstr "// Verificar que estamos teniendo los valores correctos\n"

#: src/ch03-02-dictionaries.md:341 src/ch03-02-dictionaries.md:378
msgid "\"Expecting 8\""
msgstr "\"Esperando 8\""

#: src/ch03-02-dictionaries.md:342 src/ch03-02-dictionaries.md:379
msgid "\"Expecting 9\""
msgstr "\"Esperando 9\""

#: src/ch03-02-dictionaries.md:343 src/ch03-02-dictionaries.md:380
msgid "\"Expecting 10\""
msgstr "\"Esperando 10\""

#: src/ch03-02-dictionaries.md:347
msgid "Here we:"
msgstr "Aquí tenemos:"

#: src/ch03-02-dictionaries.md:349
msgid "Read the value using `get`."
msgstr "Lea el valor usando `get`."

#: src/ch03-02-dictionaries.md:350
msgid "Verified it is non-null using the `match_nullable` function."
msgstr "Verificado es no nulo utilizando la función `match_nullable`."

#: src/ch03-02-dictionaries.md:351
msgid "Unwrapped the value inside the box and asserted it was correct."
msgstr "Desenvolver el valor dentro de la caja y afirmó que era correcto."

#: src/ch03-02-dictionaries.md:353
msgid "The complete script would look like this:"
msgstr "El guión completo se vería así:"

#: src/ch03-02-dictionaries.md:385
msgid "Using Arrays inside Dictionaries"
msgstr "Uso de archivos dentro de diccionarios"

#: src/ch03-02-dictionaries.md:387
msgid ""
"In the previous section, we explored how to store and retrieve complex types "
"inside a dictionary using `Nullable<T>` and `Box<T>`. Now, let's take a look "
"at how to store an array inside a dictionary and dynamically modify its "
"contents."
msgstr ""
"En la sección anterior, exploramos cómo almacenar y recuperar tipos "
"complejos dentro de un diccionario usando `Nulable<TÃ3 y `Box<TÃ3. Ahora, "
"vamos a echar un vistazo a cómo almacenar un array dentro de un diccionario "
"y modificar dinámicamente sus contenidos."

#: src/ch03-02-dictionaries.md:389
msgid ""
"Storing arrays in dictionaries in Cairo is slightly different from storing "
"other types. This is because arrays are more complex data structures that "
"require special handling to avoid issues with memory copying and references."
msgstr ""
"Almacenar matrices en diccionarios en El Cairo es ligeramente diferente de "
"almacenar otros tipos. Esto se debe a que las matrices son estructuras de "
"datos más complejas que requieren un manejo especial para evitar problemas "
"con la copia de memoria y referencias."

#: src/ch03-02-dictionaries.md:391
msgid ""
"First, let's look at how to create a dictionary and insert an array into it. "
"This process is pretty straightforward and follows a similar pattern to "
"inserting other types of data:"
msgstr ""
"Primero, veamos cómo crear un diccionario e insertar un array en él. Este "
"proceso es bastante sencillo y sigue un patrón similar al de insertar otros "
"tipos de datos:"

#: src/ch03-02-dictionaries.md:398
msgid "\"Array inserted successfully.\""
msgstr "\"Array insertado con éxito.\""

#: src/ch03-02-dictionaries.md:402
msgid ""
"However, attempting to read an array from the dictionary using the `get` "
"method will result in a compiler error. This is because `get` tries to copy "
"the array in memory, which is not possible for arrays (as we've already "
"mentioned in the [previous section](./ch03-02-dictionaries.md#dictionaries-"
"of-types-not-supported-natively), `Array<T>` does not implement the "
"`Copy<T>` trait):"
msgstr ""
"Sin embargo, intentar leer un array desde el diccionario usando el método "
"`get` resultará en un error de compilador. Esto se debe a que `get` intenta "
"copiar el array en memoria, lo cual no es posible para arrays (como ya hemos "
"mencionado en la [sección anterior](./ch03-02-dictionarys.md#dictionarys-of-"
"types-not-supported-natively), `Array<T»:"

#: src/ch03-02-dictionaries.md:411
msgid "\"Array: {:?}\""
msgstr "\"Array: {:?}\""

#: src/ch03-02-dictionaries.md:415
msgid "// This will cause a compiler error\n"
msgstr "// Esto causará un error en el compilador\n"

#: src/ch03-02-dictionaries.md:417
msgid "\"No value!\""
msgstr "\"¡Sin valor!\""

#: src/ch03-02-dictionaries.md:424
msgid ""
"```shell\n"
"$ scarb cairo-run \n"
"   Compiling no_listing_15_dict_of_array_attempt_get v0.1.0 (listings/ch03-"
"common-collections/no_listing_15_dict_of_array_attempt_get/Scarb.toml)\n"
"error: Trait has no implementation in context: core::traits::Copy::<core::"
"nullable::Nullable::<core::array::Array::<core::integer::u8>>>\n"
" --> listings/ch03-common-collections/"
"no_listing_15_dict_of_array_attempt_get/src/lib.cairo:12:20\n"
"    let val = dict.get(0); // This will cause a compiler error\n"
"                   ^*^\n"
"\n"
"error: could not compile `no_listing_15_dict_of_array_attempt_get` due to "
"previous error\n"
"error: `scarb metadata` exited with error\n"
"\n"
"```"
msgstr ""
"•shell $ scarb cairo-run Compilando no_listing_15_dict_of_array_attempt_get "
"v0.1.0 (listas/ch03-common-collections/"
"no_listing_15_dict_of_array_attempt_get/Scarb.toml) error: El rasgo no se "
"aplica en el contexto: core:::Traits::::Copy:::<core:::nulable::::Nullable:::"
"<core:::array::::Array::<core::integer:::u8• --> listings/ch03-common-"
"collections/no_listing_15_dict_of_array_attempt_get/src/lib.cairo:12:20 let "
"val = dict.get(0); // Esto causará un error de compilador ^*^^ error de "
"salida con error de error de error de contraseña"

#: src/ch03-02-dictionaries.md:437
msgid ""
"To correctly read an array from the dictionary, we need to use dictionary "
"entries. This allows us to get a reference to the array value without "
"copying it:"
msgstr ""
"Para leer correctamente un array del diccionario, necesitamos usar entradas "
"del diccionario. Esto nos permite obtener una referencia al valor del array "
"sin copiarlo:"

#: src/ch03-02-dictionaries.md:449
msgid ""
"Note: We must convert the array to a `Span` before finalizing the entry, "
"because calling `NullableTrait::new(arr)` moves the array, thus making it "
"impossible to return it from the function."
msgstr ""
"Nota: Debemos convertir el array a un `Span` antes de finalizar la entrada, "
"porque llamando a `NulableTrait::new(arr)` mueve el array, haciendo así "
"imposible devolverlo de la función."

#: src/ch03-02-dictionaries.md:451
msgid ""
"To modify the stored array, such as appending a new value, we can use a "
"similar approach. The following `append_value` function demonstrates this:"
msgstr ""
"Para modificar el array almacenado, como añadir un nuevo valor, podemos "
"utilizar un enfoque similar. La siguiente función `append_value` demuestra "
"esto:"

#: src/ch03-02-dictionaries.md:462
msgid ""
"In the `append_value` function, we access the dictionary entry, dereference "
"the array, append the new value, and finalize the entry with the updated "
"array."
msgstr ""
"En la función `append_value`, accedemos a la entrada del diccionario, "
"designamos el array, agregamos el nuevo valor y finalizamos la entrada con "
"el array actualizado."

#: src/ch03-02-dictionaries.md:464
msgid ""
"Note: Removing an item from a stored array can be implemented in a similar "
"manner."
msgstr ""
"Nota: Eliminar un elemento de un array almacenado se puede implementar de "
"manera similar."

#: src/ch03-02-dictionaries.md:466
msgid ""
"Below is the complete example demonstrating the creation, insertion, "
"reading, and modification of an array in a dictionary:"
msgstr ""
"A continuación se muestra el ejemplo completo que demuestra la creación, "
"inserción, lectura y modificación de un array en un diccionario:"

#: src/ch03-02-dictionaries.md:491
msgid "\"Before insertion: {:?}\""
msgstr "\"Antes de la inserción: {:?}\""

#: src/ch03-02-dictionaries.md:495
msgid "\"After insertion: {:?}\""
msgstr "\"Después de la inserción: {:?}\""

#: src/ch03-02-dictionaries.md:499
msgid "{{#quiz ../quizzes/ch03-02-dictionaries.toml}}"
msgstr "quiz../quizzes/ch03-02-dictionarys.toml"

#: src/ch04-00-understanding-ownership.md
msgid "Understanding Cairo's Ownership system"
msgstr "Comprensión del sistema de propiedad de El Cairo"

#: src/ch04-00-understanding-ownership.md
msgid ""
"Cairo is a language built around a linear type system that allows us to "
"statically ensure that in every Cairo program, a value is used exactly once. "
"This linear type system helps prevent runtime errors by ensuring that "
"operations that could cause such errors, such as writing twice to a memory "
"cell, are detected at compile time. This is achieved by implementing an "
"ownership system and forbidding copying and dropping values by default. In "
"this chapter, we’ll talk about Cairo's ownership system as well as "
"references and snapshots."
msgstr ""
"El Cairo es un lenguaje construido en torno a un sistema de tipo lineal que "
"nos permite garantizar estáticamente que en cada programa de El Cairo se "
"utilice un valor exactamente una vez. Este sistema de tipo lineal ayuda a "
"prevenir errores de tiempo de ejecución al garantizar que las operaciones "
"que podrían causar tales errores, como escribir dos veces a una celda de "
"memoria, se detectan en el momento de la compilación. Esto se logra "
"implementando un sistema de propiedad y prohibiendo copiar y soltar valores "
"por defecto. En este capítulo, hablaremos del sistema de propiedad de El "
"Cairo, así como referencias e instantáneas."

#: src/ch04-01-what-is-ownership.md:1
msgid "Ownership Using a Linear Type System"
msgstr "Propiedad Usando un Sistema de Tipo Lineal"

#: src/ch04-01-what-is-ownership.md:3
msgid ""
"Cairo uses a linear type system. In such a type system, any value (a basic "
"type, a struct, an enum) must be used and must only be used once. 'Used' "
"here means that the value is either _destroyed_ or _moved_."
msgstr ""
"El Cairo utiliza un sistema de tipo lineal. En tal sistema de tipo, "
"cualquier valor (un tipo básico, una estructura, un enum) debe ser utilizado "
"y sólo debe ser utilizado una vez. 'Usado' aquí significa que el valor es "
"_destroyed_ o _moved_."

#: src/ch04-01-what-is-ownership.md:5
msgid "_Destruction_ can happen in several ways:"
msgstr "_Destrucción_ puede ocurrir de varias maneras:"

#: src/ch04-01-what-is-ownership.md:7
msgid "a variable goes out of scope."
msgstr "una variable queda fuera de alcance."

#: src/ch04-01-what-is-ownership.md:8
msgid "a struct is destructured."
msgstr "una estructura está desestructurada."

#: src/ch04-01-what-is-ownership.md:9
msgid "explicit destruction using `destruct()`."
msgstr "destrucción explícita utilizando `destruction()`."

#: src/ch04-01-what-is-ownership.md:11
msgid "_Moving_ a value simply means passing that value to another function."
msgstr "_Mover_ un valor simplemente significa pasar ese valor a otra función."

#: src/ch04-01-what-is-ownership.md:13
msgid ""
"This results in somewhat similar constraints to the Rust ownership model, "
"but there are some differences. In particular, the Rust ownership model "
"exists (in part) to avoid data races and concurrent mutable access to a "
"memory value. This is obviously impossible in Cairo since the memory is "
"immutable. Instead, Cairo leverages its linear type system for two main "
"purposes:"
msgstr ""
"Esto resulta en restricciones algo similares al modelo de propiedad de Rust, "
"pero hay algunas diferencias. En particular, el modelo de propiedad de Rust "
"existe (en parte) para evitar carreras de datos y acceso mutable concurrente "
"a un valor de memoria. Esto es obviamente imposible en El Cairo ya que la "
"memoria es inmutable. En cambio, El Cairo aprovecha su sistema de tipo "
"lineal para dos propósitos principales:"

#: src/ch04-01-what-is-ownership.md:17
msgid "Ensuring that all code is provable and thus verifiable."
msgstr ""
"Garantizar que todo el código sea demostrable y, por lo tanto, verificable."

#: src/ch04-01-what-is-ownership.md:18
msgid "Abstracting away the immutable memory of the Cairo VM."
msgstr "Abstrayendo la memoria inmutable de la VM de El Cairo."

#: src/ch04-01-what-is-ownership.md:20
msgid "Ownership"
msgstr "Propiedad"

#: src/ch04-01-what-is-ownership.md:22
msgid ""
"In Cairo, ownership applies to _variables_ and not to _values_. A value can "
"safely be referred to by many different variables (even if they are mutable "
"variables), as the value itself is always immutable. Variables however can "
"be mutable, so the compiler must ensure that constant variables aren't "
"accidentally modified by the programmer. This makes it possible to talk "
"about ownership of a variable: the owner is the code that can read (and "
"write if mutable) the variable."
msgstr ""
"En El Cairo, la propiedad se aplica a _variables_ y no a _valores_. Un valor "
"puede ser referido con seguridad por muchas variables diferentes (incluso si "
"son variables mutables), ya que el valor en sí es siempre inmutable. "
"Variables sin embargo pueden ser mutables, por lo que el compilador debe "
"asegurarse de que las variables constantes no sean modificadas "
"accidentalmente por el programador. Esto hace posible hablar de propiedad de "
"una variable: el propietario es el código que puede leer (y escribir si "
"mutable) la variable."

#: src/ch04-01-what-is-ownership.md:26
msgid ""
"This means that variables (not values) follow similar rules to Rust values:"
msgstr ""
"Esto significa que las variables (no los valores) siguen reglas similares a "
"los valores de Rust:"

#: src/ch04-01-what-is-ownership.md:28
msgid "Each variable in Cairo has an owner."
msgstr "Cada variable en El Cairo tiene un propietario."

#: src/ch04-01-what-is-ownership.md:29
msgid "There can only be one owner at a time."
msgstr "Sólo puede haber un propietario a la vez."

#: src/ch04-01-what-is-ownership.md:30
msgid "When the owner goes out of scope, the variable is destroyed."
msgstr "Cuando el propietario se sale del alcance, la variable se destruye."

#: src/ch04-01-what-is-ownership.md:32
msgid ""
"Now that we’re past basic Cairo syntax, we won’t include all the `fn main() "
"{` code in examples, so if you’re following along, make sure to put the "
"following examples inside a main function manually. As a result, our "
"examples will be a bit more concise, letting us focus on the actual details "
"rather than boilerplate code."
msgstr ""
"Ahora que hemos pasado la sintaxis básica de El Cairo, no vamos a incluir "
"todo el código `fn main()  en ejemplos, por lo que si usted está siguiendo, "
"asegúrese de poner los siguientes ejemplos dentro de una función principal "
"manualmente. Como resultado, nuestros ejemplos serán un poco más concisos, "
"permitiéndonos centrarse en los detalles reales en lugar de código de placa "
"de caldera."

#: src/ch04-01-what-is-ownership.md:34
msgid "Variable Scope"
msgstr "Ámbito de aplicación variable"

#: src/ch04-01-what-is-ownership.md:36
msgid ""
"As a first example of the linear type system, we’ll look at the _scope_ of "
"some variables. A scope is the range within a program for which an item is "
"valid. Take the following variable:"
msgstr ""
"Como primer ejemplo del sistema de tipos lineales, veremos el _scope_ de "
"algunas variables. Un alcance es el rango dentro de un programa para el que "
"un elemento es válido. Tome la siguiente variable:"

#: src/ch04-01-what-is-ownership.md:44
msgid ""
"The variable `s` refers to a short string. The variable is valid from the "
"point at which it’s declared until the end of the current _scope_. Listing "
"4-1 shows a program with comments annotating where the variable `s` would be "
"valid."
msgstr ""
"La variable `s` se refiere a una cadena corta. La variable es válida desde "
"el punto en que se declara hasta el final del _scope_ actual. El listado 4-1 "
"muestra un programa con comentarios anotando donde la variable `s` sería "
"válida."

#: src/ch04-01-what-is-ownership.md:49
msgid "//TAG: ignore_fmt\n"
msgstr "//TAG: ignore_fmt\n"

#: src/ch04-01-what-is-ownership.md:51
msgid "// s is not valid here, it’s not yet declared\n"
msgstr "// s no es válido aquí, todavía no se ha declarado\n"

#: src/ch04-01-what-is-ownership.md:52
msgid ""
"// s is valid from this point forward\n"
"    // do stuff with s\n"
msgstr ""
"// s es válido a partir de este punto hacia adelante // hacer cosas con s\n"

#: src/ch04-01-what-is-ownership.md:54
msgid "// this scope is now over, and s is no longer valid\n"
msgstr "// este alcance ha terminado, y s ya no es válido\n"

#: src/ch04-01-what-is-ownership.md:58
msgid ""
"<span class=\"caption\">Listing 4-1: A variable and the scope in which it is "
"valid</span>"
msgstr ""
"<span class=\"caption\">Lista 4-1: Una variable y el alcance en el que es "
"válida</span>"

#: src/ch04-01-what-is-ownership.md:60
msgid "In other words, there are two important points in time here:"
msgstr "En otras palabras, hay dos puntos importantes en el tiempo aquí:"

#: src/ch04-01-what-is-ownership.md:62
msgid "When `s` comes _into_ scope, it is valid."
msgstr "Cuando `s` entra en el ámbito de aplicación, es válido."

#: src/ch04-01-what-is-ownership.md:63
msgid "It remains valid until it goes _out of_ scope."
msgstr "Sigue siendo válido hasta que se vaya _fuera de_ alcance."

#: src/ch04-01-what-is-ownership.md:65
msgid ""
"At this point, the relationship between scopes and when variables are valid "
"is similar to that in other programming languages. Now we’ll build on top of "
"this understanding by using the `Array` type we introduced in the previous "
"[\"Arrays\"](./ch03-01-arrays.md) section."
msgstr ""
"En este punto, la relación entre los alcances y cuando las variables son "
"válidas es similar a la de otros lenguajes de programación. Ahora vamos a "
"construir sobre esta comprensión usando el tipo `Array` que introdujimos en "
"la sección anterior [\"Arrays\"](./ch03-01-arrays.md)."

#: src/ch04-01-what-is-ownership.md:69
msgid "Moving values"
msgstr "Valores en movimiento"

#: src/ch04-01-what-is-ownership.md:71
msgid ""
"As said earlier, _moving_ a value simply means passing that value to another "
"function. When that happens, the variable referring to that value in the "
"original scope is destroyed and can no longer be used, and a new variable is "
"created to hold the same value."
msgstr ""
"Como se dijo anteriormente, _moviendo_ un valor simplemente significa pasar "
"ese valor a otra función. Cuando eso sucede, la variable que se refiere a "
"ese valor en el ámbito original es destruida y ya no puede ser usada, y una "
"nueva variable es creada para mantener el mismo valor."

#: src/ch04-01-what-is-ownership.md:73
msgid ""
"Arrays are an example of a complex type that is moved when passing it to "
"another function. Here is a short reminder of what an array looks like:"
msgstr ""
"Las matrices son un ejemplo de un tipo complejo que se mueve al pasarlo a "
"otra función. Aquí hay un breve recordatorio de cómo se ve una matriz:"

#: src/ch04-01-what-is-ownership.md:84
msgid ""
"How does the type system ensure that the Cairo program never tries to write "
"to the same memory cell twice? Consider the following code, where we try to "
"remove the front of the array twice:"
msgstr ""
"¿Cómo asegura el sistema de tipo que el programa de El Cairo nunca intenta "
"escribir a la misma celda de memoria dos veces? Considere el siguiente "
"código, donde tratamos de eliminar el frente de la matriz dos veces:"

#: src/ch04-01-what-is-ownership.md:99
msgid ""
"In this case, we try to pass the same value (the array in the `arr` "
"variable) to both function calls. This means our code tries to remove the "
"first element twice, which would try to write to the same memory cell twice "
"- which is forbidden by the Cairo VM, leading to a runtime error. "
"Thankfully, this code does not actually compile. Once we have passed the "
"array to the `foo` function, the variable `arr` is no longer usable. We get "
"this compile-time error, telling us that we would need Array to implement "
"the Copy Trait:"
msgstr ""
"En este caso, tratamos de pasar el mismo valor (el array en la variable "
"`arr`) a ambas llamadas de función. Esto significa que nuestro código "
"intenta eliminar el primer elemento dos veces, lo que intentaría escribir a "
"la misma celda de memoria dos veces - que está prohibido por la VM de El "
"Cairo, lo que conduce a un error de tiempo de ejecución. Afortunadamente, "
"este código no realmente compilar. Una vez que hemos pasado la matriz a la "
"función `foo`, la variable `arr` ya no es utilizable."

#: src/ch04-01-what-is-ownership.md:125
msgid "The `Copy` Trait"
msgstr "El rasgo `Copiar`"

#: src/ch04-01-what-is-ownership.md:127
msgid ""
"If a type implements the `Copy` trait, passing a value of that type to a "
"function does not move the value. Instead, a new variable is created, "
"referring to the same value. The important thing to note here is that this "
"is a completely free operation because variables are a Cairo abstraction "
"only and because _values_ in Cairo are always immutable. This, in "
"particular, conceptually differs from the Rust version of the `Copy` trait, "
"where the value is potentially copied in memory."
msgstr ""
"Si un tipo implementa el rasgo `Copy`, pasar un valor de ese tipo a una "
"función no mueve el valor. En su lugar, se crea una nueva variable, "
"refiriéndose al mismo valor. Lo importante es señalar aquí que se trata de "
"una operación completamente libre porque las variables son una abstracción "
"de El Cairo solamente y porque _values_ en El Cairo son siempre inmutables. "
"Esto, en particular, conceptualmente difiere de la versión Rust del rasgo "
"`Copy`, donde el valor es potencialmente copiado en memoria."

#: src/ch04-01-what-is-ownership.md:130
msgid ""
"All basic types previously described in [\"Data Types\"](./ch02-02-data-"
"types.md) implement by default the `Copy` trait."
msgstr ""
"Todos los tipos básicos descritos anteriormente en [\"Tipos de datos\"](./"
"ch02-02-data-types.md) implementan por defecto el rasgo `Copy`."

#: src/ch04-01-what-is-ownership.md:132
msgid ""
"While Arrays and Dictionaries can't be copied, custom types that don't "
"contain either of them can be. You can implement the `Copy` trait on your "
"type by adding the `#[derive(Copy)]` annotation to your type definition. "
"However, Cairo won't allow a type to be annotated with Copy if the type "
"itself or any of its components doesn't implement the Copy trait."
msgstr ""
"Mientras que los arreglos y diccionarios no pueden ser copiados, los tipos "
"personalizados que no contienen ninguno de ellos pueden serlo. Puede "
"implementar el rasgo `Copiar` en su tipo añadiendo la anotación "
"'[derive(Copiar)]` a su definición de tipo. Sin embargo, El Cairo no "
"permitirá que un tipo sea anotado con Copiar si el tipo en sí o cualquiera "
"de sus componentes no implementa el rasgo Copiar."

#: src/ch04-01-what-is-ownership.md:148
msgid "// do something with p\n"
msgstr "// hacer algo con p\n"

#: src/ch04-01-what-is-ownership.md:152
msgid ""
"In this example, we can pass `p1` twice to the foo function because the "
"`Point` type implements the `Copy` trait. This means that when we pass `p1` "
"to `foo`, we are actually passing a copy of `p1`, so `p1` remains valid. In "
"ownership terms, this means that the ownership of `p1` remains with the "
"`main` function. If you remove the `Copy` trait derivation from the `Point` "
"type, you will get a compile-time error when trying to compile the code."
msgstr ""
"En este ejemplo, podemos pasar `p1` dos veces a la función foo porque el "
"tipo `Point` implementa el rasgo `Copy`. Esto significa que cuando pasamos "
"`p1` a `foo`, realmente estamos pasando una copia de `p1`, por lo que `p1` "
"sigue siendo válido. En términos de propiedad, esto significa que la "
"propiedad de `p1` permanece con la función `main`. Si elimina la derivación "
"de `Copy` del tipo `Point`, obtendrá un error de tiempo de compilación al "
"intentar compilar el código."

#: src/ch04-01-what-is-ownership.md:155
msgid ""
"_Don't worry about the `Struct` keyword. We will introduce this in [Chapter "
"5](./ch05-00-using-structs-to-structure-related-data.md)._"
msgstr ""
"_No te preocupes por la palabra clave `Struct`. Lo introduciremos en "
"[Capítulo 5](./ch05-00-using-structs-to-structure-related-data.md)._"

#: src/ch04-01-what-is-ownership.md:160
msgid "Destroying Values - Example with FeltDict"
msgstr "Destruyendo valores - Ejemplo con FeltDict"

#: src/ch04-01-what-is-ownership.md:162
msgid ""
"The other way linear types can be _used_ is by being destroyed. Destruction "
"must ensure that the 'resource' is now correctly released. In Rust, for "
"example, this could be closing the access to a file, or locking a mutex. In "
"Cairo, one type that has such behaviour is `Felt252Dict`. For provability, "
"dicts must be 'squashed' when they are destructed. This would be very easy "
"to forget, so it is enforced by the type system and the compiler."
msgstr ""
"La otra forma en que los tipos lineales pueden ser _usados_ es siendo "
"destruidos. La destrucción debe asegurar que el'recurso' sea liberado "
"correctamente. En Rust, por ejemplo, esto podría ser cerrar el acceso a un "
"archivo, o bloquear un mutex. En El Cairo, un tipo que tiene tal "
"comportamiento es `Felt252Dict`. Para la provabilidad, los dictados deben "
"ser 'destruidos' cuando son destruidos. Esto sería muy fácil de olvidar, por "
"lo que es aplicado por el sistema de tipo y el compilador."

#: src/ch04-01-what-is-ownership.md:166
msgid "No-op Destruction: the `Drop` Trait"
msgstr "Destrucción no op: el rasgo `Drop`"

#: src/ch04-01-what-is-ownership.md:168
msgid ""
"You may have noticed that the `Point` type in the previous example also "
"implements the `Drop` trait. For example, the following code will not "
"compile, because the struct `A` is not moved or destroyed before it goes out "
"of scope:"
msgstr ""
"Es posible que haya notado que el tipo `Punto` en el ejemplo anterior "
"también implementa el rasgo `Drop`. Por ejemplo, el siguiente código no se "
"compilará, porque la estructura `A` no se mueve o destruye antes de que "
"quede fuera de su alcance:"

#: src/ch04-01-what-is-ownership.md:175
msgid "// error: Variable not dropped.\n"
msgstr "// error: Variable no caída.\n"

#: src/ch04-01-what-is-ownership.md:179
msgid ""
"However, types that implement the `Drop` trait are automatically destroyed "
"when going out of scope. This destruction does nothing, it is a no-op - "
"simply a hint to the compiler that this type can safely be destroyed once "
"it's no longer useful. We call this \"dropping\" a value."
msgstr ""
"Sin embargo, los tipos que implementan el rasgo `Drop` se destruyen "
"automáticamente al salir del alcance. Esta destrucción no hace nada, es un "
"no-op - simplemente una pista al compilador de que este tipo puede ser "
"destruido de forma segura una vez que ya no es útil."

#: src/ch04-01-what-is-ownership.md:181
msgid ""
"At the moment, the `Drop` implementation can be derived for all types, "
"allowing them to be dropped when going out of scope, except for dictionaries "
"(`Felt252Dict`) and types containing dictionaries. For example, the "
"following code compiles:"
msgstr ""
"Por el momento, la aplicación `Drop` se puede derivar de todos los tipos, lo "
"que permite eliminarlos al salir del ámbito de aplicación, excepto los "
"diccionarios (`Felt252Dict`) y los tipos que contienen diccionarios. Por "
"ejemplo, el siguiente código recopila:"

#: src/ch04-01-what-is-ownership.md:189
msgid "// Now there is no error.\n"
msgstr "// Ahora no hay error.\n"

#: src/ch04-01-what-is-ownership.md:193
msgid "Destruction with a Side-effect: the `Destruct` Trait"
msgstr "Destrucción con efectos secundarios: el rasgo de destrucción"

#: src/ch04-01-what-is-ownership.md:195
msgid ""
"When a value is destroyed, the compiler first tries to call the `drop` "
"method on that type. If it doesn't exist, then the compiler tries to call "
"`destruct` instead. This method is provided by the `Destruct` trait."
msgstr ""
"Cuando un valor es destruido, el compilador primero intenta llamar al método "
"`drop` en ese tipo. Si no existe, entonces el compilador intenta llamar a "
"`destruct` en su lugar. Este método es proporcionado por el rasgo `Destruct`."

#: src/ch04-01-what-is-ownership.md:197
msgid ""
"As said earlier, dictionaries in Cairo are types that must be \"squashed\" "
"when destructed, so that the sequence of access can be proven. This is easy "
"for developers to forget, so instead dictionaries implement the `Destruct` "
"trait to ensure that all dictionaries are _squashed_ when going out of "
"scope. As such, the following example will not compile:"
msgstr ""
"Como se ha dicho anteriormente, los diccionarios en El Cairo son tipos que "
"deben ser \"destruidos\" cuando se destruyen, de modo que la secuencia de "
"acceso puede ser probada. Esto es fácil de olvidar para los desarrolladores, "
"por lo que los diccionarios implementan el rasgo `Destruct` para asegurarse "
"de que todos los diccionarios están _squashed_ al salir del alcance. Como "
"tal, el siguiente ejemplo no compilará:"

#: src/ch04-01-what-is-ownership.md:210
msgid "If you try to run this code, you will get a compile-time error:"
msgstr ""
"Si intenta ejecutar este código, obtendrá un error de tiempo de compilación:"

#: src/ch04-01-what-is-ownership.md:227
msgid ""
"When `A` goes out of scope, it can't be dropped as it implements neither the "
"`Drop` (as it contains a dictionary and can't `derive(Drop)`) nor the "
"`Destruct` trait. To fix this, we can derive the `Destruct` trait "
"implementation for the `A` type:"
msgstr ""
"Cuando `A` sale del ámbito de aplicación, no puede eliminarse ya que no "
"aplica ni el `Drop` (ya que contiene un diccionario y no puede "
"`derive(Drop)`) ni el rasgo `Destruct`. Para solucionarlo, podemos derivar "
"la aplicación del rasgo `Destruct` para el tipo `A`:"

#: src/ch04-01-what-is-ownership.md:236
msgid "// No error here\n"
msgstr "// No hay error aquí\n"

#: src/ch04-01-what-is-ownership.md:240
msgid ""
"Now, when `A` goes out of scope, its dictionary will be automatically "
"`squashed`, and the program will compile."
msgstr ""
"Ahora, cuando `A` se sale del alcance, su diccionario será automáticamente "
"`squashed`, y el programa se compilará."

#: src/ch04-01-what-is-ownership.md:242
msgid "Copy Array Data with `clone`"
msgstr "Copiar datos de matriz con `clone`"

#: src/ch04-01-what-is-ownership.md:244
msgid ""
"If we _do_ want to deeply copy the data of an `Array`, we can use a common "
"method called `clone`. We’ll discuss method syntax in a dedicated section in "
"[Chapter 5](./ch05-03-method-syntax.md), but because methods are a common "
"feature in many programming languages, you’ve probably seen them before."
msgstr ""
"Si _do_ queremos copiar profundamente los datos de un `Array`, podemos "
"utilizar un método común llamado `clone`. Vamos a discutir la sintaxis del "
"método en una sección dedicada en [Capítulo 5](./ch05-03-method-syntax.md), "
"pero debido a que los métodos son una característica común en muchos "
"lenguajes de programación, es probable que los haya visto antes."

#: src/ch04-01-what-is-ownership.md:246
msgid "Here’s an example of the `clone` method in action."
msgstr "He aquí un ejemplo del método `clone` en acción."

#: src/ch04-01-what-is-ownership.md:255
msgid ""
"When you see a call to `clone`, you know that some arbitrary code is being "
"executed and that code may be expensive. It’s a visual indicator that "
"something different is going on. In this case, the _value_ `arr1` refers to "
"is being copied, resulting in new memory cells being used, and a new "
"_variable_ `arr2` is created, referring to the new copied value."
msgstr ""
"Cuando ves una llamada a `clone`, sabes que se está ejecutando algún código "
"arbitrario y que el código puede ser caro. Es un indicador visual de que "
"algo diferente está sucediendo. En este caso, el _value_ `arr1` se refiere a "
"que se está copiando, resultando en el uso de nuevas celdas de memoria, y se "
"crea un nuevo _variable_ `arr2`, refiriéndose al nuevo valor copiado."

#: src/ch04-01-what-is-ownership.md:260
msgid "Return Values and Scope"
msgstr "Valores de retorno y alcance"

#: src/ch04-01-what-is-ownership.md:262
msgid ""
"Returning values is equivalent to _moving_ them. Listing 4-2 shows an "
"example of a function that returns some value, with similar annotations as "
"those in Listing 4-1."
msgstr ""
"El listado 4-2 muestra un ejemplo de una función que devuelve algún valor, "
"con anotaciones similares a las del listado 4-1."

#: src/ch04-01-what-is-ownership.md:272
msgid ""
"// gives_ownership moves its return\n"
"                                          // value into a1\n"
msgstr "// gives_ownership mueve su valor de retorno // a1\n"

#: src/ch04-01-what-is-ownership.md:275
msgid "// a2 comes into scope\n"
msgstr "// a2 entra en el ámbito de aplicación\n"

#: src/ch04-01-what-is-ownership.md:277
msgid ""
"// a2 is moved into\n"
"                                          // takes_and_gives_back, which "
"also\n"
"                                          // moves its return value into a3\n"
msgstr ""
"// a2 se mueve a // takes_and_gives_back, que también // mueve su valor de "
"retorno a a3\n"

#: src/ch04-01-what-is-ownership.md:281
msgid ""
"// Here, a3 goes out of scope and is dropped. a2 was moved, so nothing\n"
"  // happens. a1 goes out of scope and is dropped.\n"
msgstr ""
"// Aquí, a3 sale fuera de alcance y se cae. a2 fue movido, así que nada // "
"sucede. a1 sale fuera de alcance y se cae.\n"

#: src/ch04-01-what-is-ownership.md:284
msgid ""
"// gives_ownership will move its\n"
"                                          // return value into the function\n"
"                                          // that calls it\n"
msgstr ""
"// gives_ownership moverá su valor // devuelto a la función // que lo llama\n"

#: src/ch04-01-what-is-ownership.md:288 src/ch04-01-what-is-ownership.md:296
msgid "// some_a comes into scope\n"
msgstr "// some_a entra en el ámbito de aplicación\n"

#: src/ch04-01-what-is-ownership.md:290
msgid ""
"// some_a is returned and\n"
"                                          // moves ownership to the calling\n"
"                                          // function\n"
msgstr ""
"// some_a es devuelto y // mueve la propiedad a la función llamada //\n"

#: src/ch04-01-what-is-ownership.md:294
msgid "// This function takes an instance some_a of A and returns it\n"
msgstr "// Esta función toma una instancia some_a de A y la devuelve\n"

#: src/ch04-01-what-is-ownership.md:298
msgid ""
"// some_a is returned and \n"
"                                          // moves ownership to the calling\n"
"                                          // function\n"
msgstr ""
"// some_a es devuelto y // mueve la propiedad a la función llamada //\n"

#: src/ch04-01-what-is-ownership.md:304
msgid "<span class=\"caption\">Listing 4-2: Moving return values</span>"
msgstr "<span class=\"caption\">Lista 4-2: Mover valores de retorno</span>"

#: src/ch04-01-what-is-ownership.md:306
msgid ""
"While this works, moving into and out of every function is a bit tedious. "
"What if we want to let a function use a value but not move the value? It’s "
"quite annoying that anything we pass in also needs to be passed back if we "
"want to use it again, in addition to any data resulting from the body of the "
"function that we might want to return as well."
msgstr ""
"Mientras que esto funciona, entrar y salir de cada función es un poco "
"tedioso. ¿Qué pasa si queremos dejar que una función utilice un valor pero "
"no mover el valor? Es bastante molesto que cualquier cosa que pase en "
"también necesita ser pasado de nuevo si queremos usarlo de nuevo, además de "
"cualquier dato resultante del cuerpo de la función que podríamos querer "
"volver también."

#: src/ch04-01-what-is-ownership.md:308
msgid ""
"Cairo does let us return multiple values using a tuple, as shown in Listing "
"4-3."
msgstr ""
"El Cairo nos permite devolver múltiples valores usando una tupla, como se "
"muestra en Listado 4-3."

#: src/ch04-01-what-is-ownership.md:320
msgid "// len() returns the length of an array\n"
msgstr "// len() devuelve la longitud de una matriz\n"

#: src/ch04-01-what-is-ownership.md:326
msgid "<span class=\"caption\">Listing 4-3: Returning many values</span>"
msgstr "<span class=\"caption\">Lista 4-3: Devolviendo muchos valores</span>"

#: src/ch04-01-what-is-ownership.md:328
msgid ""
"But this is too much ceremony and a lot of work for a concept that should be "
"common. Luckily for us, Cairo has two features for passing a value without "
"destroying or moving it, called _references_ and _snapshots_."
msgstr ""
"Pero esto es demasiada ceremonia y mucho trabajo para un concepto que "
"debería ser común. Afortunadamente para nosotros, El Cairo tiene dos "
"características para pasar un valor sin destruir o moverlo, llamado "
"_referencias_ y _snapshots_."

#: src/ch04-02-references-and-snapshots.md:3
msgid ""
"The issue with the tuple code in previous Listing 4-3 is that we have to "
"return the `Array` to the calling function so we can still use the `Array` "
"after the call to `calculate_length`, because the `Array` was moved into "
"`calculate_length`."
msgstr ""
"El problema con el código de tupla en la lista anterior 4-3 es que tenemos "
"que devolver el `Array` a la función de llamada para que podamos seguir "
"utilizando el `Array` después de la llamada a `calculate_longth`, porque el "
"`Array` se trasladó a `calculate_longth`."

#: src/ch04-02-references-and-snapshots.md:8
msgid "Snapshots"
msgstr "Snapshots"

#: src/ch04-02-references-and-snapshots.md:10
msgid ""
"In the previous chapter, we talked about how Cairo's ownership system "
"prevents us from using a variable after we've moved it, protecting us from "
"potentially writing twice to the same memory cell. However, it's not very "
"convenient. Let's see how we can retain ownership of the variable in the "
"calling function using snapshots."
msgstr ""
"En el capítulo anterior, hablamos de cómo el sistema de propiedad de El "
"Cairo nos impide usar una variable después de haberlo movido, protegiéndonos "
"de escribir potencialmente dos veces a la misma celda de memoria. Sin "
"embargo, no es muy conveniente. Veamos cómo podemos retener la propiedad de "
"la variable en la función de llamada usando instantáneas."

#: src/ch04-02-references-and-snapshots.md:15
msgid ""
"In Cairo, a snapshot is an immutable view of a value at a certain point in "
"time. Recall that memory is immutable, so modifying a value actually creates "
"a new memory cell. The old memory cell still exists, and snapshots are "
"variables that refer to that \"old\" value. In this sense, snapshots are a "
"view \"into the past\"."
msgstr ""
"En El Cairo, una instantánea es una vista inmutable de un valor en un cierto "
"punto en el tiempo. Recuerde que la memoria es inmutable, por lo que la "
"modificación de un valor realmente crea una nueva célula de memoria. La "
"vieja celda de memoria todavía existe, y las instantáneas son variables que "
"se refieren a ese valor \"viejo\". En este sentido, las instantáneas son una "
"vista \"en el pasado\"."

#: src/ch04-02-references-and-snapshots.md:20
msgid ""
"Here is how you would define and use a `calculate_length` function that "
"takes a snapshot of an array as a parameter instead of taking ownership of "
"the underlying value. In this example, the `calculate_length` function "
"returns the length of the array passed as a parameter. As we're passing it "
"as a snapshot, which is an immutable view of the array, we can be sure that "
"the `calculate_length` function will not mutate the array, and ownership of "
"the array is kept in the `main` function."
msgstr ""
"Así es como definiría y utilizaría una función `calculate_length` que toma "
"una instantánea de un array como parámetro en lugar de tomar la propiedad "
"del valor subyacente. En este ejemplo, la función `calculate_length` "
"devuelve la longitud del array pasado como parámetro. Al pasarlo como una "
"instantánea, que es una vista inmutable del array, podemos estar seguros de "
"que la función `calculate_length` no muta el array, y la propiedad del array "
"se mantiene en la función `main`."

#: src/ch04-02-references-and-snapshots.md:31
msgid "// Take a snapshot of `arr1` at this point in time\n"
msgstr "// Tome una instantánea de `arr1` en este momento\n"

#: src/ch04-02-references-and-snapshots.md:32
msgid "// Mutate `arr1` by appending a value\n"
msgstr "// Mutar `arr1` añadiendo un valor\n"

#: src/ch04-02-references-and-snapshots.md:35
msgid "// Calculate the length of the array when the snapshot was taken\n"
msgstr "// Calcular la longitud de la matriz cuando se tomó la instantánea\n"

#: src/ch04-02-references-and-snapshots.md:36
#: src/ch04-02-references-and-snapshots.md:67
msgid "// Calculate the current length of the array\n"
msgstr "// Calcular la longitud actual de la matriz\n"

#: src/ch04-02-references-and-snapshots.md:37
msgid "\"The length of the array when the snapshot was taken is {}\""
msgstr "\"La longitud del array cuando se tomó la instantánea es la siguiente:"

#: src/ch04-02-references-and-snapshots.md:38
msgid "\"The current length of the array is {}\""
msgstr "\"La longitud actual del array es de.... \""

#: src/ch04-02-references-and-snapshots.md:46
msgid ""
"Note: it is only possible to call the `len()` method on an array snapshot "
"because it is defined as such in the `ArrayTrait` trait. If you try to call "
"a method that is not defined for snapshots on a snapshot, you will get a "
"compilation error. However, you can call methods expecting a snapshot on non-"
"snapshot types."
msgstr ""
"Nota: sólo es posible llamar al método `len()` en una instantánea de array "
"porque se define como tal en el rasgo `ArrayTrait`. Si intenta llamar a un "
"método que no está definido para instantáneas en una instantánea, obtendrá "
"un error de compilación. Sin embargo, puede llamar a métodos que esperan una "
"instantánea en tipos que no son instantáneas."

#: src/ch04-02-references-and-snapshots.md:48
msgid "The output of this program is:"
msgstr "El resultado de este programa es:"

#: src/ch04-02-references-and-snapshots.md:61
msgid ""
"First, notice that all the tuple code in the variable declaration and the "
"function return value is gone. Second, note that we pass `@arr1` into "
"`calculate_length` and, in its definition, we take `@Array<u128>` rather "
"than `Array<u128>`."
msgstr ""
"En primer lugar, note que todo el código de la tupla en la declaración "
"variable y el valor de retorno de la función ha desaparecido. En segundo "
"lugar, note que pasamos arr1` en `calculate_length` y, en su definición, "
"tomamos Array<u128'' en lugar de `Array<u128»."

#: src/ch04-02-references-and-snapshots.md:64
msgid "Let’s take a closer look at the function call here:"
msgstr "Echemos un vistazo más de cerca a la llamada de la función aquí:"

#: src/ch04-02-references-and-snapshots.md:70
msgid ""
"The `@arr1` syntax lets us create a snapshot of the value in `arr1`. Because "
"a snapshot is an immutable view of a value at a specific point in time, the "
"usual rules of the linear type system are not enforced. In particular, "
"snapshot variables always implement the `Drop` trait, never the `Destruct` "
"trait, even dictionary snapshots."
msgstr ""
"La sintaxis de `arr1` nos permite crear una instantánea del valor en `arr1`. "
"Debido a que una instantánea es una vista inmutable de un valor en un "
"momento determinado, las reglas habituales del sistema de tipo lineal no se "
"aplican. En particular, las variables de instantánea siempre implementan el "
"rasgo `Drop`, nunca el rasgo `Destruct`, ni siquiera las instantáneas del "
"diccionario."

#: src/ch04-02-references-and-snapshots.md:72
msgid ""
"Similarly, the signature of the function uses `@` to indicate that the type "
"of the parameter `arr` is a snapshot. Let’s add some explanatory annotations:"
msgstr ""
"Del mismo modo, la firma de la función utiliza  para indicar que el tipo del "
"parámetro `arr` es una instantánea. Añadamos algunas anotaciones "
"explicativas:"

#: src/ch04-02-references-and-snapshots.md:76
msgid "// array_snapshot is a snapshot of an Array\n"
msgstr "// array_snapshot es una instantánea de un Array\n"

#: src/ch04-02-references-and-snapshots.md:79
msgid ""
"// Here, array_snapshot goes out of scope and is dropped.\n"
"// However, because it is only a view of what the original array `arr` "
"contains, the original `arr` can still be used.\n"
msgstr ""
"// Aquí, array_snapshot sale fuera de alcance y se cae. // Sin embargo, "
"debido a que es sólo una vista de lo que el array original `arr` contiene, "
"el `arr` original todavía se puede utilizar.\n"

#: src/ch04-02-references-and-snapshots.md:83
msgid ""
"The scope in which the variable `array_snapshot` is valid is the same as any "
"function parameter’s scope, but the underlying value of the snapshot is not "
"dropped when `array_snapshot` stops being used. When functions have "
"snapshots as parameters instead of the actual values, we won’t need to "
"return the values in order to give back ownership of the original value, "
"because we never had it."
msgstr ""
"El alcance en el que la variable `array_snapshot` es válida es el mismo que "
"el alcance de cualquier parámetro de función, pero el valor subyacente de la "
"instantánea no se pierde cuando `array_snapshot` deja de utilizarse. Cuando "
"las funciones tienen instantáneas como parámetros en lugar de los valores "
"reales, no tendremos que devolver los valores para devolver la propiedad del "
"valor original, porque nunca lo tuvimos."

#: src/ch04-02-references-and-snapshots.md:85
msgid "Desnap Operator"
msgstr "Operador de desnap"

#: src/ch04-02-references-and-snapshots.md:87
msgid ""
"To convert a snapshot back into a regular variable, you can use the `desnap` "
"operator `*`, which serves as the opposite of the `@` operator."
msgstr ""
"Para convertir una instantánea de nuevo en una variable regular, puede "
"utilizar el operador `desnap` `*`, que sirve como lo contrario del operador."

#: src/ch04-02-references-and-snapshots.md:89
msgid ""
"Only `Copy` types can be desnapped. However, in the general case, because "
"the value is not modified, the new variable created by the `desnap` operator "
"reuses the old value, and so desnapping is a completely free operation, just "
"like `Copy`."
msgstr ""
"Sin embargo, en el caso general, debido a que el valor no se modifica, la "
"nueva variable creada por el operador de `desnap` reutiliza el valor "
"antiguo, por lo que el desnaping es una operación totalmente libre, al igual "
"que `Copy`."

#: src/ch04-02-references-and-snapshots.md:91
msgid ""
"In the following example, we want to calculate the area of a rectangle, but "
"we don't want to take ownership of the rectangle in the `calculate_area` "
"function, because we might want to use the rectangle again after the "
"function call. Since our function doesn't mutate the rectangle instance, we "
"can pass the snapshot of the rectangle to the function, and then transform "
"the snapshots back into values using the `desnap` operator `*`."
msgstr ""
"En el siguiente ejemplo, queremos calcular el área de un rectángulo, pero no "
"queremos tomar la propiedad del rectángulo en la función `calculate_area`, "
"porque podríamos querer utilizar el rectángulo de nuevo después de la "
"llamada a la función. Puesto que nuestra función no muta la instancia del "
"rectángulo, podemos pasar la instantánea del rectángulo a la función, y "
"luego transformar las instantáneas de nuevo en valores usando el operador "
"`desnap` `*`."

#: src/ch04-02-references-and-snapshots.md:103
msgid "\"Area: {}\""
msgstr "\"Área:"

#: src/ch04-02-references-and-snapshots.md:107
msgid ""
"// As rec is a snapshot to a Rectangle, its fields are also snapshots of the "
"fields types.\n"
"    // We need to transform the snapshots back into values using the desnap "
"operator `*`.\n"
"    // This is only possible if the type is copyable, which is the case for "
"u64.\n"
"    // Here, `*` is used for both multiplying the height and width and for "
"desnapping the snapshots.\n"
msgstr ""
"// Como rec es una instantánea a un rectángulo, sus campos también son "
"instantáneas de los tipos de campos. // Necesitamos transformar las "
"instantáneas de nuevo en valores usando el operador de desnap `*`. // Esto "
"sólo es posible si el tipo es copiable, que es el caso de u64. // Aquí, `*` "
"se utiliza para multiplicar la altura y la anchura y para desnap las "
"instantáneas.\n"

#: src/ch04-02-references-and-snapshots.md:115
msgid ""
"But, what happens if we try to modify something we’re passing as a snapshot? "
"Try the code in Listing 4-4. Spoiler alert: it doesn’t work!"
msgstr ""
"Pero, ¿qué pasa si tratamos de modificar algo que estamos pasando como una "
"instantánea? Pruebe el código en Listado 4-4. Alerta de spoiler: ¡no "
"funciona!"

#: src/ch04-02-references-and-snapshots.md:140
msgid ""
"<span class=\"caption\">Listing 4-4: Attempting to modify a snapshot value</"
"span>"
msgstr ""
"<span class=\"caption\">Lista 4-4: Intentar modificar un valor de "
"instantánea</span>"

#: src/ch04-02-references-and-snapshots.md:142
msgid "Here’s the error:"
msgstr "Aquí está el error:"

#: src/ch04-02-references-and-snapshots.md:162
msgid "The compiler prevents us from modifying values associated to snapshots."
msgstr ""
"El compilador nos impide modificar los valores asociados a las instantáneas."

#: src/ch04-02-references-and-snapshots.md:164
msgid "Mutable References"
msgstr "Referencias mutables"

#: src/ch04-02-references-and-snapshots.md:166
msgid ""
"We can achieve the behavior we want in Listing 4-4 by using a _mutable "
"reference_ instead of a snapshot. Mutable references are actually mutable "
"values passed to a function that are implicitly returned at the end of the "
"function, returning ownership to the calling context. By doing so, they "
"allow you to mutate the value passed while keeping ownership of it by "
"returning it automatically at the end of the execution. In Cairo, a "
"parameter can be passed as _mutable reference_ using the `ref` modifier."
msgstr ""
"Podemos lograr el comportamiento que queremos en Listar 4-4 usando una "
"referencia _mutable_ en lugar de una instantánea. Las referencias mutables "
"son valores mutables pasados a una función que se devuelven implícitamente "
"al final de la función, devolviendo la propiedad al contexto de llamada. Al "
"hacerlo, le permiten mutar el valor pasado mientras mantiene la propiedad de "
"ella devolviéndola automáticamente al final de la ejecución. En El Cairo, un "
"parámetro se puede pasar como referencia _mutable_ usando el modificador "
"`ref`."

#: src/ch04-02-references-and-snapshots.md:169
msgid ""
"**Note**: In Cairo, a parameter can only be passed as _mutable reference_ "
"using the `ref` modifier if the variable is declared as mutable with `mut`."
msgstr ""
"**Nota**: En El Cairo, un parámetro sólo puede pasarse como _mutable "
"reference_ utilizando el modificador `ref` si la variable se declara mutable "
"con `mut`."

#: src/ch04-02-references-and-snapshots.md:171
msgid ""
"In Listing 4-5, we use a mutable reference to modify the value of the "
"`height` and `width` fields of the `Rectangle` instance in the `flip` "
"function."
msgstr ""
"En la lista 4-5, utilizamos una referencia mutable para modificar el valor "
"de los campos `altura` y `ancho` de la instancia `Rectángle` en la función "
"`flap`."

#: src/ch04-02-references-and-snapshots.md:183
msgid "\"height: {}, width: {}\""
msgstr "\"Altura: \", anchura: \""

#: src/ch04-02-references-and-snapshots.md:193
msgid ""
"<span class=\"caption\">Listing 4-5: Use of a mutable reference to modify a "
"value</span>"
msgstr ""
"<span class=\"caption\">Lista 4-5: Uso de una referencia mutable para "
"modificar un valor</span>"

#: src/ch04-02-references-and-snapshots.md:195
msgid ""
"First, we change `rec` to be `mut`. Then we pass a mutable reference of "
"`rec` into `flip` with `ref rec`, and update the function signature to "
"accept a mutable reference with `ref rec: Rectangle`. This makes it very "
"clear that the `flip` function will mutate the value of the `Rectangle` "
"instance passed as parameter."
msgstr ""
"En primer lugar, cambiamos `rec` por `mut`. Luego pasamos una referencia "
"mutable de `rec` a `flip` con `ref rec`, y actualizamos la firma de la "
"función para aceptar una referencia mutable con `ref rec: Rectángulo`. Esto "
"deja muy claro que la función `flip'mutará el valor de la instancia "
"`rectángulo` pasada como parámetro."

#: src/ch04-02-references-and-snapshots.md:197
msgid "The output of the program is:"
msgstr "La salida del programa es:"

#: src/ch04-02-references-and-snapshots.md:209
msgid ""
"As expected, the `height` and `width` fields of the `rec` variable have been "
"swapped."
msgstr ""
"Como era de esperar, se han intercambiado los campos \" altura \" y \" "
"anchura \" de la variable \" rec \"."

#: src/ch04-02-references-and-snapshots.md:211
msgid "{{#quiz ../quizzes/ch04-02-references-and-snapshots.toml}}"
msgstr "quiz../quizzes/ch04-02-references-and-snapshots.toml"

#: src/ch04-02-references-and-snapshots.md:213
msgid "Small Recap"
msgstr "Recapitulo pequeño"

#: src/ch04-02-references-and-snapshots.md:215
msgid ""
"Let’s recap what we’ve discussed about the linear type system, ownership, "
"snapshots, and references:"
msgstr ""
"Recapitulemos lo que hemos discutido sobre el sistema de tipo lineal, "
"propiedad, instantáneas y referencias:"

#: src/ch04-02-references-and-snapshots.md:217
msgid "At any given time, a variable can only have one owner."
msgstr ""
"En cualquier momento dado, una variable sólo puede tener un propietario."

#: src/ch04-02-references-and-snapshots.md:218
msgid ""
"You can pass a variable by-value, by-snapshot, or by-reference to a function."
msgstr ""
"Puede pasar una variable por valor, por instantánea o por referencia a una "
"función."

#: src/ch04-02-references-and-snapshots.md:219
msgid ""
"If you pass-by-value, ownership of the variable is transferred to the "
"function."
msgstr ""
"Si pasa por valor, la propiedad de la variable se transfiere a la función."

#: src/ch04-02-references-and-snapshots.md:220
msgid ""
"If you want to keep ownership of the variable and know that your function "
"won’t mutate it, you can pass it as a snapshot with `@`."
msgstr ""
"Si desea mantener la propiedad de la variable y saber que su función no "
"muta, se puede pasar como una instantánea con."

#: src/ch04-02-references-and-snapshots.md:221
msgid ""
"If you want to keep ownership of the variable and know that your function "
"will mutate it, you can pass it as a mutable reference with `ref`."
msgstr ""
"Si desea mantener la propiedad de la variable y saber que su función la "
"muta, puede pasarla como una referencia mutable con `ref`."

#: src/ch05-00-using-structs-to-structure-related-data.md
msgid ""
"A struct, or structure, is a custom data type that lets you package together "
"and name multiple related values that make up a meaningful group. If you’re "
"familiar with an object-oriented language, a struct is like an object’s data "
"attributes. In this chapter, we’ll compare and contrast tuples with structs "
"to build on what you already know and demonstrate when structs are a better "
"way to group data."
msgstr ""
"Una estructura, o estructura, es un tipo de datos personalizado que le "
"permite empaquetar juntos y nombrar varios valores relacionados que componen "
"un grupo significativo. Si está familiarizado con un lenguaje orientado a "
"objetos, una estructura es como los atributos de datos de un objeto. En este "
"capítulo, compararemos y contrastaremos tuplas con structs para construir en "
"lo que ya sabe y demostrar cuando las estructuras son una mejor manera de "
"agrupar datos."

#: src/ch05-00-using-structs-to-structure-related-data.md
msgid ""
"We’ll demonstrate how to define and instantiate structs. We’ll discuss how "
"to define associated functions, especially the kind of associated functions "
"called methods, to specify behavior associated with a struct type. Structs "
"and enums (discussed in the [next chapter](ch06-01-enums.md)) are the "
"building blocks for creating new types in your program’s domain to take full "
"advantage of Cairo's compile-time type checking."
msgstr ""
"Demostraremos cómo definir y instanciar las estructuras. Discutiremos cómo "
"definir las funciones asociadas, especialmente el tipo de funciones "
"asociadas llamadas métodos, para especificar el comportamiento asociado a un "
"tipo de estructura. Estructuras y enums (discutido en el [siguiente capítulo]"
"(ch06-01-enums.md)) son los bloques de construcción para crear nuevos tipos "
"en el dominio de su programa para aprovechar al máximo la verificación de "
"tipo de compilación de El Cairo."

#: src/ch05-01-defining-and-instantiating-structs.md:3
msgid ""
"Structs are similar to tuples, discussed in the [Data Types](ch02-02-data-"
"types.md) section, in that both hold multiple related values. Like tuples, "
"the pieces of a struct can be different types. Unlike with tuples, in a "
"struct you’ll name each piece of data so it’s clear what the values mean. "
"Adding these names means that structs are more flexible than tuples: you "
"don’t have to rely on the order of the data to specify or access the values "
"of an instance."
msgstr ""
"Los estructs son similares a los tuplas, discutidos en la sección [Tipos de "
"datos](ch02-02-data-types.md), en la que ambos contienen múltiples valores "
"relacionados. Al igual que las tuplas, las piezas de una estructura pueden "
"ser diferentes tipos. A diferencia de las tuplas, en una estructura "
"nombrarás cada pieza de datos por lo que está claro lo que significan los "
"valores. Agregar estos nombres significa que las estructuras son más "
"flexibles que las tuplas: no tienes que confiar en el orden de los datos "
"para especificar o acceder a los valores de una instancia."

#: src/ch05-01-defining-and-instantiating-structs.md:5
msgid ""
"To define a struct, we enter the keyword `struct` and name the entire "
"struct. A struct’s name should describe the significance of the pieces of "
"data being grouped together. Then, inside curly brackets, we define the "
"names and types of the pieces of data, which we call fields. For example, "
"Listing 5-1 shows a struct that stores information about a user account."
msgstr ""
"Para definir una estructura, ingresamos la palabra clave `struct` y "
"nombramos toda la estructura. El nombre de una estructura debe describir la "
"importancia de las piezas de datos agrupadas. Luego, dentro de corchetes "
"rizados, definimos los nombres y tipos de las piezas de datos, a las que "
"llamamos campos. Por ejemplo, Listar 5-1 muestra una estructura que almacena "
"información sobre una cuenta de usuario."

#: src/ch05-01-defining-and-instantiating-structs.md:20
msgid "<span class=\"caption\">Listing 5-1: A `User` struct definition</span>"
msgstr ""
"<span class=\"caption\">Lista 5-1: Una definición de estructura `Usuario`</"
"span>"

#: src/ch05-01-defining-and-instantiating-structs.md:22
msgid ""
"To use a struct after we’ve defined it, we create an _instance_ of that "
"struct by specifying concrete values for each of the fields. We create an "
"instance by stating the name of the struct and then add curly brackets "
"containing _key: value_ pairs, where the keys are the names of the fields "
"and the values are the data we want to store in those fields. We don’t have "
"to specify the fields in the same order in which we declared them in the "
"struct. In other words, the struct definition is like a general template for "
"the type, and instances fill in that template with particular data to create "
"values of the type."
msgstr ""
"Para usar una estructura después de que la definimos, creamos una _instance_ "
"de esa estructura especificando valores concretos para cada uno de los "
"campos. Creamos una instancia indicando el nombre de la estructura y luego "
"agregamos corchetes en curly que contienen _key: value_ pairs, donde las "
"claves son los nombres de los campos y los valores son los datos que "
"queremos almacenar en esos campos. No tenemos que especificar los campos en "
"el mismo orden en que los declaramos en la estructura. En otras palabras, la "
"definición de estructura es como una plantilla general para el tipo, y las "
"instancias rellenan esa plantilla con datos particulares para crear valores "
"del tipo."

#: src/ch05-01-defining-and-instantiating-structs.md:25
msgid ""
"For example, we can declare two particular users as shown in Listing 5-2."
msgstr ""
"Por ejemplo, podemos declarar dos usuarios particulares como se muestra en "
"la Lista 5-2."

#: src/ch05-01-defining-and-instantiating-structs.md:40
#: src/ch05-01-defining-and-instantiating-structs.md:43
#: src/ch05-01-defining-and-instantiating-structs.md:65
#: src/ch05-01-defining-and-instantiating-structs.md:101
#: src/ch05-01-defining-and-instantiating-structs.md:137
#: src/ch05-01-defining-and-instantiating-structs.md:182
#: src/ch05-01-defining-and-instantiating-structs.md:219
msgid "\"someusername123\""
msgstr "\"someusername123\""

#: src/ch05-01-defining-and-instantiating-structs.md:40
#: src/ch05-01-defining-and-instantiating-structs.md:43
#: src/ch05-01-defining-and-instantiating-structs.md:65
#: src/ch05-01-defining-and-instantiating-structs.md:101
#: src/ch05-01-defining-and-instantiating-structs.md:137
#: src/ch05-01-defining-and-instantiating-structs.md:182
#: src/ch05-01-defining-and-instantiating-structs.md:219
msgid "\"someone@example.com\""
msgstr "\"alguien@ejemplo.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:49
msgid ""
"<span class=\"caption\">Listing 5-2: Creating two instances of the `User` "
"struct</span>"
msgstr ""
"<span class=\"caption\">Lista 5-2: Creación de dos instancias de la "
"estructura `Usuario`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:51
msgid ""
"To get a specific value from a struct, we use dot notation. For example, to "
"access `user1`'s email address, we use `user1.email`. If the instance is "
"mutable, we can change a value by using the dot notation and assigning into "
"a particular field. Listing 5-3 shows how to change the value in the `email` "
"field of a mutable `User` instance."
msgstr ""
"Para obtener un valor específico de una estructura, utilizamos notación de "
"puntos. Por ejemplo, para acceder a la dirección de correo electrónico de "
"`user1`, usamos `user1.email`. Si la instancia es mutable, podemos cambiar "
"un valor usando la notación de puntos y asignando en un campo en particular. "
"El listado 5-3 muestra cómo cambiar el valor en el campo `email` de una "
"instancia `Usuario` mutable."

#: src/ch05-01-defining-and-instantiating-structs.md:67
#: src/ch05-01-defining-and-instantiating-structs.md:103
#: src/ch05-01-defining-and-instantiating-structs.md:139
msgid "\"anotheremail@example.com\""
msgstr "\"anotheremail@ejemplo.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:81
msgid ""
"<span class=\"caption\">Listing 5-3: Changing the value in the email field "
"of a `User` instance</span>"
msgstr ""
"<span class=\"caption\">Lista 5-3: Cambiar el valor en el campo de correo "
"electrónico de una instancia `Usuario`</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:83
msgid ""
"Note that the entire instance must be mutable; Cairo doesn’t allow us to "
"mark only certain fields as mutable."
msgstr ""
"Tenga en cuenta que toda la instancia debe ser mutable; El Cairo no nos "
"permite marcar sólo ciertos campos como mutables."

#: src/ch05-01-defining-and-instantiating-structs.md:85
msgid ""
"As with any expression, we can construct a new instance of the struct as the "
"last expression in the function body to implicitly return that new instance."
msgstr ""
"Como con cualquier expresión, podemos construir una nueva instancia de la "
"estructura como la última expresión en el cuerpo de la función para devolver "
"implícitamente esa nueva instancia."

#: src/ch05-01-defining-and-instantiating-structs.md:87
msgid ""
"Listing 5-4 shows a `build_user` function that returns a `User` instance "
"with the given email and username. The `active` field gets the value of "
"`true`, and the `sign_in_count` gets a value of `1`."
msgstr ""
"El listado 5-4 muestra una función `build_user` que devuelve una instancia "
"`Usuario` con el correo electrónico y el nombre de usuario dados. El campo "
"`active` obtiene el valor de `true`, y el `sign_in_count` obtiene un valor "
"de `1`."

#: src/ch05-01-defining-and-instantiating-structs.md:117
msgid ""
"<span class=\"caption\">Listing 5-4: A `build_user` function that takes an "
"email and username and returns a `User` instance.</span>"
msgstr ""
"<span class=\"caption\">Lista 5-4: Una función `build_user` que toma un "
"correo electrónico y un nombre de usuario y devuelve una instancia `Usuario`."
"</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:119
msgid ""
"It makes sense to name the function parameters with the same name as the "
"struct fields, but having to repeat the `email` and `username` field names "
"and variables is a bit tedious. If the struct had more fields, repeating "
"each name would get even more annoying. Luckily, there’s a convenient "
"shorthand!"
msgstr ""
"Tiene sentido nombrar los parámetros de la función con el mismo nombre que "
"los campos struct, pero tener que repetir los nombres y variables de los "
"campos `email` y `username` es un poco tedioso. Si la estructura tenía más "
"campos, repetir cada nombre sería aún más molesto. Por suerte, hay una "
"taquigrafía conveniente!"

#: src/ch05-01-defining-and-instantiating-structs.md:121
msgid "Using the Field Init Shorthand"
msgstr "Usando la taquigrafía de campo Init"

#: src/ch05-01-defining-and-instantiating-structs.md:123
msgid ""
"Because the parameter names and the struct field names are exactly the same "
"in Listing 5-4, we can use the field init shorthand syntax to rewrite "
"`build_user` so it behaves exactly the same but doesn’t have the repetition "
"of `username` and `email`, as shown in Listing 5-5."
msgstr ""
"Debido a que los nombres de los parámetros y los nombres de los campos "
"struct son exactamente los mismos en Listar 5-4, podemos usar la sintaxis "
"taquigráfica del campo init para reescribir `build_user` de modo que se "
"comporte exactamente igual pero no tenga la repetición de `usuario` y "
"`email`, como se muestra en Listar 5-5."

#: src/ch05-01-defining-and-instantiating-structs.md:153
msgid ""
"<span class=\"caption\">Listing 5-5: A `build_user` function that uses field "
"init shorthand because the `username` and `email` parameters have the same "
"name as struct fields.</span>"
msgstr ""
"<span class=\"caption\">Lista 5-5: Una función `build_user` que usa "
"taquigrafía field init porque los parámetros `username` y `email` tienen el "
"mismo nombre que los campos struct.</span>"

#: src/ch05-01-defining-and-instantiating-structs.md:155
msgid ""
"Here, we’re creating a new instance of the `User` struct, which has a field "
"named `email`. We want to set the `email` field’s value to the value in the "
"`email` parameter of the `build_user` function. Because the `email` field "
"and the `email` parameter have the same name, we only need to write `email` "
"rather than `email: email`."
msgstr ""
"Aquí, estamos creando una nueva instancia de la estructura `User`, que tiene "
"un campo llamado `email`. Queremos establecer el valor del campo `email` en "
"el parámetro `email` de la función `build_user`. Debido a que el campo "
"`email` y el parámetro `email` tienen el mismo nombre, sólo necesitamos "
"escribir `email` en lugar de `email: email`."

#: src/ch05-01-defining-and-instantiating-structs.md:157
msgid "Creating Instances from Other Instances with Struct Update Syntax"
msgstr "Crear instancias de otros casos con Struct Update Syntax"

#: src/ch05-01-defining-and-instantiating-structs.md:159
msgid ""
"It’s often useful to create a new instance of a struct that includes most of "
"the values from another instance, but changes some. You can do this using "
"_struct update syntax_."
msgstr ""
"A menudo es útil crear una nueva instancia de una estructura que incluye la "
"mayoría de los valores de otra instancia, pero cambia algunos. Puede hacer "
"esto usando _struct update sintaxis_."

#: src/ch05-01-defining-and-instantiating-structs.md:163
msgid ""
"First, in Listing 5-6 we show how to create a new `User` instance in `user2` "
"regularly, without the update syntax. We set a new value for `email` but "
"otherwise use the same values from `user1` that we created in Listing 5-2."
msgstr ""
"En primer lugar, en Listar 5-6 mostramos cómo crear una nueva instancia "
"`Usuario` en `user2` regularmente, sin la sintaxis de actualización. "
"Configuramos un nuevo valor para `email` pero de otro modo usamos los mismos "
"valores de `user1` que creamos en Listar 5-2."

#: src/ch05-01-defining-and-instantiating-structs.md:179
#: src/ch05-01-defining-and-instantiating-structs.md:216
msgid "// --snip--\n"
msgstr "// --snip--\n"

#: src/ch05-01-defining-and-instantiating-structs.md:188
#: src/ch05-01-defining-and-instantiating-structs.md:222
msgid "\"another@example.com\""
msgstr "\"otro@ejemplo.com\""

#: src/ch05-01-defining-and-instantiating-structs.md:197
msgid ""
"<span class=\"caption\">Listing 5-6: Creating a new `User` instance using "
"all but one of the values from `user1`</span>"
msgstr ""
"<span class=\"caption\">Lista 5-6: Crear una nueva instancia `Usuario` "
"usando todos menos uno de los valores de `user1/span>"

#: src/ch05-01-defining-and-instantiating-structs.md:199
msgid ""
"Using struct update syntax, we can achieve the same effect with less code, "
"as shown in Listing 5-7. The syntax `..` specifies that the remaining fields "
"not explicitly set should have the same value as the fields in the given "
"instance."
msgstr ""
"Utilizando la sintaxis struct update, podemos lograr el mismo efecto con "
"menos código, como se muestra en Listar 5-7. La sintaxis `..` especifica que "
"los campos restantes no configurados explícitamente deben tener el mismo "
"valor que los campos en la instancia dada."

#: src/ch05-01-defining-and-instantiating-structs.md:229
msgid ""
"<span class=\"caption\">Listing 5-7: Using struct update syntax to set a new "
"`email` value for a `User` instance but to use the rest of the values from "
"`user1`</span>"
msgstr ""
"<span class=\"caption\">Lista 5-7: Usando la sintaxis struct update para "
"establecer un nuevo valor `email` para una instancia `Usuario` pero para "
"usar el resto de los valores de `user1/span>"

#: src/ch05-01-defining-and-instantiating-structs.md:232
msgid ""
"The code in Listing 5-7 also creates an instance of `user2` that has a "
"different value for `email` but has the same values for the `username`, "
"`active`, and `sign_in_count` fields as `user1`. The `..user1` part must "
"come last to specify that any remaining fields should get their values from "
"the corresponding fields in `user1`, but we can choose to specify values for "
"as many fields as we want in any order, regardless of the order of the "
"fields in the struct’s definition."
msgstr ""
"El código en la Lista 5-7 también crea una instancia de `user2` que tiene un "
"valor diferente para `email` pero tiene los mismos valores para el "
"`username`, `active`, y `sign_in_count` campos como `user1`. La parte `."
"user1` debe venir en último lugar para especificar que cualquier campo "
"restante debe obtener sus valores de los campos correspondientes en `user1`, "
"pero podemos elegir especificar valores para tantos campos como queramos en "
"cualquier orden, independientemente del orden de los campos en la definición "
"de la estructura."

#: src/ch05-01-defining-and-instantiating-structs.md:240
msgid ""
"Note that the struct update syntax uses `=` like an assignment; this is "
"because it moves the data, just as we saw in the [\"Moving Values\"](ch04-01-"
"what-is-ownership.md#moving-values)<!-- ignore --> section. In this example, "
"we can no longer use `user1` as a whole after creating `user2` because the "
"`ByteArray` in the `username` field of `user1` was moved into `user2`. If we "
"had given `user2` new `ByteArray` values for both `email` and `username`, "
"and thus only used the `active` and `sign_in_count` values from `user1`, "
"then `user1` would still be valid after creating `user2`. Both `active` and "
"`sign_in_count` are types that implement the `Copy` trait, so the behavior "
"we discussed in the [\"`Copy` Trait\"](ch04-01-what-is-ownership.md#the-copy-"
"trait)<!-- ignore --> section would apply."
msgstr ""
"Obsérvese que la sintaxis de actualización de la estructura utiliza `=` como "
"una asignación; esto se debe a que mueve los datos, tal como vimos en la "
"sección [\"Moving Values\"] (ch04-01-what-is-ownership.md#moving-values)<!; "
"ignore -->. En este ejemplo, ya no podemos utilizar `user1` como un todo "
"después de crear `user2` porque el `ByteArray` en el campo `username` de "
"`user1` se movió a `user2`. Si hubiéramos dado `user2` nuevos valores "
"`ByteArray` tanto para `email` como para `username`, y por lo tanto sólo "
"hemos utilizado los valores `active` y `sign_in_count` de `user1`, entonces "
"`user1` seguiría siendo válidos después de crear `user2`."

#: src/ch05-01-defining-and-instantiating-structs.md:249
msgid "{{#quiz ../quizzes/ch05-01-defining-and-instantiating-structs.toml}}"
msgstr "quiz../quizzes/ch05-01-definiting-and-instantiating-structs.toml"

#: src/ch05-02-an-example-program-using-structs.md:3
msgid ""
"To understand when we might want to use structs, let’s write a program that "
"calculates the area of a rectangle. We’ll start by using single variables, "
"and then refactor the program until we’re using structs instead."
msgstr ""
"Para entender cuándo podríamos querer usar structs, vamos a escribir un "
"programa que calcula el área de un rectángulo. Comenzaremos usando variables "
"individuales, y luego refactorizar el programa hasta que estemos usando "
"structs en su lugar."

#: src/ch05-02-an-example-program-using-structs.md:5
msgid ""
"Let’s make a new project with Scarb called _rectangles_ that will take the "
"width and height of a rectangle specified in pixels and calculate the area "
"of the rectangle. Listing 5-8 shows a short program with one way of doing "
"exactly that in our project’s _src/lib.cairo_."
msgstr ""
"Vamos a hacer un nuevo proyecto con Scarb llamado _rectángulos_ que tomará "
"el ancho y la altura de un rectángulo especificado en píxeles y calcular el "
"área del rectángulo. Listar 5-8 muestra un programa corto con una forma de "
"hacer exactamente eso en nuestro proyecto _src/lib.cairo_."

#: src/ch05-02-an-example-program-using-structs.md:14
#: src/ch05-02-an-example-program-using-structs.md:56
#: src/ch05-02-an-example-program-using-structs.md:86
#: src/ch05-03-method-syntax.md:28 src/ch05-03-method-syntax.md:70
msgid "\"Area is {}\""
msgstr "\"Area es \""

#: src/ch05-02-an-example-program-using-structs.md:22
msgid ""
"<span class=\"caption\">Listing 5-8: Calculating the area of a rectangle "
"specified by separate width and height variables.</span>"
msgstr ""
"<span class=\"caption\">Lista 5-8: Calculando el área de un rectángulo "
"especificada por variables separadas de anchura y altura.</span>"

#: src/ch05-02-an-example-program-using-structs.md:24
msgid "Now run the program with `scarb cairo-run`:"
msgstr "Ahora ejecute el programa con `scarb cairo-run`:"

#: src/ch05-02-an-example-program-using-structs.md:36
msgid ""
"This code succeeds in figuring out the area of the rectangle by calling the "
"`area` function with each dimension, but we can do more to make this code "
"clear and readable."
msgstr ""
"Este código logra averiguar el área del rectángulo llamando a la función "
"`área` con cada dimensión, pero podemos hacer más para que este código sea "
"claro y legible."

#: src/ch05-02-an-example-program-using-structs.md:38
msgid "The issue with this code is evident in the signature of `area`:"
msgstr ""
"La cuestión de este código se pone de manifiesto en la firma de `área`:"

#: src/ch05-02-an-example-program-using-structs.md:44
msgid ""
"The `area` function is supposed to calculate the area of one rectangle, but "
"the function we wrote has two parameters, and it’s not clear anywhere in our "
"program that the parameters are related. It would be more readable and more "
"manageable to group width and height together. We’ve already discussed one "
"way we might do that in the [Tuple Section of Chapter 2](ch02-02-data-types."
"html#the-tuple-type)."
msgstr ""
"La función `área` se supone que calcula el área de un rectángulo, pero la "
"función que escribimos tiene dos parámetros, y no está claro en ninguna "
"parte de nuestro programa que los parámetros están relacionados. Sería más "
"legible y más manejable para agrupar ancho y altura juntos. Ya hemos "
"discutido una manera de hacerlo en la [Sección del Tuple del Capítulo 2]"
"(ch02-02-data-types.html#the-tuple-type)."

#: src/ch05-02-an-example-program-using-structs.md:46
msgid "Refactoring with Tuples"
msgstr "Refactorización con Tuples"

#: src/ch05-02-an-example-program-using-structs.md:48
msgid "Listing 5-9 shows another version of our program that uses tuples."
msgstr ""
"El listado 5-9 muestra otra versión de nuestro programa que usa tuplas."

#: src/ch05-02-an-example-program-using-structs.md:65
msgid ""
"<span class=\"caption\">Listing 5-9: Specifying the width and height of the "
"rectangle with a tuple.</span>"
msgstr ""
"<span class=\"caption\">Lista 5-9: Especificación de la anchura y la altura "
"del rectángulo con una tupla.</span>"

#: src/ch05-02-an-example-program-using-structs.md:67
msgid ""
"In one way, this program is better. Tuples let us add a bit of structure, "
"and we’re now passing just one argument. But in another way, this version is "
"less clear: tuples don’t name their elements, so we have to index into the "
"parts of the tuple, making our calculation less obvious."
msgstr ""
"De una manera, este programa es mejor. Tuples vamos a añadir un poco de "
"estructura, y ahora estamos pasando sólo un argumento. Pero de otra manera, "
"esta versión es menos clara: tuples no nombran sus elementos, por lo que "
"tenemos que indexar en las partes de la tuple, haciendo nuestro cálculo "
"menos obvio."

#: src/ch05-02-an-example-program-using-structs.md:69
msgid ""
"Mixing up the width and height wouldn’t matter for the area calculation, but "
"if we want to calculate the difference, it would matter! We would have to "
"keep in mind that `width` is the tuple index `0` and `height` is the tuple "
"index `1`. This would be even harder for someone else to figure out and keep "
"in mind if they were to use our code. Because we haven’t conveyed the "
"meaning of our data in our code, it’s now easier to introduce errors."
msgstr ""
"Mezclar la anchura y la altura no importaría para el cálculo del área, pero "
"si queremos calcular la diferencia, ¡sería importante! Tendríamos que tener "
"en cuenta que `ancho` es el índice de tupla `0` y `altura` es el índice de "
"tupla `1`. Esto sería aún más difícil para alguien más para averiguar y "
"tener en cuenta si van a utilizar nuestro código. Debido a que no hemos "
"transmitido el significado de nuestros datos en nuestro código, ahora es más "
"fácil introducir errores."

#: src/ch05-02-an-example-program-using-structs.md:71
msgid "Refactoring with Structs: Adding More Meaning"
msgstr "Refactorización con Estructuras: Añadiendo Más Significado"

#: src/ch05-02-an-example-program-using-structs.md:73
msgid ""
"We use structs to add meaning by labeling the data. We can transform the "
"tuple we’re using into a struct with a name for the whole as well as names "
"for the parts."
msgstr ""
"Utilizamos estructuras para añadir significado etiquetando los datos. "
"Podemos transformar la tupla que estamos usando en una estructura con un "
"nombre para el conjunto, así como nombres para las partes."

#: src/ch05-02-an-example-program-using-structs.md:94
msgid ""
"<span class=\"caption\">Listing 5-10: Defining a `Rectangle` struct.</span>"
msgstr ""
"<span class=\"caption\">Lista 5-10: Definir una estructura `Rectangle`.</"
"span>"

#: src/ch05-02-an-example-program-using-structs.md:96
msgid ""
"Here we’ve defined a struct and named it `Rectangle`. Inside the curly "
"brackets, we defined the fields as `width` and `height`, both of which have "
"type `u64`. Then, in `main`, we created a particular instance of `Rectangle` "
"that has a width of `30` and a height of `10`. Our `area` function is now "
"defined with one parameter, which we’ve named `rectangle` which is of type "
"`Rectangle` struct. We can then access the fields of the instance with dot "
"notation, and it gives descriptive names to the values rather than using the "
"tuple index values of `0` and `1`."
msgstr ""
"Aquí hemos definido una estructura y la hemos llamado `Rectangle`. Dentro de "
"los corchetes rizados, hemos definido los campos como `ancho` y `altura`, "
"ambos de los cuales tienen tipo `u64`. Luego, en `main`, hemos creado una "
"instancia particular de `Rectangle` que tiene una anchura de `30` y una "
"altura de `10`. Nuestra función `área` se define ahora con un parámetro, que "
"hemos llamado `rectangle` que es de tipo `Rectangle` struct. A continuación, "
"podemos acceder a los campos de la instancia con notación de puntos, y da "
"nombres descriptivos a los valores en lugar de utilizar los valores de "
"índice de tupla de `0` y `1`."

#: src/ch05-02-an-example-program-using-structs.md:98
msgid "{{#quiz ../quizzes/ch05-02-an-example-program-using-structs.toml}}"
msgstr "quiz../quizzes/ch05-02-an-example-program-using-structs.toml"

#: src/ch05-03-method-syntax.md:3
msgid ""
"_Methods_ are similar to functions: we declare them with the `fn` keyword "
"and a name, they can have parameters and a return value, and they contain "
"some code that’s run when the method is called from somewhere else. Unlike "
"functions, methods are defined within the context of a struct (or an enum "
"which we cover in [Chapter 6](./ch06-01-enums.md)), and their first "
"parameter is always `self`, which represents the instance of the type the "
"method is being called on."
msgstr ""
"_Métodos_ son similares a las funciones: las declaramos con la palabra clave "
"`fn` y un nombre, pueden tener parámetros y un valor de retorno, y contienen "
"algún código que se ejecuta cuando el método se llama desde otro lugar. A "
"diferencia de las funciones, los métodos se definen dentro del contexto de "
"una estructura (o un enum que cubrimos en [Capítulo 6](./ch06-01-enums.md)), "
"y su primer parámetro es siempre `self`, que representa la instancia del "
"tipo que se llama el método."

#: src/ch05-03-method-syntax.md:5
msgid "Defining Methods"
msgstr "Definición de métodos"

#: src/ch05-03-method-syntax.md:7
msgid ""
"Let’s change the `area` function that has a `Rectangle` instance as a "
"parameter and instead make an `area` method defined on the `Rectangle` "
"struct, as shown in Listing 5-11"
msgstr ""
"Vamos a cambiar la función `área` que tiene una instancia `Rectángulo` como "
"parámetro y en su lugar hacer un método `área` definido en la estructura "
"`Rectángulo`, como se muestra en la Lista 5-11"

#: src/ch05-03-method-syntax.md:32
msgid "Listing 5-11: Defining an `area` method on the `Rectangle` struct."
msgstr ""
"Lista 5-11: Definición de un método de `área` en la estructura `Rectángulo`."

#: src/ch05-03-method-syntax.md:34
msgid ""
"To define the function within the context of `Rectangle`, we start an `impl` "
"(implementation) block for a trait `RectangleTrait` that defines the methods "
"that can be called on a `Rectangle` instance. As impl blocks can only be "
"defined for traits and not types, we need to define this trait first - but "
"it's not meant to be used for anything else."
msgstr ""
"Para definir la función en el contexto de `Rectángle`, iniciamos un bloque "
"`impl` (implementación) para un rasgo `RectángleTrait` que define los "
"métodos que se pueden llamar en una instancia `Rectángle`. Como los bloques "
"de impl sólo se pueden definir para rasgos y no tipos, necesitamos definir "
"este rasgo primero - pero no está destinado a ser utilizado para cualquier "
"otra cosa."

#: src/ch05-03-method-syntax.md:36
msgid ""
"Everything within this `impl` block will be associated with the `Rectangle` "
"type. Then we move the `area` function within the `impl` curly brackets and "
"change the first (and in this case, only) parameter to be `self` in the "
"signature and everywhere within the body. In `main`, where we called the "
"`area` function and passed `rect1` as an argument, we can instead use "
"_method syntax_ to call the `area` method on our `Rectangle` instance. The "
"method syntax goes after an instance: we add a dot followed by the method "
"name, parentheses, and any arguments."
msgstr ""
"Todo dentro de este bloque `impl` se asociará con el tipo `Rectángle`. Luego "
"moveremos la función `área` dentro de los corchetes `impl` rizados y "
"cambiaremos el primer parámetro (y en este caso, sólo) a `auto' en la firma "
"y en todas partes dentro del cuerpo. En `main`, donde llamamos la función "
"`área` y pasamos `rect1` como argumento, podemos usar _metodo sintaxis_ para "
"llamar al método `área` en nuestra instancia `Rectángle`. La sintaxis del "
"método va después de una instancia: añadimos un punto seguido por el nombre "
"del método, paréntesis, y cualquier argumento."

#: src/ch05-03-method-syntax.md:38
msgid ""
"In the signature for `area`, we use `self: @Rectangle` instead of "
"`rectangle: @Rectangle`. Methods must have a parameter named `self`, for "
"their first parameter, and the type of `self` indicates the type that method "
"can be called on. Methods can take ownership of `self`, but `self` can also "
"be passed by snapshot or by reference, just like any other parameter."
msgstr ""
"En la firma para `área`, usamos `self: @Rectangle` en lugar de `rectagle: "
"@Rectangle`. Los métodos deben tener un parámetro llamado `self`, para su "
"primer parámetro, y el tipo de `self` indica el tipo de método al que se "
"puede recurrir. Los métodos pueden hacerse cargo de `self`, pero `self` "
"también se puede pasar por instantánea o por referencia, como cualquier otro "
"parámetro."

#: src/ch05-03-method-syntax.md:41
msgid ""
"There is no direct link between a type and a trait. Only the type of the "
"`self` parameter of a method defines the type from which this method can be "
"called. That means, it is technically possible to define methods on multiple "
"types in a same trait (mixing `Rectangle` and `Circle` methods, for "
"example). But **this is not a recommended practice** as it can lead to "
"confusion."
msgstr ""
"No existe un vínculo directo entre un tipo y un rasgo. Sólo el tipo del "
"parámetro `auto` de un método define el tipo del que se puede llamar a este "
"método, lo que significa que es técnicamente posible definir métodos sobre "
"varios tipos en un mismo rasgo (mezcla de métodos `Rectángle` y `Circle`, "
"por ejemplo)."

#: src/ch05-03-method-syntax.md:43
msgid ""
"The main reason for using methods instead of functions, in addition to "
"providing method syntax, is for organization. We’ve put all the things we "
"can do with an instance of a type in one `impl` block rather than making "
"future users of our code search for capabilities of `Rectangle` in various "
"places in the library we provide."
msgstr ""
"La razón principal para utilizar métodos en lugar de funciones, además de "
"proporcionar sintaxis de método, es para la organización. Hemos puesto todas "
"las cosas que podemos hacer con una instancia de un tipo en un bloque `impl` "
"en lugar de hacer futuros usuarios de nuestra búsqueda de código de "
"capacidades de `Rectangle` en varios lugares de la biblioteca que "
"proporcionamos."

#: src/ch05-03-method-syntax.md:45
msgid "The `generate_trait` Attribute"
msgstr "El atributo `generate_trait`"

#: src/ch05-03-method-syntax.md:47
msgid ""
"If you are familiar with Rust, you may find Cairo's approach confusing "
"because methods cannot be defined directly on types. Instead, you must "
"define a [trait](./ch08-02-traits-in-cairo.md) and an implementation of this "
"trait associated with the type for which the method is intended. However, "
"defining a trait and then implementing it to define methods on a specific "
"type is verbose, and unnecessary: the trait itself will not be reused."
msgstr ""
"Si usted está familiarizado con Rust, puede encontrar el enfoque de El Cairo "
"confuso porque los métodos no se pueden definir directamente en los tipos. "
"En su lugar, usted debe definir un [ratio](./ch08-02-traits-in-cairo.md) y "
"una implementación de este rasgo asociado con el tipo para el cual el método "
"está destinado. Sin embargo, definir un rasgo y luego implementarlo para "
"definir métodos en un tipo específico es verboso, e innecesario: el rasgo en "
"sí mismo no será reutilizado."

#: src/ch05-03-method-syntax.md:50
msgid ""
"So, to avoid defining useless traits, Cairo provides the `#[generate_trait]` "
"attribute to add above a trait implementation, which tells to the compiler "
"to generate the corresponding trait definition for you, and let's you focus "
"on the implementation only. Both approaches are equivalent, but it's "
"considered a best practice to not explicitly define traits in this case."
msgstr ""
"Por lo tanto, para evitar definir rasgos inútiles, El Cairo proporciona el "
"atributo \"[generate_trait]` para agregar por encima de una implementación "
"de rasgo, que le dice al compilador para generar la definición de rasgo "
"correspondiente para usted, y vamos a centrarse en la implementación "
"solamente. Ambos enfoques son equivalentes, pero se considera una mejor "
"práctica no definir explícitamente rasgos en este caso."

#: src/ch05-03-method-syntax.md:52
msgid "The previous example can also be written as follows:"
msgstr "El ejemplo anterior también puede ser escrito como sigue:"

#: src/ch05-03-method-syntax.md:75
msgid ""
"Let's use this `#[generate_trait]` in the following chapters to make our "
"code cleaner."
msgstr ""
"Vamos a utilizar este \"[generate_trait]` en los siguientes capítulos para "
"hacer nuestro código más limpio."

#: src/ch05-03-method-syntax.md:77
msgid "Snapshots and References"
msgstr "Snapshots y referencias"

#: src/ch05-03-method-syntax.md:79
msgid ""
"As the `area` method does not modify the calling instance, `self` is "
"declared as a snapshot of a `Rectangle` instance with the `@` snapshot "
"operator. But, of course, we can also define some methods receiving a "
"mutable reference of this instance, to be able to modify it."
msgstr ""
"Como el método `area` no modifica la instancia que llama, `self'se declara "
"como una instantánea de una instancia `Rectangle` con el operador de "
"instantáneas. Pero, por supuesto, también podemos definir algunos métodos "
"que reciben una referencia mutable de esta instancia, para poder modificarla."

#: src/ch05-03-method-syntax.md:81
msgid ""
"Let's write a new method `scale` which resizes a rectangle of a `factor` "
"given as parameter:"
msgstr ""
"Escribamos un nuevo método `escala` que redimensiona un rectángulo de un "
"`factor` dado como parámetro:"

#: src/ch05-03-method-syntax.md:98
msgid "\"The new size is (width: {}, height: {})\""
msgstr "\"El nuevo tamaño es (ancho: #, altura: #)\""

#: src/ch05-03-method-syntax.md:102
msgid ""
"It is also possible to define a method which takes ownership of the instance "
"by using just `self` as the first parameter but it is rare. This technique "
"is usually used when the method transforms `self` into something else and "
"you want to prevent the caller from using the original instance after the "
"transformation."
msgstr ""
"También es posible definir un método que toma la propiedad de la instancia "
"usando sólo `self'como primer parámetro, pero es raro. Esta técnica se "
"utiliza generalmente cuando el método se transforma `self'en otra cosa y "
"desea evitar que el llamante utilice la instancia original después de la "
"transformación."

#: src/ch05-03-method-syntax.md:104
msgid ""
"Look at the [Understanding Ownership](ch04-00-understanding-ownership.md) "
"chapter for more details about these important notions."
msgstr ""
"Mira el capítulo [Entender la propiedad](ch04-00-entender la propiedad.md) "
"para más detalles sobre estas nociones importantes."

#: src/ch05-03-method-syntax.md:106
msgid "Methods with Several Parameters"
msgstr "Métodos con varios parámetros"

#: src/ch05-03-method-syntax.md:108
msgid ""
"Let’s practice using methods by implementing another method on the "
"`Rectangle` struct. This time we want to write the method `can_hold` which "
"accepts another instance of `Rectangle` and returns `true` if this rectangle "
"can fit completely within self; otherwise, it should return false."
msgstr ""
"Practiquemos usando métodos implementando otro método en la estructura "
"`Rectangle`. Esta vez queremos escribir el método `can_hold` que acepta otra "
"instancia de `Rectangle` y devuelve `true` si este rectángulo puede caber "
"completamente dentro de sí mismo; de lo contrario, debería regresar falso."

#: src/ch05-03-method-syntax.md:132
msgid "\"Can rect1 hold rect2? {}\""
msgstr "\"¿Puede el rect1 sostener el rect2?\""

#: src/ch05-03-method-syntax.md:133
msgid "\"Can rect1 hold rect3? {}\""
msgstr "\"¿Puede el rect1 sostener el rect3?\""

#: src/ch05-03-method-syntax.md:137
msgid "Here, we expect that `rect1` can hold `rect2` but not `rect3`."
msgstr ""
"En este caso, esperamos que `rect1` pueda contener `rect2` pero no `rect3`."

#: src/ch05-03-method-syntax.md:139
msgid "Associated functions"
msgstr "Funciones asociadas"

#: src/ch05-03-method-syntax.md:141
msgid ""
"We call _associated functions_ all functions that are defined inside an "
"`impl` block that are associated to a specific type. While this is not "
"enforced by the compiler, it is a good practice to keep associated functions "
"related to the same type in the same `impl` block - for example, all "
"functions related to `Rectangle` will be grouped in the same `impl` block "
"for `RectangleTrait`."
msgstr ""
"Llamamos a las funciones _asociadas_ todas las funciones que se definen "
"dentro de un bloque `impl` que están asociadas a un tipo específico. Si bien "
"el compilador no las aplica, es una buena práctica mantener las funciones "
"asociadas relacionadas con el mismo tipo en el mismo bloque `impl` - por "
"ejemplo, todas las funciones relacionadas con `Rectangle` se agruparán en el "
"mismo bloque `impl` para `RectangleTrait`."

#: src/ch05-03-method-syntax.md:143
msgid ""
"Methods are a special kind of associated function, but we can also define "
"associated functions that don’t have `self` as their first parameter (and "
"thus are not methods) because they don’t need an instance of the type to "
"work with, but are still associated with that type."
msgstr ""
"Los métodos son un tipo especial de función asociada, pero también podemos "
"definir funciones asociadas que no tienen `self` como su primer parámetro (y "
"por lo tanto no son métodos) porque no necesitan una instancia del tipo con "
"el que trabajar, pero todavía están asociados con ese tipo."

#: src/ch05-03-method-syntax.md:145
msgid ""
"Associated functions that aren’t methods are often used for constructors "
"that will return a new instance of the type. These are often called `new`, "
"but `new` isn’t a special name and isn’t built into the language. For "
"example, we could choose to provide an associated function named `square` "
"that would have one dimension parameter and use that as both width and "
"height, thus making it easier to create a square `Rectangle` rather than "
"having to specify the same value twice:"
msgstr ""
"Las funciones asociadas que no son métodos se utilizan a menudo para los "
"constructores que devuelven una nueva instancia del tipo. Estas a menudo se "
"llaman `nuevo`, pero `nuevo` no es un nombre especial y no está integrado en "
"el lenguaje. Por ejemplo, podríamos optar por proporcionar una función "
"asociada llamada `cuadrado` que tendría un parámetro de dimensión y "
"utilizarlo como ancho y altura, lo que hace más fácil crear un cuadrado "
"`rectángulo` en lugar de tener que especificar el mismo valor dos veces:"

#: src/ch05-03-method-syntax.md:153
msgid ""
"Let's create the function `new` which creates a `Rectangle` from a `width` "
"and a `height`, `square` which creates a square `Rectangle` from a `size` "
"and `avg` which computes the average of two `Rectangle` instances:"
msgstr ""
"Vamos a crear la función `nuevo` que crea un `rectángulo` a partir de un "
"`ancho` y un `altura`, `cuadrado` que crea un cuadrado `rectángulo` a partir "
"de un `tamaño` y `avg` que calcula el promedio de dos instancias "
"`rectángulo`:"

#: src/ch05-03-method-syntax.md:182
msgid "\"The average Rectangle of {:?} and {:?} is {:?}\""
msgstr "\"El rectángulo promedio de {:?} y {:?} es {:?}\""

#: src/ch05-03-method-syntax.md:190
msgid ""
"To call the `square` associated function, we use the `::` syntax with the "
"struct name; `let sq = Rectangle::square(3);` is an example. This function "
"is namespaced by the struct: the `::` syntax is used for both associated "
"functions and namespaces created by modules. We’ll discuss modules in "
"[Chapter 7](./ch07-02-defining-modules-to-control-scope.md)."
msgstr ""
"Para llamar a la función asociada `cuadrado`, usamos la `:` sintaxis con el "
"nombre de la estructura; `let sq = Rectángulo::cuadrado(3);` es un ejemplo. "
"Esta función está espaciada por la estructura: la `:` sintaxis se utiliza "
"tanto para funciones asociadas como para espacios de nombres creados por "
"módulos. Discutiremos módulos en [Capítulo 7](./ch07-02-definir-módulos-a-"
"control-scope.md)."

#: src/ch05-03-method-syntax.md:196
msgid ""
"Note that the `avg` function could also be written as a method with `self` "
"as the first rectangle. In this case, instead of using the method with "
"`RectangleTrait::avg(@rect1, @rect2)`, it would be called with `rect1."
"avg(rect2)`."
msgstr ""
"Tenga en cuenta que la función `avg` también podría escribirse como un "
"método con `self` como primer rectángulo. En este caso, en lugar de usar el "
"método con `RectangleTrait::avg(@rect1, @rect2)`, se le llamaría con `rect1."
"avg(rect2)`."

#: src/ch05-03-method-syntax.md:198
msgid "Multiple Traits and `impl` Blocks"
msgstr "Múltiples rasgos y bloques `impl`"

#: src/ch05-03-method-syntax.md:200
msgid ""
"Each struct is allowed to have multiple `trait` and `impl` blocks. For "
"example, the following code is equivalent to the code shown in the _Methods "
"with several parameters_ section, which has each method in its own `trait` "
"and `impl` blocks."
msgstr ""
"Cada estructura tiene múltiples bloques de `trait` e `impl`; por ejemplo, el "
"siguiente código es equivalente al código que se muestra en los _métodos con "
"varios parámetros_, que tiene cada método en sus propios bloques de `trait` "
"e `impl`."

#: src/ch05-03-method-syntax.md:219
msgid ""
"There’s no strong reason to separate these methods into multiple `trait` and "
"`impl` blocks here, but this is valid syntax."
msgstr ""
"No hay ninguna razón sólida para separar estos métodos en múltiples bloques "
"`trait` e `impl` aquí, pero esto es sintaxis válida."

#: src/ch05-03-method-syntax.md:222
msgid "{{#quiz ../quizzes/ch05-03-method-syntax.toml}}"
msgstr "quiz../quizzes/ch05-03-method-syntax.toml"

#: src/ch06-00-enums-and-pattern-matching.md
msgid ""
"In this chapter, we’ll look at _enumerations_, also referred to as _enums_. "
"Enums allow you to define a type by enumerating its possible _variants_. "
"First, we’ll define and use an enum to show how an enum can encode meaning "
"along with data. Next, we’ll explore a particularly useful enum, called "
"`Option`, which expresses that a value can be either something or nothing. "
"Finally, we’ll look at how pattern matching in the `match` expression makes "
"it easy to run different code for different values of an enum."
msgstr ""
"En este capítulo, veremos _enumeraciones_, también conocido como _enums_. "
"Los enums le permiten definir un tipo enumerando sus posibles _variantes_. "
"Primero, definiremos y usaremos un enum para mostrar cómo un enum puede "
"codificar el significado junto con los datos. A continuación, exploraremos "
"un enum particularmente útil, llamado `Opción`, que expresa que un valor "
"puede ser algo o nada. Finalmente, veremos cómo la coincidencia de patrones "
"en la expresión `match` hace que sea fácil ejecutar código diferente para "
"diferentes valores de un enum."

#: src/ch06-01-enums.md:3
msgid ""
"Enums, short for \"enumerations,\" are a way to define a custom data type "
"that consists of a fixed set of named values, called _variants_. Enums are "
"useful for representing a collection of related values where each value is "
"distinct and has a specific meaning."
msgstr ""
"Enums, abreviado para \"enumeraciones\", son una manera de definir un tipo "
"de datos personalizado que consiste en un conjunto fijo de valores "
"nombrados, llamados _variantes_. Enums son útiles para representar una "
"colección de valores relacionados donde cada valor es distinto y tiene un "
"significado específico."

#: src/ch06-01-enums.md:5
msgid "Enum Variants and Values"
msgstr "Variantes y valores del Enum"

#: src/ch06-01-enums.md:7
msgid "Here's a simple example of an enum:"
msgstr "He aquí un ejemplo simple de un enum:"

#: src/ch06-01-enums.md:19
msgid ""
"In this example, we've defined an enum called `Direction` with four "
"variants: `North`, `East`, `South`, and `West`. The naming convention is to "
"use PascalCase for enum variants. Each variant represents a distinct value "
"of the `Direction` type. In this particular example, variants don't have any "
"associated value. One variant can be instantiated using this syntax:"
msgstr ""
"En este ejemplo, hemos definido un enum llamado `Dirección` con cuatro "
"variantes: `Norte`, `Este`, `Sur` y `Oeste`. La convención de nombres es "
"utilizar PascalCase para variantes de enum. Cada variante representa un "
"valor distinto del tipo `Dirección`. En este ejemplo particular, las "
"variantes no tienen ningún valor asociado. Una variante se puede instanciar "
"usando esta sintaxis:"

#: src/ch06-01-enums.md:36
msgid ""
"Now let's imagine that our variants have associated values, that store the "
"exact degree of the direction. We can define a new `Direction` enum:"
msgstr ""
"Ahora imaginemos que nuestras variantes tienen valores asociados, que "
"almacenan el grado exacto de la dirección. Podemos definir un nuevo enum "
"`Dirección`:"

#: src/ch06-01-enums.md:52
msgid "and instantiate it as follows:"
msgstr "y la instancia de la siguiente manera:"

#: src/ch06-01-enums.md:68
msgid ""
"In this code, each variant is associated with a `u128` value, representing "
"the direction in degrees. In the next example, we will see that it is also "
"possible to associate different data types with each variant."
msgstr ""
"En este código, cada variante se asocia con un valor `u128`, que representa "
"la dirección en grados. En el siguiente ejemplo, veremos que también es "
"posible asociar diferentes tipos de datos con cada variante."

#: src/ch06-01-enums.md:70
msgid ""
"It's easy to write code that acts differently depending on the variant of an "
"enum instance, in this example to run specific code according to a "
"direction. You can learn more about it in the [Match Control Flow Construct]"
"(./ch06-02-the-match-control-flow-construct.md) section."
msgstr ""
"Es fácil escribir código que actúa de manera diferente dependiendo de la "
"variante de una instancia de enum, en este ejemplo para ejecutar código "
"específico de acuerdo a una dirección. Puede aprender más sobre él en la "
"sección [Match Control Flow Construct](./ch06-02-the-match-control-flow-"
"construct.md)."

#: src/ch06-01-enums.md:74
msgid "Enums Combined with Custom Types"
msgstr "Enumes combinados con tipos personalizados"

#: src/ch06-01-enums.md:76
msgid ""
"Enums can also be used to store more interesting custom data associated with "
"each variant. For example:"
msgstr ""
"Los enums también se pueden utilizar para almacenar datos personalizados más "
"interesantes asociados con cada variante. Por ejemplo:"

#: src/ch06-01-enums.md:87
msgid ""
"In this example, the `Message` enum has three variants: `Quit`, `Echo`, and "
"`Move`, all with different types:"
msgstr ""
"En este ejemplo, el `Mensaje` enum tiene tres variantes: `Quit`, `Echo` y "
"`Move`, todas con diferentes tipos:"

#: src/ch06-01-enums.md:89
msgid "`Quit` doesn't have any associated value."
msgstr "`Quit` no tiene ningún valor asociado."

#: src/ch06-01-enums.md:90
msgid "`Echo` is a single `felt252`."
msgstr "`Echo` es un solo `felt252`."

#: src/ch06-01-enums.md:91
msgid "`Move` is a tuple of two `u128` values."
msgstr "`Move` es una tupla de dos valores `u128`."

#: src/ch06-01-enums.md:93
msgid ""
"You could even use a Struct or another enum you defined inside one of your "
"enum variants."
msgstr ""
"Incluso podrías usar un Struct u otro enum que definiste dentro de una de "
"tus variantes de enum."

#: src/ch06-01-enums.md:95
msgid "Trait Implementations for Enums"
msgstr "Implementaciones de rasgos para Enums"

#: src/ch06-01-enums.md:97
msgid ""
"In Cairo, you can define traits and implement them for your custom enums. "
"This allows you to define methods and behaviors associated with the enum. "
"Here's an example of defining a trait and implementing it for the previous "
"`Message` enum:"
msgstr ""
"En El Cairo, usted puede definir rasgos e implementarlos para sus enums "
"personalizados. Esto le permite definir métodos y comportamientos asociados "
"con el enum. He aquí un ejemplo de definir un rasgo e implementarlo para el "
"enum anterior `Mensaje`:"

#: src/ch06-01-enums.md:107 src/ch06-01-enums.md:133
msgid "\"quitting\""
msgstr "\"Renunciando\""

#: src/ch06-01-enums.md:108 src/ch06-01-enums.md:134
msgid "\"echoing {}\""
msgstr "\"Echoing\""

#: src/ch06-01-enums.md:109 src/ch06-01-enums.md:135
msgid "\"moving from {} to {}\""
msgstr "\"pasando de \"a\""

#: src/ch06-01-enums.md:115
msgid ""
"In this example, we implemented the `Processing` trait for `Message`. Here "
"is how it could be used to process a Quit message:"
msgstr ""
"En este ejemplo, implementamos el rasgo `Procesamiento` para `Mensaje`. He "
"aquí cómo se podría utilizar para procesar un mensaje de Renuncia:"

#: src/ch06-01-enums.md:147
msgid "Running this code would print `quitting`."
msgstr "La ejecución de este código imprimiría `basta`."

#: src/ch06-01-enums.md:149
msgid "The `Option` Enum and Its Advantages"
msgstr "El enum `opción'y sus ventajas"

#: src/ch06-01-enums.md:151
msgid ""
"The `Option` enum is a standard Cairo enum that represents the concept of an "
"optional value. It has two variants: `Some: T` and `None`. `Some: T` "
"indicates that there's a value of type `T`, while `None` represents the "
"absence of a value."
msgstr ""
"El enum `Opción` es un enum estándar de El Cairo que representa el concepto "
"de un valor opcional y tiene dos variantes: `Algunos: T` y `Ninguno`. "
"`Algunos: T` indica que hay un valor de tipo `T`, mientras que `Ninguno` "
"representa la ausencia de un valor."

#: src/ch06-01-enums.md:160
msgid ""
"The `Option` enum is helpful because it allows you to explicitly represent "
"the possibility of a value being absent, making your code more expressive "
"and easier to reason about. Using `Option` can also help prevent bugs caused "
"by using uninitialized or unexpected `null` values."
msgstr ""
"El enum `Option` es útil porque le permite representar explícitamente la "
"posibilidad de que un valor esté ausente, haciendo su código más expresivo y "
"más fácil de razonar. Usar `Option` también puede ayudar a prevenir errores "
"causados por el uso de valores `null` no iniciados o inesperados."

#: src/ch06-01-enums.md:162
msgid ""
"To give you an example, here is a function which returns the index of the "
"first element of an array with a given value, or `None` if the element is "
"not present."
msgstr ""
"Para darle un ejemplo, aquí está una función que devuelve el índice del "
"primer elemento de un array con un valor dado, o `Ninguno` si el elemento no "
"está presente."

#: src/ch06-01-enums.md:164
msgid "We are demonstrating two approaches for the above function:"
msgstr "Estamos demostrando dos enfoques para la función anterior:"

#: src/ch06-01-enums.md:166
msgid "Recursive approach with `find_value_recursive`."
msgstr "Enfoque recursivo con `find_value_recursive`."

#: src/ch06-01-enums.md:167
msgid "Iterative approach with `find_value_iterative`."
msgstr "Enfoque iterativo con `find_value_terative`."

#: src/ch06-01-enums.md:199
msgid ""
"Enums can be useful in many situations, especially when using the `match` "
"flow construct that we just used. We will describe it in the next section."
msgstr ""
"Los enums pueden ser útiles en muchas situaciones, especialmente cuando "
"usamos la construcción de flujo `match` que acabamos de usar. Lo "
"describiremos en la siguiente sección."

#: src/ch06-01-enums.md:201
msgid ""
"Other enums are used very often, such as the `Result` enum, allowing to "
"handle errors gracefully. We will explain the `Result` enum in detail in the "
"[\"Error Handling\"](./ch09-02-recoverable-errors.md#the-result-enum) "
"chapter."
msgstr ""
"Otros enums se usan muy a menudo, como el enum `Resultado`, permitiendo "
"manejar errores con gracia. Explicaremos el enum `Resultado` en detalle en "
"el capítulo [\"Manejo del error\"](./ch09-02-recuperable-errors.md#the-"
"resulto-enum)."

#: src/ch06-01-enums.md:203
msgid "{{#quiz ../quizzes/ch06-01-enums.toml}}"
msgstr "quiz../quizzes/ch06-01-enums.toml"

#: src/ch06-02-the-match-control-flow-construct.md:3
msgid ""
"Cairo has an extremely powerful control flow construct called `match` that "
"allows you to compare a value against a series of patterns and then execute "
"code based on which pattern matches. Patterns can be made up of literal "
"values, variable names, wildcards, and many other things. The power of "
"`match` comes from the expressiveness of the patterns and the fact that the "
"compiler confirms that all possible cases are handled."
msgstr ""
"El Cairo tiene una construcción de flujo de control extremadamente potente "
"llamada `match` que le permite comparar un valor con una serie de patrones y "
"luego ejecutar código basado en el que el patrón coincide. Los patrones se "
"pueden componer de valores literales, nombres de variables, comodines, y "
"muchas otras cosas. El poder de `match` proviene de la expresividad de los "
"patrones y el hecho de que el compilador confirma que todos los casos "
"posibles se manejan."

#: src/ch06-02-the-match-control-flow-construct.md:5
msgid ""
"Think of a `match` expression as being like a coin-sorting machine: coins "
"slide down a track with variously sized holes along it, and each coin falls "
"through the first hole it encounters that it fits into. In the same way, "
"values go through each pattern in a match, and at the first pattern the "
"value “fits”, the value falls into the associated code block to be used "
"during execution."
msgstr ""
"Piense en una expresión `match` como una máquina de clasificación de "
"monedas: las monedas se deslizan por una pista con agujeros de varios "
"tamaños a lo largo de ella, y cada moneda cae a través del primer agujero en "
"el que se encuentra. De la misma manera, los valores van a través de cada "
"patrón en una coincidencia, y en el primer patrón el valor \"ajusta\", el "
"valor cae en el bloque de código asociado a ser utilizado durante la "
"ejecución."

#: src/ch06-02-the-match-control-flow-construct.md:7
msgid ""
"Speaking of coins, let’s use them as an example using `match`! We can write "
"a function that takes an unknown US coin and, in a similar way as the "
"counting machine, determines which coin it is and returns its value in "
"cents, as shown in Listing 6-1."
msgstr ""
"Hablando de monedas, vamos a utilizarlas como un ejemplo usando `match`! "
"Podemos escribir una función que toma una moneda desconocida de los EE.UU. "
"y, de una manera similar a la máquina de conteo, determina qué moneda es y "
"devuelve su valor en centavos, como se muestra en la Lista 6-1."

#: src/ch06-02-the-match-control-flow-construct.md:27
msgid ""
"<span class=\"caption\">Listing 6-1: An enum and a `match` expression that "
"has the variants of the enum as its patterns</span>"
msgstr ""
"<span class=\"caption\">Lista 6-1: Un enum y una expresión `match` que tiene "
"las variantes del enum como sus patrones</span>"

#: src/ch06-02-the-match-control-flow-construct.md:29
msgid ""
"Let’s break down the `match` expression in the `value_in_cents` function. "
"First, we list the `match` keyword followed by an expression, which in this "
"case is the value `coin`. This seems very similar to a conditional "
"expression used with the `if` statement, but there’s a big difference: with "
"`if`, the condition needs to evaluate to a boolean value, but here it can be "
"any type. The type of `coin` in this example is the `Coin` enum that we "
"defined on the first line."
msgstr ""
"Desglosemos la expresión `match` en la función `value_in_cents`. En primer "
"lugar, enumeramos la palabra clave `match` seguida de una expresión, que en "
"este caso es el valor `coin`. Esto parece muy similar a una expresión "
"condicional utilizada con la declaración `if`, pero hay una gran diferencia: "
"con `if`, la condición debe evaluarse a un valor booleano, pero aquí puede "
"ser cualquier tipo. El tipo de `coin` en este ejemplo es el enum `Coin` que "
"definimos en la primera línea."

#: src/ch06-02-the-match-control-flow-construct.md:31
msgid ""
"Next are the `match` arms. An arm has two parts: a pattern and some code. "
"The first arm here has a pattern that is the value `Coin::Penny` and then "
"the `=>` operator that separates the pattern and the code to run. The code "
"in this case is just the value `1`. Each arm is separated from the next with "
"a comma."
msgstr ""
"A continuación están los brazos `match`. Un brazo tiene dos partes: un "
"patrón y algo de código. El primer brazo aquí tiene un patrón que es el "
"valor `Coin::Penny` y luego el operador `= que separa el patrón y el código "
"a ejecutar. El código en este caso es sólo el valor `1`. Cada brazo se "
"separa de la siguiente con una coma."

#: src/ch06-02-the-match-control-flow-construct.md:33
msgid ""
"When the `match` expression executes, it compares the resultant value "
"against the pattern of each arm, in the order they are given. If a pattern "
"matches the value, the code associated with that pattern is executed. If "
"that pattern doesn’t match the value, execution continues to the next arm, "
"much as in a coin-sorting machine. We can have as many arms as we need: in "
"the above example, our `match` has four arms."
msgstr ""
"Cuando la expresión `match` se ejecuta, se compara el valor resultante con "
"el patrón de cada brazo, en el orden en que se dan. Si un patrón coincide "
"con el valor, se ejecuta el código asociado con ese patrón. Si ese patrón no "
"coincide con el valor, la ejecución continúa hasta el siguiente brazo, tanto "
"como en una máquina de clasificación de monedas. Podemos tener tantos brazos "
"como necesitemos: en el ejemplo anterior, nuestro `match` tiene cuatro "
"brazos."

#: src/ch06-02-the-match-control-flow-construct.md:35
msgid ""
"The code associated with each arm is an expression, and the resultant value "
"of the expression in the matching arm is the value that gets returned for "
"the entire match expression."
msgstr ""
"El código asociado a cada brazo es una expresión, y el valor resultante de "
"la expresión en el brazo de coincidencia es el valor que se devuelve para "
"toda la expresión de coincidencia."

#: src/ch06-02-the-match-control-flow-construct.md:37
msgid ""
"We don’t typically use curly brackets if the `match` arm code is short, as "
"it is in our example where each arm just returns a value. If you want to run "
"multiple lines of code in a `match` arm, you must use curly brackets, with a "
"comma following the arm. For example, the following code prints “Lucky "
"penny!” every time the method is called with a `Coin::Penny`, but still "
"returns the last value of the block, `1`:"
msgstr ""
"Normalmente no usamos soportes rizados si el código del brazo `match` es "
"corto, como es en nuestro ejemplo donde cada brazo sólo devuelve un valor. "
"Si desea ejecutar varias líneas de código en un brazo `match`, debe utilizar "
"soportes rizados, con una coma que sigue al brazo. Por ejemplo, el siguiente "
"código imprime “Lucky penique!” cada vez que el método se llama con un "
"`Coin::Penny`, pero todavía devuelve el último valor del bloque, `1`:"

#: src/ch06-02-the-match-control-flow-construct.md:43
msgid "\"Lucky penny!\""
msgstr "\"¡Afortunado centavo!\""

#: src/ch06-02-the-match-control-flow-construct.md:53
msgid "Patterns That Bind to Values"
msgstr "Patrones que se unen a los valores"

#: src/ch06-02-the-match-control-flow-construct.md:55
msgid ""
"Another useful feature of `match` arms is that they can bind to the parts of "
"the values that match the pattern. This is how we can extract values out of "
"enum variants."
msgstr ""
"Otra característica útil de los brazos `match` es que pueden unirse a las "
"partes de los valores que coinciden con el patrón. Así es como podemos "
"extraer los valores de las variantes de enum."

#: src/ch06-02-the-match-control-flow-construct.md:57
msgid ""
"As an example, let’s change one of our enum variants to hold data inside it. "
"From 1999 through 2008, the United States minted quarters with different "
"designs for each of the 50 states on one side. No other coins got state "
"designs, so only quarters have this extra value. We can add this information "
"to our `enum` by changing the `Quarter` variant to include a `UsState` value "
"stored inside it, which we’ve done in Listing 6-2."
msgstr ""
"Como ejemplo, cambiemos una de nuestras variantes de enum para mantener los "
"datos dentro de ella. De 1999 a 2008, los Estados Unidos acuñaron cuartos "
"con diferentes diseños para cada uno de los 50 estados por un lado. Ninguna "
"otra moneda obtuvo diseños de estado, por lo que sólo los cuartos tienen "
"este valor adicional. Podemos añadir esta información a nuestro `enum` "
"cambiando la variante `Cuarto` para incluir un valor `UsState` almacenado "
"dentro de él, que hemos hecho en la Lista 6-2."

#: src/ch06-02-the-match-control-flow-construct.md:61
msgid "// Debug so we can inspect the state in a minute\n"
msgstr "// Depurar para que podamos inspeccionar el estado en un minuto\n"

#: src/ch06-02-the-match-control-flow-construct.md:76
msgid ""
"<span class=\"caption\">Listing 6-2: A `Coin` enum in which the `Quarter` "
"variant also holds a `UsState` value</span>"
msgstr ""
"<span class=\"caption\">Lista 6-2: Un enum `Coin` en el que la variante "
"`Cuarter` también tiene un valor `UsState`</span>"

#: src/ch06-02-the-match-control-flow-construct.md:78
msgid ""
"Let’s imagine that a friend is trying to collect all 50 state quarters. "
"While we sort our loose change by coin type, we’ll also call out the name of "
"the state associated with each quarter so that if it’s one our friend "
"doesn’t have, they can add it to their collection."
msgstr ""
"Imaginemos que un amigo está tratando de recoger los 50 cuartos de estado. "
"Mientras ordenamos nuestro cambio suelto por tipo de moneda, también "
"llamaremos el nombre del estado asociado con cada cuarto para que si es uno "
"de nuestros amigos no tiene, pueden agregarlo a su colección."

#: src/ch06-02-the-match-control-flow-construct.md:80
msgid ""
"In the `match` expression for this code, we add a variable called `state` to "
"the pattern that matches values of the variant `Coin::Quarter`. When a "
"`Coin::Quarter` matches, the `state` variable will bind to the value of that "
"quarter’s state. Then we can use `state` in the code for that arm, like so:"
msgstr ""
"En la expresión `match` para este código, añadimos una variable llamada "
"`state` al patrón que coincide con los valores de la variante `Coin::"
"Quarter`. Cuando una `Coin::Quarter` coincide, la variable `state` se unirá "
"al valor del estado de ese trimestre. Entonces podemos usar `state` en el "
"código para ese brazo, así:"

#: src/ch06-02-the-match-control-flow-construct.md:89
msgid "\"State quarter from {:?}!\""
msgstr "\"El cuarto de estado de {:?}!\""

#: src/ch06-02-the-match-control-flow-construct.md:96
msgid ""
"Because `state` is an `UsState` enum which implements the `Debug` trait, we "
"can print `state` value with `println!` macro."
msgstr ""
"Debido a que `estado` es un enum `UsState` que implementa el rasgo `Debug`, "
"podemos imprimir `estado` valor con `println!'macro."

#: src/ch06-02-the-match-control-flow-construct.md:98
msgid ""
"Note: `{:?}` is a special formatting syntax that allows to print a debug "
"form of the parameter passed to the `println!` macro. You can find more "
"information about it in [Appendix C](./appendix-03-derivable-traits."
"html#debug-for-printing-and-debugging)."
msgstr ""
"Nota: :? es una sintaxis de formato especial que permite imprimir una forma "
"de depuración del parámetro pasado a la macro `println!`. Puede encontrar "
"más información al respecto en [Apéndice C](./apéndice-03-derivable-traits."
"html#debug-for-printing-and-debugging)."

#: src/ch06-02-the-match-control-flow-construct.md:100
msgid ""
"If we were to call `value_in_cents(Coin::Quarter(UsState::Alaska))`, `coin` "
"would be `Coin::Quarter(UsState::Alaska)`. When we compare that value with "
"each of the match arms, none of them match until we reach `Coin::"
"Quarter(state)`. At that point, the binding for `state` will be the value "
"`UsState::Alaska`. We can then use that binding in `println!` macro, thus "
"getting the inner state value out of the `Coin` enum variant for `Quarter`."
msgstr ""
"Si llamáramos `value_in_cents(Coin::Quarter(UsState::Alaska))`, `coin` sería "
"`Coin::Quarter(UsState::Alaska)`. Cuando comparamos ese valor con cada uno "
"de los brazos de partido, ninguno de ellos coincide hasta que alcancemos "
"`Coin::Quarter(state)`. En ese momento, la unión para `state` será el valor "
"`UsState::Alaska`. Podemos entonces utilizar esa unión en `println!` macro, "
"obteniendo así el valor de estado interno de la variante `Coin` enum para "
"`Quarter`."

#: src/ch06-02-the-match-control-flow-construct.md:104
msgid "Matching with `Option<T>`"
msgstr "Coincidiendo con `Opción<TÃ3n"

#: src/ch06-02-the-match-control-flow-construct.md:106
msgid ""
"In the previous section, we wanted to get the inner `T` value out of the "
"`Some` case when using `Option<T>`; we can also handle `Option<T>` using "
"`match`, as we did with the `Coin` enum! Instead of comparing coins, we’ll "
"compare the variants of `Option<T>`, but the way the `match` expression "
"works remains the same."
msgstr ""
"En la sección anterior, queríamos obtener el valor `T` interno del caso "
"`Some` al usar `Option<T`; también podemos manejar `Option<T` usando "
"`match`, ¡como hicimos con el enum `Coin`! En lugar de comparar monedas, "
"compararemos las variantes de `Option<T`, pero la forma en que funciona la "
"expresión `match` sigue siendo la misma."

#: src/ch06-02-the-match-control-flow-construct.md:108
msgid ""
"Let’s say we want to write a function that takes an `Option<u8>` and, if "
"there’s a value inside, adds `1` to that value. If there is no value inside, "
"the function should return the `None` value and not attempt to perform any "
"operations."
msgstr ""
"Digamos que queremos escribir una función que toma una `opción < u8â y, si "
"hay un valor dentro, añade `1` a ese valor. Si no hay valor dentro, la "
"función debe devolver el valor `Ninguno` y no intentar realizar ninguna "
"operación."

#: src/ch06-02-the-match-control-flow-construct.md:110
msgid ""
"This function is very easy to write, thanks to `match`, and will look like "
"Listing 6-3."
msgstr ""
"Esta función es muy fácil de escribir, gracias a `match`, y se verá como el "
"listado 6-3."

#: src/ch06-02-the-match-control-flow-construct.md:127
msgid ""
"<span class=\"caption\">Listing 6-3: A function that uses a `match` "
"expression on an `Option<u8>`</span>"
msgstr ""
"<span class=\"caption\">Lista 6-3: Una función que utiliza una expresión "
"`match` en una `Opción<u8/span>"

#: src/ch06-02-the-match-control-flow-construct.md:129
msgid ""
"Let’s examine the first execution of `plus_one` in more detail. When we call "
"`plus_one(five)`, the variable `x` in the body of `plus_one` will have the "
"value `Some(5)`. We then compare that against each `match` arm:"
msgstr ""
"Examinemos la primera ejecución de `plus_one` con más detalle. Cuando "
"llamamos `plus_one(cinco)`, la variable `x` en el cuerpo de `plus_one` "
"tendrá el valor `Some(5)`. A continuación, comparamos eso con cada brazo "
"`match`:"

#: src/ch06-02-the-match-control-flow-construct.md:135
msgid ""
"Does `Option::Some(5)` value match the pattern `Option::Some(val)`? It does! "
"We have the same variant. The `val` binds to the value contained in `Option::"
"Some`, so `val` takes the value `5`. The code in the `match` arm is then "
"executed, so we add `1` to the value of `val` and create a new `Option::"
"Some` value with our total `6` inside. Because the first arm matched, no "
"other arms are compared."
msgstr ""
"`Opción::El valor de `val` coincide con el patrón `Opción::Some(val)`? Lo "
"hace! Tenemos la misma variante. El `val` se une al valor contenido en "
"`opción::Some`, por lo que `val` toma el valor `5`. El código en el brazo "
"`match` se ejecuta entonces, por lo que agregamos `1` al valor de `val` y "
"creamos una nueva `opción::Some` valor con nuestro total `6` dentro. Debido "
"a que el primer brazo coincide, no se comparan otros brazos."

#: src/ch06-02-the-match-control-flow-construct.md:137
msgid ""
"Now let’s consider the second call of `plus_one` in our main function, where "
"`x` is `Option::None`. We enter the `match` and compare to the first arm:"
msgstr ""
"Ahora consideremos la segunda llamada de `plus_one` en nuestra función "
"principal, donde `x` es `Opción::Ninguna`. Entramos en el `match` y "
"comparamos con el primer brazo:"

#: src/ch06-02-the-match-control-flow-construct.md:143
msgid ""
"The `Option::Some(val)` value doesn’t match the pattern `Option::None`, so "
"we continue to the next arm:"
msgstr ""
"La `Opción::Some(val)` valor no coincide con el patrón `Opción::Ninguna`, "
"por lo que continuamos al siguiente brazo:"

#: src/ch06-02-the-match-control-flow-construct.md:149
msgid ""
"It matches! There’s no value to add to, so the matching construct ends and "
"returns the `Option::None` value on the right side of `=>`."
msgstr ""
"¡Coincide! No hay valor que añadir, por lo que el constructo coincidente "
"termina y devuelve el valor `Opción::Ninguno` en el lado derecho de `=."

#: src/ch06-02-the-match-control-flow-construct.md:151
msgid ""
"Combining `match` and enums is useful in many situations. You’ll see this "
"pattern a lot in Cairo code: `match` against an enum, bind a variable to the "
"data inside, and then execute code based on it. It’s a bit tricky at first, "
"but once you get used to it, you’ll wish you had it in all languages. It’s "
"consistently a user favorite."
msgstr ""
"Combinar `match` y enums es útil en muchas situaciones. Verás este patrón "
"mucho en el código de El Cairo: `match` contra un enum, une una variable a "
"los datos dentro, y luego ejecutar código basado en él. Es un poco difícil "
"al principio, pero una vez que te acostumbras a él, desearás tenerlo en "
"todos los idiomas. Es consistentemente un favorito del usuario."

#: src/ch06-02-the-match-control-flow-construct.md:153
msgid "Matches Are Exhaustive"
msgstr "Las coincidencias son exhaustivas"

#: src/ch06-02-the-match-control-flow-construct.md:155
msgid ""
"There’s one other aspect of `match` we need to discuss: the arms’ patterns "
"must cover all possibilities. Consider this version of our `plus_one` "
"function, which has a bug and won’t compile:"
msgstr ""
"Hay otro aspecto de `match` que tenemos que discutir: los patrones de brazos "
"deben cubrir todas las posibilidades. Considere esta versión de nuestra "
"función `plus_one`, que tiene un error y no compilar:"

#: src/ch06-02-the-match-control-flow-construct.md:165
msgid ""
"We didn’t handle the `None` case, so this code will cause a bug. Luckily, "
"it’s a bug Cairo knows how to catch. If we try to compile this code, we’ll "
"get this error:"
msgstr ""
"No manejamos el caso `Ninguno`, por lo que este código causará un error. Por "
"suerte, es un error El Cairo sabe cómo atrapar. Si tratamos de compilar este "
"código, vamos a obtener este error:"

#: src/ch06-02-the-match-control-flow-construct.md:181
msgid ""
"Cairo knows that we didn’t cover every possible case, and even knows which "
"pattern we forgot! Matches in Cairo are exhaustive: we must exhaust every "
"last possibility in order for the code to be valid. Especially in the case "
"of `Option<T>`, when Cairo prevents us from forgetting to explicitly handle "
"the `None` case, it protects us from assuming that we have a value when we "
"might have null, thus making the [billion-dollar mistake](https://en."
"wikipedia.org/wiki/Null_pointer#History) discussed earlier impossible."
msgstr ""
"El Cairo sabe que no cubrimos todos los casos posibles, e incluso sabe qué "
"patrón olvidamos! Los partidos en El Cairo son exhaustivos: debemos agotar "
"todas las últimas posibilidades para que el código sea válido. Especialmente "
"en el caso de `Option<T®, cuando El Cairo nos impide olvidarnos de manejar "
"explícitamente el caso `Ninguno`, nos protege de asumir que tenemos un valor "
"cuando podríamos tener nulo, haciendo así imposible el [error de miles de "
"millones de dólares] (https://en.wikipedia.org/wiki/Null_pointer#History) "
"discutido anteriormente."

#: src/ch06-02-the-match-control-flow-construct.md:185
msgid "Catch-all with the `_` Placeholder"
msgstr "Capturar todo con el marcador de posición `_`"

#: src/ch06-02-the-match-control-flow-construct.md:187
msgid ""
"Using enums, we can also take special actions for a few particular values, "
"but for all other values take one default action. `_` is a special pattern "
"that matches any value and does not bind to that value. You can use it by "
"simply adding a new arm with `_` as the pattern for the last arm of the "
"`match` expression."
msgstr ""
"Usando enums, también podemos tomar acciones especiales para algunos valores "
"particulares, pero para todos los demás valores tomar una acción "
"predeterminada. `_` es un patrón especial que coincide con cualquier valor y "
"no se une a ese valor. Puede usarlo simplemente añadiendo un nuevo brazo con "
"`_` como el patrón para el último brazo de la expresión `match`."

#: src/ch06-02-the-match-control-flow-construct.md:191
msgid ""
"Imagine we have a vending machine that only accepts Dime coins. We want to "
"have a function that processes inserted coins and returns `true` only if the "
"coin is accepted."
msgstr ""
"Imaginemos que tenemos una máquina expendedora que sólo acepta monedas de "
"Dime. Queremos tener una función que procesa monedas insertadas y devuelve "
"`true` sólo si la moneda es aceptada."

#: src/ch06-02-the-match-control-flow-construct.md:194
msgid "Here's a `vending_machine_accept` function that implements this logic:"
msgstr ""
"Aquí está una función `vending_machine_acept` que implementa esta lógica:"

#: src/ch06-02-the-match-control-flow-construct.md:205
msgid ""
"This example also meets the exhaustiveness requirement because we’re "
"explicitly ignoring all other values in the last arm; we haven’t forgotten "
"anything."
msgstr ""
"Este ejemplo también cumple con el requisito de exhaustividad porque estamos "
"ignorando explícitamente todos los demás valores en el último brazo; no "
"hemos olvidado nada."

#: src/ch06-02-the-match-control-flow-construct.md:207
msgid ""
"There's no catch-all pattern in Cairo that allows you to use the value of "
"the pattern."
msgstr ""
"No hay ningún patrón en El Cairo que te permita usar el valor del patrón."

#: src/ch06-02-the-match-control-flow-construct.md:213
msgid "Multiple Patterns with the `|` Operator"
msgstr "Múltiples patrones con el operador"

#: src/ch06-02-the-match-control-flow-construct.md:215
msgid ""
"In `match` expressions, you can match multiple patterns using the `|` "
"syntax, which is the pattern _or_ operator."
msgstr ""
"En expresiones `match`, puede coincidir con múltiples patrones usando la "
"sintaxis, que es el operador pattern _or_."

#: src/ch06-02-the-match-control-flow-construct.md:217
msgid ""
"For example, in the following code we modified the `vending_machine_accept` "
"function to accept both `Dime` and `Quarter` coins in a single arm:"
msgstr ""
"Por ejemplo, en el siguiente código modificamos la función "
"`vending_machine_acept` para aceptar las monedas `Dime` y `Quarter` en un "
"solo brazo:"

#: src/ch06-02-the-match-control-flow-construct.md:228
msgid "Matching Tuples"
msgstr "Tuples coincidentes"

#: src/ch06-02-the-match-control-flow-construct.md:230
msgid "It is possible to match tuples. Let's introduce a new `DayType` enum:"
msgstr ""
"Es posible emparejar tuples. Vamos a introducir un nuevo enum `DayType`:"

#: src/ch06-02-the-match-control-flow-construct.md:242
msgid ""
"Now, let's suppose that our vending machine accepts any coin on weekdays, "
"but only accepts quarters and dimes on weekends and holidays. We can modify "
"the `vending_machine_accept` function to accept a tuple of a `Coin` and a "
"`Weekday` and return `true` only if the given coin is accepted on the "
"specified day:"
msgstr ""
"Ahora, supongamos que nuestra máquina expendedora acepta cualquier moneda en "
"días laborables, pero sólo acepta cuartos y monedas en fines de semana y "
"días festivos. Podemos modificar la función `vending_machine_acept` para "
"aceptar un tuple de un `Coin` y un `Semana` y devolver `verdadero` sólo si "
"la moneda dada es aceptada en el día especificado:"

#: src/ch06-02-the-match-control-flow-construct.md:255
msgid ""
"Writing `(_, _)` for the last arm of a tuple matching pattern might feel "
"superfluous. Hence, we can use the `_ =>` syntax if we want, for example, "
"that our vending machine only accepts quarters on weekdays:"
msgstr ""
"Escribir `(_, _)` para el último brazo de un patrón de coincidencia de "
"tuplas puede parecer superfluo. Por lo tanto, podemos usar la sintaxis `_ =+ "
"si queremos, por ejemplo, que nuestra máquina expendedora sólo acepta "
"cuartos en días laborables:"

#: src/ch06-02-the-match-control-flow-construct.md:266
msgid "Matching `felt252` and Integer Variables"
msgstr "Coincidiendo con las variables `felt252` y entero"

#: src/ch06-02-the-match-control-flow-construct.md:268
msgid ""
"You can also match `felt252` and integer variables. This is useful when you "
"want to match against a range of values. However, there are some "
"restrictions:"
msgstr ""
"También puede coincidir con `felt252` y variables enteras. Esto es útil "
"cuando desea coincidir con un rango de valores. Sin embargo, hay algunas "
"restricciones:"

#: src/ch06-02-the-match-control-flow-construct.md:271
msgid ""
"Only integers that fit into a single `felt252` are supported (i.e. `u256` is "
"not supported)."
msgstr ""
"Sólo se admiten los números enteros que encajen en un único `felt252` (es "
"decir, `u256` no está soportado)."

#: src/ch06-02-the-match-control-flow-construct.md:272
msgid "The first arm must be 0."
msgstr "El primer brazo debe ser 0."

#: src/ch06-02-the-match-control-flow-construct.md:273
msgid "Each arm must cover a sequential segment, contiguously with other arms."
msgstr ""
"Cada brazo debe cubrir un segmento secuencial, contiguamente con otros "
"brazos."

#: src/ch06-02-the-match-control-flow-construct.md:275
msgid ""
"Imagine we’re implementing a game where you roll a six-sided die to get a "
"number between 0 and 5. If you have 0, 1 or 2 you win. If you have 3, you "
"can roll again. For all other values you lose."
msgstr ""
"Imagina que estamos implementando un juego en el que haces rodar un dado de "
"seis lados para obtener un número entre 0 y 5. Si tienes 0, 1 o 2 ganas. Si "
"tienes 3, puedes volver a rodar. Para todos los demás valores que pierdes."

#: src/ch06-02-the-match-control-flow-construct.md:278
msgid "Here's a match that implements that logic:"
msgstr "Aquí hay una coincidencia que implementa esa lógica:"

#: src/ch06-02-the-match-control-flow-construct.md:283
msgid "\"you won!\""
msgstr "\"¡Ganaste!\""

#: src/ch06-02-the-match-control-flow-construct.md:284
msgid "\"you can roll again!\""
msgstr "\"¡Puedes rodar de nuevo!\""

#: src/ch06-02-the-match-control-flow-construct.md:285
msgid "\"you lost...\""
msgstr "\"Perdiste...\""

#: src/ch06-02-the-match-control-flow-construct.md:290
msgid "{{#quiz ../quizzes/ch06-02-match.toml}}"
msgstr "quiz../quizzes/ch06-02-match.toml"

#: src/ch06-02-the-match-control-flow-construct.md:292
msgid ""
"These restrictions are planned to be relaxed in future versions of Cairo."
msgstr ""
"Estas restricciones están planeadas para ser relajadas en futuras versiones "
"de El Cairo."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:3
msgid "`if let`"
msgstr "`Si se lo permite`"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:5
msgid ""
"The `if let` syntax lets you combine `if` and `let` into a less verbose way "
"to handle values that match one pattern while ignoring the rest. Consider "
"the program in Listing 6-4 that matches on an `Option::Some<u8>` value in "
"the `config_max` variable but only wants to execute code if the value is "
"`Option::Some` variant."
msgstr ""
"La sintaxis `if let` le permite combinar `if` y `let` en una forma menos "
"verbosa de manejar valores que coincidan con un patrón mientras ignora el "
"resto. Considere el programa en Listar 6-4 que coincida con una `Opción::"
"Algunos < u8â € valor en la variable `config_max` pero sólo quiere ejecutar "
"código si el valor es `Opción::Algunos'variante."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:11
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:33
msgid "\"The maximum is configured to be {}\""
msgstr "\"El máximo está configurado para que sea \"#\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:17
msgid ""
"<span class=\"caption\">Listing 6-4: A `match` that only cares about "
"executing code when the value is `Option::Some`</span>"
msgstr ""
"<span class=\"caption\">Lista 6-4: Un `match` que sólo se preocupa por "
"ejecutar código cuando el valor es `Opción::Some/span>"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:20
msgid ""
"If the value is `Option::Some`, we print out the value in the `Option::Some` "
"variant by binding the value to the variable `max` in the pattern. We don’t "
"want to do anything with the `None` value. To satisfy the `match` "
"expression, we have to add `_ => ()` after processing just one variant, "
"which is annoying boilerplate code to add."
msgstr ""
"Si el valor es `Opción::Some`, imprimimos el valor en la `Opción::Some` "
"variante mediante la unión del valor a la variable `max` en el patrón. No "
"queremos hacer nada con el valor `Ninguno`. Para satisfacer la expresión "
"`match`, tenemos que añadir `_ => ()` después de procesar sólo una variante, "
"que es molesto código de placa de caldera para añadir."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:26
msgid ""
"Instead, we could write this in a shorter way using `if let`. The following "
"code behaves the same as the `match` in Listing 6-4:"
msgstr ""
"En su lugar, podríamos escribir esto de una manera más corta usando `if "
"let`. El siguiente código se comporta igual que el `match` en la Lista 6-4:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:39
msgid ""
"The syntax `if let` takes a pattern and an expression separated by an equal "
"sign. It works the same way as a `match`, where the expression is given to "
"the `match` and the pattern is its first arm. In this case, the pattern is "
"`Option::Some(max)`, and `max` binds to the value inside `Option::Some`. We "
"can then use `max` in the body of the `if let` block in the same way we used "
"`max` in the corresponding `match` arm. The code in the `if let` block isn’t "
"run if the value doesn’t match the pattern."
msgstr ""
"La sintaxis `if let` toma un patrón y una expresión separada por un signo "
"igual. Funciona de la misma manera que un `match`, donde la expresión se da "
"al `match` y el patrón es su primer brazo. En este caso, el patrón es "
"`Opción::Some(max)`, y `max` se une al valor dentro de `Opción:Some`. A "
"continuación, podemos utilizar `max` en el cuerpo del bloque `if let` de la "
"misma manera que usamos `max` en el brazo correspondiente `match`. El código "
"en el bloque `if let` no se ejecuta si el valor no coincide con el patrón."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:47
msgid ""
"Using `if let` means less typing, less indentation, and less boilerplate "
"code. However, you lose the exhaustive checking that `match` enforces. "
"Choosing between `match` and `if let` depends on what you’re doing in your "
"particular situation and whether gaining conciseness is an appropriate trade-"
"off for losing exhaustive checking."
msgstr ""
"Usar \" if let \" significa menos mecanografía, menos hendidura y menos "
"código de placa de caldera. Sin embargo, se pierde la comprobación "
"exhaustiva de que \" match \" hace cumplir. La elección entre \" match \" y "
"\" if let \" depende de lo que usted está haciendo en su situación "
"particular y si ganar concisión es una compensación adecuada para perder "
"verificación exhaustiva."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:53
msgid ""
"In other words, you can think of `if let` as syntactic sugar for a `match` "
"that runs code when the value matches one pattern and then ignores all other "
"values."
msgstr ""
"En otras palabras, se puede pensar en `if let` como azúcar sintáctica para "
"un `match` que ejecuta código cuando el valor coincide con un patrón y luego "
"ignora todos los demás valores."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:56
msgid ""
"We can include an `else` with an `if let`. The block of code that goes with "
"`else` is the same as the block of code that would go with the `_` case in "
"the `match` expression. Recall the `Coin` enum definition in Listing 6-2, "
"where the `Quarter` variant also held a `UsState` value. If we wanted to "
"count all non-quarter coins we see while also announcing the state of the "
"quarters, we could do that with a `match` expression, like this:"
msgstr ""
"Podemos incluir un `else` con un `if let`. El bloque de código que va con "
"`else` es el mismo que el bloque de código que iría con el caso `_` en la "
"expresión `match`. Recordemos la definición de `Coin` enum en la Lista 6-2, "
"donde la variante `Cuarter` también tenía un valor `UsState`. Si quisiéramos "
"contar todas las monedas que no sean monedas de cuarto que vemos mientras "
"anunciamos el estado de los cuartos, podríamos hacerlo con una expresión "
"`match`, como esta:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:76
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:97
msgid "\"You got a quarter!\""
msgstr "\"¡Tienes una moneda!\""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:82
msgid "Or we could use an `if let` and `else` expression, like this:"
msgstr "O podríamos usar una expresión `si let` y `else`, como esta:"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:101
#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:120
#: src/ch11-08-printing.md:59 src/ch11-08-printing.md:112
#: src/ch11-08-printing.md:130 src/ch11-08-printing.md:156
msgid "\"{}\""
msgstr ""
"# \"# # \" # \" # # \" # \" # \" # \" # \" # \" # \" # \" # \" # \" # \" # "
"\" # \""

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:106
msgid ""
"If you have a situation in which your program has logic that is too verbose "
"to express using `match`, remember that `if let` is in your Cairo toolbox as "
"well."
msgstr ""
"Si usted tiene una situación en la que su programa tiene lógica que es "
"demasiado verboso para expresar usando `match`, recuerde que `si let'está en "
"su caja de herramientas de El Cairo también."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:109
msgid "`while let`"
msgstr "`mientras que '"

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:111
msgid ""
"The `while let` syntax is similar to the `if let` syntax, but it allows you "
"to loop over a collection of values and execute a block of code for each "
"value that matches a specified pattern. In the case below, the pattern is "
"`Option::Some(x)`, which matches any `Some` variant of the `Option` enum."
msgstr ""
"La sintaxis `while let` es similar a la sintaxis `if let`, pero le permite "
"hacer un bucle sobre una colección de valores y ejecutar un bloque de código "
"para cada valor que coincida con un patrón especificado. En el caso "
"siguiente, el patrón es `Option::Some(x)`, que coincide con cualquier "
"variante `Some` del enum `Option`."

#: src/ch06-03-concise-control-flow-with-if-let-and-while-let.md:124
msgid ""
"Using `while let` provides a more concise and idiomatic way of writing this "
"loop compared to a traditional `while` loop with explicit pattern matching "
"or handling of the `Option` type. However, as with `if let`, you lose the "
"exhaustive checking that a `match` expression provides, so you need to be "
"careful to handle any remaining cases outside the `while let` loop if "
"necessary."
msgstr ""
"El uso de `while let` proporciona una forma más concisa e idiomática de "
"escribir este bucle en comparación con un bucle tradicional `while` con "
"correspondencia explícita de patrones o manejo del tipo `Option`. Sin "
"embargo, como en el caso de `if let`, se pierde la comprobación exhaustiva "
"de que una expresión `match` proporciona, por lo que es necesario tener "
"cuidado de manejar los casos restantes fuera del bucle `while let` si es "
"necesario."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"As you write large programs, organizing your code will become increasingly "
"important. By grouping related functionality and separating code with "
"distinct features, you’ll clarify where to find code that implements a "
"particular feature and where to go to change how a feature works."
msgstr ""
"A medida que usted escribe programas grandes, la organización de su código "
"será cada vez más importante. Al agrupar la funcionalidad relacionada y "
"separar el código con características distintas, usted aclarará dónde "
"encontrar código que implementa una característica particular y dónde ir "
"para cambiar cómo funciona una característica."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"The programs we’ve written so far have been in one module in one file. As a "
"project grows, you should organize code by splitting it into multiple "
"modules and then multiple files. As a package grows, you can extract parts "
"into separate crates that become external dependencies. This chapter covers "
"all these techniques."
msgstr ""
"Los programas que hemos escrito hasta ahora han estado en un módulo en un "
"archivo. A medida que un proyecto crece, debe organizar el código "
"dividiéndolo en varios módulos y luego múltiples archivos. A medida que "
"crece un paquete, puede extraer partes en cajas separadas que se convierten "
"en dependencias externas. Este capítulo cubre todas estas técnicas."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"We’ll also discuss encapsulating implementation details, which lets you "
"reuse code at a higher level: once you’ve implemented an operation, other "
"code can call your code without having to know how the implementation works."
msgstr ""
"También discutiremos los detalles de la implementación, que le permite "
"reutilizar el código a un nivel superior: una vez que haya implementado una "
"operación, otro código puede llamar a su código sin tener que saber cómo "
"funciona la implementación."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"A related concept is scope: the nested context in which code is written has "
"a set of names that are defined as “in scope”. When reading, writing, and "
"compiling code, programmers and compilers need to know whether a particular "
"name at a particular spot refers to a variable, function, struct, enum, "
"module, constant, or other item and what that item means. You can create "
"scopes and change which names are in or out of scope. You can’t have two "
"items with the same name in the same scope."
msgstr ""
"Un concepto relacionado es el alcance: el contexto anidado en el que se "
"escribe el código tiene un conjunto de nombres que se definen como “en "
"alcance”. Al leer, escribir y compilar código, programadores y compiladores "
"necesitan saber si un nombre en particular en un lugar determinado se "
"refiere a una variable, función, estructura, enum, módulo, constante u otro "
"elemento y lo que ese elemento significa. Puede crear alcances y cambiar qué "
"nombres están dentro o fuera de alcance. No puede tener dos elementos con el "
"mismo nombre en el mismo ámbito."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"Cairo has a number of features that allow you to manage your code’s "
"organization. These features, sometimes collectively referred to as the "
"_module system_, include:"
msgstr ""
"El Cairo tiene una serie de características que le permiten gestionar la "
"organización de su código. Estas características, a veces se refieren "
"colectivamente como el sistema _módulo_, incluyen:"

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Packages:** A Scarb feature that lets you build, test, and share crates."
msgstr ""
"**Paquetes:** Una función Scarb que le permite construir, probar y compartir "
"cajas."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Crates:** A tree of modules that corresponds to a single compilation unit. "
"It has a root directory, and a root module defined at the _lib.cairo_ file "
"under this directory."
msgstr ""
"**Crates:** Un árbol de módulos que corresponde a una sola unidad de "
"compilación. Tiene un directorio raíz, y un módulo raíz definido en el "
"archivo _lib.cairo_ bajo este directorio."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Modules** and **use:** Let you control the organization and scope of items."
msgstr ""
"**Módulos** y **Uso:** Le permiten controlar la organización y el alcance de "
"los artículos."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"**Paths:** A way of naming an item, such as a struct, function, or module."
msgstr ""
"** Rutas:** Una forma de nombrar un elemento, como una estructura, función o "
"módulo."

#: src/ch07-00-managing-cairo-projects-with-packages-crates-and-modules.md
msgid ""
"In this chapter, we’ll cover all these features, discuss how they interact, "
"and explain how to use them to manage scope. By the end, you should have a "
"solid understanding of the module system and be able to work with scopes "
"like a pro!"
msgstr ""
"En este capítulo, vamos a cubrir todas estas características, discutir cómo "
"interactúan, y explicar cómo utilizarlos para gestionar el alcance. Al "
"final, usted debe tener una comprensión sólida del sistema de módulos y ser "
"capaz de trabajar con los alcances como un profesional!"

#: src/ch07-01-packages-and-crates.md:3
msgid "What is a Crate?"
msgstr "¿Qué es una caja?"

#: src/ch07-01-packages-and-crates.md:5
msgid ""
"A crate is a subset of a package that is used in the actual Cairo "
"compilation. This includes:"
msgstr ""
"Una caja es un subconjunto de un paquete que se utiliza en la compilación "
"real de El Cairo. Esto incluye:"

#: src/ch07-01-packages-and-crates.md:7
msgid ""
"The package source code, identified by the package name and the crate root, "
"which is the main entry point of the package."
msgstr ""
"El código fuente del paquete, identificado por el nombre del paquete y la "
"raíz de caja, que es el punto de entrada principal del paquete."

#: src/ch07-01-packages-and-crates.md:8
msgid ""
"A subset of the package metadata that identifies crate-level settings of the "
"Cairo compiler, for example, the `edition` field in the _Scarb.toml_ file."
msgstr ""
"Un subconjunto de metadatos de paquetes que identifica los ajustes a nivel "
"de caja del compilador de El Cairo, por ejemplo, el campo `edición` en el "
"archivo _Scarb.toml_."

#: src/ch07-01-packages-and-crates.md:10
msgid ""
"Crates can contain modules, and the modules may be defined in other files "
"that get compiled with the crate, as will be discussed in the subsequent "
"sections."
msgstr ""
"Los dados pueden contener módulos, y los módulos pueden definirse en otros "
"archivos que se compilan con la caja, como se discutirá en las secciones "
"siguientes."

#: src/ch07-01-packages-and-crates.md:12
msgid "What is the Crate Root?"
msgstr "¿Qué es la raíz de la caja?"

#: src/ch07-01-packages-and-crates.md:14
msgid ""
"The crate root is the _lib.cairo_ source file that the Cairo compiler starts "
"from and makes up the root module of your crate. We’ll explain modules in "
"depth in the [\"Defining Modules to Control Scope\"](./ch07-02-defining-"
"modules-to-control-scope.md) chapter."
msgstr ""
"La raíz de caja es el archivo fuente _lib.cairo_ que el compilador de El "
"Cairo inicia y compone el módulo raíz de su caja. Explicaremos los módulos "
"en profundidad en el capítulo [\"Definir módulos para controlar el alcance\"]"
"(./ch07-02-definir módulos-a-control-scope.md)."

#: src/ch07-01-packages-and-crates.md:18
msgid "What is a Package?"
msgstr "¿Qué es un paquete?"

#: src/ch07-01-packages-and-crates.md:20
msgid "A Cairo package is a directory (or equivalent) containing:"
msgstr "Un paquete de El Cairo es un directorio (o equivalente) que contiene:"

#: src/ch07-01-packages-and-crates.md:22
msgid "A _Scarb.toml_ manifest file with a `[package]` section."
msgstr "Un archivo _Scarb.toml_ manifiesto con una sección `[paquete]`."

#: src/ch07-01-packages-and-crates.md:23
msgid "Associated source code."
msgstr "Código fuente asociado."

#: src/ch07-01-packages-and-crates.md:25
msgid ""
"This definition implies that a package might contain other packages, with a "
"corresponding _Scarb.toml_ file for each package."
msgstr ""
"Esta definición implica que un paquete puede contener otros paquetes, con un "
"archivo _Scarb.toml_ correspondiente para cada paquete."

#: src/ch07-01-packages-and-crates.md:27
msgid "Creating a Package with Scarb"
msgstr "Crear un paquete con Scarb"

#: src/ch07-01-packages-and-crates.md:29
msgid ""
"You can create a new Cairo package using the Scarb command-line tool. To "
"create a new package, run the following command:"
msgstr ""
"Puede crear un nuevo paquete El Cairo usando la herramienta de línea de "
"comandos Scarb. Para crear un nuevo paquete, ejecute el siguiente comando:"

#: src/ch07-01-packages-and-crates.md:35
msgid ""
"This command will generate a new package directory named _my_package_ with "
"the following structure:"
msgstr ""
"Este comando generará un nuevo directorio de paquetes llamado _my_package_ "
"con la siguiente estructura:"

#: src/ch07-01-packages-and-crates.md:44
msgid ""
"_src/_ is the main directory where all the Cairo source files for the "
"package will be stored."
msgstr ""
"_src/_ es el directorio principal donde se almacenarán todos los archivos de "
"origen de El Cairo para el paquete."

#: src/ch07-01-packages-and-crates.md:45
msgid ""
"_lib.cairo_ is the default root module of the crate, which is also the main "
"entry point of the package."
msgstr ""
"_lib.cairo_ es el módulo raíz predeterminado de la caja, que es también el "
"punto de entrada principal del paquete."

#: src/ch07-01-packages-and-crates.md:46
msgid ""
"_Scarb.toml_ is the package manifest file, which contains metadata and "
"configuration options for the package, such as dependencies, package name, "
"version, and authors. You can find documentation about it on the [Scarb "
"reference](https://docs.swmansion.com/scarb/docs/reference/manifest.html)."
msgstr ""
"_Scarb.toml_ es el archivo manifiesto del paquete, que contiene metadatos y "
"opciones de configuración para el paquete, como dependencias, nombre del "
"paquete, versión y autores. Puede encontrar documentación al respecto en la "
"[referencia de Scarb](https://docs.swmansion.com/scarb/docs/reference/"
"manifest.html)."

#: src/ch07-01-packages-and-crates.md:48
msgid ""
"```toml\n"
"[package]\n"
"name = \"my_package\"\n"
"version = \"0.1.0\"\n"
"edition = \"2023_11\"\n"
"\n"
"[dependencies]\n"
"# foo = { path = \"vendor/foo\" }\n"
"```"
msgstr ""
"* Nombre del paquete = \"my_package\" versión = \"0.1.0\" edición = "
"\"2023_11\" [dependencias] # foo = { path = \"vendor/foo\" }"

#: src/ch07-01-packages-and-crates.md:58
msgid ""
"As you develop your package, you may want to organize your code into "
"multiple Cairo source files. You can do this by creating additional _.cairo_ "
"files within the _src_ directory or its subdirectories."
msgstr ""
"A medida que desarrolle su paquete, es posible que desee organizar su código "
"en varios archivos de origen de El Cairo. Puede hacerlo creando archivos _."
"cairo_ adicionales dentro del directorio _src_ o sus subdirectorios."

#: src/ch07-01-packages-and-crates.md:60
msgid "{{#quiz ../quizzes/ch07-01-packages-crates.toml}}"
msgstr "quiz../quizzes/ch07-01-paquetes-crates.toml"

#: src/ch07-02-defining-modules-to-control-scope.md:3
msgid ""
"In this section, we’ll talk about modules and other parts of the module "
"system, namely _paths_ that allow you to name items and the `use` keyword "
"that brings a path into scope."
msgstr ""
"En esta sección, vamos a hablar de módulos y otras partes del sistema de "
"módulos, a saber _paths_ que le permiten nombrar elementos y la palabra "
"clave `use` que trae una ruta en el alcance."

#: src/ch07-02-defining-modules-to-control-scope.md:7
msgid ""
"First, we’re going to start with a list of rules for easy reference when "
"you’re organizing your code in the future. Then we’ll explain each of the "
"rules in detail."
msgstr ""
"En primer lugar, vamos a empezar con una lista de reglas para una fácil "
"referencia cuando usted está organizando su código en el futuro. A "
"continuación, vamos a explicar cada una de las reglas en detalle."

#: src/ch07-02-defining-modules-to-control-scope.md:11
msgid "Modules Cheat Sheet"
msgstr "Módulos Hoja de engaño"

#: src/ch07-02-defining-modules-to-control-scope.md:13
msgid ""
"Here we provide a quick reference on how modules, paths and the `use` "
"keyword work in the compiler, and how most developers organize their code. "
"We’ll be going through examples of each of these rules throughout this "
"chapter, but this is a great place to refer to as a reminder of how modules "
"work. You can create a new Scarb project with `scarb new backyard` to follow "
"along."
msgstr ""
"Aquí proporcionamos una referencia rápida sobre cómo funcionan los módulos, "
"rutas y la palabra clave `use` en el compilador, y cómo la mayoría de los "
"desarrolladores organizan su código. Vamos a ir a través de ejemplos de cada "
"una de estas reglas a lo largo de este capítulo, pero este es un gran lugar "
"para referirse como un recordatorio de cómo funcionan los módulos."

#: src/ch07-02-defining-modules-to-control-scope.md:19
msgid ""
"**Start from the crate root**: When compiling a crate, the compiler first "
"looks in the crate root file (_src/lib.cairo_) for code to compile."
msgstr ""
"**Comience desde la raíz de caja**: Al compilar una caja, el compilador "
"busca por primera vez en el archivo raíz de caja (_src/lib.cairo_) el código "
"a compilar."

#: src/ch07-02-defining-modules-to-control-scope.md:21
msgid ""
"**Declaring modules**: In the crate root file, you can declare new modules; "
"say, you declare a “garden” module with `mod garden;`. The compiler will "
"look for the module’s code in these places:"
msgstr ""
"**Modulos de declaración**: En el archivo raíz de caja, puede declarar "
"nuevos módulos; por ejemplo, se declara un módulo “jardín” con `mod garden;"
"`. El compilador buscará el código del módulo en estos lugares:"

#: src/ch07-02-defining-modules-to-control-scope.md:25
msgid ""
"Inline, within curly brackets that replace the semicolon following `mod "
"garden`."
msgstr ""
"En línea, entre corchetes rizados que sustituyen al punto y coma después de "
"`mod garden`."

#: src/ch07-02-defining-modules-to-control-scope.md:28
msgid "// crate root file (src/lib.cairo)\n"
msgstr "// registrar archivo raíz (src/lib.cairo)\n"

#: src/ch07-02-defining-modules-to-control-scope.md:30
msgid "// code defining the garden module goes here\n"
msgstr "// código que define el módulo de jardín va aquí\n"

#: src/ch07-02-defining-modules-to-control-scope.md:34
msgid "In the file _src/garden.cairo_."
msgstr "En el archivo _src/garden.cairo_."

#: src/ch07-02-defining-modules-to-control-scope.md:36
msgid ""
"**Declaring submodules**: In any file other than the crate root, you can "
"declare submodules. For example, you might declare `mod vegetables;` in _src/"
"garden.cairo_. The compiler will look for the submodule’s code within the "
"directory named for the parent module in these places:"
msgstr ""
"**Declarando submódulos**: En cualquier archivo que no sea la raíz de caja, "
"puede declarar submódulos. Por ejemplo, puede declarar `mod verduras;` en "
"_src/garden.cairo_. El compilador buscará el código del submódulo dentro del "
"directorio nombrado para el módulo padre en estos lugares:"

#: src/ch07-02-defining-modules-to-control-scope.md:41
msgid ""
"Inline, directly following `mod vegetables`, within curly brackets instead "
"of the semicolon."
msgstr ""
"En línea, siguiendo directamente las `verduras de moho`, entre corchetes "
"rizados en lugar del punto y coma."

#: src/ch07-02-defining-modules-to-control-scope.md:45
msgid "// src/garden.cairo file\n"
msgstr "// src/garden.cairo file\n"

#: src/ch07-02-defining-modules-to-control-scope.md:47
msgid "// code defining the vegetables submodule goes here\n"
msgstr "// código que define el submódulo de verduras va aquí\n"

#: src/ch07-02-defining-modules-to-control-scope.md:51
msgid "In the file _src/garden/vegetables.cairo_."
msgstr "En el archivo _src/garden/vegetables.cairo_."

#: src/ch07-02-defining-modules-to-control-scope.md:53
msgid ""
"**Paths to code in modules**: Once a module is part of your crate, you can "
"refer to code in that module from anywhere else in that same crate, using "
"the path to the code. For example, an `Asparagus` type in the `vegetables` "
"submodule would be found at `backyard::garden::vegetables::Asparagus`."
msgstr ""
"** Rutas para codificar en módulos**: Una vez que un módulo es parte de su "
"caja, puede referirse al código de ese módulo desde cualquier otro lugar de "
"la misma caja, utilizando la ruta al código. Por ejemplo, un tipo "
"`Asparagus` en el submódulo `Vegetables` se encuentra en `patio trasero::"
"garden::vegetables::Asparagus`."

#: src/ch07-02-defining-modules-to-control-scope.md:57
msgid ""
"**Private vs public**: Code within a module is private from its parent "
"modules by default. This means that it may only be accessed by the current "
"module and its descendants. To make a module public, declare it with `pub "
"mod` instead of `mod`. To make items within a public module public as well, "
"use `pub` before their declarations. Cairo also provides the `pub(crate)` "
"keyword, allowing an item or module to be only visible within the crate in "
"which the definition is included."
msgstr ""
"**Privado vs público**: El código dentro de un módulo es privado de sus "
"módulos matrices por defecto, lo que significa que sólo puede ser accedido "
"por el módulo actual y sus descendientes. Para hacer público un módulo, "
"declarándolo con `pub mod` en lugar de `mod`. Para hacer público también los "
"elementos dentro de un módulo público, utilice `pub` antes de sus "
"declaraciones. El Cairo también proporciona la palabra clave `pub(crate)`, "
"permitiendo que un artículo o módulo sea sólo visible dentro de la caja en "
"la que se incluye la definición."

#: src/ch07-02-defining-modules-to-control-scope.md:59
msgid ""
"**The `use` keyword**: Within a scope, the `use` keyword creates shortcuts "
"to items to reduce repetition of long paths. In any scope that can refer to "
"`backyard::garden::vegetables::Asparagus`, you can create a shortcut with "
"`use backyard::garden::vegetables::Asparagus;` and from then on you only "
"need to write `Asparagus` to make use of that type in the scope."
msgstr ""
"** La palabra clave `use`**: Dentro de un alcance, la palabra clave `use` "
"crea atajos a los elementos para reducir la repetición de rutas largas. En "
"cualquier ámbito que pueda referirse a `backyard::garden::vegetables::"
"Asparagus`, se puede crear un atajo con `use backdoor::garden::vegetables::"
"Asparagus;` y a partir de entonces sólo es necesario escribir `Asparagus` "
"para hacer uso de ese tipo en el alcance."

#: src/ch07-02-defining-modules-to-control-scope.md:65
msgid ""
"Here we create a crate named `backyard` that illustrates these rules. The "
"crate’s directory, also named `backyard`, contains these files and "
"directories:"
msgstr ""
"Aquí creamos una caja llamada `backyard` que ilustra estas reglas. El "
"directorio de la caja, también llamado `backyard`, contiene estos archivos y "
"directorios:"

#: src/ch07-02-defining-modules-to-control-scope.md:78
msgid "The crate root file in this case is _src/lib.cairo_, and it contains:"
msgstr "El archivo raíz de caja en este caso es _src/lib.cairo_, y contiene:"

#: src/ch07-02-defining-modules-to-control-scope.md:88
msgid "\"I'm growing {:?}!\""
msgstr "\"¡Estoy creciendo!\""

#: src/ch07-02-defining-modules-to-control-scope.md:92
msgid ""
"The `pub mod garden;` line imports the `garden` module. Using `pub` to make "
"`garden` publicly accessible, or `pub(crate)` if you really want to make "
"`garden` only available for your crate, is optional to run our program here, "
"as the `main` function resides in the same module as `pub mod garden;` "
"declaration. Nevertheless, not declaring `garden` as `pub` will make it not "
"accessible from any other package. This line tells the compiler to include "
"the code it finds in _src/garden.cairo_, which is:"
msgstr ""
"El `pub mod garden;` line importa el módulo `jardín`. Usar `pub` para hacer "
"que `jardín` sea accesible al público, o `pub(crate)` si realmente desea "
"poner `jardín` sólo disponible para su caja, es opcional para ejecutar "
"nuestro programa aquí, ya que la función `main` reside en el mismo módulo "
"que `pub mod garden;` declaración. Sin embargo, no declarar `jardín` como "
"`pub` hará que no sea accesible desde ningún otro paquete. Esta línea le "
"dice al compilador que incluya el código que encuentra en _src/garden."
"cairo_, que es:"

#: src/ch07-02-defining-modules-to-control-scope.md:95
msgid "<span class=\"filename\">Filename: src/garden.cairo</span>"
msgstr "<span class=\"filename\">Filename: src/garden.cairo</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:101
msgid ""
"Here, `pub mod vegetables;` means the code in _src/garden/vegetables."
"cairo_ is included too. That code is:"
msgstr ""
"Aquí, `pub mod verduras;` significa que el código en _src/garden/vegetables."
"cairo_ también está incluido. Ese código es:"

#: src/ch07-02-defining-modules-to-control-scope.md:108
msgid ""
"The line `use garden::vegetables::Asparagus;` lets us bring the `Asparagus` "
"type into scope, so we can use it in the `main` function."
msgstr ""
"La línea `usar jardín::vegetables::Asparagus;` nos permite traer el tipo "
"`Asparagus` en el alcance, por lo que podemos utilizarlo en la función "
"`main`."

#: src/ch07-02-defining-modules-to-control-scope.md:111
msgid ""
"Now let’s get into the details of these rules and demonstrate them in action!"
msgstr ""
"Ahora vamos a entrar en los detalles de estas reglas y demostrarlas en "
"acción!"

#: src/ch07-02-defining-modules-to-control-scope.md:113
msgid "Grouping Related Code in Modules"
msgstr "Agrupar código relacionado en módulos"

#: src/ch07-02-defining-modules-to-control-scope.md:115
msgid ""
"_Modules_ let us organize code within a crate for readability and easy "
"reuse. Modules also allow us to control the privacy of items, because code "
"within a module is private by default. Private items are internal "
"implementation details not available for outside use. We can choose to make "
"modules and the items within them public, which exposes them to allow "
"external code to use and depend on them."
msgstr ""
"_Módulos_ vamos a organizar código dentro de una caja para legibilidad y "
"fácil reutilización. Los módulos también nos permiten controlar la "
"privacidad de los elementos, porque el código dentro de un módulo es privado "
"por defecto. Los elementos privados son detalles de implementación interna "
"no disponibles para uso externo. Podemos elegir hacer que los módulos y los "
"elementos dentro de ellos sean públicos, lo que los expone para permitir que "
"el código externo los use y dependa de ellos."

#: src/ch07-02-defining-modules-to-control-scope.md:121
msgid ""
"As an example, let’s write a library crate that provides the functionality "
"of a restaurant. We’ll define the signatures of functions but leave their "
"bodies empty to concentrate on the organization of the code, rather than the "
"implementation of a restaurant."
msgstr ""
"Como ejemplo, vamos a escribir una caja de la biblioteca que proporciona la "
"funcionalidad de un restaurante. Vamos a definir las firmas de las "
"funciones, pero dejar sus cuerpos vacíos para concentrarse en la "
"organización del código, en lugar de la implementación de un restaurante."

#: src/ch07-02-defining-modules-to-control-scope.md:126
msgid ""
"In the restaurant industry, some parts of a restaurant are referred to as "
"_front of house_ and others as _back of house_. Front of house is where "
"customers are; this encompasses where the hosts seat customers, servers take "
"orders and payment, and bartenders make drinks. Back of house is where the "
"chefs and cooks work in the kitchen, dishwashers clean up, and managers do "
"administrative work."
msgstr ""
"En la industria de los restaurantes, algunas partes de un restaurante se "
"conocen como _front of house_ y otras como _back of house_. Front of house "
"es donde están los clientes; esto abarca donde los anfitriones se sientan "
"los clientes, los servidores reciben pedidos y pagos, y los camareros hacen "
"bebidas. Back of house es donde los chefs y cocineros trabajan en la cocina, "
"lavaplatos limpian, y los gerentes hacen trabajo administrativo."

#: src/ch07-02-defining-modules-to-control-scope.md:133
msgid ""
"To structure our crate in this way, we can organize its functions into "
"nested modules. Create a new package named _restaurant_ by running `scarb "
"new restaurant`; then enter the code in Listing 7-1 into _src/lib.cairo_ to "
"define some modules and function signatures. Here’s the front of house "
"section:"
msgstr ""
"Para estructurar nuestra caja de esta manera, podemos organizar sus "
"funciones en módulos anidados. Cree un nuevo paquete llamado _restaurant_ "
"ejecutando `scarb new restaurant`; a continuación, introduzca el código en "
"Listar 7-1 en _src/lib.cairo_ para definir algunos módulos y firmas de "
"funciones. Aquí está la parte delantera de la sección de casa:"

#: src/ch07-02-defining-modules-to-control-scope.md:157
msgid ""
"<span class=\"caption\">Listing 7-1: A `front_of_house` module containing "
"other modules that then contain functions</span>"
msgstr ""
"<span class=\"caption\">Lista 7-1: Un módulo `front_of_house` que contiene "
"otros módulos que luego contienen funciones</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:159
msgid ""
"We define a module with the `mod` keyword followed by the name of the module "
"(in this case, `front_of_house`). The body of the module then goes inside "
"curly brackets. Inside modules, we can place other modules, as in this case "
"with the modules `hosting` and `serving`. Modules can also hold definitions "
"for other items, such as structs, enums, constants, traits, and functions."
msgstr ""
"Definimos un módulo con la palabra clave `mod` seguida del nombre del módulo "
"(en este caso, `front_of_house`). El cuerpo del módulo va entonces dentro de "
"los corchetes rizados. Dentro de los módulos, podemos colocar otros módulos, "
"como en este caso con los módulos `hosting` y `serving`. Los módulos también "
"pueden contener definiciones para otros elementos, como structs, enums, "
"constantes, rasgos y funciones."

#: src/ch07-02-defining-modules-to-control-scope.md:165
msgid ""
"By using modules, we can group related definitions together and name why "
"they’re related. Programmers using this code can navigate the code based on "
"the groups rather than having to read through all the definitions, making it "
"easier to find the definitions relevant to them. Programmers adding new "
"functionality to this code would know where to place the code to keep the "
"program organized."
msgstr ""
"Mediante el uso de módulos, podemos agrupar definiciones relacionadas y "
"nombrar por qué están relacionadas. Los programadores que utilizan este "
"código pueden navegar el código basado en los grupos en lugar de tener que "
"leer a través de todas las definiciones, lo que hace más fácil encontrar las "
"definiciones relevantes para ellos. Los programadores que agregan nueva "
"funcionalidad a este código sabrían dónde colocar el código para mantener el "
"programa organizado."

#: src/ch07-02-defining-modules-to-control-scope.md:171
msgid ""
"Earlier, we mentioned that _src/lib.cairo_ is called the crate root. The "
"reason for this name is that the content of this file forms a module named "
"after the crate name at the root of the crate’s module structure, known as "
"the _module tree_."
msgstr ""
"Anteriormente, mencionamos que _src/lib.cairo_ se llama la raíz de la caja. "
"La razón de este nombre es que el contenido de este archivo forma un módulo "
"llamado así por el nombre de la caja en la raíz de la estructura del módulo "
"de la caja, conocido como el árbol _módulo_."

#: src/ch07-02-defining-modules-to-control-scope.md:174
msgid "Listing 7-2 shows the module tree for the structure in Listing 7-1."
msgstr ""
"El listado 7-2 muestra el árbol de módulos para la estructura en el listado "
"7-1."

#: src/ch07-02-defining-modules-to-control-scope.md:188
msgid ""
"<span class=\"caption\">Listing 7-2: The module tree for the code in Listing "
"7-1</span>"
msgstr ""
"<span class=\"caption\">Lista 7-2: El árbol de módulos para el código en "
"Listado 7-1</span>"

#: src/ch07-02-defining-modules-to-control-scope.md:190
msgid ""
"This tree shows how some of the modules nest inside one another; for "
"example, `hosting` nests inside `front_of_house`. The tree also shows that "
"some modules are _siblings_ to each other, meaning they’re defined in the "
"same module; `hosting` and `serving` are siblings defined within "
"`front_of_house`. If module A is contained inside module B, we say that "
"module A is the _child_ of module B and that module B is the _parent_ of "
"module A. Notice that the entire module tree is rooted under the explicit "
"name of the crate _restaurant_."
msgstr ""
"Este árbol muestra cómo algunos de los módulos anidan unos dentro de otros; "
"por ejemplo, `hosting` nidos dentro de `front_of_house`. El árbol también "
"muestra que algunos módulos están _similitudes_ entre sí, lo que significa "
"que están definidos en el mismo módulo; `hosting` y `serving` son hermanos "
"definidos dentro de `front_of_house`. Si el módulo A está contenido dentro "
"del módulo B, decimos que el módulo A es el _child_ del módulo B y que el "
"módulo B es el _parent_ del módulo A. Observe que el árbol del módulo entero "
"está enraizado bajo el nombre explícito de la caja _restaurante_."

#: src/ch07-02-defining-modules-to-control-scope.md:198
msgid ""
"The module tree might remind you of the filesystem’s directory tree on your "
"computer; this is a very apt comparison! Just like directories in a "
"filesystem, you use modules to organize your code. And just like files in a "
"directory, we need a way to find our modules."
msgstr ""
"El árbol de módulos podría recordarle el árbol de directorios del sistema de "
"archivos en su computadora; ¡esta es una comparación muy apta! Al igual que "
"los directorios en un sistema de archivos, usted utiliza módulos para "
"organizar su código. Y al igual que los archivos en un directorio, "
"necesitamos una manera de encontrar nuestros módulos."

#: src/ch07-02-defining-modules-to-control-scope.md:203
msgid "{{#quiz ../quizzes/ch07-02-defining-modules-to-control-scope.toml}}"
msgstr "quiz../quizzes/ch07-02-definir-módulos-a-control-scope.toml"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:3
msgid ""
"To show Cairo where to find an item in a module tree, we use a path in the "
"same way we use a path when navigating a filesystem. To call a function, we "
"need to know its path."
msgstr ""
"Para mostrar El Cairo dónde encontrar un elemento en un árbol de módulos, "
"utilizamos una ruta de la misma manera que usamos una ruta al navegar por un "
"sistema de archivos. Para llamar a una función, necesitamos conocer su ruta."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:5
msgid "A path can take two forms:"
msgstr "Un camino puede adoptar dos formas:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:7
msgid ""
"An _absolute path_ is the full path starting from a crate root. The absolute "
"path begins with the crate name."
msgstr ""
"Una ruta _absoluta_ es la ruta completa a partir de una raíz de caja. La "
"ruta absoluta comienza con el nombre de caja."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:8
msgid "A _relative path_ starts from the current module."
msgstr "Una ruta _relativa_ comienza desde el módulo actual."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:10
msgid ""
"Both absolute and relative paths are followed by one or more identifiers "
"separated by double colons (`::`)."
msgstr ""
"Tanto los caminos absolutos como los relativos van seguidos de uno o más "
"identificadores separados por dos puntos («:»)."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:12
msgid ""
"To illustrate this notion let's take back our example Listing 7-1 for the "
"restaurant we used in the last chapter. We have a crate named _restaurant_ "
"in which we have a module named `front_of_house` that contains a module "
"named `hosting`. The `hosting` module contains a function named "
"`add_to_waitlist`. We want to call the `add_to_waitlist` function from the "
"`eat_at_restaurant` function. We need to tell Cairo the path to the "
"`add_to_waitlist` function so it can find it."
msgstr ""
"Para ilustrar esta noción, retomemos nuestro ejemplo Listando 7-1 para el "
"restaurante que usamos en el último capítulo. Tenemos una caja llamada "
"_restaurante_ en la que tenemos un módulo llamado `front_of_house` que "
"contiene un módulo llamado `hosting`. El módulo `hosting` contiene una "
"función llamada `addd_to_waitlist`. Queremos llamar a la función "
"`add_to_waitlist` desde la función `eat_at_restaurant`. Necesitamos decirle "
"a El Cairo la ruta a la función `add_to_waitlist` para que pueda encontrarla."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:35
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:100
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:126
msgid "// Absolute path\n"
msgstr "// Ruta absoluta\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:38
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:103
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:129
msgid "// Relative path\n"
msgstr "// Ruta relativa\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:43
msgid ""
"<span class=\"caption\">Listing 7-3: Calling the `add_to_waitlist` function "
"using absolute and relative paths</span>"
msgstr ""
"<span class=\"caption\">Lista 7-3: Llamando a la función `add_to_waitlist` "
"usando rutas absolutas y relativas</span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:45
msgid ""
"The `eat_at_restaurant` function is part of our library's public API, so we "
"mark it with the `pub` keyword. We’ll go into more detail about `pub` in "
"the [\"Exposing Paths with the `pub` Keyword\"](./ch07-03-paths-for-"
"referring-to-an-item-in-the-module-tree.md#exposing-paths-with-the-pub-"
"keyword) section."
msgstr ""
"La función `eat_at_restaurant` es parte de la API pública de nuestra "
"biblioteca, por lo que la marcamos con la palabra clave `pub`. Vamos a "
"entrar en más detalles sobre `pub` en la [\"Exponer rutas con la palabra "
"clave `pub`\"](./ch07-03-paths-for-referring-to-an-item-in-the-módule-tree."
"md#exponer caminos-with-the-pub-keyword) sección."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:47
msgid ""
"The first time we call the `add_to_waitlist` function in "
"`eat_at_restaurant`, we use an absolute path. The `add_to_waitlist` function "
"is defined in the same crate as `eat_at_restaurant`. In Cairo, absolute "
"paths start from the crate root, which you need to refer to by using the "
"crate name. You can imagine a filesystem with the same structure: we’d "
"specify the path _/front_of_house/hosting/add_to_waitlist_ to run the "
"_add_to_waitlist_ program; using the crate name to start from the crate root "
"is like using a slash (`/`) to start from the filesystem root in your shell."
msgstr ""
"La primera vez que llamamos a la función `add_to_waitlist` en "
"`eat_at_restaurant`, utilizamos una ruta absoluta. La función "
"`add_to_waitlist` se define en la misma caja que `eat_at_restaurant`. En El "
"Cairo, las rutas absolutas comienzan desde la raíz de la caja, a la que debe "
"referirse utilizando el nombre de la caja. Puede imaginar un sistema de "
"archivos con la misma estructura: especificaríamos la ruta __front_of_house/"
"hosting/add_to_waitlist_ para ejecutar el programa __add_to_waitlist_; usar "
"el nombre de la caja para comenzar desde la raíz de la caja es como usar una "
"barra (`/`) para empezar desde la raíz del sistema de archivos en su shell."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:51
msgid ""
"The second time we call `add_to_waitlist`, we use a relative path. The path "
"starts with `front_of_house`, the name of the module defined at the same "
"level of the module tree as `eat_at_restaurant`. Here the filesystem "
"equivalent would be using the path _./front_of_house/hosting/"
"add_to_waitlist_. Starting with a module name means that the path is "
"relative to the current module."
msgstr ""
"La segunda vez que llamamos a `add_to_waitlist`, utilizamos una ruta "
"relativa. La ruta comienza con `front_of_house`, el nombre del módulo "
"definido al mismo nivel del árbol del módulo que `eat_at_restaurant`. Aquí "
"el equivalente del sistema de archivos estaría usando la ruta __/"
"front_of_house/hosting/add_to_waitlist_. Comenzando con un nombre del módulo "
"significa que la ruta es relativa al módulo actual."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:53
msgid ""
"Let’s try to compile Listing 7-3 and find out why it won’t compile yet! We "
"get the following error:"
msgstr ""
"Tratemos de compilar el listado 7-3 y averiguar por qué no se compilará "
"todavía! Obtenemos el siguiente error:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:78
msgid ""
"The error messages say that module `hosting` and the `add_to_waitlist` "
"function are not visible. In other words, we have the correct paths for the "
"`hosting` module and the `add_to_waitlist` function, but Cairo won’t let us "
"use them because it doesn’t have access to them. In Cairo, all items "
"(functions, methods, structs, enums, modules, and constants) are private to "
"parent modules by default. If you want to make an item like a function or "
"struct private, you put it in a module."
msgstr ""
"Los mensajes de error dicen que el módulo `hosting` y la función "
"`add_to_waitlist` no son visibles. En otras palabras, tenemos las rutas "
"correctas para el módulo `hosting` y la función `add_to_waitlist`, pero El "
"Cairo no nos permitirá usarlas porque no tiene acceso a ellas. En El Cairo, "
"todos los elementos (funciones, métodos, estructuras, enums, módulos y "
"constantes) son privados a los módulos padre por defecto. Si desea hacer un "
"elemento como una función o struct privado, lo pone en un módulo."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:80
msgid ""
"Items in a parent module can’t use the private items inside child modules, "
"but items in child modules can use the items in their ancestor modules. This "
"is because child modules wrap and hide their implementation details, but the "
"child modules can see the context in which they’re defined. To continue with "
"our metaphor, think of the privacy rules as being like the back office of a "
"restaurant: what goes on in there is private to restaurant customers, but "
"office managers can see and do everything in the restaurant they operate."
msgstr ""
"Los elementos de un módulo padre no pueden usar los elementos privados "
"dentro de los módulos hijo, pero los elementos de los módulos hijo pueden "
"usar los elementos de sus módulos ancestros. Esto se debe a que los módulos "
"hijo envuelven y ocultan sus detalles de implementación, pero los módulos "
"hijo pueden ver el contexto en el que están definidos. Para continuar con "
"nuestra metáfora, piense en las reglas de privacidad como si fueran como la "
"oficina de atrás de un restaurante: lo que pasa allí es privado para los "
"clientes del restaurante, pero los gerentes de oficina pueden ver y hacer "
"todo en el restaurante que operan."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:82
msgid ""
"Cairo chose to have the module system function this way so that hiding inner "
"implementation details is the default. That way, you know which parts of the "
"inner code you can change without breaking outer code. However, Cairo does "
"give you the option to expose inner parts of child modules’ code to outer "
"ancestor modules by using the `pub` keyword to make an item public."
msgstr ""
"El Cairo optó por tener la función del sistema de módulos de esta manera "
"para que ocultar los detalles de la implementación interna sea el "
"predeterminado. De esa manera, usted sabe qué partes del código interno "
"puede cambiar sin romper el código externo. Sin embargo, El Cairo le da la "
"opción de exponer las partes internas del código de módulos hijos a los "
"módulos antepasados externos mediante el uso de la palabra clave `pub` para "
"hacer un artículo público."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:86
msgid "Exposing Paths with the `pub` Keyword"
msgstr "Exponer caminos con la palabra clave `pub`"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:88
msgid ""
"Let’s return to the previous error that told us the `hosting` module and the "
"`add_to_waitlist` function are not visible. We want the `eat_at_restaurant` "
"function in the parent module to have access to the `add_to_waitlist` "
"function in the child module, so we mark the `hosting` module with the `pub` "
"keyword, as shown in Listing 7-4."
msgstr ""
"Volvamos al error anterior que nos dijo que el módulo `hosting` y la función "
"`add_to_waitlist` no son visibles. Queremos que la función "
"`eat_at_restaurant` en el módulo padre tenga acceso a la función "
"`add_to_waitlist` en el módulo hijo, por lo que marcamos el módulo `hosting` "
"con la palabra clave `pub`, como se muestra en el listado 7-4."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:108
msgid ""
"<span class=\"caption\">Listing 7-4: Declaring the `hosting` module as `pub` "
"to use it from `eat_at_restaurant`</span>"
msgstr ""
"<span class=\"caption\">Lista 7-4: Declarando el módulo `hosting` como `pub` "
"para usarlo desde `eat_at_restaurant/span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:110
msgid "Unfortunately, the code in Listing 7-4 still results in an error."
msgstr ""
"Desafortunadamente, el código en Listado 7-4 todavía resulta en un error."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:112
msgid ""
"What happened? Adding the `pub` keyword in front of `mod hosting;` makes the "
"module public. With this change, if we can access `front_of_house`, we can "
"access `hosting`. But the contents of `hosting` are still private; making "
"the module public doesn’t make its contents public. The `pub` keyword on a "
"module only lets code in its ancestor modules refer to it, not access its "
"inner code. Because modules are containers, there’s not much we can do by "
"only making the module public; we need to go further and choose to make one "
"or more of the items within the module public as well."
msgstr ""
"¿Qué pasó? Añadiendo la palabra clave `pub` delante de `mod hosting;` hace "
"público el módulo. Con este cambio, si podemos acceder a `front_of_house`, "
"podemos acceder a `hosting`. Pero el contenido de `hosting` sigue siendo "
"privado; hacer público el módulo no hace público su contenido. La palabra "
"clave `pub` en un módulo sólo permite que el código en sus módulos "
"anteriores se refiera a él, no que acceda a su código interno. Debido a que "
"los módulos son contenedores, no podemos hacer mucho solo haciendo público "
"el módulo; tenemos que ir más allá y elegir también hacer públicos uno o más "
"de los elementos dentro del módulo."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:114
msgid ""
"Let’s also make the `add_to_waitlist` function public by adding the `pub` "
"keyword before its definition, as in Listing 7-5."
msgstr ""
"También hagamos pública la función `add_to_waitlist` añadiendo la palabra "
"clave `pub` antes de su definición, como en la lista 7-5."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:127
#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:130
msgid "// ✅ Compiles\n"
msgstr "// • Compilaciones\n"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:134
msgid ""
"<span class=\"caption\">Listing 7-5: Declaring the `hosting` module as `pub` "
"to use it from `eat_at_restaurant`</span>"
msgstr ""
"<span class=\"caption\">Lista 7-5: Declarando el módulo `hosting` como `pub` "
"para usarlo desde `eat_at_restaurant/span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:136
msgid ""
"Now the code will compile! To see why adding the `pub` keyword lets us use "
"these paths in `add_to_waitlist` with respect to the privacy rules, let’s "
"look at the absolute and the relative paths."
msgstr ""
"Ahora el código se compilará! Para ver por qué la adición de la palabra "
"clave `pub` nos permite utilizar estas rutas en `add_to_waitlist` con "
"respecto a las reglas de privacidad, vamos a mirar el absoluto y las rutas "
"relativas."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:138
msgid ""
"In the absolute path, we start with the crate root, the root of our crate’s "
"module tree. The `front_of_house` module is defined in the crate root. While "
"`front_of_house` isn’t public, because the `eat_at_restaurant` function is "
"defined in the same module as `front_of_house` (that is, `front_of_house` "
"and `eat_at_restaurant` are siblings), we can refer to `front_of_house` from "
"`eat_at_restaurant`. Next is the `hosting` module marked with `pub`. We can "
"access the parent module of `hosting`, so we can access `hosting` itself. "
"Finally, the `add_to_waitlist` function is marked with `pub` and we can "
"access its parent module, so this function call works!"
msgstr ""
"En la ruta absoluta, comenzamos con la raíz de la caja, raíz del árbol de "
"módulos de nuestra caja. El módulo `front_of_house` se define en la raíz de "
"la caja. Si bien `front_of_house` no es público, porque la función "
"`eat_at_restaurant` se define en el mismo módulo que `front_of_house` (es "
"decir, `front_of_house` y `eat_at_restaurant` son hermanos), podemos "
"referirnos a `front_of_house` de `eat_at_restaurant`. A continuación se "
"indica el módulo `hosting` marcado con `pub`. Podemos acceder al módulo "
"padre de `hosting`, de modo que podemos acceder a `hosting` en sí mismo."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:140
msgid ""
"In the relative path, the logic is the same as the absolute path except for "
"the first step: rather than starting from the crate root, the path starts "
"from `front_of_house`. The `front_of_house` module is defined within the "
"same module as `eat_at_restaurant`, so the relative path starting from the "
"module in which `eat_at_restaurant` is defined works. Then, because "
"`hosting` and `add_to_waitlist` are marked with `pub`, the rest of the path "
"works, and this function call is valid!"
msgstr ""
"En la ruta relativa, la lógica es la misma que la ruta absoluta excepto en "
"el primer paso: en lugar de partir de la raíz de caja, la ruta comienza "
"desde `front_of_house`. El módulo `front_of_house` se define dentro del "
"mismo módulo que `eat_at_restaurant`, por lo que la ruta relativa que "
"comienza desde el módulo en el que se define `eat_at_restaurant` funciona. "
"Entonces, porque `hosting` y `add_to_waitlist` están marcados con `pub`, el "
"resto de la ruta funciona, y esta llamada a la función es válida."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:142
msgid "{{#quiz ../quizzes/ch07-03-paths-in-module-tree-1.toml}}"
msgstr "quiz../quizzes/ch07-03-paths-in-módule-tree-1.toml"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:144
msgid "Starting Relative Paths with `super`"
msgstr "Iniciando rutas relativas con `super`"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:146
msgid ""
"We can construct relative paths that begin in the parent module, rather than "
"the current module or the crate root, by using `super` at the start of the "
"path. This is like starting a filesystem path with the `..` syntax. Using "
"`super` allows us to reference an item that we know is in the parent module, "
"which can make rearranging the module tree easier when the module is closely "
"related to the parent, but the parent might be moved elsewhere in the module "
"tree someday."
msgstr ""
"Podemos construir rutas relativas que comienzan en el módulo padre, en lugar "
"del módulo actual o la raíz de la caja, usando `super` al principio de la "
"ruta. Esto es como iniciar una ruta del sistema de archivos con la sintaxis "
"`..`. Usar `super` nos permite hacer referencia a un elemento que sabemos "
"que está en el módulo padre, lo que puede hacer que la reorganización del "
"árbol del módulo sea más fácil cuando el módulo está estrechamente "
"relacionado con el padre, pero el padre puede ser movido a otra parte del "
"árbol del módulo algún día."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:148
msgid ""
"Consider the code in Listing 7-6 that models the situation in which a chef "
"fixes an incorrect order and personally brings it out to the customer. The "
"function `fix_incorrect_order` defined in the `back_of_house` module calls "
"the function `deliver_order` defined in the parent module by specifying the "
"path to `deliver_order` starting with `super`:"
msgstr ""
"Considerar el código en la Lista 7-6 que modela la situación en la que un "
"chef corrige un pedido incorrecto y lo lleva personalmente al cliente. La "
"función `fix_incorrect_order` definida en el módulo `back_of_house` llama a "
"la función `deliver_order` definida en el módulo padre especificando la ruta "
"a `deliver_order` comenzando por `super`:"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:165
msgid ""
"<span class=\"caption\">Listing 7-6: Calling a function using a relative "
"path starting with `super`</span>"
msgstr ""
"<span class=\"caption\">Lista 7-6: Llamar a una función usando una ruta "
"relativa que comienza con `super/span>"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:167
msgid ""
"Here you can see directly that you access a parent's module easily using "
"`super`, which wasn't the case previously. Note that the `back_of_house` is "
"kept private, as external users are not supposed to interact with the back "
"of house directly."
msgstr ""
"Aquí puedes ver directamente que accedes al módulo de un padre fácilmente "
"usando `super`, que no era el caso anteriormente. Ten en cuenta que el "
"`back_of_house` se mantiene privado, ya que los usuarios externos no se "
"supone que interactúan directamente con la parte posterior de la casa."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:170
msgid "Making Structs and Enums Public"
msgstr "Hacer públicos los estructs y los enums"

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:172
msgid ""
"We can also use `pub` to designate structs and enums as public, but there "
"are a few extra details to consider when using `pub` with structs and enums."
msgstr ""
"También podemos utilizar `pub` para designar structs y enums como públicos, "
"pero hay algunos detalles adicionales que considerar al utilizar `pub` con "
"structs y enums."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:174
msgid ""
"If we use `pub` before a struct definition, we make the struct public, but "
"the struct’s fields will still be private. We can make each field public or "
"not on a case-by-case basis."
msgstr ""
"Si usamos `pub` antes de una definición de estructura, hacemos pública la "
"estructura, pero los campos de la estructura seguirán siendo privados. "
"Podemos hacer cada campo público o no sobre una base caso por caso."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:175
msgid ""
"In contrast, if we make an enum public, all of its variants are then public. "
"We only need the `pub` before the `enum` keyword."
msgstr ""
"En cambio, si hacemos público un enum, todas sus variantes son entonces "
"públicas. Sólo necesitamos el `pub` antes de la palabra clave `enum`."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:177
msgid ""
"There’s one more situation involving `pub` that we haven’t covered, and that "
"is our last module system feature: the `use` keyword. We’ll cover `use` by "
"itself first, and then we’ll show how to combine `pub` and `use`."
msgstr ""
"Hay una situación más que involucra `pub` que no hemos cubierto, y esa es "
"nuestra última característica del sistema de módulo: la palabra clave `use`. "
"Primero cubriremos `use` por sí mismo, y luego mostraremos cómo combinar "
"`pub` y `use`."

#: src/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md:179
msgid "{{#quiz ../quizzes/ch07-03-paths-in-module-tree-2.toml}}"
msgstr "quiz../quizzes/ch07-03-paths-in-módule-tree-2.toml"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:3
msgid ""
"Having to write out the paths to call functions can feel inconvenient and "
"repetitive. Fortunately, there’s a way to simplify this process: we can "
"create a shortcut to a path with the `use` keyword once, and then use the "
"shorter name everywhere else in the scope."
msgstr ""
"Tener que escribir las rutas a las funciones de llamada puede sentirse "
"incómodo y repetitivo. Afortunadamente, hay una manera de simplificar este "
"proceso: podemos crear un atajo a una ruta con la palabra clave `use` una "
"vez, y luego utilizar el nombre más corto en todas partes en el ámbito."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:5
msgid ""
"In Listing 7-7, we bring the `restaurant::front_of_house::hosting` module "
"into the scope of the `eat_at_restaurant` function so we only have to "
"specify `hosting::add_to_waitlist` to call the `add_to_waitlist` function in "
"`eat_at_restaurant`."
msgstr ""
"En la lista 7-7, traemos el `restaurante::front_of_house::hosting` módulo al "
"alcance de la función `eat_at_restaurante` por lo que sólo tenemos que "
"especificar `hosting::add_to_waitlist` para llamar a la función "
"`add_to_waitlist` en `eat_at_restaurante`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:13
msgid ""
"// Assuming \"front_of_house\" module is contained in a crate called "
"\"restaurant\", as mentioned in the section \"Defining Modules to Control "
"Scope\"\n"
"// If the path is created in the same crate, \"restaurant\" is optional in "
"the use statement\n"
msgstr ""
"// Suponiendo que el módulo \"front_of_house\" está contenido en una caja "
"llamada \"restaurante\", como se menciona en la sección \"Definir módulos "
"para controlar el alcance\" // Si la ruta se crea en la misma caja, "
"\"restaurante\" es opcional en la declaración de uso\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:25
msgid "// ✅ Shorter path\n"
msgstr "// • Ruta más corta\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:29
msgid ""
"<span class=\"caption\">Listing 7-7: Bringing a module into scope with "
"`use`</span>"
msgstr ""
"<span class=\"caption\">Lista 7-7: Llevar un módulo al alcance con `use/span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:31
msgid ""
"Adding `use` and a path in a scope is similar to creating a symbolic link in "
"the filesystem. By adding `use restaurant::front_of_house::hosting;` in the "
"crate root, `hosting` is now a valid name in that scope, just as though the "
"`hosting` module had been defined in the crate root."
msgstr ""
"La adición de `uso` y una ruta en un ámbito es similar a la creación de un "
"enlace simbólico en el sistema de archivos. Al añadir `uso de restaurante::"
"front_of_house::hosting;` en la raíz de la caja, `hosting'es ahora un nombre "
"válido en ese ámbito, como si el módulo `hosting'se hubiera definido en la "
"raíz de la caja."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:33
msgid ""
"Note that `use` only creates the shortcut for the particular scope in which "
"the `use` occurs. Listing 7-8 moves the `eat_at_restaurant` function into a "
"new child module named `customer`, which is then a different scope than the "
"`use` statement, so the function body won’t compile:"
msgstr ""
"Tenga en cuenta que `use` sólo crea el acceso directo para el ámbito "
"particular en el que se produce el `uso`. El listado 7-8 mueve la función "
"`eat_at_restaurant` a un nuevo módulo secundario llamado `cliente`, que es "
"entonces un ámbito diferente al de la declaración `use`, por lo que el "
"cuerpo de funciones no compilará:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:54
msgid ""
"<span class=\"caption\">Listing 7-8: A `use` statement only applies in the "
"scope it’s in.</span>"
msgstr ""
"<span class=\"caption\">Lista 7-8: Una declaración `use` sólo se aplica en "
"el ámbito en el que está.</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:56
msgid ""
"The compiler error shows that the shortcut no longer applies within the "
"`customer` module:"
msgstr ""
"El error del compilador muestra que el acceso directo ya no se aplica dentro "
"del módulo `cliente`:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:75
msgid "Creating Idiomatic `use` Paths"
msgstr "Creación de rutas idiomáticas de `uso`"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:77
msgid ""
"In Listing 7-7, you might have wondered why we specified `use restaurant::"
"front_of_house::hosting` and then called `hosting::add_to_waitlist` in "
"`eat_at_restaurant` rather than specifying the `use` path all the way out to "
"the `add_to_waitlist` function to achieve the same result, as in Listing 7-9."
msgstr ""
"En la lista 7-7, puede que se haya preguntado por qué especificamos `use "
"restaurant::front_of_house::hosting` y luego llamado `hosting:::"
"add_to_waitlist` en `eat_at_restaurant` en lugar de especificar la ruta "
"`use` hasta la función `addd_to_waitlist` para lograr el mismo resultado, "
"como en la lista 7-9."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:97
msgid ""
"<span class=\"caption\">Listing 7-9: Bringing the `add_to_waitlist` function "
"into scope with `use`, which is unidiomatic</span>"
msgstr ""
"<span class=\"caption\">Lista 7-9: Llevar la función `add_to_waitlist` al "
"ámbito con `use`, que es unidiomático</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:99
msgid ""
"Although both Listing 7-7 and 7-9 accomplish the same task, Listing 7-7 is "
"the idiomatic way to bring a function into scope with `use`. Bringing the "
"function’s parent module into scope with `use` means we have to specify the "
"parent module when calling the function. Specifying the parent module when "
"calling the function makes it clear that the function isn’t locally defined "
"while still minimizing repetition of the full path. The code in Listing 7-9 "
"is unclear as to where `add_to_waitlist` is defined."
msgstr ""
"Aunque tanto el listado 7-7 como el 7-9 realizan la misma tarea, el listado "
"7-7 es la forma idiomática de introducir una función en el ámbito de "
"aplicación con `use`. Al introducir el módulo padre de la función en el "
"ámbito de aplicación con `use` significa que tenemos que especificar el "
"módulo padre al llamar a la función. Especificar el módulo padre al llamar a "
"la función deja claro que la función no está definida localmente mientras se "
"minimiza la repetición de la ruta completa. El código en el listado 7-9 no "
"está claro en cuanto a dónde se define `add_to_waitlist`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:107
msgid ""
"On the other hand, when bringing in structs, enums, traits, and other items "
"with `use`, it’s idiomatic to specify the full path. Listing 7-10 shows the "
"idiomatic way to bring the core library’s `BitSize` trait into the scope, "
"allowing to call `bits` method to retrieve the size in bits of a type."
msgstr ""
"Por otra parte, al introducir structs, enums, rasgos y otros elementos con "
"`uso`, es idiomático especificar la ruta completa. El listado 7-10 muestra "
"la forma idiomática de introducir el rasgo `BitSize` de la biblioteca "
"central en el alcance, permitiendo llamar al método `bits` para recuperar el "
"tamaño en bits de un tipo."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:114
msgid "\"A u8 variable has {} bits\""
msgstr "\"Una variable u8 tiene bits\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:118
msgid ""
"<span class=\"caption\">Listing 7-10: Bringing `BitSize` trait into scope in "
"an idiomatic way</span>"
msgstr ""
"<span class=\"caption\">Lista 7-10: Llevando el rasgo `BitSize` al alcance "
"de una manera idiomática</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:120
msgid ""
"There’s no strong reason behind this idiom: it’s just the convention that "
"has emerged in the Rust community, and folks have gotten used to reading and "
"writing Rust code this way. As Cairo shares many idioms with Rust, we follow "
"this convention as well."
msgstr ""
"No hay ninguna razón fuerte detrás de este idioma: es sólo la convención que "
"ha surgido en la comunidad Rust, y la gente se ha acostumbrado a leer y "
"escribir código Rust de esta manera. Como El Cairo comparte muchos idiomas "
"con Rust, seguimos esta convención también."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:124
msgid ""
"The exception to this idiom is if we’re bringing two items with the same "
"name into scope with `use` statements, because Cairo doesn’t allow that."
msgstr ""
"La excepción a este lenguaje es si estamos trayendo dos artículos con el "
"mismo nombre en el alcance con declaraciones de \" uso \", porque El Cairo "
"no lo permite."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:127
msgid "Providing New Names with the `as` Keyword"
msgstr "Proporcionar nuevos nombres con la palabra clave `as`"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:129
msgid ""
"There’s another solution to the problem of bringing two types of the same "
"name into the same scope with `use`: after the path, we can specify `as` and "
"a new local name, or _alias_, for the type. Listing 7-11 shows how you can "
"rename an import with `as`:"
msgstr ""
"Hay otra solución al problema de introducir dos tipos del mismo nombre en el "
"mismo ámbito con `uso`: después de la ruta, podemos especificar `as` y un "
"nuevo nombre local, o _alias_, para el tipo. Listado 7-11 muestra cómo se "
"puede cambiar el nombre de una importación con `as`:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:139
msgid "// ArrayTrait was renamed to Arr\n"
msgstr "// ArrayTrait fue renombrado como Arr\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:144
msgid ""
"<span class=\"caption\">Listing 7-11: Renaming a trait when it’s brought "
"into scope with the `as` keyword</span>"
msgstr ""
"<span class=\"caption\">Lista 7-11: Renombrar un rasgo cuando se introduce "
"en el alcance con la palabra clave `as`</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:146
msgid ""
"Here, we brought `ArrayTrait` into scope with the alias `Arr`. We can now "
"access the trait's methods with the `Arr` identifier."
msgstr ""
"A este respecto, introdujimos `ArrayTrait` en el ámbito de aplicación del "
"alias `Arr`. Ahora podemos acceder a los métodos del rasgo con el "
"identificador `Arr`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:148
msgid "Importing Multiple Items from the Same Module"
msgstr "Importación de varios elementos desde el mismo módulo"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:150
msgid ""
"When you want to import multiple items (like functions, structs or enums) "
"from the same module in Cairo, you can use curly braces `{}` to list all of "
"the items that you want to import. This helps to keep your code clean and "
"easy to read by avoiding a long list of individual `use` statements."
msgstr ""
"Cuando desea importar varios elementos (como funciones, structs o enums) "
"desde el mismo módulo en El Cairo, puede utilizar llaves rizadas  para "
"listar todos los elementos que desea importar. Esto ayuda a mantener su "
"código limpio y fácil de leer evitando una larga lista de declaraciones "
"individuales de `uso`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:155
msgid ""
"The general syntax for importing multiple items from the same module is:"
msgstr ""
"La sintaxis general para importar múltiples elementos desde el mismo módulo "
"es:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:161
msgid ""
"Here is an example where we import three structures from the same module:"
msgstr ""
"Aquí hay un ejemplo donde importamos tres estructuras del mismo módulo:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:164
msgid ""
"// Assuming we have a module called `shapes` with the structures `Square`, "
"`Circle`, and `Triangle`.\n"
msgstr ""
"// Suponiendo que tengamos un módulo llamado `formas` con las estructuras "
"`Cuadrado`, `Círculo` y `Triángulo`.\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:182
msgid ""
"// We can import the structures `Square`, `Circle`, and `Triangle` from the "
"`shapes` module like this:\n"
msgstr ""
"// Podemos importar las estructuras `Square`, `Círculo` y `Triángulo` desde "
"el módulo `formas` como este:\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:185
msgid ""
"// Now we can directly use `Square`, `Circle`, and `Triangle` in our code.\n"
msgstr ""
"// Ahora podemos utilizar directamente `Square`, `Circle` y `Triangle` en "
"nuestro código.\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:190
#: src/ch17-01-general-recommendations.md:143
#: src/ch17-01-general-recommendations.md:148
msgid "// ...\n"
msgstr "//...\n"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:195
msgid ""
"<span class=\"caption\">Listing 7-12: Importing multiple items from the same "
"module</span>"
msgstr ""
"<span class=\"caption\">Lista 7-12: Importación de múltiples elementos del "
"mismo módulo</span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:197
msgid "Re-exporting Names in Module Files"
msgstr "Reexportación de nombres en archivos de módulos"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:199
msgid ""
"When we bring a name into scope with the `use` keyword, the name available "
"in the new scope can be imported as if it had been defined in that code’s "
"scope. This technique is called _re-exporting_ because we’re bringing an "
"item into scope, but also making that item available for others to bring "
"into their scope, with the `pub` keyword."
msgstr ""
"Cuando ponemos un nombre en el alcance con la palabra clave `usar`, el "
"nombre disponible en el nuevo alcance se puede importar como si se hubiera "
"definido en el alcance de ese código. Esta técnica se llama _reexportar_ "
"porque estamos introduciendo un elemento en el alcance, pero también "
"poniendo ese elemento a disposición de otros para introducir en su alcance, "
"con la palabra clave `pub`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:204
msgid ""
"For example, let's re-export the `add_to_waitlist` function in the "
"restaurant example:"
msgstr ""
"Por ejemplo, reexportemos la función `add_to_waitlist` en el ejemplo del "
"restaurante:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:222
msgid ""
"<span class=\"caption\">Listing 7-13: Making a name available for any code "
"to use from a new scope with `pub use`</span>"
msgstr ""
"<span class=\"caption\">Lista 7-13: Hacer disponible un nombre para "
"cualquier código a usar desde un nuevo alcance con `pub use/span>"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:224
msgid ""
"Before this change, external code would have to call the `add_to_waitlist` "
"function by using the path `restaurant::front_of_house::hosting::"
"add_to_waitlist()`. Now that this `pub use` has re-exported the `hosting` "
"module from the root module, external code can now use the path `restaurant::"
"hosting::add_to_waitlist()` instead."
msgstr ""
"Antes de este cambio, el código externo tendría que llamar a la función "
"`add_to_waitlist` usando la ruta `restaurante::front_of_house::hosting::"
"add_to_waitlist()`. Ahora que este `pub use` ha reexportado el módulo "
"`hosting` desde el módulo raíz, el código externo ahora puede usar la ruta "
"`restaurante::hosting:::add_to_waitlist()` en su lugar."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:229
msgid ""
"Re-exporting is useful when the internal structure of your code is different "
"from how programmers calling your code would think about the domain. For "
"example, in this restaurant metaphor, the people running the restaurant "
"think about “front of house” and “back of house.” But customers visiting a "
"restaurant probably won’t think about the parts of the restaurant in those "
"terms. With `pub use`, we can write our code with one structure but expose a "
"different structure. Doing so makes our library well organized for "
"programmers working on the library and programmers calling the library."
msgstr ""
"La reexportación es útil cuando la estructura interna de su código es "
"diferente de cómo los programadores que llaman a su código pensarían en el "
"dominio. Por ejemplo, en esta metáfora del restaurante, las personas que "
"dirigen el restaurante piensan en “front of house” y “back of house”. Pero "
"los clientes que visitan un restaurante probablemente no pensarán en las "
"partes del restaurante en esos términos. Con `uso de pub`, podemos escribir "
"nuestro código con una estructura pero exponer una estructura diferente. "
"Hacerlo hace que nuestra biblioteca esté bien organizada para los "
"programadores que trabajan en la biblioteca y los programadores que llaman a "
"la biblioteca."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:238
msgid "Using External Packages in Cairo with Scarb"
msgstr "Uso de paquetes externos en El Cairo con Scarb"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:240
msgid ""
"You might need to use external packages to leverage the functionality "
"provided by the community. Scarb allows you to use dependencies by cloning "
"packages from their Git repositories. To use an external package in your "
"project with Scarb, simply declare the Git repository URL of the dependency "
"you want to add in a dedicated `[dependencies]` section in your _Scarb.toml_ "
"configuration file. Note that the URL might correspond to the main branch, "
"or any specific commit, branch or tag. For this, you will have to pass an "
"extra `rev`, `branch`, or `tag` field, respectively. For example, the "
"following code imports the main branch of _alexandria_math_ crate from "
"_alexandria_ package:"
msgstr ""
"Es posible que necesite utilizar paquetes externos para aprovechar la "
"funcionalidad proporcionada por la comunidad. Scarb le permite utilizar "
"dependencias mediante la clonación de paquetes de sus repositorios Git. Para "
"usar un paquete externo en su proyecto con Scarb, simplemente declare la URL "
"del repositorio Git de la dependencia que desea añadir en una sección "
"dedicada `[dependencias]` en su archivo de configuración _Scarb.toml_. Tenga "
"en cuenta que la URL puede corresponder a la rama principal, o a cualquier "
"confirmación específica, rama o etiqueta. Para ello, tendrá que pasar un "
"campo `rev`, `branch` o `tag` adicional, respectivamente. Por ejemplo, el "
"siguiente código importa la rama principal de _alexandria_math_ crate desde "
"el paquete _alexria_:"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:244
#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:251
msgid "\"https://github.com/keep-starknet-strange/alexandria.git\""
msgstr "\"https://github.com/keep-starknet-strange/alexandria.git\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:247
msgid ""
"while the following code imports a specific branch (which is deprecated and "
"should not be used):"
msgstr ""
"mientras que el siguiente código importa una rama específica (que es "
"obsoleta y no debe utilizarse):"

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:251
msgid "\"cairo-v2.3.0-rc0\""
msgstr "\"cairo-v2.3.0-rc0\""

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:254
msgid ""
"If you want to import multiple packages in your project, you need to create "
"only one `[dependencies]` section and list all the desired packages beneath "
"it. You can also specify development dependencies by declaring a `[dev-"
"dependencies]` section."
msgstr ""
"Si desea importar varios paquetes en su proyecto, necesita crear solo una "
"sección `[dependencias]` y listar todos los paquetes deseados debajo de "
"ella. También puede especificar dependencias de desarrollo declarando una "
"sección `[dev-dependencias]`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:256
msgid ""
"After that, simply run `scarb build` to fetch all external dependencies and "
"compile your package with all the dependencies included."
msgstr ""
"Después de eso, simplemente ejecute `scarb build` para obtener todas las "
"dependencias externas y compilar su paquete con todas las dependencias "
"incluidas."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:258
msgid ""
"Note that it is also possible to add dependencies with the `scarb add` "
"command, which will automatically edit the _Scarb.toml_ file for you. For "
"development dependencies, just use the `scarb add --dev` command."
msgstr ""
"Tenga en cuenta que también es posible añadir dependencias con el comando "
"`scarb add`, que editará automáticamente el archivo _Scarb.toml_ para usted. "
"Para las dependencias de desarrollo, simplemente utilice el comando `scarb "
"add --dev`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:260
msgid ""
"To remove a dependency, simply remove the corresponding line from your "
"_Scarb.toml_ file, or use the `scarb rm` command."
msgstr ""
"Para eliminar una dependencia, simplemente elimine la línea correspondiente "
"de su archivo _Scarb.toml_ o utilice el comando `scarb rm`."

#: src/ch07-04-bringing-paths-into-scope-with-the-use-keyword.md:262
msgid "{{#quiz ../quizzes/ch07-04-bringing-paths-into-scope.toml}}"
msgstr "quiz../quizzes/ch07-04-traing-paths-to-scope.toml"

#: src/ch07-05-separating-modules-into-different-files.md:3
msgid ""
"So far, all the examples in this chapter defined multiple modules in one "
"file. When modules get large, you might want to move their definitions to a "
"separate file to make the code easier to navigate."
msgstr ""
"Hasta ahora, todos los ejemplos en este capítulo definieron múltiples "
"módulos en un archivo. Cuando los módulos se hacen grandes, es posible que "
"desee mover sus definiciones a un archivo separado para hacer el código más "
"fácil de navegar."

#: src/ch07-05-separating-modules-into-different-files.md:7
msgid ""
"For example, let’s start from the code in Listing 7-7 that had multiple "
"restaurant modules. We’ll extract modules into files instead of having all "
"the modules defined in the crate root file. In this case, the crate root "
"file is _src/lib.cairo_."
msgstr ""
"Por ejemplo, vamos a empezar desde el código en Listado 7-7 que tenía varios "
"módulos de restaurante. Extraeremos módulos en archivos en lugar de tener "
"todos los módulos definidos en el archivo raíz de caja. En este caso, el "
"archivo raíz de caja es _src/lib.cairo_."

#: src/ch07-05-separating-modules-into-different-files.md:12
msgid ""
"First, we’ll extract the `front_of_house` module to its own file. Remove the "
"code inside the curly brackets for the `front_of_house` module, leaving only "
"the `mod front_of_house;` declaration, so that _src/lib.cairo_ contains the "
"code shown in Listing 7-14. Note that this won’t compile until we create the "
"_src/front_of_house.cairo_ file."
msgstr ""
"En primer lugar, extraeremos el módulo `front_of_house` a su propio archivo. "
"Quite el código dentro de los corchetes rizados para el módulo "
"`front_of_house`, dejando sólo la declaración `mod front_of_house;`, de modo "
"que _src/lib.cairo_ contenga el código mostrado en la Lista 7-14. Tenga en "
"cuenta que esto no se compilará hasta que creemos el archivo _src/"
"front_of_house.cairo_."

#: src/ch07-05-separating-modules-into-different-files.md:30
msgid ""
"<span class=\"caption\">Listing 7-14: Declaring the `front_of_house` module "
"whose body will be in _src/front_of_house.cairo_</span>"
msgstr ""
"<span class=\"caption\">Lista 7-14: Declarando el módulo `front_of_house` "
"cuyo cuerpo estará en _src/front_of_house.cairo_</span>"

#: src/ch07-05-separating-modules-into-different-files.md:32
msgid ""
"Next, place the code that was in the curly brackets into a new file named "
"_src/front_of_house.cairo_, as shown in Listing 7-15. The compiler knows to "
"look in this file because it came across the module declaration in the crate "
"root with the name `front_of_house`."
msgstr ""
"A continuación, coloque el código que estaba entre los corchetes rizados en "
"un nuevo archivo llamado _src/front_of_house.cairo_, como se muestra en "
"Listar 7-15. El compilador sabe buscar en este archivo porque se encontró "
"con la declaración de módulo en la raíz de caja con el nombre "
"`front_of_house`."

#: src/ch07-05-separating-modules-into-different-files.md:37
#: src/ch07-05-separating-modules-into-different-files.md:63
msgid "<span class=\"filename\">Filename: src/front_of_house.cairo</span>"
msgstr "<span class=\"filename\">Filename: src/front_of_house.cairo</span>"

#: src/ch07-05-separating-modules-into-different-files.md:45
msgid ""
"<span class=\"caption\">Listing 7-15: Definitions inside the "
"`front_of_house` module in _src/front_of_house.cairo_</span>"
msgstr ""
"<span class=\"caption\">Lista 7-15: Definiciones dentro del módulo "
"`front_of_house` en _src/front_of_house.cairo_</span>"

#: src/ch07-05-separating-modules-into-different-files.md:47
msgid ""
"Note that you only need to load a file using a `mod` declaration _once_ in "
"your module tree. Once the compiler knows the file is part of the project "
"(and knows where in the module tree the code resides because of where you’ve "
"put the `mod` statement), other files in your project should refer to the "
"loaded file’s code using a path to where it was declared, as covered in the "
"[\"Paths for Referring to an Item in the Module Tree\"](./ch07-03-paths-for-"
"referring-to-an-item-in-the-module-tree.md) chapter. In other words, `mod` "
"is _not_ an “include” operation that you may have seen in other programming "
"languages."
msgstr ""
"Tenga en cuenta que sólo necesita cargar un archivo usando una declaración "
"`mod` _once_ en el árbol del módulo. Una vez que el compilador sepa que el "
"archivo es parte del proyecto (y sepa dónde en el árbol del módulo reside el "
"código debido a dónde ha puesto la declaración `mod`), otros archivos de su "
"proyecto deben referirse al código del archivo cargado utilizando una ruta a "
"donde fue declarado, como se cubre en el capítulo [\"Pasos para hacer "
"referencia a un elemento en el árbol del módulo\"](./ch07-03-paths-for-"
"referring-to-an-item-in-the-module-tree.md). En otras palabras, `mod` es una "
"operación _not_ que puede haber visto en otros idiomas de programación."

#: src/ch07-05-separating-modules-into-different-files.md:55
msgid ""
"Next, we’ll extract the `hosting` module to its own file. The process is a "
"bit different because `hosting` is a child module of `front_of_house`, not "
"of the root module. We’ll place the file for `hosting` in a new directory "
"that will be named for its ancestors in the module tree, in this case _src/"
"front_of_house/_."
msgstr ""
"A continuación, extraeremos el módulo `hosting` a su propio archivo. El "
"proceso es un poco diferente porque `hosting` es un módulo hijo de "
"`front_of_house`, no del módulo raíz. Colocaremos el archivo para `hosting` "
"en un nuevo directorio que será nombrado por sus antepasados en el árbol del "
"módulo, en este caso _src/front_of_house/_."

#: src/ch07-05-separating-modules-into-different-files.md:60
msgid ""
"To start moving `hosting`, we change _src/front_of_house.cairo_ to contain "
"only the declaration of the `hosting` module:"
msgstr ""
"Para empezar a mover `hosting`, cambiamos _src/front_of_house.cairo_ para "
"que contenga sólo la declaración del módulo `hosting`:"

#: src/ch07-05-separating-modules-into-different-files.md:69
msgid ""
"Then we create a _src/front_of_house_ directory and a file _hosting.cairo_ "
"to contain the definitions made in the `hosting` module:"
msgstr ""
"Luego creamos un directorio _src/front_of_house_ y un archivo _hosting."
"cairo_ para contener las definiciones hechas en el módulo `hosting`:"

#: src/ch07-05-separating-modules-into-different-files.md:72
msgid ""
"<span class=\"filename\">Filename: src/front_of_house/hosting.cairo</span>"
msgstr ""
"<span class=\"filename\">Filename: src/front_of_house/hosting.cairo</span>"

#: src/ch07-05-separating-modules-into-different-files.md:78
msgid ""
"If we instead put _hosting.cairo_ in the _src_ directory, the compiler would "
"expect the _hosting.cairo_ code to be in a `hosting` module declared in the "
"crate root, and not declared as a child of the `front_of_house` module. The "
"compiler’s rules for which files to check for which modules’ code means the "
"directories and files more closely match the module tree."
msgstr ""
"Si en su lugar pusiéramos _hosting.cairo_ en el directorio _src_, el "
"compilador esperaría que el código _hosting.cairo_ estuviera en un módulo "
"`hosting` declarado en la raíz de la caja, y no declarado como un hijo del "
"módulo `front_of_house`. Las reglas del compilador para qué archivos para "
"comprobar qué código de módulos significa que los directorios y archivos "
"coinciden más estrechamente con el árbol del módulo."

#: src/ch07-05-separating-modules-into-different-files.md:84
msgid ""
"We’ve moved each module’s code to a separate file, and the module tree "
"remains the same. The function calls in `eat_at_restaurant` will work "
"without any modification, even though the definitions live in different "
"files. This technique lets you move modules to new files as they grow in "
"size."
msgstr ""
"Hemos movido el código de cada módulo a un archivo separado, y el árbol del "
"módulo sigue siendo el mismo. Las llamadas de función en `eat_at_restaurant` "
"funcionarán sin ninguna modificación, a pesar de que las definiciones viven "
"en diferentes archivos. Esta técnica le permite mover módulos a nuevos "
"archivos a medida que crecen en tamaño."

#: src/ch07-05-separating-modules-into-different-files.md:89
msgid ""
"Note that the `use restaurant::front_of_house::hosting;` statement in _src/"
"lib.cairo_ also hasn’t changed, nor does `use` have any impact on what files "
"are compiled as part of the crate. The `mod` keyword declares modules, and "
"Cairo looks in a file with the same name as the module for the code that "
"goes into that module."
msgstr ""
"Nótese que el restaurante `use::front_of_house::hosting;` statement in _src/"
"lib.cairo_ tampoco ha cambiado, ni `use` tiene ningún impacto en los "
"archivos compilados como parte de la caja. La palabra clave `mod` declara "
"módulos, y El Cairo mira en un archivo con el mismo nombre que el módulo "
"para el código que entra en ese módulo."

#: src/ch07-05-separating-modules-into-different-files.md:99
msgid ""
"Cairo lets you split a package into multiple crates and a crate into modules "
"so you can refer to items defined in one module from another module. You can "
"do this by specifying absolute or relative paths. These paths can be brought "
"into scope with a `use` statement so you can use a shorter path for multiple "
"uses of the item in that scope. Module code is **private** by default."
msgstr ""
"El Cairo le permite dividir un paquete en múltiples cajas y una caja en "
"módulos para que pueda referirse a elementos definidos en un módulo de otro "
"módulo. Puede hacerlo especificando rutas absolutas o relativas. Estas rutas "
"se pueden introducir en el ámbito de aplicación con una instrucción `use` "
"para que pueda utilizar una ruta más corta para múltiples usos del elemento "
"en ese ámbito. El código del módulo es **privado** por defecto."

#: src/ch07-05-separating-modules-into-different-files.md:105
msgid "{{#quiz ../quizzes/ch07-05-separate-modules.toml}}"
msgstr "quiz../quizzes/ch07-05-separate-modules.toml"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Every programming language has tools for effectively handling the "
"duplication of concepts. In Cairo, one such tool is generics: abstract stand-"
"ins for concrete types or other properties. We can express the behavior of "
"generics or how they relate to other generics without knowing what will be "
"in their place when compiling and running the code."
msgstr ""
"Cada lenguaje de programación tiene herramientas para manejar eficazmente la "
"duplicación de conceptos. En El Cairo, una de estas herramientas es "
"genérica: stand-ins abstractos para tipos concretos u otras propiedades. "
"Podemos expresar el comportamiento de los genéricos o cómo se relacionan con "
"otros genéricos sin saber lo que estará en su lugar al compilar y ejecutar "
"el código."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Functions can take parameters of some generic type, instead of a concrete "
"type like `u32` or `bool`, in the same way a function takes parameters with "
"unknown values to run the same code on multiple concrete values. In fact, "
"we’ve already used generics in [Chapter 6](./ch06-01-enums.html#the-option-"
"enum-and-its-advantages) with `Option<T>`."
msgstr ""
"Las funciones pueden tomar parámetros de algún tipo genérico, en lugar de un "
"tipo concreto como `u32` o `bool`, de la misma manera que una función toma "
"parámetros con valores desconocidos para ejecutar el mismo código en "
"múltiples valores concretos. De hecho, ya hemos usado genéricos en [Capítulo "
"6](./ch06-01-enums.html#the-option-enum-and-its-vantages) con `Option<T»."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"In this chapter, you’ll explore how to define your own types, functions, and "
"traits with generics."
msgstr ""
"En este capítulo, explorará cómo definir sus propios tipos, funciones y "
"rasgos con genéricos."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Generics allow us to replace specific types with a placeholder that "
"represents multiple types to remove code duplication. Upon compilation, the "
"compiler creates a new definition for each concrete type that replaces a "
"generic type, reducing development time for the programmer, but code "
"duplication at compile level still exists. This may be of importance if you "
"are writing Starknet contracts and using a generic for multiple types which "
"will cause contract size to increment."
msgstr ""
"Los genéricos nos permiten reemplazar tipos específicos con un marcador de "
"posición que representa varios tipos para eliminar la duplicación de código. "
"Al compilar, el compilador crea una nueva definición para cada tipo concreto "
"que reemplaza a un tipo genérico, reduciendo el tiempo de desarrollo para el "
"programador, pero la duplicación de código a nivel de compilación todavía "
"existe. Esto puede ser importante si está escribiendo contratos Starknet y "
"utilizando un genérico para varios tipos que hará que el tamaño del contrato "
"aumente."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Then you’ll learn how to use traits to define behavior in a generic way. You "
"can combine traits with generic types to constrain a generic type to accept "
"only those types that have a particular behavior, as opposed to just any "
"type."
msgstr ""
"Entonces aprenderás a usar rasgos para definir el comportamiento de una "
"manera genérica. Puedes combinar rasgos con tipos genéricos para limitar un "
"tipo genérico a aceptar sólo aquellos tipos que tienen un comportamiento "
"particular, en lugar de cualquier tipo."

#: src/ch08-00-generic-types-and-traits.md
msgid "Removing Duplication by Extracting a Function"
msgstr "Eliminar la duplicación extrayendo una función"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Generics allow us to replace specific types with a placeholder that "
"represents multiple types to remove code duplication. Before diving into "
"generics syntax, let’s first look at how to remove duplication in a way that "
"doesn’t involve generic types by extracting a function that replaces "
"specific values with a placeholder that represents multiple values. Then "
"we’ll apply the same technique to extract a generic function! By learning "
"how to identify duplicated code that can be extracted into a function, "
"you'll start to recognize instances where generics can be used to reduce "
"duplication."
msgstr ""
"Los genéricos nos permiten reemplazar tipos específicos con un marcador de "
"posición que representa varios tipos para eliminar la duplicación de código. "
"Antes de sumergirnos en la sintaxis genérica, primero veamos cómo eliminar "
"la duplicación de una manera que no implique tipos genéricos al extraer una "
"función que sustituya valores específicos con un marcador de posición que "
"represente varios valores. ¡Entonces aplicaremos la misma técnica para "
"extraer una función genérica! Al aprender a identificar el código duplicado "
"que puede extraerse en una función, comenzarás a reconocer instancias en las "
"que los genéricos pueden utilizarse para reducir la duplicación."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We begin with a short program that finds the largest number in an array of "
"`u8`:"
msgstr ""
"Comenzamos con un programa corto que encuentra el mayor número en una serie "
"de `u8`:"

#: src/ch08-00-generic-types-and-traits.md
msgid "\"The largest number is {}\""
msgstr "\"El número más grande es \"\""

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We store an array of `u8` in the variable `number_list` and extract the "
"first number in the array in a variable named `largest`. We then iterate "
"through all the numbers in the array, and if the current number is greater "
"than the number stored in `largest`, we update the value of `largest`. "
"However, if the current number is less than or equal to the largest number "
"seen so far, the variable doesn’t change, and the code moves on to the next "
"number in the list. After considering all the numbers in the array, "
"`largest` should contain the largest number, which in this case is 100."
msgstr ""
"Almacenamos un array de `u8` en la variable `number_list` y extraemos el "
"primer número del array en una variable llamada `largest`. Luego iteramos a "
"través de todos los números del array, y si el número actual es mayor que el "
"número almacenado en `largest`, actualizamos el valor de `largest`. Sin "
"embargo, si el número actual es menor o igual al número más grande visto "
"hasta ahora, la variable no cambia, y el código pasa al siguiente número de "
"la lista. Después de considerar todos los números del array, `largest` debe "
"contener el número más grande, que en este caso es 100."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"We've now been tasked with finding the largest number in two different "
"arrays of numbers. To do so, we can choose to duplicate the previous code "
"and use the same logic at two different places in the program, as follows:"
msgstr ""
"Para ello, podemos optar por duplicar el código anterior y utilizar la misma "
"lógica en dos lugares diferentes del programa, como sigue:"

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Although this code works, duplicating code is tedious and error-prone. We "
"also have to remember to update the code in multiple places when we want to "
"change it."
msgstr ""
"Aunque este código funciona, duplicar código es tedioso y propenso a "
"errores. También tenemos que recordar actualizar el código en varios lugares "
"cuando queremos cambiarlo."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"To eliminate this duplication, we’ll create an abstraction by defining a "
"function that operates on any array of `u8` passed in a parameter. This "
"solution makes our code clearer and lets us express the concept of finding "
"the largest number in an array abstractly."
msgstr ""
"Para eliminar esta duplicación, crearemos una abstracción definiendo una "
"función que opera en cualquier array de `u8` pasado en un parámetro. Esta "
"solución hace nuestro código más claro y nos permite expresar el concepto de "
"encontrar el mayor número en un array abstractamente."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"To do that, we extract the code that finds the largest number into a "
"function named `largest`. Then we call the function to find the largest "
"number in the two arrays. We could also use the function on any other array "
"of `u8` values we might have in the future."
msgstr ""
"Para ello, extraemos el código que encuentra el mayor número en una función "
"llamada `largest`. Luego llamamos a la función para encontrar el mayor "
"número en los dos arrays. También podríamos utilizar la función en cualquier "
"otro array de valores `u8` que podamos tener en el futuro."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"The largest function has a parameter called `number_list`, passed by "
"reference, which represents any concrete array of `u8` values we might pass "
"into the function. As a result, when we call the function, the code runs on "
"the specific values that we pass in."
msgstr ""
"La función más grande tiene un parámetro llamado `number_list`, pasado por "
"referencia, que representa cualquier matriz concreta de valores `u8` que "
"podríamos pasar a la función. Como resultado, cuando llamamos a la función, "
"el código se ejecuta en los valores específicos que pasamos en."

#: src/ch08-00-generic-types-and-traits.md
msgid "In summary, here are the steps we took to change the code:"
msgstr "En resumen, aquí están los pasos que tomamos para cambiar el código:"

#: src/ch08-00-generic-types-and-traits.md
msgid "Identify duplicate code."
msgstr "Identifique el código duplicado."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Extract the duplicate code into the body of the function and specify the "
"inputs and return values of that code in the function signature."
msgstr ""
"Extraiga el código duplicado en el cuerpo de la función y especifique los "
"valores de entrada y devolución de ese código en la firma de la función."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Update the two instances of duplicated code to call the function instead."
msgstr ""
"Actualizar las dos instancias de código duplicado para llamar a la función "
"en su lugar."

#: src/ch08-00-generic-types-and-traits.md
msgid ""
"Next, we’ll use these same steps with generics to reduce code duplication. "
"In the same way that the function body can operate on an abstract `Array<T>` "
"instead of specific `u8` values, generics allow code to operate on abstract "
"types."
msgstr ""
"A continuación, vamos a utilizar estos mismos pasos con genéricos para "
"reducir la duplicación de código. De la misma manera que el cuerpo de la "
"función puede operar en un resumen `Array<TÃ ́ en lugar de valores "
"específicos `u8`, los genéricos permiten que el código funcione en tipos "
"abstractos."

#: src/ch08-01-generic-data-types.md:3
msgid ""
"We use generics to create definitions for item declarations, such as structs "
"and functions, which we can then use with many different concrete data "
"types. In Cairo, we can use generics when defining functions, structs, "
"enums, traits, implementations and methods. In this chapter, we are going to "
"take a look at how to effectively use generic types with all of them."
msgstr ""
"Utilizamos genéricos para crear definiciones de declaraciones de ítems, como "
"estructuras y funciones, que luego podemos usar con muchos tipos de datos "
"concretos. En El Cairo, podemos usar genéricos al definir funciones, "
"estructuras, enums, rasgos, implementaciones y métodos. En este capítulo, "
"vamos a echar un vistazo a cómo utilizar eficazmente los tipos genéricos con "
"todos ellos."

#: src/ch08-01-generic-data-types.md:5
msgid ""
"Generics allow us to write reusable code that works with many types, thus "
"avoiding code duplication, while enhancing code maintainability."
msgstr ""
"Los genéricos nos permiten escribir código reutilizable que funciona con "
"muchos tipos, evitando así la duplicación de código, al tiempo que mejora la "
"mantenibilidad del código."

#: src/ch08-01-generic-data-types.md:7
msgid "Generic Functions"
msgstr "Funciones genéricas"

#: src/ch08-01-generic-data-types.md:9
msgid ""
"Making a function generic means it can operate on different types, avoiding "
"the need for multiple, type-specific implementations. This leads to "
"significant code reduction and increases the flexibility of the code."
msgstr ""
"Hacer una función genérica significa que puede operar en diferentes tipos, "
"evitando la necesidad de múltiples implementaciones específicas de tipo. "
"Esto conduce a una reducción significativa del código y aumenta la "
"flexibilidad del código."

#: src/ch08-01-generic-data-types.md:11
msgid ""
"When defining a function that uses generics, we place the generics in the "
"function signature, where we would usually specify the data types of the "
"parameter and return value. For example, imagine we want to create a "
"function which given two `Array` of items, will return the largest one. If "
"we need to perform this operation for lists of different types, then we "
"would have to redefine the function each time. Luckily we can implement the "
"function once using generics and move on to other tasks."
msgstr ""
"Al definir una función que utiliza genéricos, colocamos los genéricos en la "
"firma de la función, donde normalmente especificaríamos los tipos de datos "
"del parámetro y el valor de retorno. Por ejemplo, imaginemos que queremos "
"crear una función que da dos `Array` de elementos, devolverá el más grande. "
"Si necesitamos realizar esta operación para listas de diferentes tipos, "
"entonces tendríamos que redefinir la función cada vez. Afortunadamente "
"podemos implementar la función una vez que use genéricos y pasar a otras "
"tareas."

#: src/ch08-01-generic-data-types.md:14
msgid "// Specify generic type T between the angulars\n"
msgstr "// Especifique el tipo genérico T entre los ángulos angulares\n"

#: src/ch08-01-generic-data-types.md:27
msgid ""
"// There is no need to specify the concrete type of T because\n"
"    // it is inferred by the compiler\n"
msgstr ""
"// No hay necesidad de especificar el tipo concreto de T porque // es "
"inferido por el compilador\n"

#: src/ch08-01-generic-data-types.md:33
msgid ""
"The `largest_list` function compares two lists of the same type and returns "
"the one with more elements and drops the other. If you compile the previous "
"code, you will notice that it will fail with an error saying that there are "
"no traits defined for dropping an array of a generic type. This happens "
"because the compiler has no way to guarantee that an `Array<T>` is droppable "
"when executing the `main` function. In order to drop an array of `T`, the "
"compiler must first know how to drop `T`. This can be fixed by specifying in "
"the function signature of `largest_list` that `T` must implement the `Drop` "
"trait. The correct function definition of `largest_list` is as follows:"
msgstr ""
"La función `largest_list` compara dos listas del mismo tipo y devuelve la "
"una con más elementos y suelta la otra. Si compila el código anterior, "
"notará que fallará con un error que dice que no hay rasgos definidos para "
"soltar un array de un tipo genérico. Esto sucede porque el compilador no "
"tiene forma de garantizar que un `Array<T® sea droppable al ejecutar la "
"función `main`. Para eliminar un array de `T`, el compilador debe saber "
"primero cómo soltar `T`. Esto se puede arreglar especificando en la firma de "
"la función `largest_list` que `T` debe implementar el rasgo `Drop`. La "
"definición correcta de función de `largest_list` es la siguiente:"

#: src/ch08-01-generic-data-types.md:45
msgid ""
"The new `largest_list` function includes in its definition the requirement "
"that whatever generic type is placed there, it must be droppable. This is "
"what we call _trait bounds_. The `main` function remains unchanged, the "
"compiler is smart enough to deduce which concrete type is being used and if "
"it implements the `Drop` trait."
msgstr ""
"La nueva función `largest_list` incluye en su definición el requisito de que "
"cualquiera que sea el tipo genérico que se coloque allí, debe ser droppable. "
"Esto es lo que llamamos _trait limits_. La función `main` permanece "
"inalterada, el compilador es lo suficientemente inteligente como para "
"deducir qué tipo de concreto se está utilizando y si implementa el rasgo "
"`Drop`."

#: src/ch08-01-generic-data-types.md:47
msgid "Constraints for Generic Types"
msgstr "Limitaciones para los tipos genéricos"

#: src/ch08-01-generic-data-types.md:49
msgid ""
"When defining generic types, it is useful to have information about them. "
"Knowing which traits a generic type implements allows us to use it more "
"effectively in a function's logic at the cost of constraining the generic "
"types that can be used with the function. We saw an example of this "
"previously by adding the `TDrop` implementation as part of the generic "
"arguments of `largest_list`. While `TDrop` was added to satisfy the "
"compiler's requirements, we can also add constraints to benefit our function "
"logic."
msgstr ""
"Al definir los tipos genéricos, es útil tener información sobre ellos. "
"Conocer qué rasgos de un tipo genérico implementa nos permite utilizarlo más "
"eficazmente en la lógica de una función a costa de limitar los tipos "
"genéricos que se pueden utilizar con la función. Vemos un ejemplo de esto "
"anteriormente añadiendo la aplicación `TDrop'como parte de los argumentos "
"genéricos de `largest_list`. Si bien `TDrop'se añadió para satisfacer los "
"requisitos del compilador, también podemos añadir limitaciones para "
"beneficiar nuestra lógica de funciones."

#: src/ch08-01-generic-data-types.md:51
msgid ""
"Imagine that we want, given a list of elements of some generic type `T`, to "
"find the smallest element among them. Initially, we know that for an element "
"of type `T` to be comparable, it must implement the `PartialOrd` trait. The "
"resulting function would be:"
msgstr ""
"Imagínese que, dada una lista de elementos de algún tipo genérico `T`, "
"queremos encontrar el elemento más pequeño entre ellos. Inicialmente, "
"sabemos que para que un elemento de tipo `T` sea comparable, debe "
"implementar el rasgo `PartialOrd`. La función resultante sería:"

#: src/ch08-01-generic-data-types.md:54
msgid ""
"// Given a list of T get the smallest one\n"
"// The PartialOrd trait implements comparison operations for T\n"
msgstr ""
"// Dada una lista de T obtener el más pequeño // El rasgo ParcialOrd "
"implementa operaciones de comparación para T\n"

#: src/ch08-01-generic-data-types.md:57
msgid ""
"// This represents the smallest element through the iteration\n"
"    // Notice that we use the desnap (*) operator\n"
msgstr ""
"// Esto representa el elemento más pequeño a través de la iteración // Note "
"que usamos el operador de desnap (*)\n"

#: src/ch08-01-generic-data-types.md:61
msgid "// The index we will use to move through the list\n"
msgstr "// El índice que usaremos para movernos a través de la lista\n"

#: src/ch08-01-generic-data-types.md:64
msgid "// Iterate through the whole list storing the smallest\n"
msgstr "// Iterar a través de toda la lista almacenando el más pequeño\n"

#: src/ch08-01-generic-data-types.md:79
msgid ""
"// We need to specify that we are passing a snapshot of `list` as an "
"argument\n"
msgstr ""
"// Tenemos que especificar que estamos pasando una instantánea de `lista` "
"como argumento\n"

#: src/ch08-01-generic-data-types.md:85
msgid ""
"The `smallest_element` function uses a generic type `T` that implements the "
"`PartialOrd` trait, takes a snapshot of an `Array<T>` as a parameter and "
"returns a copy of the smallest element. Because the parameter is of type "
"`@Array<T>`, we no longer need to drop it at the end of the execution and so "
"we are not required to implement the `Drop` trait for `T` as well. Why does "
"it not compile then?"
msgstr ""
"La función `small_element` utiliza un tipo genérico `T` que implementa el "
"rasgo `PartialOrd`, toma una instantánea de un `Array<T® como parámetro y "
"devuelve una copia del elemento más pequeño. Debido a que el parámetro es "
"del tipo `Array<T`, ya no necesitamos soltarlo al final de la ejecución y "
"por lo tanto no estamos obligados a implementar el rasgo `Drop` para `T` "
"también. ¿Por qué no se compila entonces?"

#: src/ch08-01-generic-data-types.md:87
msgid ""
"When indexing on `list`, the value results in a snap of the indexed element, "
"and unless `PartialOrd` is implemented for `@T` we need to desnap the "
"element using `*`. The `*` operation requires a copy from `@T` to `T`, which "
"means that `T` needs to implement the `Copy` trait. After copying an element "
"of type `@T` to `T`, there are now variables with type `T` that need to be "
"dropped, requiring `T` to implement the `Drop` trait as well. We must then "
"add both `Drop` and `Copy` traits implementation for the function to be "
"correct. After updating the `smallest_element` function the resulting code "
"would be:"
msgstr ""
"Al indizar en `lista`, el valor resulta en una instantánea del elemento "
"indexado, y a menos que `PartialOrd` se aplique para `T` tenemos que "
"desactivar el elemento usando `*`. La operación `*` requiere una copia de "
"`T` a `T`, lo que significa que `T` necesita implementar el rasgo `Copy`. "
"Después de copiar un elemento de tipo `T` a `T`, ahora hay variables con el "
"tipo `T` que deben ser eliminadas, requiriendo `T` para implementar el rasgo "
"`Drop` también. A continuación, debemos añadir los rasgos `Drop` y `Copy` "
"para que la función sea correcta. Después de actualizar la función "
"`pequeño_element` el código resultante sería:"

#: src/ch08-01-generic-data-types.md:108
msgid "Anonymous Generic Implementation Parameter (`+` Operator)"
msgstr "Parámetro Anónimo Genérico de Implementación ( Operador)"

#: src/ch08-01-generic-data-types.md:110
msgid ""
"Until now, we have always specified a name for each implementation of the "
"required generic trait: `TPartialOrd` for `PartialOrd<T>`, `TDrop` for "
"`Drop<T>`, and `TCopy` for `Copy<T>`."
msgstr ""
"Hasta ahora, siempre hemos especificado un nombre para cada aplicación del "
"rasgo genérico requerido: \" TPartialOrd \" para \" PartialOrd \", \" TDrop "
"\" para \" Drop \", y \" Tcopy \" para \" Copy \"."

#: src/ch08-01-generic-data-types.md:112
msgid ""
"However, most of the time, we don't use the implementation in the function "
"body; we only use it as a constraint. In these cases, we can use the `+` "
"operator to specify that the generic type must implement a trait without "
"naming the implementation. This is referred to as an _anonymous generic "
"implementation parameter_."
msgstr ""
"Sin embargo, la mayoría de las veces, no usamos la implementación en el "
"cuerpo de la función; sólo la usamos como restricción. En estos casos, "
"podemos usar el operador  para especificar que el tipo genérico debe "
"implementar un rasgo sin nombrar la implementación. Esto se conoce como un "
"parámetro de implementación genérico _anónimo_."

#: src/ch08-01-generic-data-types.md:114
msgid ""
"For example, `+PartialOrd<T>` is equivalent to `impl TPartialOrd: "
"PartialOrd<T>`."
msgstr ""
"Por ejemplo, \"PartialOrd\" es equivalente a \"impl TPartialOrd: "
"ParcialOrd\"."

#: src/ch08-01-generic-data-types.md:116
msgid "We can rewrite the `smallest_element` function signature as follows:"
msgstr ""
"Podemos reescribir la firma de la función `smallest_element` de la siguiente "
"manera:"

#: src/ch08-01-generic-data-types.md:134
msgid "Structs"
msgstr "Estructuras"

#: src/ch08-01-generic-data-types.md:136
msgid ""
"We can also define structs to use a generic type parameter for one or more "
"fields using the `<>` syntax, similar to function definitions. First, we "
"declare the name of the type parameter inside the angle brackets just after "
"the name of the struct. Then we use the generic type in the struct "
"definition where we would otherwise specify concrete data types. The next "
"code example shows the definition `Wallet<T>` which has a `balance` field of "
"type `T`."
msgstr ""
"También podemos definir structs para usar un parámetro de tipo genérico para "
"uno o más campos usando la sintaxis, similar a las definiciones de "
"funciones. Primero, declaramos el nombre del parámetro de tipo dentro de los "
"corchetes de ángulo justo después del nombre de la estructura. Luego usamos "
"el tipo genérico en la definición de estructura donde de otro modo "
"especificaríamos tipos de datos concretos. El siguiente ejemplo de código "
"muestra la definición `Wallet<T® que tiene un campo `balance` de tipo `T`."

#: src/ch08-01-generic-data-types.md:149
msgid ""
"The above code derives the `Drop` trait for the `Wallet` type automatically. "
"It is equivalent to writing the following code:"
msgstr ""
"El código anterior deriva del rasgo `Drop` para el tipo `Wallet` "
"automáticamente. Es equivalente a escribir el siguiente código:"

#: src/ch08-01-generic-data-types.md:163
msgid ""
"We avoid using the `derive` macro for `Drop` implementation of `Wallet` and "
"instead define our own `WalletDrop` implementation. Notice that we must "
"define, just like functions, an additional generic type for `WalletDrop` "
"saying that `T` implements the `Drop` trait as well. We are basically saying "
"that the struct `Wallet<T>` is droppable as long as `T` is also droppable."
msgstr ""
"Evitamos el uso de la macro `derive` para la aplicación `Drop` de `Wallet` "
"y, en su lugar, definimos nuestra propia aplicación `WalletDrop`. Tenga en "
"cuenta que debemos definir, al igual que las funciones, un tipo genérico "
"adicional para `WalletDrop` que diga que `T` implementa también el rasgo "
"`Drop`. Básicamente estamos diciendo que la estructura `Wallet<T' es "
"goteable siempre que `T` sea goteable."

#: src/ch08-01-generic-data-types.md:165
msgid ""
"Finally, if we want to add a field to `Wallet` representing its address and "
"we want that field to be different than `T` but generic as well, we can "
"simply add another generic type between the `<>`:"
msgstr ""
"Por último, si queremos añadir un campo a `Wallet` que representa su "
"dirección y queremos que ese campo sea diferente a `T` pero genérico "
"también, podemos simplemente añadir otro tipo genérico entre el :"

#: src/ch08-01-generic-data-types.md:179
msgid ""
"We add to the `Wallet` struct definition a new generic type `U` and then "
"assign this type to the new field member `address`. Notice that the `derive` "
"attribute for the `Drop` trait works for `U` as well."
msgstr ""
"Añadimos a la definición `Wallet` struct un nuevo tipo genérico `U` y luego "
"asignamos este tipo a la `dirección` del nuevo miembro de campo. Note que el "
"atributo `derive` para el rasgo `Drop` funciona también para `U`."

#: src/ch08-01-generic-data-types.md:183
msgid ""
"As we did with structs, we can define enums to hold generic data types in "
"their variants. For example the `Option<T>` enum provided by the Cairo core "
"library:"
msgstr ""
"Como hicimos con structs, podemos definir enums para mantener los tipos de "
"datos genéricos en sus variantes. Por ejemplo, el `Option<T® enum "
"proporcionado por la biblioteca principal de El Cairo:"

#: src/ch08-01-generic-data-types.md:192
msgid ""
"The `Option<T>` enum is generic over a type `T` and has two variants: "
"`Some`, which holds one value of type `T` and `None` that doesn't hold any "
"value. By using the `Option<T>` enum, it is possible for us to express the "
"abstract concept of an optional value and because the value has a generic "
"type `T` we can use this abstraction with any type."
msgstr ""
"La opción T es genérica sobre un tipo T y tiene dos variantes: `Some`, que "
"contiene un valor de tipo T y `Ninguno` que no contiene ningún valor. Al "
"usar la opción T, es posible que expresemos el concepto abstracto de un "
"valor opcional y porque el valor tiene un tipo genérico T podemos utilizar "
"esta abstracción con cualquier tipo."

#: src/ch08-01-generic-data-types.md:194
msgid ""
"Enums can use multiple generic types as well, like the definition of the "
"`Result<T, E>` enum that the core library provides:"
msgstr ""
"Los enums también pueden utilizar varios tipos genéricos, como la definición "
"del `Resultado<T, E® enum que proporciona la biblioteca principal:"

#: src/ch08-01-generic-data-types.md:203 src/ch09-02-recoverable-errors.md:16
msgid ""
"The `Result<T, E>` enum has two generic types, `T` and `E`, and two "
"variants: `Ok` which holds the value of type `T` and `Err` which holds the "
"value of type `E`. This definition makes it convenient to use the `Result` "
"enum anywhere we have an operation that might succeed (by returning a value "
"of type `T`) or fail (by returning a value of type `E`)."
msgstr ""
"El `Resultado<T, E® enum tiene dos tipos genéricos, `T` y `E`, y dos "
"variantes: `Ok` que contiene el valor del tipo `T` y `Err` que contiene el "
"valor del tipo `E`. Esta definición hace conveniente utilizar el `Resultado` "
"enum en cualquier lugar donde tengamos una operación que pueda tener éxito "
"(devolviendo un valor del tipo `T`) o fallar (devolviendo un valor del tipo "
"`E`)."

#: src/ch08-01-generic-data-types.md:205
msgid "Generic Methods"
msgstr "Métodos genéricos"

#: src/ch08-01-generic-data-types.md:207
msgid ""
"We can implement methods on structs and enums, and use the generic types in "
"their definitions, too. Using our previous definition of `Wallet<T>` struct, "
"we define a `balance` method for it:"
msgstr ""
"Podemos implementar métodos en structs y enums, y utilizar los tipos "
"genéricos en sus definiciones, también. Usando nuestra definición anterior "
"de `Wallet<TÃ ́ struct, definimos un método `equilibrio` para ello:"

#: src/ch08-01-generic-data-types.md:231
msgid ""
"We first define `WalletTrait<T>` trait using a generic type `T` which "
"defines a method that returns the value of the field `balance` from "
"`Wallet`. Then we give an implementation for the trait in `WalletImpl<T>`. "
"Note that you need to include a generic type in both definitions of the "
"trait and the implementation."
msgstr ""
"En primer lugar definimos `WalletTrait<TÃ3rrito usando un tipo genérico `T` "
"que define un método que devuelve el valor del campo `equilibrio` de "
"`Wallet`. A continuación, damos una implementaciÃ3n para el rasgo en "
"`WalletImpl<TÃ3rmino. Tenga en cuenta que es necesario incluir un tipo "
"genérico en ambas definiciones del rasgo y la implementaciÃ3n."

#: src/ch08-01-generic-data-types.md:233
msgid ""
"We can also specify constraints on generic types when defining methods on "
"the type. We could, for example, implement methods only for `Wallet<u128>` "
"instances rather than `Wallet<T>`. In the code example, we define an "
"implementation for wallets which have a concrete type of `u128` for the "
"`balance` field."
msgstr ""
"También podemos especificar limitaciones en los tipos genéricos al definir "
"los métodos en el tipo. Podríamos, por ejemplo, implementar métodos sólo "
"para `Wallet<u128'' instancias en lugar de `Wallet<T». En el ejemplo del "
"código, definimos una implementación para carteras que tienen un tipo "
"concreto de `u128` para el campo `equilibrio`."

#: src/ch08-01-generic-data-types.md:240
msgid "/// Generic trait for wallets\n"
msgstr "/// Rasgo genérico de las carteras\n"

#: src/ch08-01-generic-data-types.md:251
msgid "/// Trait for wallets of type u128\n"
msgstr "/// Rasgo para carteras de tipo u128\n"

#: src/ch08-01-generic-data-types.md:272
msgid ""
"The new method `receive` increments the size of `balance` of any instance of "
"a `Wallet<u128>`. Notice that we changed the `main` function making `w` a "
"mutable variable in order for it to be able to update its balance. If we "
"were to change the initialization of `w` by changing the type of `balance` "
"the previous code wouldn't compile."
msgstr ""
"El nuevo método `recibir` incrementa el tamaño de `equilibrio` de cualquier "
"instancia de un `Wallet<u128]. Observe que cambiamos la función `main` "
"haciendo `w` una variable mutable para que pueda actualizar su saldo. Si `w` "
"cambiara la inicialización de `w` cambiando el tipo de `equilibrio` el "
"código anterior no se compilaría."

#: src/ch08-01-generic-data-types.md:274
msgid ""
"Cairo allows us to define generic methods inside generic traits as well. "
"Using the past implementation from `Wallet<U, V>` we are going to define a "
"trait that picks two wallets of different generic types and creates a new "
"one with a generic type of each. First, let's rewrite the struct definition:"
msgstr ""
"El Cairo nos permite definir los métodos genéricos dentro de los rasgos "
"genéricos también. Usando la implementación pasada de `Wallet<U, V® vamos a "
"definir un rasgo que recoge dos carteras de diferentes tipos genéricos y "
"crea una nueva con un tipo genérico de cada uno. Primero, vamos a reescribir "
"la definición de estructura:"

#: src/ch08-01-generic-data-types.md:283
msgid ""
"Next, we are going to naively define the mixup trait and implementation:"
msgstr ""
"A continuación, vamos a definir ingenuamente el rasgo de confusión y la "
"implementación:"

#: src/ch08-01-generic-data-types.md:286
msgid "// This does not compile!\n"
msgstr "// ¡Esto no se compila!\n"

#: src/ch08-01-generic-data-types.md:299
msgid ""
"We are creating a trait `WalletMixTrait<T1, U1>` with the `mixup<T2, U2>` "
"method which given an instance of `Wallet<T1, U1>` and `Wallet<T2, U2>` "
"creates a new `Wallet<T1, U2>`. As `mixup` signature specifies, both `self` "
"and `other` are getting dropped at the end of the function, which is why "
"this code does not compile. If you have been following from the start until "
"now you would know that we must add a requirement for all the generic types "
"specifying that they will implement the `Drop` trait for the compiler to "
"know how to drop instances of `Wallet<T, U>`. The updated implementation is "
"as follows:"
msgstr ""
"Estamos creando un rasgo `WalletMixTrait<T1, U1• con el método `mixup<T2, "
"U2• que da una instancia de `Wallet<T1, U1• y `Wallet<T2, U2• crea un nuevo "
"`Wallet<T1, U2•. Como especifica la firma `mixup`, tanto `self` como `other` "
"se están soltando al final de la función, razón por la cual este código no "
"se compila. Si usted ha estado siguiendo desde el principio hasta ahora, "
"usted sabría que debemos añadir un requisito para todos los tipos genéricos "
"que especifican que implementarán el rasgo `Drop` para que el compilador "
"sepa cómo soltar las instancias de `Wallet<T, U®. La implementación "
"actualizada es la siguiente:"

#: src/ch08-01-generic-data-types.md:317
msgid ""
"We add the requirements for `T1` and `U1` to be droppable on `WalletMixImpl` "
"declaration. Then we do the same for `T2` and `U2`, this time as part of "
"`mixup` signature. We can now try the `mixup` function:"
msgstr ""
"Añadimos los requisitos para que `T1` y `U1` sean goteables en la "
"declaración `WalletMixImpl`. Entonces hacemos lo mismo para `T2` y `U2`, "
"esta vez como parte de la firma `mixup`. Ahora podemos probar la función "
"`mixup`:"

#: src/ch08-01-generic-data-types.md:331
msgid ""
"We first create two instances: one of `Wallet<bool, u128>` and the other of "
"`Wallet<felt252, u8>`. Then, we call `mixup` and create a new `Wallet<bool, "
"u8>` instance."
msgstr ""
"Primero creamos dos instancias: una de `Wallet<bool, u128-o y la otra de "
"`Wallet<felt252, u8-o. Luego, llamamos a `mixup` y creamos una nueva "
"instancia de `Wallet<bool, u8-o."

#: src/ch08-02-traits-in-cairo.md:3
msgid ""
"A trait defines a set of methods that can be implemented by a type. These "
"methods can be called on instances of the type when this trait is "
"implemented. A trait combined with a generic type defines functionality a "
"particular type has and can share with other types. We can use traits to "
"define shared behavior in an abstract way. We can use _trait bounds_ to "
"specify that a generic type can be any type that has certain behavior."
msgstr ""
"Un rasgo define un conjunto de métodos que pueden ser implementados por un "
"tipo. Estos métodos pueden ser llamados en instancias del tipo cuando este "
"rasgo es implementado. Un rasgo combinado con un tipo genérico define la "
"funcionalidad que un tipo en particular tiene y puede compartir con otros "
"tipos. Podemos usar rasgos para definir el comportamiento compartido de una "
"manera abstracta. Podemos usar _trait binds_ para especificar que un tipo "
"genérico puede ser cualquier tipo que tenga cierto comportamiento."

#: src/ch08-02-traits-in-cairo.md:7
msgid ""
"Note: Traits are similar to a feature often called interfaces in other "
"languages, although with some differences."
msgstr ""
"Nota: Los rasgos son similares a una característica a menudo llamada "
"interfaces en otros idiomas, aunque con algunas diferencias."

#: src/ch08-02-traits-in-cairo.md:9
msgid ""
"While traits can be written to not accept generic types, they are most "
"useful when used with generic types. We already covered generics in the "
"[previous chapter](./ch08-01-generic-data-types.md), and we will use them in "
"this chapter to demonstrate how traits can be used to define shared behavior "
"for generic types."
msgstr ""
"Aunque los rasgos pueden ser escritos para no aceptar tipos genéricos, son "
"más útiles cuando se usan con tipos genéricos. Ya cubrimos los genéricos en "
"el [capítulo anterior](./ch08-01-genérico-data-types.md), y los usaremos en "
"este capítulo para demostrar cómo los rasgos pueden ser usados para definir "
"el comportamiento compartido para los tipos genéricos."

#: src/ch08-02-traits-in-cairo.md:13
msgid "Defining a Trait"
msgstr "Definir un rasgo"

#: src/ch08-02-traits-in-cairo.md:15
msgid ""
"A type’s behavior consists of the methods we can call on that type. "
"Different types share the same behavior if we can call the same methods on "
"all of those types. Trait definitions are a way to group method signatures "
"together to define a set of behaviors necessary to accomplish some purpose."
msgstr ""
"El comportamiento de un tipo consiste en los métodos que podemos utilizar en "
"ese tipo. Diferentes tipos comparten el mismo comportamiento si podemos "
"llamar a los mismos métodos en todos esos tipos. Las definiciones de rasgos "
"son una manera de agrupar las firmas de métodos para definir un conjunto de "
"comportamientos necesarios para lograr algún propósito."

#: src/ch08-02-traits-in-cairo.md:17
msgid ""
"For example, let’s say we have a struct `NewsArticle` that holds a news "
"story in a particular location. We can define a trait `Summary` that "
"describes the behavior of something that can summarize the `NewsArticle` "
"type."
msgstr ""
"Por ejemplo, digamos que tenemos una estructura `NewsArticle` que contiene "
"una noticia en un lugar en particular. Podemos definir un rasgo `Resumen` "
"que describe el comportamiento de algo que puede resumir el tipo "
"`NewsArticle`."

#: src/ch08-02-traits-in-cairo.md:34
msgid "\"{:?} by {:?} ({:?})\""
msgstr "¿Por qué?"

#: src/ch08-02-traits-in-cairo.md:41
msgid ""
"Here, we declare a trait using the `trait` keyword and then the trait’s "
"name, which is `Summary` in this case. We’ve also declared the trait as "
"`pub` so that crates depending on this crate can make use of this trait too, "
"as we’ll see in a few examples."
msgstr ""
"Aquí, declaramos un rasgo usando la palabra clave `trait` y luego el nombre "
"del rasgo, que es `Resumen` en este caso. También hemos declarado el rasgo "
"como `pub` para que las cajas dependiendo de esta caja puedan hacer uso de "
"este rasgo también, como veremos en algunos ejemplos."

#: src/ch08-02-traits-in-cairo.md:44
msgid ""
"Inside the curly brackets, we declare the method signatures that describe "
"the behaviors of the types that implement this trait, which in this case is "
"`fn summarize(self: @NewsArticle) -> ByteArray;`. After the method "
"signature, instead of providing an implementation within curly brackets, we "
"use a semicolon."
msgstr ""
"Dentro de los corchetes rizados, declaramos las firmas del método que "
"describen los comportamientos de los tipos que implementan este rasgo, que "
"en este caso es `fn summary(self: @NewsArticle) -> ByteArray;`. Después de "
"la firma del método, en lugar de proporcionar una implementación dentro de "
"corchetes rizados, utilizamos un punto y coma."

#: src/ch08-02-traits-in-cairo.md:46
msgid ""
"Note: the `ByteArray` type is the type used to represent strings in Cairo."
msgstr ""
"Nota: el tipo `ByteArray` es el tipo utilizado para representar cadenas en "
"El Cairo."

#: src/ch08-02-traits-in-cairo.md:48
msgid ""
"As the trait is not generic, the `self` parameter is not generic either and "
"is of type `@NewsArticle`. This means that the `summarize` method can only "
"be called on instances of `NewsArticle`."
msgstr ""
"Dado que el rasgo no es genérico, el parámetro `auto' tampoco es genérico y "
"es del tipo `NewsArticle`, lo que significa que el método `resumir` sólo "
"puede invocarse en las instancias de `NewsArticle`."

#: src/ch08-02-traits-in-cairo.md:50
msgid ""
"Now, consider that we want to make a media aggregator library crate named "
"_aggregator_ that can display summaries of data that might be stored in a "
"`NewsArticle` or `Tweet` instance. To do this, we need a summary from each "
"type, and we’ll request that summary by calling a summarize method on an "
"instance of that type. By defining the `Summary` trait on generic type `T`, "
"we can implement the `summarize` method on any type we want to be able to "
"summarize."
msgstr ""
"Ahora, considere que queremos hacer una caja de agregador de medios de "
"comunicación llamada _agregador_ que pueda mostrar resúmenes de datos que "
"podrían almacenarse en una instancia de `NewsArticle` o `Tweet`. Para ello, "
"necesitamos un resumen de cada tipo, y solicitaremos ese resumen llamando a "
"un método de resumen en una instancia de ese tipo. Al definir el rasgo "
"`Resumen` en el tipo genérico `T`, podemos implementar el método `resumir` "
"en cualquier tipo que queramos ser capaces de resumir."

#: src/ch08-02-traits-in-cairo.md:68 src/ch08-02-traits-in-cairo.md:145
#: src/ch08-02-traits-in-cairo.md:222
msgid "\"{} by {} ({})\""
msgstr "\" por  ()\""

#: src/ch08-02-traits-in-cairo.md:82 src/ch08-02-traits-in-cairo.md:159
#: src/ch08-02-traits-in-cairo.md:236
msgid "\"{}: {}\""
msgstr "\"...:...\""

#: src/ch08-02-traits-in-cairo.md:91 src/ch08-02-traits-in-cairo.md:168
#: src/ch08-02-traits-in-cairo.md:245
msgid "\"Cairo has become the most popular language for developers\""
msgstr ""
"\"El Cairo se ha convertido en el lenguaje más popular para los "
"desarrolladores\""

#: src/ch08-02-traits-in-cairo.md:92 src/ch08-02-traits-in-cairo.md:169
#: src/ch08-02-traits-in-cairo.md:246
msgid "\"Worldwide\""
msgstr "\"En todo el mundo\""

#: src/ch08-02-traits-in-cairo.md:93 src/ch08-02-traits-in-cairo.md:170
#: src/ch08-02-traits-in-cairo.md:247
msgid "\"Cairo Digger\""
msgstr "\"Cairo Digger\""

#: src/ch08-02-traits-in-cairo.md:94 src/ch08-02-traits-in-cairo.md:171
#: src/ch08-02-traits-in-cairo.md:248
msgid "\"Cairo is a new programming language for zero-knowledge proofs\""
msgstr ""
"\"El Cairo es un nuevo lenguaje de programación para pruebas de conocimiento "
"cero\""

#: src/ch08-02-traits-in-cairo.md:98 src/ch08-02-traits-in-cairo.md:175
#: src/ch08-02-traits-in-cairo.md:252
msgid "\"EliBenSasson\""
msgstr "\"EliBenSasson\""

#: src/ch08-02-traits-in-cairo.md:99 src/ch08-02-traits-in-cairo.md:176
#: src/ch08-02-traits-in-cairo.md:253
msgid ""
"\"Crypto is full of short-term maximizing projects. \\n @Starknet and "
"@StarkWareLtd are about long-term vision maximization.\""
msgstr ""
"\"Crypto está lleno de proyectos de maximización a corto plazo. \\n "
"@Starknet y @StarkWareLtd son sobre la maximización de la visión a largo "
"plazo.\""

#: src/ch08-02-traits-in-cairo.md:102 src/ch08-02-traits-in-cairo.md:179
#: src/ch08-02-traits-in-cairo.md:256
msgid "// Tweet instantiation\n"
msgstr "// tweet instanciation\n"

#: src/ch08-02-traits-in-cairo.md:104 src/ch08-02-traits-in-cairo.md:181
#: src/ch08-02-traits-in-cairo.md:258
msgid "\"New article available! {}\""
msgstr ""
"\"¡Nuevo artículo "
"disponible!..................................................................................."

#: src/ch08-02-traits-in-cairo.md:105 src/ch08-02-traits-in-cairo.md:182
#: src/ch08-02-traits-in-cairo.md:259
msgid "\"New tweet! {}\""
msgstr "\"¡Nuevo tweet!\""

#: src/ch08-02-traits-in-cairo.md:111
msgid ""
"<span class=\"caption\">A `Summary` trait that consists of the behavior "
"provided by a `summarize` method</span>"
msgstr ""
"<span class=\"caption\">Un rasgo `Resumen` que consiste en el comportamiento "
"proporcionado por un método `summarize`</span>"

#: src/ch08-02-traits-in-cairo.md:113
msgid ""
"Each type implementing this trait must provide its own custom behavior for "
"the body of the method. The compiler will enforce that any type that "
"implements the `Summary` trait will have the method `summarize` defined with "
"this signature exactly."
msgstr ""
"Cada tipo que implemente este rasgo debe proporcionar su propio "
"comportamiento personalizado para el cuerpo del método. El compilador hará "
"que cualquier tipo que implemente el rasgo `Resumen` tenga el método "
"`resumir` definido con esta firma exactamente."

#: src/ch08-02-traits-in-cairo.md:115
msgid ""
"A trait can have multiple methods in its body: the method signatures are "
"listed one per line and each line ends in a semicolon."
msgstr ""
"Un rasgo puede tener múltiples métodos en su cuerpo: las firmas del método "
"se enumeran una por línea y cada línea termina en un punto y coma."

#: src/ch08-02-traits-in-cairo.md:117
msgid "Implementing a Trait on a Type"
msgstr "Implementación de un rasgo en un tipo"

#: src/ch08-02-traits-in-cairo.md:119
msgid ""
"Now that we’ve defined the desired signatures of the `Summary` trait’s "
"methods, we can implement it on the types in our media aggregator. The "
"following code shows an implementation of the `Summary` trait on the "
"`NewsArticle` struct that uses the headline, the author, and the location to "
"create the return value of `summarize`. For the `Tweet` struct, we define "
"`summarize` as the username followed by the entire text of the tweet, "
"assuming that tweet content is already limited to 280 characters."
msgstr ""
"Ahora que hemos definido las firmas deseadas de los métodos del rasgo "
"`Resumen`, podemos implementarlo en los tipos en nuestro agregador de "
"medios. El siguiente código muestra una implementación del rasgo `Resumen` "
"en la estructura `NewsArticle` que utiliza el título, el autor, y la "
"ubicación para crear el valor de retorno de `resumir`. Para la estructura "
"`Tweet`, definimos `resumir` como el nombre de usuario seguido por el texto "
"completo del tweet, asumiendo que el contenido del tweet ya está limitado a "
"280 caracteres."

#: src/ch08-02-traits-in-cairo.md:188
msgid ""
"Implementing a trait on a type is similar to implementing regular methods. "
"The difference is that after `impl`, we put a name for the implementation, "
"then use the `of` keyword, and then specify the name of the trait we are "
"writing the implementation for. If the implementation is for a generic type, "
"we place the generic type name in the angle brackets after the trait name."
msgstr ""
"La implementación de un rasgo en un tipo es similar a la implementación de "
"métodos regulares. La diferencia es que después de `impl`, ponemos un nombre "
"para la implementación, luego usamos la palabra clave `de`, y luego "
"especificamos el nombre del rasgo para el que estamos escribiendo la "
"implementación. Si la implementación es para un tipo genérico, colocamos el "
"nombre de tipo genérico en los corchetes de ángulo después del nombre de "
"rasgo."

#: src/ch08-02-traits-in-cairo.md:193
msgid ""
"Note that for the trait method to be accessible, there must be an "
"implementation of that trait visible from the scope where the method is "
"called. If the trait is `pub` and the implementation is not, and the "
"implementation is not visible in the scope where the trait method is called, "
"this will cause a compilation error."
msgstr ""
"Tenga en cuenta que para que el método de rasgo sea accesible, debe haber "
"una implementación de ese rasgo visible del alcance donde se llama el "
"método. Si el rasgo es `pub` y la implementación no es, y la implementación "
"no es visible en el alcance donde se llama el método de rasgo, esto causará "
"un error de compilación."

#: src/ch08-02-traits-in-cairo.md:195
msgid ""
"Within the `impl` block, we put the method signatures that the trait "
"definition has defined. Instead of adding a semicolon after each signature, "
"we use curly brackets and fill in the method body with the specific behavior "
"that we want the methods of the trait to have for the particular type."
msgstr ""
"Dentro del bloque `impl`, ponemos las firmas del método que la definición "
"del rasgo ha definido. En lugar de añadir un punto y coma después de cada "
"firma, usamos corchetes rizados y rellenamos el cuerpo del método con el "
"comportamiento específico que queremos que los métodos del rasgo tengan para "
"el tipo particular."

#: src/ch08-02-traits-in-cairo.md:200
msgid ""
"Now that the library has implemented the `Summary` trait on `NewsArticle` "
"and `Tweet`, users of the crate can call the trait methods on instances of "
"`NewsArticle` and `Tweet` in the same way we call regular methods. The only "
"difference is that the user must bring the trait into scope as well as the "
"types. Here’s an example of how a crate could use our `aggregator` crate:"
msgstr ""
"Ahora que la biblioteca ha implementado el rasgo `Resumen` en `NewsArticle` "
"y `Tweet`, los usuarios de la caja pueden llamar a los métodos de rasgo en "
"instancias de `NewsArticle` y `Tweet` de la misma manera que llamamos "
"métodos regulares. La única diferencia es que el usuario debe traer el rasgo "
"en el alcance, así como los tipos. He aquí un ejemplo de cómo una caja "
"podría utilizar nuestra caja `agregador`:"

#: src/ch08-02-traits-in-cairo.md:265
msgid "This code prints the following:"
msgstr "Este código imprime lo siguiente:"

#: src/ch08-02-traits-in-cairo.md:279
msgid ""
"Other crates that depend on the _aggregator_ crate can also bring the "
"`Summary` trait into scope to implement `Summary` on their own types."
msgstr ""
"Otras cajas que dependen de la caja _agregador_ también pueden incorporar el "
"rasgo `Resumen` en el ámbito de aplicación de la `Resumen` en sus propios "
"tipos."

#: src/ch08-02-traits-in-cairo.md:304
msgid "Managing and Using External Trait"
msgstr "Gestión y uso del rasgo externo"

#: src/ch08-02-traits-in-cairo.md:306
msgid ""
"To use traits methods, you need to make sure the correct traits/"
"implementation(s) are imported. In some cases you might need to import not "
"only the trait but also the implementation if they are declared in separate "
"modules. If `CircleGeometry` implementation was in a separate module/file "
"named _circle_, then to define `boundary` method on `Circle` struct, we'd "
"need to import `ShapeGeometry` trait in the _circle_ module."
msgstr ""
"Para utilizar métodos de características, es necesario asegurarse de que se "
"importan los rasgos/implementaciones correctos. En algunos casos es posible "
"que tenga que importar no sólo el rasgo, sino también la aplicación si se "
"declaran en módulos separados. Si la aplicación de `CircleGeometry` estaba "
"en un módulo/archivo separado llamado _circle_, a continuación, para definir "
"el método `frontario` en la estructura `Circle`, tendríamos que importar "
"`ShapeGeometry` en el módulo _circle_."

#: src/ch08-02-traits-in-cairo.md:309
msgid ""
"If the code was organized into modules like this, where the implementation "
"of a trait was defined in a different module than the trait itself, "
"explicitly importing the relevant trait or implementation is required."
msgstr ""
"Si el código fue organizado en módulos como este, donde la implementación de "
"un rasgo fue definida en un módulo diferente al propio rasgo, explícitamente "
"se requiere importar el rasgo o implementación relevante."

#: src/ch08-02-traits-in-cairo.md:312
msgid ""
"// Here T is an alias type which will be provided during implementation\n"
msgstr ""
"// Aquí T es un tipo de alias que se proporcionará durante la aplicación\n"

#: src/ch08-02-traits-in-cairo.md:319
msgid ""
"// Importing ShapeGeometry is required to implement this trait for "
"Rectangle\n"
msgstr ""
"// Importación de ShapeGeometry es necesario para implementar este rasgo "
"para Rectángulo\n"

#: src/ch08-02-traits-in-cairo.md:328
msgid ""
"// Implementation RectangleGeometry passes in <Rectangle>\n"
"    // to implement the trait for that type\n"
msgstr ""
"// Implementación RectánguloGeometría pasa en <Rectángulo> // para "
"implementar el rasgo de ese tipo\n"

#: src/ch08-02-traits-in-cairo.md:341
msgid ""
"// Importing ShapeGeometry is required to implement this trait for Circle\n"
msgstr ""
"// Importación de ShapeGeometry es necesario para implementar este rasgo "
"para Circle\n"

#: src/ch08-02-traits-in-cairo.md:349
msgid ""
"// Implementation CircleGeometry passes in <Circle>\n"
"    // to implement the imported trait for that type\n"
msgstr ""
"// Implementación CírculoGeometría pasa en <Círculo> // para implementar el "
"rasgo importado para ese tipo\n"

#: src/ch08-02-traits-in-cairo.md:366
msgid "\"Rectangle area: {}\""
msgstr "\"Área de rectángulo:"

#: src/ch08-02-traits-in-cairo.md:366
msgid "//35\n"
msgstr "//35\n"

#: src/ch08-02-traits-in-cairo.md:367
msgid "\"Rectangle boundary: {}\""
msgstr "\"Límite del rectángulo:"

#: src/ch08-02-traits-in-cairo.md:367
msgid "//24\n"
msgstr "//24\n"

#: src/ch08-02-traits-in-cairo.md:370
msgid "\"Circle area: {}\""
msgstr "\"Área del círculo:"

#: src/ch08-02-traits-in-cairo.md:370
msgid "//78\n"
msgstr "//78\n"

#: src/ch08-02-traits-in-cairo.md:371
msgid "\"Circle boundary: {}\""
msgstr "\"Límite del círculo:"

#: src/ch08-02-traits-in-cairo.md:371
msgid "//31\n"
msgstr "//31\n"

#: src/ch08-02-traits-in-cairo.md:375
msgid ""
"Note that in this example, `CircleGeometry` and `RectangleGeometry` "
"implementations don't need to be declared as `pub`. Indeed, `ShapeGeometry` "
"trait, which is public, is used to print the result in the `main` function. "
"The compiler will find the appropriate implementation for the "
"`ShapeGeometry` public trait, regardless of the implementation visibility."
msgstr ""
"Cabe señalar que en este ejemplo, las implementaciones de `CircleGeometry` y "
"`RectangleGeometry` no necesitan ser declaradas `pub`. De hecho, el rasgo "
"`ShapeGeometry`, que es público, se utiliza para imprimir el resultado en la "
"función `principal`. El compilador encontrará la aplicación apropiada para "
"el rasgo público `ShapeGeometry`, independientemente de la visibilidad de la "
"aplicación."

#: src/ch08-02-traits-in-cairo.md:377
msgid "Impl Aliases"
msgstr "Impl Alias"

#: src/ch08-02-traits-in-cairo.md:379
msgid ""
"Implementations can be aliased when imported. This is most useful when you "
"want to instantiate generic implementations with concrete types. For "
"example, let's say we define a trait `Two` that is used to return the value "
"`2` for a type `T`. We can write a trivial generic implementation of `Two` "
"for all types that implement the `One` trait, simply by adding twice the "
"value of `one` and returning it. However, in our public API, we may only "
"want to expose the `Two` implementation for the `u8` and `u128` types."
msgstr ""
"Las implementaciones se pueden alias cuando se importan, lo que es más útil "
"cuando se desea instanciar implementaciones genéricas con tipos concretos. "
"Por ejemplo, digamos que definimos un rasgo `Dos` que se utiliza para "
"devolver el valor `2` para un tipo `T`. Podemos escribir una implementación "
"genérica trivial de `Dos` para todos los tipos que implementan el rasgo "
"`Uno`, simplemente añadiendo el doble del valor de `uno` y devolviéndolo. "
"Sin embargo, en nuestra API pública, podemos sólo querer exponer la "
"implementación `Dos` para los tipos `u8` y `u128`."

#: src/ch08-02-traits-in-cairo.md:400
msgid ""
"<span class=\"caption\"> Listing 8-1: Using impl aliases to instantiate "
"generic impls with concrete types</span>"
msgstr ""
"<span class=\"caption\"> Listado 8-1: Uso de alias de impl para instanciar "
"impls genéricos con tipos de hormigón</span>"

#: src/ch08-02-traits-in-cairo.md:402
msgid ""
"We can define the generic implementation in a private module, use an impl "
"alias to instantiate the generic implementation for these two concrete "
"types, and make these two implementations public, while keeping the generic "
"implementation private and unexposed. This way, we can avoid code "
"duplication using the generic implementation, while keeping the public API "
"clean and simple."
msgstr ""
"Podemos definir la implementación genérica en un módulo privado, utilizar un "
"impl alias para instanciar la implementación genérica para estos dos tipos "
"concretos, y hacer estas dos implementaciones públicas, manteniendo la "
"implementación genérica privada y no expuesta. De esta manera, podemos "
"evitar la duplicación de código utilizando la implementación genérica, "
"manteniendo la API pública limpia y sencilla."

#: src/ch08-02-traits-in-cairo.md:404
msgid "Negative Impls"
msgstr "Implicaciones negativas"

#: src/ch08-02-traits-in-cairo.md:406
msgid ""
"Note: This is still an experimental feature and can only be used if "
"`experimental-features = [\"negative_impls\"]` is enabled in your _Scarb."
"toml_ file, under the `[package]` section."
msgstr ""
"Nota: Esto sigue siendo una característica experimental y sólo se puede usar "
"si `experimental-features = [\"negativo_impls\"]` está habilitado en su "
"archivo _Scarb.toml_, en la sección `[paquete]`."

#: src/ch08-02-traits-in-cairo.md:408
msgid ""
"Negative implementations, also known as negative traits or negative bounds, "
"are a mechanism that allows you to express that a type does not implement a "
"certain trait when defining the implementation of a trait over a generic "
"type. Negative impls enable you to write implementations that are applicable "
"only when another implementation does not exist in the current scope."
msgstr ""
"Las implementaciones negativas, también conocidas como rasgos negativos o "
"límites negativos, son un mecanismo que le permite expresar que un tipo no "
"implementa un determinado rasgo al definir la implementación de un rasgo "
"sobre un tipo genérico. Impls negativos le permiten escribir "
"implementaciones que son aplicables sólo cuando otra implementación no "
"existe en el ámbito actual."

#: src/ch08-02-traits-in-cairo.md:410
msgid ""
"For example, let's say we have a trait `Producer` and a trait `Consumer`, "
"and we want to define a generic behavior where all types implement the "
"`Consumer` trait by default. However, we want to ensure that no type can be "
"both a `Consumer` and a `Producer`. We can use negative impls to express "
"this restriction."
msgstr ""
"Por ejemplo, digamos que tenemos un rasgo `Productor` y un rasgo "
"`Consumidor`, y queremos definir un comportamiento genérico donde todos los "
"tipos implementan el rasgo `Consumidor` por defecto. Sin embargo, queremos "
"asegurarnos de que ningún tipo puede ser tanto un `Consumidor` como un "
"`Productor`. Podemos usar impls negativos para expresar esta restricción."

#: src/ch08-02-traits-in-cairo.md:412
msgid ""
"In Listing 8-2, we define a `ProducerType` that implements the `Producer` "
"trait, and two other types, `AnotherType` and `AThirdType`, which do not "
"implement the `Producer` trait. We then use negative impls to create a "
"default implementation of the `Consumer` trait for all types that do not "
"implement the `Producer` trait."
msgstr ""
"En la Lista 8-2, definimos un `Tipo de Productor` que implementa el rasgo "
"`Productor'y otros dos tipos, `Otro Tipo` y `Tercer Tipo`, que no "
"implementan el rasgo `Productor '. A continuación, utilizamos impls "
"negativos para crear una aplicación predeterminada del rasgo "
"`Consumidor'para todos los tipos que no implementan el rasgo `Productor '."

#: src/ch08-02-traits-in-cairo.md:440
msgid "\"{:?} consumed value: {}\""
msgstr "\"{:?} el valor consumido:"

#: src/ch08-02-traits-in-cairo.md:450
msgid ""
"// producer.consumer(production); Invalid: ProducerType does not implement "
"Consumer\n"
msgstr ""
"// productor.consumidor(producción); Inválido: ProductorType no implementa "
"Consumidor\n"

#: src/ch08-02-traits-in-cairo.md:456
msgid ""
"<span class=\"caption\"> Listing 8-2: Using negative impls to enforce that a "
"type cannot implement both `Producer` and `Consumer` traits simultaneously</"
"span>"
msgstr ""
"<span class=\"caption\"> Listado 8-2: Uso de impls negativos para hacer "
"cumplir que un tipo no puede implementar simultáneamente los rasgos "
"`Productor` y `Consumidor`</span>"

#: src/ch08-02-traits-in-cairo.md:458
msgid ""
"In the `main` function, we create instances of `ProducerType`, "
"`AnotherType`, and `AThirdType`. We then call the `produce` method on the "
"`producer` instance and pass the result to the `consume` method on the "
"`another_type` and `third_type` instances. Finally, we try to call the "
"`consume` method on the `producer` instance, which results in a compile-time "
"error because `ProducerType` does not implement the `Consumer` trait."
msgstr ""
"En la función `main`, creamos instancias de `ProducerType`, `OtherType` y "
"`ATercerTipo`. A continuación, llamamos al método `Producer` en la instancia "
"`Producer` y pasamos el resultado al método `Consumo` en las instancias "
"`other_type` y `third_type`. Finalmente, tratamos de llamar al método "
"`Consumo` en la instancia `Producer`, lo que resulta en un error de "
"compilación porque `ProducerType` no implementa el rasgo `Consumo`."

#: src/ch08-02-traits-in-cairo.md:460
msgid "{{#quiz ../quizzes/ch08-02-traits.toml}}"
msgstr "quiz../quizzes/ch08-02-traits.toml"

#: src/ch09-00-error-handling.md
msgid "Error handling"
msgstr "Manipulación de errores"

#: src/ch09-00-error-handling.md
msgid ""
"In this chapter, we will explore various error handling techniques provided "
"by Cairo, which not only allow you to address potential issues in your code, "
"but also make it easier to create programs that are adaptable and "
"maintainable. By examining different approaches to managing errors, such as "
"pattern matching with the `Result` enum, using the `?` operator for more "
"ergonomic error propagation, and employing the `unwrap` or `expect` methods "
"for handling recoverable errors, you'll gain a deeper understanding of "
"Cairo's error handling features. These concepts are crucial for building "
"robust applications that can effectively handle unexpected situations, "
"ensuring your code is ready for production."
msgstr ""
"En este capítulo, exploraremos varias técnicas de manejo de errores "
"proporcionadas por El Cairo, que no sólo le permiten abordar posibles "
"problemas en su código, sino que también facilitan la creación de programas "
"adaptables y mantenibles. Examinando diferentes enfoques para manejar "
"errores, como el ajuste de patrones con el enum `Resultado`, utilizando el "
"operador `?` para una propagación de errores más ergonómica, y empleando los "
"métodos `unwrap` o `esperable` para manejar errores recuperables, obtendrá "
"una comprensión más profunda de las características de manejo de errores de "
"El Cairo. Estos conceptos son cruciales para construir aplicaciones robustas "
"que puedan manejar eficazmente situaciones inesperadas, asegurando que su "
"código esté listo para la producción."

#: src/ch09-01-unrecoverable-errors-with-panic.md:1
msgid "Unrecoverable Errors with `panic`"
msgstr "Errores irrecuperables con `pánico`"

#: src/ch09-01-unrecoverable-errors-with-panic.md:3
msgid ""
"In Cairo, unexpected issues may arise during program execution, resulting in "
"runtime errors. While the `panic` function from the core library doesn't "
"provide a resolution for these errors, it does acknowledge their occurrence "
"and terminates the program. There are two primary ways that a panic can be "
"triggered in Cairo: inadvertently, through actions causing the code to panic "
"(e.g., accessing an array beyond its bounds), or deliberately, by invoking "
"the `panic` function."
msgstr ""
"En El Cairo, pueden surgir problemas inesperados durante la ejecución del "
"programa, que resultan en errores de tiempo de ejecución. Si bien la función "
"`panic` de la biblioteca central no proporciona una resolución para estos "
"errores, sí reconoce su ocurrencia y termina el programa. Hay dos maneras "
"principales de que un pánico se puede desencadenar en El Cairo: "
"inadvertidamente, a través de acciones que causan el pánico del código (por "
"ejemplo, el acceso a un array más allá de sus límites), o deliberadamente, "
"invocando la función `panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:5
msgid ""
"When a panic occurs, it leads to an abrupt termination of the program. The "
"`panic` function takes an array as an argument, which can be used to provide "
"an error message and performs an unwind process where all variables are "
"dropped and dictionaries squashed to ensure the soundness of the program to "
"safely terminate the execution."
msgstr ""
"Cuando se produce un pánico, se produce una terminación brusca del programa. "
"La función `panic` toma un array como argumento, que se puede utilizar para "
"proporcionar un mensaje de error y realiza un proceso de desenganche donde "
"todas las variables se sueltan y los diccionarios se aplastan para asegurar "
"la solidez del programa para terminar con seguridad la ejecución."

#: src/ch09-01-unrecoverable-errors-with-panic.md:7
msgid ""
"Here is how we can call `panic` from inside a program and return the error "
"code `2`:"
msgstr ""
"Aquí es cómo podemos llamar a `panic` desde el interior de un programa y "
"devolver el código de error `2`:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:18
#: src/ch09-01-unrecoverable-errors-with-panic.md:58
msgid "\"This line isn't reached\""
msgstr "\"Esta línea no se alcanza\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:22
msgid "Running the program will produce the following output:"
msgstr "La ejecución del programa producirá la siguiente salida:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:33
msgid ""
"As you can notice in the output, the call to `println!` macro is never "
"reached, as the program terminates after encountering the `panic` statement."
msgstr ""
"Como se puede notar en la salida, la llamada a `println!` macro nunca se "
"alcanza, ya que el programa termina después de encontrar la declaración "
"`panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:35
msgid ""
"An alternative and more idiomatic approach to panic in Cairo would be to use "
"the `panic_with_felt252` function. This function serves as an abstraction of "
"the array-defining process and is often preferred due to its clearer and "
"more concise expression of intent. By using `panic_with_felt252`, developers "
"can panic in a one-liner by providing a `felt252` error message as an "
"argument, making the code more readable and maintainable."
msgstr ""
"Un enfoque alternativo y más idiomático del pánico en El Cairo sería "
"utilizar la función `panic_with_felt252`. Esta función sirve como una "
"abstracción del proceso de definición de la matriz y a menudo se prefiere "
"debido a su expresión de intención más clara y concisa. Al utilizar "
"`panic_with_felt252`, los desarrolladores pueden entrar en pánico en una "
"línea única proporcionando un mensaje de error `felt252` como argumento, "
"haciendo que el código sea más legible y mantenible."

#: src/ch09-01-unrecoverable-errors-with-panic.md:37
msgid "Let's consider an example:"
msgstr "Consideremos un ejemplo:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:47
msgid ""
"Executing this program will yield the same error message as before. In that "
"case, if there is no need for an array and multiple values to be returned "
"within the error, `panic_with_felt252` is a more succinct alternative."
msgstr ""
"Ejecutar este programa producirá el mismo mensaje de error que antes. En ese "
"caso, si no hay necesidad de devolver un array y varios valores dentro del "
"error, `panic_with_felt252` es una alternativa más sucinta."

#: src/ch09-01-unrecoverable-errors-with-panic.md:49 src/ch11-05-macros.md:29
msgid "`panic!` Macro"
msgstr "`Pánico!` Macro"

#: src/ch09-01-unrecoverable-errors-with-panic.md:51
msgid ""
"`panic!` macro can be really helpful. The previous example returning the "
"error code `2` shows how convenient `panic!` macro is. There is no need to "
"create an array and pass it as an argument like with the `panic` function."
msgstr ""
"`panic!` macro puede ser muy útil. El ejemplo anterior que devuelve el "
"código de error `2` muestra lo conveniente que es `panic!` macro. No hay "
"necesidad de crear un array y pasarlo como un argumento como con la función "
"`panic`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:56
msgid "\"2\""
msgstr "\"2\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:62
msgid ""
"Unlike the `panic_with_felt252` function, using `panic!` allows the input, "
"which is ultimately the panic error, to be a literal longer than 31 bytes. "
"This is because `panic!` takes a string as a parameter. For example, the "
"following line of code will successfully compile:"
msgstr ""
"A diferencia de la función `panic_with_felt252`, usando `panic!` permite que "
"la entrada, que es en última instancia el error de pánico, sea un literal "
"más de 31 bytes. Esto es porque `panic!` toma una cadena como parámetro. Por "
"ejemplo, la siguiente línea de código se compilará con éxito:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:65
msgid "\"the error for panic! macro is not limited to 31 characters anymore\""
msgstr "\"el error para el pánico! macro no se limita a 31 caracteres más\""

#: src/ch09-01-unrecoverable-errors-with-panic.md:68
msgid "`nopanic` Notation"
msgstr "Notación `nopánica`"

#: src/ch09-01-unrecoverable-errors-with-panic.md:70
msgid ""
"You can use the `nopanic` notation to indicate that a function will never "
"panic. Only `nopanic` functions can be called in a function annotated as "
"`nopanic`."
msgstr ""
"Puede utilizar la notación `nopánica` para indicar que una función nunca "
"entrará en pánico. Sólo las funciones `nopánicas` se pueden llamar en una "
"función anotada como `nopánica`."

#: src/ch09-01-unrecoverable-errors-with-panic.md:80
msgid ""
"This function will always return `42` and is guaranteed to never panic. "
"Conversely, the following function is not guaranteed to never panic:"
msgstr ""
"Esta función siempre devolverá `42` y se garantiza que nunca entre en "
"pánico. Por el contrario, la siguiente función no está garantizada a nunca "
"entrar en pánico:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:88
msgid ""
"If you try to compile this function that includes code that may panic, you "
"will get the following error:"
msgstr ""
"Si intenta compilar esta función que incluye código que puede entrar en "
"pánico, obtendrá el siguiente error:"

#: src/ch09-01-unrecoverable-errors-with-panic.md:108
msgid ""
"Note that there are two functions that may panic here, `assert` and equality "
"with `==`. We usually don't use `assert` function in practice and use "
"`assert!` macro instead. We will discuss `assert!` macro in more detail in "
"the [Testing Cairo Programs](./ch10-01-how-to-write-tests.md#checking-"
"results-with-the-assert-macro) chapter."
msgstr ""
"Tenga en cuenta que hay dos funciones que pueden entrar en pánico aquí, "
"`asertar` y la igualdad con ` `. Usualmente no usamos la función `asertar` "
"en la práctica y utilizar `asertar!'macro en su lugar. Discutiremos "
"`asertar!'macro en más detalle en el capítulo [Programas de prueba de El "
"Cairo](./ch10-01-how-to-write-tests.md#checking-resultados-with-the-asertar-"
"macro)."

#: src/ch09-01-unrecoverable-errors-with-panic.md:112
msgid "`panic_with` Attribute"
msgstr "Atributo `panic_with`"

#: src/ch09-01-unrecoverable-errors-with-panic.md:114
msgid ""
"You can use the `panic_with` attribute to mark a function that returns an "
"`Option` or `Result`. This attribute takes two arguments, which are the data "
"that is passed as the panic reason as well as the name for a wrapping "
"function. It will create a wrapper for your annotated function which will "
"panic if the function returns `None` or `Err`, with the given data as the "
"panic error."
msgstr ""
"Puede utilizar el atributo `panic_with` para marcar una función que devuelve "
"una `Opción` o `Resultado`. Este atributo toma dos argumentos, que son los "
"datos que se pasan como la razón de pánico, así como el nombre de una "
"función de envoltura. Creará un envoltorio para su función anotada que "
"entrará en pánico si la función devuelve `None` o `Err`, con los datos dados "
"como el error de pánico."

#: src/ch09-01-unrecoverable-errors-with-panic.md:116
#: src/appendix-03-derivable-traits.md:38
msgid "Example:"
msgstr "Ejemplo"

#: src/ch09-01-unrecoverable-errors-with-panic.md:129
msgid "// this returns None\n"
msgstr "// esto devuelve None\n"

#: src/ch09-01-unrecoverable-errors-with-panic.md:130
msgid "// this panics with 'value is 0'\n"
msgstr "// esto entra en pánico con 'valor es 0'\n"

#: src/ch09-01-unrecoverable-errors-with-panic.md:134
msgid "{{#quiz ../quizzes/ch09-01-unrecoverable-errors-with-panic.toml}}"
msgstr "quiz../quizzes/ch09-01-incobrable-errors-with-panic.toml"

#: src/ch09-02-recoverable-errors.md:1
msgid "Recoverable Errors with `Result`"
msgstr "Errores recuperables con `Resultado`"

#: src/ch09-02-recoverable-errors.md:3
msgid ""
"Most errors aren’t serious enough to require the program to stop entirely. "
"Sometimes, when a function fails, it’s for a reason that you can easily "
"interpret and respond to. For example, if you try to add two large integers "
"and the operation overflows because the sum exceeds the maximum "
"representable value, you might want to return an error or a wrapped result "
"instead of causing undefined behavior or terminating the process."
msgstr ""
"La mayoría de los errores no son lo suficientemente graves como para "
"requerir que el programa se detenga por completo. A veces, cuando una "
"función falla, es por una razón que se puede interpretar y responder "
"fácilmente. Por ejemplo, si intenta añadir dos números enteros grandes y los "
"desbordamientos de la operación porque la suma excede el valor máximo "
"representable, es posible que desee devolver un error o un resultado "
"envuelto en lugar de causar un comportamiento indefinido o terminar el "
"proceso."

#: src/ch09-02-recoverable-errors.md:5
msgid "The `Result` Enum"
msgstr "El \" Enum de resultados \""

#: src/ch09-02-recoverable-errors.md:7
msgid ""
"Recall from [Generic data types](./ch08-01-generic-data-types.md#enums) "
"section in Chapter 8 that the `Result` enum is defined as having two "
"variants, `Ok` and `Err`, as follows:"
msgstr ""
"Recordemos de [los tipos de datos genéricos](./ch08-01-genéricos-tipos de "
"datos.md#enums) en el capítulo 8 que el `Resultado` enum se define como "
"tener dos variantes, `Ok` y `Err`, como sigue:"

#: src/ch09-02-recoverable-errors.md:20
msgid "The `ResultTrait`"
msgstr "El `Trait de resultados`"

#: src/ch09-02-recoverable-errors.md:22
msgid ""
"The `ResultTrait` trait provides methods for working with the `Result<T, E>` "
"enum, such as unwrapping values, checking whether the `Result` is `Ok` or "
"`Err`, and panicking with a custom message. The `ResultTraitImpl` "
"implementation defines the logic of these methods."
msgstr ""
"El rasgo `ResultTrait` ofrece métodos para trabajar con el `Result<T, E® "
"enum, tales como desenvolver los valores, comprobar si el `Result` es `Ok` o "
"`Err`, y entrar en pánico con un mensaje personalizado."

#: src/ch09-02-recoverable-errors.md:40
msgid ""
"The `expect` and `unwrap` methods are similar in that they both attempt to "
"extract the value of type `T` from a `Result<T, E>` when it is in the `Ok` "
"variant. If the `Result` is `Ok(x)`, both methods return the value `x`. "
"However, the key difference between the two methods lies in their behavior "
"when the `Result` is in the `Err` variant. The `expect` method allows you to "
"provide a custom error message (as a `felt252` value) that will be used when "
"panicking, giving you more control and context over the panic. On the other "
"hand, the `unwrap` method panics with a default error message, providing "
"less information about the cause of the panic."
msgstr ""
"Los métodos `esperar` y `unwrap` son similares en el sentido de que ambos "
"tratan de extraer el valor del tipo `T` de un `Resultado<T, E` cuando está "
"en la variante `Ok`. Si el `Resultado` es `Ok(x)`, ambos métodos devuelven "
"el valor `x`. Sin embargo, la diferencia clave entre los dos métodos reside "
"en su comportamiento cuando el `Resultado` está en la variante `Err`. El "
"método `esperar` le permite proporcionar un mensaje de error personalizado "
"(como un valor `felt252`) que se utilizará al entrar en pánico, dándole más "
"control y contexto sobre el pánico. Por otra parte, el método `unwrap` entra "
"en pánico con un mensaje de error predeterminado, proporcionando menos "
"información sobre la causa del pánico."

#: src/ch09-02-recoverable-errors.md:42
msgid ""
"The `expect_err` and `unwrap_err` methods have the exact opposite behavior. "
"If the `Result` is `Err(x)`, both methods return the value `x`. However, the "
"key difference between the two methods is in case of `Result::Ok()`. The "
"`expect_err` method allows you to provide a custom error message (as a "
"`felt252` value) that will be used when panicking, giving you more control "
"and context over the panic. On the other hand, the `unwrap_err` method "
"panics with a default error message, providing less information about the "
"cause of the panic."
msgstr ""
"Los métodos `expect_err` y `unwrap_err` tienen el comportamiento opuesto "
"exacto. Si el `Resultado` es `Err(x)`, ambos métodos devuelven el valor `x`. "
"Sin embargo, la diferencia clave entre los dos métodos es en el caso de "
"`Resultado::Ok()`. El método `expect_err` le permite proporcionar un mensaje "
"de error personalizado (como un valor `felt252`) que se utilizará cuando "
"entre en pánico, dándole más control y contexto sobre el pánico. Por otro "
"lado, el método `unwrap_err` entra en pánico con un mensaje de error "
"predeterminado, proporcionando menos información sobre la causa del pánico."

#: src/ch09-02-recoverable-errors.md:44
msgid ""
"A careful reader may have noticed the `<+Drop<T>>` and `<+Drop<E>>` in the "
"first four methods signatures. This syntax represents generic type "
"constraints in the Cairo language, as seen in the previous chapter. These "
"constraints indicate that the associated functions require an implementation "
"of the `Drop` trait for the generic types `T` and `E`, respectively."
msgstr ""
"Un lector cuidadoso pudo haber notado el Drop<T y Drop<E en las primeras "
"firmas de los cuatro métodos. Esta sintaxis representa restricciones "
"genéricas de tipo en el idioma de El Cairo, como se ve en el capítulo "
"anterior. Estas restricciones indican que las funciones asociadas requieren "
"una implementación del rasgo `Drop` para los tipos genéricos `T` y `E`, "
"respectivamente."

#: src/ch09-02-recoverable-errors.md:46
msgid ""
"Finally, the `is_ok` and `is_err` methods are utility functions provided by "
"the `ResultTrait` trait to check the variant of a `Result` enum value."
msgstr ""
"Por último, los métodos `is_ok` y `is_err` son funciones de utilidad "
"proporcionadas por el rasgo `ResultTrait'para comprobar la variante de un "
"valor enum `Result '."

#: src/ch09-02-recoverable-errors.md:48
msgid ""
"`is_ok` takes a snapshot of a `Result<T, E>` value and returns `true` if the "
"`Result` is the `Ok` variant, meaning the operation was successful. If the "
"`Result` is the `Err` variant, it returns `false`."
msgstr ""
"`is_ok` toma una instantánea de un `Resultado<T, valor E® y devuelve `true` "
"si el `Resultado` es la variante `Ok`, lo que significa que la operación "
"tuvo éxito. Si el `Resultado` es la variante `Err`, devuelve `false`."

#: src/ch09-02-recoverable-errors.md:49
msgid ""
"`is_err` takes a snapshot of a `Result<T, E>` value and returns `true` if "
"the `Result` is the `Err` variant, meaning the operation encountered an "
"error. If the `Result` is the `Ok` variant, it returns `false`."
msgstr ""
"`is_err` toma una instantánea de un `Resultado<T, valor E® y devuelve `true` "
"si el `Resultado` es la variante `Err`, lo que significa que la operación "
"encontró un error. Si el `Resultado` es la variante `Ok`, devuelve `false`."

#: src/ch09-02-recoverable-errors.md:51
msgid ""
"These methods are helpful when you want to check the success or failure of "
"an operation without consuming the `Result` value, allowing you to perform "
"additional operations or make decisions based on the variant without "
"unwrapping it."
msgstr ""
"Estos métodos son útiles cuando se desea comprobar el éxito o el fracaso de "
"una operación sin consumir el valor `Resultado`, lo que le permite realizar "
"operaciones adicionales o tomar decisiones basadas en la variante sin "
"desenvolverla."

#: src/ch09-02-recoverable-errors.md:53
msgid ""
"You can find the implementation of the `ResultTrait` [here](https://github."
"com/starkware-libs/cairo/blob/main/corelib/src/result.cairo#L20)."
msgstr ""
"Puede encontrar la aplicación del `ResultTrait` [aquí] (https://github.com/"
"starkware-libs/cairo/blob/main/corelib/src/result.cairo#L20)."

#: src/ch09-02-recoverable-errors.md:55
msgid ""
"It is always easier to understand with examples. Have a look at this "
"function signature:"
msgstr ""
"Siempre es más fácil de entender con ejemplos. Eche un vistazo a esta firma "
"de función:"

#: src/ch09-02-recoverable-errors.md:61
msgid ""
"It takes two `u128` integers, `a` and `b`, and returns a `Result<u128, "
"u128>` where the `Ok` variant holds the sum if the addition does not "
"overflow, and the `Err` variant holds the overflowed value if the addition "
"does overflow."
msgstr ""
"Se necesitan dos 'u128` enteros, `a` y `b`, y devuelve un `Resultado<u128, "
"u128, donde la variante `Ok` contiene la suma si la adición no se desborda, "
"y la variante `Err` contiene el valor desbordado si la adición se desborda."

#: src/ch09-02-recoverable-errors.md:63
msgid "Now, we can use this function elsewhere. For instance:"
msgstr "Ahora, podemos usar esta función en otro lugar. Por ejemplo:"

#: src/ch09-02-recoverable-errors.md:75
msgid ""
"Here, it accepts two `u128` integers, `a` and `b`, and returns an "
"`Option<u128>`. It uses the `Result` returned by `u128_overflowing_add` to "
"determine the success or failure of the addition operation. The `match` "
"expression checks the `Result` from `u128_overflowing_add`. If the result is "
"`Ok(r)`, it returns `Option::Some(r)` containing the sum. If the result is "
"`Err(r)`, it returns `Option::None` to indicate that the operation has "
"failed due to overflow. The function does not panic in case of an overflow."
msgstr ""
"En este caso, acepta dos enteros `u128`, `a` y `b`, y devuelve una "
"`Opción<u128`. Utiliza el `Resultado` devuelto por `u128_overflowing_add` "
"para determinar el éxito o el fracaso de la operación de adición. La "
"expresión `match` comprueba el `Resultado` de `u128_overflowing_add`. Si el "
"resultado es `Ok(r)`, devuelve `Opción::Some(r)` que contiene la suma. Si el "
"resultado es `Errr(r)`, devuelve `Opción::Ninguna` para indicar que la "
"operación ha fallado debido al desbordamiento. La función no entra en pánico "
"en caso de desbordamiento."

#: src/ch09-02-recoverable-errors.md:77
msgid "Let's take another example:"
msgstr "Tomemos otro ejemplo:"

#: src/ch09-02-recoverable-errors.md:88
msgid ""
"In this example, the `parse_u8` function takes a `felt252` and tries to "
"convert it into a `u8` integer using the `try_into` method. If successful, "
"it returns `Result::Ok(value)`, otherwise it returns `Result::Err('Invalid "
"integer')`."
msgstr ""
"En este ejemplo, la función `parse_u8` toma una `felt252` e intenta "
"convertirla en un entero `u8` usando el método `try_into`. Si tiene éxito, "
"devuelve `Resultado::Ok(valor)`, de lo contrario devuelve `Resultado::"
"Errr('Inválido entero')`."

#: src/ch09-02-recoverable-errors.md:90
msgid "Our two test cases are:"
msgstr "Nuestros dos casos de prueba son:"

#: src/ch09-02-recoverable-errors.md:107
msgid "// should not panic\n"
msgstr "// no debe entrar en pánico\n"

#: src/ch09-02-recoverable-errors.md:115
msgid "// should panic\n"
msgstr "// debería entrar en pánico\n"

#: src/ch09-02-recoverable-errors.md:123
msgid ""
"Don't worry about the `#[cfg(test)]` attribute for now. We'll explain in "
"more detail its meaning in the next [Testing Cairo Programs](./ch10-01-how-"
"to-write-tests.md) chapter."
msgstr ""
"Por ahora, no te preocupes por el atributo \"[cfg(test)]`. Explicaremos con "
"más detalle su significado en el siguiente capítulo [Testing Cairo Programs]"
"(./ch10-01-how-to-write-tests.md)."

#: src/ch09-02-recoverable-errors.md:125
msgid ""
"`#[test]` attribute means the function is a test function, and "
"`#[should_panic]` attribute means this test will pass if the test execution "
"panics."
msgstr ""
"El atributo «[test]`» significa que la función es una función de prueba, y "
"el atributo «[ should_panic]` significa que esta prueba pasará si la "
"ejecución de la prueba entra en pánico."

#: src/ch09-02-recoverable-errors.md:127
msgid ""
"The first one tests a valid conversion from `felt252` to `u8`, expecting the "
"`unwrap` method not to panic. The second test function attempts to convert a "
"value that is out of the `u8` range, expecting the `unwrap` method to panic "
"with the error message `Invalid integer`."
msgstr ""
"La primera prueba una conversión válida de `felt252` a `u8`, esperando que "
"el método `unwrap` no entre en pánico. La segunda función de prueba intenta "
"convertir un valor que está fuera del rango `u8`, esperando que el método "
"`unwrap` entre en pánico con el mensaje de error `Entero inválido`."

#: src/ch09-02-recoverable-errors.md:132
msgid "The `?` Operator"
msgstr "¿La operadora?"

#: src/ch09-02-recoverable-errors.md:134
msgid ""
"The last operator we will talk about is the `?` operator. The `?` operator "
"is used for more idiomatic and concise error handling. When you use the `?` "
"operator on a `Result` or `Option` type, it will do the following:"
msgstr ""
"El último operador del que hablaremos es el operador `?`. El operador `?` se "
"utiliza para una manipulación de errores más idiomática y concisa. Cuando "
"utilice el operador `?` en un tipo `Resultado` o `Opción`, hará lo siguiente:"

#: src/ch09-02-recoverable-errors.md:136
msgid ""
"If the value is `Result::Ok(x)` or `Option::Some(x)`, it will return the "
"inner value `x` directly."
msgstr ""
"Si el valor es `Resultado::Ok(x)` o `Opción::Some(x)`, devolverá el valor "
"interno `x` directamente."

#: src/ch09-02-recoverable-errors.md:137
msgid ""
"If the value is `Result::Err(e)` or `Option::None`, it will propagate the "
"error or `None` by immediately returning from the function."
msgstr ""
"Si el valor es `Resultado::Err(e)` o `Opción::Ninguno`, propagará el error o "
"`Ninguno` regresando inmediatamente de la función."

#: src/ch09-02-recoverable-errors.md:139
msgid ""
"The `?` operator is useful when you want to handle errors implicitly and let "
"the calling function deal with them."
msgstr ""
"El operador `?` es útil cuando desea manejar errores implícitamente y dejar "
"que la función de llamada se ocupe de ellos."

#: src/ch09-02-recoverable-errors.md:146 src/ch09-02-recoverable-errors.md:166
msgid "// DO SOMETHING\n"
msgstr "// HACER ALGO\n"

#: src/ch09-02-recoverable-errors.md:152
msgid ""
"We can see that `do_something_with_parse_u8` function takes a `felt252` "
"value as input and calls `parse_u8` function. The `?` operator is used to "
"propagate the error, if any, or unwrap the successful value."
msgstr ""
"Podemos ver que la función `do_something_with_parse_u8` toma un valor "
"`felt252` como entrada y llama a la función `parse_u8`. El operador `?` se "
"utiliza para propagar el error, en su caso, o desenvolver el valor exitoso."

#: src/ch09-02-recoverable-errors.md:154
msgid "And with a little test case:"
msgstr "Y con un pequeño caso de prueba:"

#: src/ch09-02-recoverable-errors.md:178
msgid "\"Result: {}\""
msgstr "\"Resultado:"

#: src/ch09-02-recoverable-errors.md:179
msgid "\"Error: {}\""
msgstr "\"Error:"

#: src/ch09-02-recoverable-errors.md:186
msgid "The console will print the error `Invalid Integer`."
msgstr "La consola imprimirá el error `Integer Inválido`."

#: src/ch09-02-recoverable-errors.md:190
msgid ""
"We saw that recoverable errors can be handled in Cairo using the `Result` "
"enum, which has two variants: `Ok` and `Err`. The `Result<T, E>` enum is "
"generic, with types `T` and `E` representing the successful and error "
"values, respectively. The `ResultTrait` provides methods for working with "
"`Result<T, E>`, such as unwrapping values, checking if the result is `Ok` or "
"`Err`, and panicking with custom messages."
msgstr ""
"Vimos que los errores recuperables se pueden manejar en El Cairo utilizando "
"el enum `Resultado`, que tiene dos variantes: `Ok` y `Err`. El `Resultado<T, "
"E' enum es genérico, con los tipos `T` y `E` que representan los valores de "
"éxito y de error, respectivamente. El `Resultado` proporciona métodos para "
"trabajar con `Resultado<T, E`, tales como valores de desenvolver, comprobar "
"si el resultado es `Ok` o `Errr`, y entrar en pánico con mensajes "
"personalizados."

#: src/ch09-02-recoverable-errors.md:192
msgid ""
"To handle recoverable errors, a function can return a `Result` type and use "
"pattern matching to handle the success or failure of an operation. The `?` "
"operator can be used to implicitly handle errors by propagating the error or "
"unwrapping the successful value. This allows for more concise and clear "
"error handling, where the caller is responsible for managing errors raised "
"by the called function."
msgstr ""
"Para manejar errores recuperables, una función puede devolver un tipo de "
"`Resultado` y utilizar un patrón que coincida para manejar el éxito o el "
"fracaso de una operación. El operador `?` se puede utilizar para manejar "
"errores implícitamente propagando el error o desenvolviendo el valor "
"exitoso. Esto permite un manejo de errores más conciso y claro, donde el "
"llamante es responsable de manejar los errores planteados por la función "
"llamada."

#: src/ch09-02-recoverable-errors.md:194
msgid "{{#quiz ../quizzes/ch09-02-error-handling-result.toml}}"
msgstr "quiz../quizzes/ch09-02-error-manipulación-resultado.toml"

#: src/ch10-00-testing-cairo-programs.md
msgid ""
"Correctness in our programs is the extent to which our code does what we "
"intend it to do. Cairo is designed with a high degree of concern about the "
"correctness of programs, but correctness is complex and not easy to prove. "
"Cairo's linear type system shoulders a huge part of this burden, but the "
"type system cannot catch everything. As such, Cairo includes support for "
"writing tests."
msgstr ""
"La corrección en nuestros programas es la medida en que nuestro código hace "
"lo que pretendemos que haga. El Cairo está diseñado con un alto grado de "
"preocupación sobre la corrección de los programas, pero la corrección es "
"compleja y no es fácil de probar. El sistema de tipo lineal de El Cairo "
"soporta una gran parte de esta carga, pero el sistema de tipo no puede "
"atrapar todo."

#: src/ch10-00-testing-cairo-programs.md
msgid ""
"Testing is a complex skill: although we can’t cover every detail about how "
"to write good tests in one chapter, we’ll discuss the mechanics of Cairo's "
"testing facilities. We’ll talk about the annotations and macros available to "
"you when writing your tests, the default behavior and options provided for "
"running your tests, and how to organize tests into unit tests and "
"integration tests."
msgstr ""
"Las pruebas son una habilidad compleja: aunque no podemos cubrir todos los "
"detalles sobre cómo escribir buenas pruebas en un capítulo, vamos a discutir "
"la mecánica de las instalaciones de pruebas de El Cairo. Hablaremos de las "
"anotaciones y macros disponibles para usted al escribir sus pruebas, el "
"comportamiento predeterminado y las opciones proporcionadas para ejecutar "
"sus pruebas, y cómo organizar las pruebas en pruebas unitarias y pruebas de "
"integración."

#: src/ch10-01-how-to-write-tests.md:3 src/ch10-01-how-to-write-tests.md:17
msgid "The Anatomy of a Test Function"
msgstr "La anatomía de una función de prueba"

#: src/ch10-01-how-to-write-tests.md:5
msgid ""
"Tests are Cairo functions that verify that the non-test code is functioning "
"in the expected manner. The bodies of test functions typically perform these "
"three actions:"
msgstr ""
"Las pruebas son funciones de El Cairo que verifican que el código no test "
"funciona de la manera esperada. Los cuerpos de las funciones de prueba "
"normalmente realizan estas tres acciones:"

#: src/ch10-01-how-to-write-tests.md:7
msgid "Set up any needed data or state."
msgstr "Configure cualquier dato o estado necesario."

#: src/ch10-01-how-to-write-tests.md:8
msgid "Run the code you want to test."
msgstr "Ejecute el código que desea probar."

#: src/ch10-01-how-to-write-tests.md:9
msgid "Assert the results are what you expect."
msgstr "Asegura que los resultados son lo que esperas."

#: src/ch10-01-how-to-write-tests.md:11
msgid ""
"Let’s look at the features Cairo provides for writing tests that take these "
"actions, which include:"
msgstr ""
"Echemos un vistazo a las características que El Cairo proporciona para las "
"pruebas de escritura que toman estas acciones, que incluyen:"

#: src/ch10-01-how-to-write-tests.md:13
msgid "`#[test]` attribute."
msgstr "Atributo «[test]`."

#: src/ch10-01-how-to-write-tests.md:14
msgid ""
"`assert!`, `assert_eq!`, `assert_ne!`, `assert_lt!`, `assert_le!`, "
"`assert_gt!` and `assert_ge!` macros."
msgstr ""
"`Assert!`, `assert_eq!`, `assert_ne!`, `assert_lt!`, `assert_le!`, "
"`assert_gt!` y `assert_ge!` macros."

#: src/ch10-01-how-to-write-tests.md:15
msgid "`#[should_panic]` attribute."
msgstr "Atributo •[debería_panic]`."

#: src/ch10-01-how-to-write-tests.md:19
msgid ""
"At its simplest, a test in Cairo is a function that’s annotated with the "
"`#[test]` attribute. Attributes are metadata about pieces of Cairo code; one "
"example is the `#[derive()]` attribute we used with structs in [Chapter 5]"
"(ch05-01-defining-and-instantiating-structs.md). To change a function into a "
"test function, add `#[test]` on the line before `fn`. When you run your "
"tests with the `scarb cairo-test` command, Scarb runs Cairo's test runner "
"binary that runs the annotated functions and reports on whether each test "
"function passes or fails."
msgstr ""
"En su más simple, una prueba en El Cairo es una función que está anotada con "
"el atributo \"[test]`. Los atributos son metadatos sobre piezas de código de "
"El Cairo; un ejemplo es el atributo \"[derive()]` que usamos con las "
"estructuras en [Capítulo 5](ch05-01-defining-and-instantiating-structs.md). "
"Para cambiar una función en una función de prueba, añada \"[test]` en la "
"línea antes de \"fn\". Cuando ejecute sus pruebas con el comando \"escarb "
"cairo-test\", Scarb ejecuta el binario de corredor de pruebas de El Cairo "
"que ejecuta las funciones anotadas e informa sobre si cada función de prueba "
"pasa o falla."

#: src/ch10-01-how-to-write-tests.md:21
msgid ""
"Let's create a new project called _adder_ using Scarb with the command "
"`scarb new adder`:"
msgstr ""
"Vamos a crear un nuevo proyecto llamado _adder_ usando Scarb con el comando "
"`scarb new adder`:"

#: src/ch10-01-how-to-write-tests.md:30
msgid ""
"In _lib.cairo_, let's remove the existing content and add a `tests` module "
"containing the first test, as shown in Listing 10-1."
msgstr ""
"En _lib.cairo_, eliminemos el contenido existente y añadamos un módulo de "
"`pruebas` que contenga la primera prueba, como se muestra en Listar 10-1."

#: src/ch10-01-how-to-write-tests.md:51
msgid "<span class=\"caption\">Listing 10-1: A simple test function</span>"
msgstr ""
"<span class=\"caption\">Lista 10-1: Una función de prueba simple</span>"

#: src/ch10-01-how-to-write-tests.md:53
msgid ""
"Note the `#[test]` annotation: this attribute indicates this is a test "
"function, so the test runner knows to treat this function as a test. We "
"might also have non-test functions to help set up common scenarios or "
"perform common operations, so we always need to indicate which functions are "
"tests."
msgstr ""
"Tenga en cuenta la anotación de la prueba: este atributo indica que se trata "
"de una función de prueba, por lo que el corredor de la prueba sabe tratar "
"esta función como una prueba. También podríamos tener funciones que no son "
"pruebas para ayudar a establecer escenarios comunes o realizar operaciones "
"comunes, por lo que siempre necesitamos indicar qué funciones son pruebas."

#: src/ch10-01-how-to-write-tests.md:55
msgid ""
"We use the `#[cfg(test)]` attribute for the `tests` module, so that the "
"compiler knows the code it contains needs to be compiled only when running "
"tests. This is actually not an option: if you put a simple test with the "
"`#[test]` attribute in a _lib.cairo_ file, it will not compile. We will talk "
"more about the `#[cfg(test)]` attribute in the next [Testing Organization]"
"(ch10-02-test-organization.md) section."
msgstr ""
"Para el módulo `tests` se utiliza el atributo •[cfg(test)]`, de modo que el "
"compilador conoce el código que contiene sólo necesita ser compilado cuando "
"se ejecutan pruebas. Esto no es una opción: si se pone una prueba simple con "
"el atributo •[test]` en un archivo _lib.cairo_, no se compilará. Hablaremos "
"más sobre el atributo •[cfg(test)]` en la siguiente sección [Organización de "
"pruebas](ch10-02-test-organization.md)."

#: src/ch10-01-how-to-write-tests.md:57
msgid ""
"The example function body uses the `assert!` macro, which contains the "
"result of adding 2 and 2, which equals 4. This assertion serves as an "
"example of the format for a typical test. We'll explain in more detail how "
"`assert!` works later in this chapter. Let’s run it to see that this test "
"passes."
msgstr ""
"El cuerpo de la función de ejemplo utiliza la macro `assert!`, que contiene "
"el resultado de añadir 2 y 2, que es igual a 4. Esta afirmación sirve como "
"un ejemplo del formato para una prueba típica. Explicaremos con más detalle "
"cómo `assert!` funciona más adelante en este capítulo. Vamos a ejecutarlo "
"para ver que esta prueba pasa."

#: src/ch10-01-how-to-write-tests.md:59
msgid ""
"The `scarb cairo-test` command runs all tests found in our project, and "
"shows the following output:"
msgstr ""
"El comando `scarb cairo-test` ejecuta todas las pruebas encontradas en "
"nuestro proyecto, y muestra la siguiente salida:"

#: src/ch10-01-how-to-write-tests.md:69
msgid ""
"`scarb cairo-test` compiled and ran the test. We see the line `running 1 "
"test`. The next line shows the name of the test function, called `it_works`, "
"and that the result of running that test is `ok`. The test runner also "
"provides an estimation of the gas consumption. The overall summary `test "
"result: ok.` means that all the tests passed, and the portion that reads `1 "
"passed; 0 failed` totals the number of tests that passed or failed."
msgstr ""
"La siguiente línea muestra el nombre de la función de prueba, llamada "
"`it_works`, y que el resultado de la ejecución de esa prueba es `ok`. El "
"corredor de la prueba también proporciona una estimación del consumo de gas. "
"El resumen general `test result: ok.` significa que todas las pruebas "
"pasaron, y la porción que dice `1 pasó; 0 falló` totaliza el número de "
"pruebas que pasaron o fallaron."

#: src/ch10-01-how-to-write-tests.md:71
msgid ""
"It’s possible to mark a test as ignored so it doesn’t run in a particular "
"instance; we’ll cover that in the [Ignoring Some Tests Unless Specifically "
"Requested](#ignoring-some-tests-unless-specifically-requested) section later "
"in this chapter. Because we haven’t done that here, the summary shows `0 "
"ignored`. We can also pass an argument to the `scarb cairo-test` command to "
"run only a test whose name matches a string; this is called filtering and "
"we’ll cover that in the [Running Single Tests](#running-single-tests) "
"section. Since we haven’t filtered the tests being run, the end of the "
"summary shows `0 filtered out`."
msgstr ""
"Es posible marcar una prueba como ignorada para que no se ejecute en una "
"instancia en particular; cubriremos eso en la sección [Ignorar algunas "
"pruebas a menos que se soliciten específicamente] (#ignoring-some-tests-a "
"menos que se solicite específicamente) más adelante en este capítulo. Debido "
"a que no lo hemos hecho aquí, el resumen muestra `0 ignorado`. También "
"podemos pasar un argumento al comando `scarb cairo-test` para ejecutar sólo "
"una prueba cuyo nombre coincide con una cadena; esto se llama filtrado y lo "
"cubriremos en la sección [Running Single Tests] (#running-single tests). "
"Como no hemos filtrado las pruebas que se están ejecutando, el final del "
"resumen muestra `0 filtrado`."

#: src/ch10-01-how-to-write-tests.md:73
msgid ""
"Let’s start to customize the test to our own needs. First change the name of "
"the `it_works` function to a different name, such as `exploration`, like so:"
msgstr ""
"Comencemos a personalizar la prueba a nuestras propias necesidades. Primero "
"cambie el nombre de la función `it_works` a un nombre diferente, como "
"`exploración`, así:"

#: src/ch10-01-how-to-write-tests.md:83
msgid ""
"Then run `scarb cairo-test` again. The output now shows `exploration` "
"instead of `it_works`:"
msgstr ""
"Luego vuelva a ejecutar `scarb cairo-test`. La salida ahora muestra "
"`exploración` en lugar de `it_works`:"

#: src/ch10-01-how-to-write-tests.md:93
msgid ""
"Now we’ll add another test, but this time we’ll make a test that fails! "
"Tests fail when something in the test function panics. Each test is run in a "
"new thread, and when the main thread sees that a test thread has died, the "
"test is marked as failed. Enter the new test as a function named `another`, "
"so your _src/lib.cairo_ file looks like in Listing 10-2."
msgstr ""
"Ahora vamos a añadir otra prueba, pero esta vez vamos a hacer una prueba que "
"falla! Las pruebas fallan cuando algo en la función de prueba entra en "
"pánico. Cada prueba se ejecuta en un nuevo hilo, y cuando el hilo principal "
"ve que un hilo de prueba ha muerto, la prueba está marcada como fallida. "
"Introduzca la nueva prueba como una función llamada `otro`, por lo que su "
"_src/lib.cairo_ archivo se ve como en Listado 10-2."

#: src/ch10-01-how-to-write-tests.md:109
msgid "\"Make this test fail\""
msgstr "\"Haz que esta prueba fracase\""

#: src/ch10-01-how-to-write-tests.md:115
msgid ""
"<span class=\"caption\">Listing 10-2: Adding a second test in _lib.cairo_ "
"that will fail</span>"
msgstr ""
"<span class=\"caption\">Lista 10-2: Añadir una segunda prueba en _lib.cairo_ "
"que fallará</span>"

#: src/ch10-01-how-to-write-tests.md:117
msgid "Run `scarb cairo-test` and you will see the following output:"
msgstr "Ejecute `scarb cairo-test` y verá la siguiente salida:"

#: src/ch10-01-how-to-write-tests.md:119
#, fuzzy
msgid ""
"```shell\n"
"$ scarb cairo-test \n"
"     Running cairo-test listing_08_03\n"
"   Compiling test(listings/ch10-testing-cairo-programs/listing_10_02/Scarb."
"toml)\n"
"    Finished release target(s) in 1 second\n"
"testing listing_08_03 ...\n"
"running 2 tests\n"
"test listing_08_03::tests::exploration ... ok (gas usage est.: 127300)\n"
"test listing_08_03::tests::another ... fail (gas usage est.: 24810)\n"
"failures:\n"
"   listing_08_03::tests::another - Panicked with \"Make this test fail\".\n"
"\n"
"\n"
"```"
msgstr ""
"La prueba de compilación (listas/ch10-testing-cairo-programs/listing_10_02/"
"Scarb.toml) Finalizada la liberación objetivo(s) en 1 segunda prueba "
"listing_08_03... ejecución de 2 pruebas listing de pruebas_08_03::tests:::"
"exploration... ok (gas use est.: 22540) la prueba listing_08_03::tests:::"
"another... fail (gas use est.: 24810) fallas: listing_08_03::tests::::"
"another - Panicked with \"Make this test fail\"."

#: src/ch10-01-how-to-write-tests.md:134
msgid ""
"Instead of `ok`, the line `adder::another` shows `fail`. A new section "
"appears between the individual results and the summary. It displays the "
"detailed reason for each test failure. In this case, we get the details that "
"`another` failed because it panicked with `\"Make this test fail\"` error."
msgstr ""
"En lugar de `ok`, la línea `adder::another` muestra `fail`. Aparece una "
"nueva sección entre los resultados individuales y el resumen. Muestra la "
"razón detallada de cada fallo de prueba. En este caso, obtenemos los "
"detalles de que `otro` falló porque entró en pánico con `\"Haga que esta "
"prueba falle\"` error."

#: src/ch10-01-how-to-write-tests.md:136
msgid ""
"The summary line is displayed at the end: overall, our test result is "
"`FAILED`. We had one test pass and one test fail."
msgstr ""
"La línea de resumen se muestra al final: en general, nuestro resultado de la "
"prueba es `FAILED`. Tuvimos un pase de prueba y un fallo de prueba."

#: src/ch10-01-how-to-write-tests.md:138
msgid ""
"Now that you’ve seen what the test results look like in different scenarios, "
"let’s look at some functions that are useful in tests."
msgstr ""
"Ahora que usted ha visto cómo se ven los resultados de la prueba en "
"diferentes escenarios, vamos a ver algunas funciones que son útiles en las "
"pruebas."

#: src/ch10-01-how-to-write-tests.md:140
msgid "Checking Results with the `assert!` Macro"
msgstr "Comprobar los resultados con la macro `asertar!`"

#: src/ch10-01-how-to-write-tests.md:142
msgid ""
"The `assert!` macro, provided by Cairo, is useful when you want to ensure "
"that some condition in a test evaluates to `true`. We give the `assert!` "
"macro the first argument that evaluates to a boolean. If the value is "
"`true`, nothing happens and the test passes. If the value is `false`, the "
"`assert!` macro calls `panic()` to cause the test to fail with a message we "
"defined as the second argument. Using the `assert!` macro helps us check "
"that our code is functioning in the way we intended."
msgstr ""
"La macro `asertar!`, proporcionada por El Cairo, es útil cuando se desea "
"asegurar que alguna condición en una prueba se evalúa a `verdadero`. Damos a "
"la macro `asertar!` el primer argumento que se evalúa a un booleano. Si el "
"valor es `verdadero`, no pasa nada y la prueba pasa. Si el valor es `falso`, "
"la macro `asertar!` llama a `panic()` para hacer que la prueba falle con un "
"mensaje que definimos como el segundo argumento. El uso de la macro "
"`asertar!'nos ayuda a comprobar que nuestro código está funcionando de la "
"manera que se pretendía."

#: src/ch10-01-how-to-write-tests.md:144
msgid ""
"Remember in [Chapter 5](./ch05-03-method-syntax.md), we used a `Rectangle` "
"struct and a `can_hold` method, which are repeated here in Listing 10-3. "
"Let’s put this code in the _src/lib.cairo_ file, then write some tests for "
"it using the `assert!` macro."
msgstr ""
"Recuerde en [Capítulo 5](./ch05-03-method-syntax.md), usamos una estructura "
"`Rectangle` y un método `can_hold`, que se repiten aquí en la Lista 10-3. "
"Pongamos este código en el archivo _src/lib.cairo_, luego escribamos algunas "
"pruebas para ello usando la macro `asertar!`."

#: src/ch10-01-how-to-write-tests.md:166
msgid ""
"<span class=\"caption\">Listing 10-3: Using the `Rectangle` struct and its "
"`can_hold` method from Chapter 5</span>"
msgstr ""
"<span class=\"caption\">Lista 10-3: Utilizando la estructura `Rectangle` y "
"su método `can_hold` del capítulo 5</span>"

#: src/ch10-01-how-to-write-tests.md:168
msgid ""
"The `can_hold` method returns a `bool`, which means it’s a perfect use case "
"for the `assert!` macro. We can write a test that exercises the `can_hold` "
"method by creating a `Rectangle` instance that has a width of `8` and a "
"height of `7` and asserting that it can hold another `Rectangle` instance "
"that has a width of `5` and a height of `1`."
msgstr ""
"El método `can_hold` devuelve un `bool`, lo que significa que es un caso de "
"uso perfecto para la macro `assert!`. Podemos escribir una prueba que ejerce "
"el método `can_hold` creando una instancia `Rectangle` que tiene una anchura "
"de `8` y una altura de `7` y afirmando que puede sostener otra instancia "
"`Rectangle` que tiene una anchura de `5` y una altura de `1`."

#: src/ch10-01-how-to-write-tests.md:197 src/ch10-01-how-to-write-tests.md:210
#: src/ch10-01-how-to-write-tests.md:257 src/ch10-01-how-to-write-tests.md:270
msgid "\"rectangle cannot hold\""
msgstr "\"El rectángulo no puede sostener\""

#: src/ch10-01-how-to-write-tests.md:216
msgid ""
"We’ve named our test `larger_can_hold_smaller`, and we’ve created the two "
"`Rectangle` instances that we need. Then we called the `assert!` macro and "
"passed it the result of calling `larger.can_hold(@smaller)`. This expression "
"is supposed to return `true`, so our test should pass. Let’s find out!"
msgstr ""
"Hemos llamado a nuestra prueba `larger_can_hold_smaller`, y hemos creado las "
"dos instancias `Rectangle` que necesitamos. Luego llamamos a la macro "
"`assert!` y lo pasamos el resultado de llamar a `larger.can_hold(@smaller)`. "
"Esta expresión se supone que devuelve `verdadero`, por lo que nuestra prueba "
"debe pasar. Vamos a averiguar!"

#: src/ch10-01-how-to-write-tests.md:226
msgid ""
"It does pass! Let’s add another test, this time asserting that a smaller "
"rectangle cannot hold a larger rectangle:"
msgstr ""
"¡Pasa! Agreguemos otra prueba, esta vez afirmando que un rectángulo más "
"pequeño no puede sostener un rectángulo más grande:"

#: src/ch10-01-how-to-write-tests.md:276
msgid ""
"<span class=\"caption\">Listing 10-4: Adding another test in _lib.cairo_ "
"that will pass</span>"
msgstr ""
"<span class=\"caption\">Lista 10-4: Añadir otra prueba en _lib.cairo_ que "
"pasará</span>"

#: src/ch10-01-how-to-write-tests.md:278
msgid ""
"Because the correct result of the `can_hold` method, in this case, is "
"`false`, we need to negate that result before we pass it to the `assert!` "
"macro. As a result, our test will pass if `can_hold` returns `false`:"
msgstr ""
"Debido a que el resultado correcto del método `can_hold`, en este caso, es "
"`falso`, tenemos que negar ese resultado antes de pasarlo a la macro "
"`asertar!`. Como resultado, nuestra prueba pasará si `can_hold` devuelve "
"`falso`:"

#: src/ch10-01-how-to-write-tests.md:294
msgid ""
"Two tests that pass! Now let’s see what happens to our test results when we "
"introduce a bug in our code. We’ll change the implementation of the "
"`can_hold` method by replacing the `>` sign with a `<` sign when it compares "
"the widths:"
msgstr ""
"¡Dos pruebas que pasan! Ahora vamos a ver lo que sucede con nuestros "
"resultados de prueba cuando introducimos un error en nuestro código. "
"Cambiaremos la implementación del método `can_hold` reemplazando el signo  "
"con un signo  cuando se comparan los anchos:"

#: src/ch10-01-how-to-write-tests.md:304
msgid "Running the tests now produces the following:"
msgstr "La ejecución de las pruebas ahora produce lo siguiente:"

#: src/ch10-01-how-to-write-tests.md:306
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 2 tests\n"
"test adder::tests::larger_can_hold_smaller ... fail (gas usage est.: 57610)\n"
"test adder::tests::smaller_cannot_hold_larger ... ok (gas usage est.: "
"55140)\n"
"failures:\n"
"   adder::larger_can_hold_smaller - Panicked with \"rectangle cannot "
"hold\".\n"
"\n"
"Error: test result: FAILED. 1 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"Error: resultado de la prueba: FAILED. 1 aprobado; 1 fallado; 0 ignorado"

#: src/ch10-01-how-to-write-tests.md:318
msgid ""
"Our tests caught the bug! Because `larger.width` is `8` and `smaller.width` "
"is `5`, the comparison of the widths in `can_hold` now returns `false` (`8` "
"is not less than `5`) in the `larger_can_hold_smaller` test. Notice that the "
"`smaller_cannot_hold_larger` test still passes: to make this test fail, the "
"height comparison should also be modified in `can_hold` method, replacing "
"the `>` sign with a `<` sign."
msgstr ""
"Debido a que `larger.width` es `8` y `larger.width` es `5`, la comparación "
"de las anchuras en `can_hold` ahora devuelve `false` (`8` no es menor que "
"`5`) en la prueba `larger_can_hold_smaller`. Observe que la prueba "
"`larger_cannot_hold_larger` sigue pasando: para que esta prueba fracase, la "
"comparación de altura también debe modificarse en el método `can_hold`, "
"sustituyendo el signo  por un signo."

#: src/ch10-01-how-to-write-tests.md:322
msgid "Testing Equality and Comparisons with the `assert_xx!` Macros"
msgstr "Pruebas de igualdad y comparaciones con las macros `assert_xx!`"

#: src/ch10-01-how-to-write-tests.md:324
msgid "`assert_eq!` and `assert_ne!` Macros"
msgstr "`assert_eq!` y `assert_ne!` Macros"

#: src/ch10-01-how-to-write-tests.md:326
msgid ""
"A common way to verify functionality is to test for equality between the "
"result of the code under test and the value you expect the code to return. "
"You could do this using the `assert!` macro and passing it an expression "
"using the `==` operator. However, this is such a common test that the "
"standard library provides a pair of macros — `assert_eq!` and `assert_ne!` — "
"to perform this test more conveniently. These macros compare two arguments "
"for equality or inequality, respectively. They’ll also print the two values "
"if the assertion fails, which makes it easier to see _why_ the test failed; "
"conversely, the `assert!` macro only indicates that it got a `false` value "
"for the `==` expression, without printing the values that led to the `false` "
"value."
msgstr ""
"Una forma común de verificar la funcionalidad es probar la igualdad entre el "
"resultado del código que se está probando y el valor que se espera que el "
"código devuelva. Usted podría hacer esto usando la macro `asertar!` y "
"pasarla una expresión usando el operador `==`. Sin embargo, esta es una "
"prueba tan común que la biblioteca estándar proporciona un par de macros - "
"`assert_eq!` y `assert_ne!` - para realizar esta prueba más "
"convenientemente. Estas macros comparan dos argumentos de igualdad o "
"desigualdad, respectivamente. También imprimirán los dos valores si la "
"afirmación falla, lo que hace más fácil ver _por qué_ la prueba falló; por "
"el contrario, la macro `asert!` sólo indica que obtuvo un valor `falso` para "
"la expresión `==`, sin imprimir los valores que dieron lugar al valor "
"`falso`."

#: src/ch10-01-how-to-write-tests.md:337
msgid ""
"In Listing 10-5, we write a function named `add_two` that adds `2` to its "
"parameter, then we test this function using `assert_eq!` and `assert_ne!` "
"macros."
msgstr ""
"En Listar 10-5, escribimos una función llamada `add_two` que añade `2` a su "
"parámetro, luego probamos esta función usando macros `assert_eq!` y "
"`assert_ne!`."

#: src/ch10-01-how-to-write-tests.md:363
msgid ""
"<span class=\"caption\">Listing 10-5: Testing the function `add_two` using "
"`assert_eq!` and `assert_ne!` macros</span>"
msgstr ""
"<span class=\"caption\">Lista 10-5: Probando la función `add_two` usando "
"`assert_eq!` y `assert_ne!` macros</span>"

#: src/ch10-01-how-to-write-tests.md:365
msgid "Let’s check that it passes!"
msgstr "¡Comprobemos que pasa!"

#: src/ch10-01-how-to-write-tests.md:376
msgid ""
"In the `it_adds_two` test, we pass `4` as argument to `assert_eq!` macro, "
"which is equal to the result of calling `add_two(2)`. The line for this test "
"is `test adder::tests::it_adds_two ... ok`, and the `ok` text indicates that "
"our test passed."
msgstr ""
"En la prueba `it_adds_two`, pasamos `4` como argumento a `assert_eq!` macro, "
"que es igual al resultado de llamar a `add_two(2)`. La línea para esta "
"prueba es `test adder::tests::it_adds_two... ok`, y el texto `ok` indica que "
"nuestra prueba pasó."

#: src/ch10-01-how-to-write-tests.md:379
msgid ""
"In the `wrong_check` test, we pass `0` as argument to `assert_ne!` macro, "
"which is not equal to the result of calling `add_two(2)`. Tests that use the "
"`assert_ne!` macro will pass if the two values we give it are _not_ equal "
"and fail if they’re equal. This macro is most useful for cases when we’re "
"not sure what a value _will_ be, but we know what the value definitely "
"_shouldn’t_ be. For example, if we’re testing a function that is guaranteed "
"to change its input in some way, but how the input is changed depends on the "
"day of the week that we run our tests, the best thing to assert might be "
"that the output of the function is not equal to the input."
msgstr ""
"En la prueba `wrong_check`, pasamos `0` como argumento a `assert_ne!` macro, "
"que no es igual al resultado de llamar a `add_two(2)`. Las pruebas que usan "
"la macro `assert_ne!` pasarán si los dos valores que le damos son _no_ "
"iguales y fallan si son iguales. Esta macro es más útil para casos en los "
"que no estamos seguros de lo que un valor _will_ ser, pero sabemos lo que el "
"valor definitivamente _ shouldn’t_ ser. Por ejemplo, si estamos probando una "
"función que está garantizada para cambiar su entrada de alguna manera, pero "
"cómo se cambia la entrada depende del día de la semana en que ejecutamos "
"nuestras pruebas, lo mejor que podemos afirmar es que la salida de la "
"función no es igual a la entrada."

#: src/ch10-01-how-to-write-tests.md:388
msgid ""
"Let’s introduce a bug into our code to see what `assert_eq!` looks like when "
"it fails. Change the implementation of the `add_two` function to instead add "
"`3`:"
msgstr ""
"Vamos a introducir un error en nuestro código para ver cómo se ve `assert_eq!"
"` cuando falla. Cambie la implementación de la función `add_two` para añadir "
"en su lugar `3`:"

#: src/ch10-01-how-to-write-tests.md:397
msgid "Run the tests again:"
msgstr "Ejecutar las pruebas de nuevo:"

#: src/ch10-01-how-to-write-tests.md:399
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 2 tests\n"
"test adder::tests::wrong_check ... ok (gas usage est.: 132000)\n"
"test adder::tests::it_adds_two ... fail (gas usage est.: 166800)\n"
"failures:\n"
"   adder::tests::it_adds_two - Panicked with \"assertion `4 == add_two(2)` "
"failed.\n"
"4: 4\n"
"add_two(2): 5\".\n"
"\n"
"Error: test result: FAILED. 1 passed; 1 failed; 0 ignored\n"
"```"
msgstr ""
"El resultado de la prueba: FAILED. 1 pasó; 1 falló; 0 no se hizo caso de la "
"prueba: 4: 4 add_two(2): 5\". Error: resultado de la prueba: FAILED. 1 pasó; "
"1 falló; 0 no se hizo caso de la prueba: 4: 4 add_two(2): 5\". Error: "
"resultado de la prueba: FAILED. 1 pasó; 1 falló; 0 no se hizo caso de la "
"prueba: 4 add_two(2): 5\" Error: resultado de la prueba: FAILED."

#: src/ch10-01-how-to-write-tests.md:413
msgid ""
"Our test caught the bug! The `it_adds_two` test failed with the following "
"message: ``Panicked with \"assertion `4 == add_two(2)` failed``. It tells us "
"that the assertion that failed was `` \"assertion `left == right` failed`` "
"and the `left` and `right` values are printed on the next lines as `left: "
"left_value` and `right: right_value`. This helps us start debugging: the "
"`left` argument was `4` but the `right` argument, where we had `add_two(2)`, "
"was `5`. You can imagine that this would be especially helpful when we have "
"a lot of tests going on."
msgstr ""
"¡Nuestra prueba captó el error! La prueba `it_adds_two` falló con el "
"siguiente mensaje: ``Panqueado con \"asertion `4\"== add_two(2)` fracasó``. "
"Nos dice que la afirmación que falló fue ``asertion `left == derech` "
"failed`` y los valores `izquierda` y `derecha` se imprimen en las siguientes "
"líneas como `izquierda: left_value` y `derecha: right_value`. Esto nos ayuda "
"a empezar a depurar: el argumento `izquierda` era `4` pero el argumento "
"`derecha`, donde teníamos `add_two(2)`, era `5`. Pueden imaginarse que esto "
"sería especialmente útil cuando tengamos un montón de pruebas en marcha."

#: src/ch10-01-how-to-write-tests.md:421
msgid ""
"Note that in some languages and test frameworks, the parameters for equality "
"assertion functions are called `expected` and `actual`, and the order in "
"which we specify the arguments matters. However, in Cairo, they’re called "
"`left` and `right`, and the order in which we specify the value we expect "
"and the value the code produces doesn’t matter. We could write the assertion "
"in this test as `assert_eq!(add_two(2), 4)`, which would result in the same "
"failure message that displays `` assertion failed: `(left == right)` ``."
msgstr ""
"Tenga en cuenta que en algunos idiomas y marcos de prueba, los parámetros "
"para las funciones de afirmación de la igualdad se llaman `esperados` y "
"`reales`, y el orden en el que especificamos los argumentos importa. Sin "
"embargo, en El Cairo, se llaman `izquierda` y `derecha`, y el orden en el "
"que especificamos el valor que esperamos y el valor que produce el código no "
"importa. Podríamos escribir la afirmación en esta prueba como `assert_eq!"
"(add_dos(2), 4)`, que daría lugar al mismo mensaje de fallo que muestra `` "
"la afirmación falló: `(izquierda == derecha)` ``."

#: src/ch10-01-how-to-write-tests.md:429
msgid ""
"Here is a simple example comparing two structs, showing how to use "
"`assert_eq!` and `assert_ne!` macros:"
msgstr ""
"Aquí hay un ejemplo simple comparando dos structs, mostrando cómo usar "
"macros `assert_eq!` y `assert_ne!`:"

#: src/ch10-01-how-to-write-tests.md:446
msgid "\"{:?},{:?} should be equal\""
msgstr "\" {:?}, {:?} debe ser igual\""

#: src/ch10-01-how-to-write-tests.md:448
msgid "\"{:?},{:?} should not be equal\""
msgstr "\"No debe ser igual\""

#: src/ch10-01-how-to-write-tests.md:452
msgid ""
"Under the surface, `assert_eq!` and `assert_ne!` macros use the operators "
"`==` and `!=`, respectively. They both take snapshots of values as "
"arguments. When the assertions fail, these macros print their arguments "
"using debug formatting (`{:?}` syntax), which means the values being "
"compared must implement `PartialEq` and `Debug` traits. All primitive types "
"and most of the core library types implement these traits. For structs and "
"enums that you define yourself, you’ll need to implement `PartialEq` to "
"assert equality of those types. You’ll also need to implement `Debug` to "
"print the values when the assertion fails. Because both traits are "
"derivable, this is usually as straightforward as adding the `#[derive(Drop, "
"Debug, PartialEq)]` annotation to your struct or enum definition. See "
"[Appendix C](./appendix-03-derivable-traits.md) for more details about these "
"and other derivable traits."
msgstr ""
"Bajo la superficie, `assert_eq!` y `assert_ne!` macros utilizan los "
"operadores `== y `!=, respectivamente. Ambos toman instantáneas de los "
"valores como argumentos. Cuando las afirmaciones fallan, estas macros "
"imprimen sus argumentos usando el formato de depuración (:? sintaxis), lo "
"que significa que los valores que se comparan deben implementar rasgos "
"`PartialEq` y `Debug`. Todos los tipos primitivos y la mayoría de los tipos "
"de bibliotecas centrales implementan estos rasgos. Para las estructuras y "
"enums que usted mismo define, necesitará implementar `PartialEq` para "
"afirmar la igualdad de esos tipos. También necesitará implementar `Debug` "
"para imprimir los valores cuando falla la afirmación. Debido a que ambos "
"rasgos son derivables, esto suele ser tan sencillo como añadir los "
"`derive(Drop, Debug, ParcialEq)` anotación a su definición de estructura o "
"enum. Véase [Appendix C](./appendix-03-derivable-traits.m) para obtener más "
"detalles."

#: src/ch10-01-how-to-write-tests.md:463
msgid "`assert_lt!`, `assert_le!`, `assert_gt!` and `assert_ge!` Macros"
msgstr "`assert_lt!`, `assert_le!`, `assert_gt!` y `assert_ge!` Macros"

#: src/ch10-01-how-to-write-tests.md:465
msgid "Comparisons in tests can be done using the `assert_xx!` macros:"
msgstr ""
"Las comparaciones en las pruebas se pueden hacer usando las macros "
"`assert_xx!`:"

#: src/ch10-01-how-to-write-tests.md:467
msgid ""
"`assert_lt!` checks if a given value is lower than another value, and "
"reverts otherwise."
msgstr ""
"`assert_lt!` comprueba si un valor dado es menor que otro valor, y revierte "
"lo contrario."

#: src/ch10-01-how-to-write-tests.md:468
msgid ""
"`assert_le!` checks if a given value is lower or equal than another value, "
"and reverts otherwise."
msgstr ""
"`assert_le!` comprueba si un valor dado es inferior o igual a otro valor, y "
"revierte lo contrario."

#: src/ch10-01-how-to-write-tests.md:469
msgid ""
"`assert_gt!` checks if a given value is greater than another value, and "
"reverts otherwise."
msgstr ""
"`assert_gt!` comprueba si un valor dado es mayor que otro valor, y revierte "
"lo contrario."

#: src/ch10-01-how-to-write-tests.md:470
msgid ""
"`assert_ge!` checks if a given value is greater or equal than another value, "
"and reverts otherwise."
msgstr ""
"`assert_ge!` comprueba si un valor dado es mayor o igual que otro valor, y "
"revierte lo contrario."

#: src/ch10-01-how-to-write-tests.md:472
msgid "Listing 10-6 demonstrates how to use these macros:"
msgstr "El listado 10-6 demuestra cómo usar estas macros:"

#: src/ch10-01-how-to-write-tests.md:510
msgid "\"{:?},{:?} should be lower or equal\""
msgstr "\"{:?},{:?} debe ser más bajo o igual\""

#: src/ch10-01-how-to-write-tests.md:515
msgid ""
"<span class=\"caption\">Listing 10-6: Example of tests that use the "
"`assert_xx!` macros for comparisons</span>"
msgstr ""
"<span class=\"caption\">Lista 10-6: Ejemplo de pruebas que utilizan las "
"macros `assert_xx!` para comparaciones</span>"

#: src/ch10-01-how-to-write-tests.md:517
msgid ""
"In this example, we roll a `Dice` struct multiple times and compare the "
"results. We need to manually implement the `PartialOrd` trait for our struct "
"so that we can compare `Dice` instances with `lt`, `le`, `gt` and `ge` "
"functions, which are used by `assert_lt!`, `assert_le!`, `assert_gt!` and "
"`assert_ge!` macros, respectively. We also need to derive the `Copy` trait "
"on our `Dice` struct to use the instantiated structs multiple times, as the "
"comparison functions take ownership of the variables."
msgstr ""
"En este ejemplo, lanzamos una estructura de \" dados \" varias veces y "
"comparamos los resultados. Necesitamos poner en práctica manualmente el "
"rasgo \" PartialOrd \" para nuestra estructura, de modo que podamos comparar "
"las instancias de \" dados \" con \" lt \", \" le \", \" gt \" y \"ge \", "
"que son utilizadas por \" assert_lt \", \" assert_le! \", \" assert_gt! \" y "
"\" assert_ge! \" macros, respectivamente. También necesitamos derivar el "
"rasgo \" Copy \" en nuestra estructura de \" dados \" para utilizar las "
"estructuras instantáneas varias veces, ya que las funciones de comparación "
"se hacen cargo de las variables."

#: src/ch10-01-how-to-write-tests.md:519
msgid "Adding Custom Failure Messages"
msgstr "Añadir mensajes de fallo personalizados"

#: src/ch10-01-how-to-write-tests.md:521
msgid ""
"You can also add a custom message to be printed with the failure message as "
"optional arguments to `assert!`, `assert_eq!`, and `assert_ne!` macros. Any "
"arguments specified after the required arguments are passed along to the "
"`format!` macro (discussed in the [Printing](./ch11-08-printing."
"md#formatting) chapter), so you can pass a format string that contains `{}` "
"placeholders and values to go in those placeholders. Custom messages are "
"useful for documenting what an assertion means; when a test fails, you’ll "
"have a better idea of what the problem is with the code."
msgstr ""
"También puede añadir un mensaje personalizado para ser impreso con el "
"mensaje de fallo como argumentos opcionales a `asertar!`, `assert_eq!`, y "
"`assert_ne!` macros. Cualquier argumento especificado después de que los "
"argumentos requeridos se pasan a lo largo de la macro `format!` (discutido "
"en el capítulo [Imprimir](./ch11-08-printing.md#formatting), por lo que "
"puede pasar una cadena de formato que contiene marcadores de posición  y "
"valores para ir en esos marcadores de posición. Los mensajes personalizados "
"son útiles para documentar lo que significa una afirmación; cuando una "
"prueba falla, tendrá una mejor idea de cuál es el problema con el código."

#: src/ch10-01-how-to-write-tests.md:529
msgid ""
"Let’s add a custom failure message composed of a format string with a "
"placeholder filled in with the actual value we got from the `add_two` "
"function:"
msgstr ""
"Agreguemos un mensaje de fallo personalizado compuesto de una cadena de "
"formato con un marcador de posición lleno con el valor real que obtuvimos de "
"la función `add_two`:"

#: src/ch10-01-how-to-write-tests.md:536
msgid "\"Expected {}, got add_two(2)={}\""
msgstr "\"Especulado, tiene add_two(2)=\""

#: src/ch10-01-how-to-write-tests.md:540
msgid "Now when we run the test, we’ll get a more informative error message:"
msgstr ""
"Ahora, cuando ejecutemos la prueba, obtendremos un mensaje de error más "
"informativo:"

#: src/ch10-01-how-to-write-tests.md:542
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing adder ...\n"
"running 1 test\n"
"test adder::tests::it_adds_two ... fail (gas usage est.: 590230)\n"
"failures:\n"
"   adder::tests::it_adds_two - Panicked with \"assertion `4 == add_two(2)` "
"failed: Expected 4, got add_two(2)=5\n"
"4: 4\n"
"add_two(2): 5\".\n"
"\n"
"Error: test result: FAILED. 0 passed; 1 failed; 0 ignored\n"
"```"
msgstr "Error: resultado de la prueba: FAILED. 0 pasado; 1 fallado; 0 ignorado"

#: src/ch10-01-how-to-write-tests.md:555
msgid ""
"We can see the value we actually got in the test output, which would help us "
"debug what happened instead of what we were expecting to happen."
msgstr ""
"Podemos ver el valor que realmente obtuvimos en la salida de prueba, lo que "
"nos ayudaría a depurar lo que pasó en lugar de lo que esperábamos que "
"sucediera."

#: src/ch10-01-how-to-write-tests.md:560
msgid "Checking for panics with `should_panic`"
msgstr "Comprobando si hay pánico con ` should_panic`"

#: src/ch10-01-how-to-write-tests.md:562
msgid ""
"In addition to checking return values, it’s important to check that our code "
"handles error conditions as we expect. For example, consider the `Guess` "
"type in Listing 10-7:"
msgstr ""
"Además de comprobar los valores de retorno, es importante comprobar que "
"nuestro código maneja las condiciones de error como esperamos. Por ejemplo, "
"considere el tipo `Guess` en el listado 10-7:"

#: src/ch10-01-how-to-write-tests.md:579 src/ch10-01-how-to-write-tests.md:631
msgid "\"Guess must be >= 1 and <= 100\""
msgstr "\"La incógnita debe ser > 1 y < = 100\""

#: src/ch10-01-how-to-write-tests.md:587
msgid ""
"<span class=\"caption\">Listing 10-7: `Guess` struct and its `new` method</"
"span>"
msgstr ""
"<span class=\"caption\">Lista 10-7: `Guess` struct y su método `nuevo`</span>"

#: src/ch10-01-how-to-write-tests.md:589
msgid ""
"Other code that uses `Guess` depends on the guarantee that `Guess` instances "
"will contain only values between `1` and `100`. We can write a test that "
"ensures that attempting to create a `Guess` instance with a value outside "
"that range panics."
msgstr ""
"Otro código que utiliza `Guess` depende de la garantía de que las instancias "
"`Guess` contendrán sólo valores entre `1'y `100 '. Podemos escribir una "
"prueba que garantice que el intento de crear una instancia `Guess` con un "
"valor fuera de ese rango entra en pánico."

#: src/ch10-01-how-to-write-tests.md:591
msgid ""
"We do this by adding the attribute `should_panic` to our test function. The "
"test passes if the code inside the function panics; the test fails if the "
"code inside the function doesn’t panic."
msgstr ""
"Lo hacemos añadiendo el atributo ` should_panic` a nuestra función de "
"prueba. La prueba pasa si el código dentro de la función entra en pánico; la "
"prueba falla si el código dentro de la función no entra en pánico."

#: src/ch10-01-how-to-write-tests.md:606
msgid ""
"We place the `#[should_panic]` attribute after the `#[test]` attribute and "
"before the test function it applies to. Let’s look at the result to see that "
"this test passes:"
msgstr ""
"Colocamos el atributo â € ¢[debería_panic]` después del atributo â € "
"[prueba]` y antes de la función de prueba a la que se aplica. Echemos un "
"vistazo al resultado para ver que esta prueba pasa:"

#: src/ch10-01-how-to-write-tests.md:616
msgid ""
"Looks good! Now let’s introduce a bug in our code by removing the condition "
"that the `new` function will panic if the value is greater than `100`:"
msgstr ""
"¡Se ve bien! Ahora vamos a introducir un error en nuestro código eliminando "
"la condición de que la `nueva` función entrará en pánico si el valor es "
"mayor que `100`:"

#: src/ch10-01-how-to-write-tests.md:641
msgid "When we run the test, it will fail:"
msgstr "Cuando hagamos la prueba, fallará:"

#: src/ch10-01-how-to-write-tests.md:654
msgid ""
"We don’t get a very helpful message in this case, but when we look at the "
"test function, we see that it’s annotated with `#[should_panic]` attribute. "
"The failure we got means that the code in the test function did not cause a "
"panic."
msgstr ""
"No recibimos un mensaje muy útil en este caso, pero cuando miramos a la "
"función de prueba, vemos que está anotado con el atributo •[ should_panic]`. "
"El fracaso que tenemos significa que el código en la función de prueba no "
"causó pánico."

#: src/ch10-01-how-to-write-tests.md:656
msgid ""
"Tests that use `should_panic` can be imprecise. A `should_panic` test would "
"pass even if the test panics for a different reason from the one we were "
"expecting. To make `should_panic` tests more precise, we can add an optional "
"`expected` parameter to the `#[should_panic]` attribute. The test harness "
"will make sure that the failure message contains the provided text. For "
"example, consider the modified code for `GuessImpl` in Listing 10-8 where "
"the `new` function panics with different messages depending on whether the "
"value is too small or too large:"
msgstr ""
"Las pruebas que utilizan ` should_panic` pueden ser imprecisas. Una prueba ` "
"should_panic` pasaría incluso si el pánico de la prueba se produce por una "
"razón diferente de la que esperábamos. Para hacer más precisas las pruebas ` "
"should_panic`, podemos añadir un parámetro opcional `esperado` al atributo "
"`[ should_panic]`. El arnés de la prueba se asegurará de que el mensaje de "
"fallo contenga el texto proporcionado. Por ejemplo, considere el código "
"modificado para `GuessImpl` en la lista 10-8 donde la función `nueva` entra "
"en pánico con mensajes diferentes dependiendo de si el valor es demasiado "
"pequeño o demasiado grande:"

#: src/ch10-01-how-to-write-tests.md:673 src/ch10-01-how-to-write-tests.md:708
msgid "\"Guess must be >= 1\""
msgstr "\"Adivinar debe ser > 1\""

#: src/ch10-01-how-to-write-tests.md:675 src/ch10-01-how-to-write-tests.md:687
#: src/ch10-01-how-to-write-tests.md:706 src/ch10-01-how-to-write-tests.md:720
msgid "\"Guess must be <= 100\""
msgstr "\"Adivinar debe ser < = 100\""

#: src/ch10-01-how-to-write-tests.md:696
msgid ""
"<span class=\"caption\">Listing 10-8: `new` implementation that panics with "
"different error messages</span>"
msgstr ""
"<span class=\"caption\">Lista 10-8: `nueva` implementación que entra en "
"pánico con diferentes mensajes de error</span>"

#: src/ch10-01-how-to-write-tests.md:698
msgid ""
"The test will pass because the value we put in the `should_panic` "
"attribute’s `expected` parameter is the string that the `Guess::new` method "
"panics with. We need to specify the entire panic message that we expect."
msgstr ""
"La prueba pasará porque el valor que ponemos en el parámetro `esperado` del "
"atributo `debería_panic` es la cadena con la que entra en pánico el método "
"`Adivina::new`. Necesitamos especificar todo el mensaje de pánico que "
"esperamos."

#: src/ch10-01-how-to-write-tests.md:700
msgid ""
"To see what happens when a `should_panic` test with an expected message "
"fails, let’s again introduce a bug into our code by swapping the bodies of "
"the `if value < 1` and the `else if value > 100` blocks:"
msgstr ""
"Para ver qué sucede cuando falla una prueba ` should_panic` con un mensaje "
"esperado, introduzcamos de nuevo un error en nuestro código intercambiando "
"los cuerpos del `if value < 1` y los bloques `else if > 100`:"

#: src/ch10-01-how-to-write-tests.md:727
msgid "This time when we run the `should_panic` test, it will fail:"
msgstr "Esta vez, cuando ejecutemos la prueba ` should_panic`, fallará:"

#: src/ch10-01-how-to-write-tests.md:729
msgid ""
"```shell\n"
"$ scarb cairo-test\n"
"testing guess ...\n"
"running 1 test\n"
"test guess::tests::greater_than_100 ... fail (gas usage est.: 26690)\n"
"failures:\n"
"   guess::tests::greater_than_100 - Panicked with \"Guess must be >= 1\".\n"
"Error: test result: FAILED. 0 passed; 1 failed; 0 ignored\n"
"```"
msgstr "El resultado de la prueba: FAILED. 0 pasó; 1 falló; 0 ignoró."

#: src/ch10-01-how-to-write-tests.md:739
msgid ""
"The failure message indicates that this test did indeed panic as we "
"expected, but the panic message did not include the expected string. The "
"panic message that we did get in this case was `Guess must be >= 1`. Now we "
"can start figuring out where our bug is!"
msgstr ""
"El mensaje de fallo indica que esta prueba realmente entró en pánico como "
"esperábamos, pero el mensaje de pánico no incluyó la cadena esperada. El "
"mensaje de pánico que obtuvimos en este caso fue `Adivina debe ser > 1`. "
"Ahora podemos empezar a averiguar dónde está nuestro error!"

#: src/ch10-01-how-to-write-tests.md:741
msgid "Running Single Tests"
msgstr "Ejecución de pruebas individuales"

#: src/ch10-01-how-to-write-tests.md:743
msgid ""
"Sometimes, running a full test suite can take a long time. If you’re working "
"on code in a particular area, you might want to run only the tests "
"pertaining to that code. You can choose which tests to run by passing `scarb "
"cairo-test` an option `-f` (for \"filter\"), followed by the name of the "
"test you want to run as an argument."
msgstr ""
"A veces, ejecutar una suite de pruebas completa puede tomar mucho tiempo. Si "
"está trabajando en código en un área en particular, es posible que desee "
"ejecutar sólo las pruebas correspondientes a ese código. Puede elegir qué "
"pruebas ejecutar pasando `scarb cairo-test` una opción `-f` (para "
"\"filtro\"), seguido del nombre de la prueba que desea ejecutar como "
"argumento."

#: src/ch10-01-how-to-write-tests.md:745
msgid ""
"To demonstrate how to run a single test, we’ll first create two test "
"functions, as shown in Listing 10-9, and choose which ones to run."
msgstr ""
"Para demostrar cómo ejecutar una sola prueba, primero crearemos dos "
"funciones de prueba, como se muestra en Listado 10-9, y elegiremos cuáles "
"ejecutar."

#: src/ch10-01-how-to-write-tests.md:761
msgid "\"result is not 5\""
msgstr "\"El resultado no es 5\""

#: src/ch10-01-how-to-write-tests.md:766
msgid ""
"<span class=\"caption\">Listing 10-9: Two tests with two different names</"
"span>"
msgstr ""
"<span class=\"caption\">Lista 10-9: Dos pruebas con dos nombres diferentes</"
"span>"

#: src/ch10-01-how-to-write-tests.md:768
msgid ""
"We can pass the name of any test function to `cairo-test` to run only that "
"test using the `-f` flag:"
msgstr ""
"Podemos pasar el nombre de cualquier función de prueba a `cairo-test` para "
"ejecutar sólo esa prueba utilizando la bandera `-f`:"

#: src/ch10-01-how-to-write-tests.md:778
msgid ""
"Only the test with the name `add_two_and_two` ran; the other test didn’t "
"match that name. The test output lets us know we had one more test that "
"didn’t run by displaying `1 filtered out;` at the end."
msgstr ""
"Sólo la prueba con el nombre `add_two_and_two` corrió; la otra prueba no "
"coincide con ese nombre. La salida de prueba nos permite saber que tuvimos "
"una prueba más que no se ejecutó mostrando `1 filtrado;'al final."

#: src/ch10-01-how-to-write-tests.md:780
msgid ""
"We can also specify part of a test name, and any test whose name contains "
"that value will be run."
msgstr ""
"También podemos especificar parte de un nombre de prueba, y cualquier prueba "
"cuyo nombre contenga ese valor se ejecutará."

#: src/ch10-01-how-to-write-tests.md:782
msgid "Ignoring Some Tests Unless Specifically Requested"
msgstr "Ignorar algunas pruebas a menos que se soliciten específicamente"

#: src/ch10-01-how-to-write-tests.md:784
msgid ""
"Sometimes a few specific tests can be very time-consuming to execute, so you "
"might want to exclude them during most runs of `scarb cairo-test`. Rather "
"than listing as arguments all tests you do want to run, you can instead "
"annotate the time-consuming tests using the `#[ignore]` attribute to exclude "
"them, as shown here:"
msgstr ""
"A veces algunas pruebas específicas pueden llevar mucho tiempo para "
"ejecutarse, por lo que es posible que desee excluirlas durante la mayoría de "
"las carreras de `scarb cairo-test`. En lugar de enumerar como argumentos "
"todas las pruebas que desea ejecutar, puede anotar las pruebas que consumen "
"mucho tiempo utilizando el atributo `[ignore]` para excluirlas, como se "
"muestra aquí:"

#: src/ch10-01-how-to-write-tests.md:803
msgid "// code that takes an hour to run\n"
msgstr "// código que tarda una hora en ejecutarse\n"

#: src/ch10-01-how-to-write-tests.md:808
msgid ""
"After `#[test]` we add the `#[ignore]` line to the test we want to exclude. "
"Now when we run our tests, `it_works` runs, but `expensive_test` doesn’t:"
msgstr ""
"Después de `[test]` añadimos la línea `[ignore]` a la prueba que queremos "
"excluir. Ahora, cuando ejecutamos nuestras pruebas, `it_works` se ejecuta, "
"pero ` caro_test` no lo hace:"

#: src/ch10-01-how-to-write-tests.md:819
msgid "The `expensive_test` function is listed as ignored."
msgstr "La función `exclusive_test` se enumera como ignorada."

#: src/ch10-01-how-to-write-tests.md:821
msgid ""
"When you’re at a point where it makes sense to check the results of the "
"ignored tests and you have time to wait for the results, you can run `scarb "
"cairo-test --include-ignored` to run all tests, whether they’re ignored or "
"not."
msgstr ""
"Cuando estás en un punto en el que tiene sentido comprobar los resultados de "
"las pruebas ignoradas y tienes tiempo para esperar los resultados, puedes "
"ejecutar `scarb cairo-test --include-ignored` para ejecutar todas las "
"pruebas, sean o no ignoradas."

#: src/ch10-01-how-to-write-tests.md:823
msgid "Testing Recursive Functions or Loops"
msgstr "Pruebas de funciones recursivas o loops"

#: src/ch10-01-how-to-write-tests.md:825
msgid ""
"When testing recursive functions or loops, the test is instantiated by "
"default with a maximum amount of gas that it can consume. This prevents "
"running infinite loops or consuming too much gas, and can help you benchmark "
"the efficiency of your implementations. This value is assumed reasonably "
"large enough, but you can override it by adding the "
"`#[available_gas(<Number>)]` attribute to the test function. The following "
"example shows how to use it:"
msgstr ""
"Al probar funciones recursivas o bucles, la prueba se instaura por defecto "
"con una cantidad máxima de gas que puede consumir. Esto evita correr bucles "
"infinitos o consumir demasiado gas, y puede ayudarle a comparar la "
"eficiencia de sus implementaciones. Este valor se supone que es lo "
"suficientemente grande, pero puede anularlo añadiendo el atributo "
"\"[disponible_gas(<Numero>)]` a la función de prueba. El siguiente ejemplo "
"muestra cómo usarlo:"

#: src/ch10-01-how-to-write-tests.md:846
msgid "\"result is not 55\""
msgstr "\"El resultado no es 55\""

#: src/ch10-01-how-to-write-tests.md:851
msgid "Benchmarking the Gas Usage of a Specific Operation"
msgstr "Evaluación comparativa del uso del gas en una operación específica"

#: src/ch10-01-how-to-write-tests.md:853
msgid ""
"When you want to benchmark the gas usage of a specific operation, you can "
"use the following pattern in your test function."
msgstr ""
"Cuando desea comparar el uso de gas de una operación específica, puede "
"utilizar el siguiente patrón en su función de prueba."

#: src/ch10-01-how-to-write-tests.md:858 src/ch10-01-how-to-write-tests.md:885
msgid "/// code we want to bench.\n"
msgstr "/// código que queremos banco.\n"

#: src/ch10-01-how-to-write-tests.md:859
msgid "\"{}\\n\""
msgstr "\"n\""

#: src/ch10-01-how-to-write-tests.md:862
msgid ""
"The following example shows how to use it to test the gas function of the "
"`sum_n` function above."
msgstr ""
"El siguiente ejemplo muestra cómo utilizarlo para probar la función de gas "
"de la función `sum_n` arriba."

#: src/ch10-01-how-to-write-tests.md:887
msgid "\"consumed gas: {}\\n\""
msgstr "\"gas consumido: n\""

#: src/ch10-01-how-to-write-tests.md:892
msgid ""
"The value printed when running `scarb cairo-test` is the amount of gas that "
"was consumed by the benchmarked operation."
msgstr ""
"El valor impreso cuando se ejecuta la prueba de `scarb cairo'es la cantidad "
"de gas consumida por la operación de referencia."

#: src/ch10-01-how-to-write-tests.md:904
msgid ""
"Here, the gas usage of the `sum_n` function is `80690` (decimal "
"representation of the hex number). The total amount consumed by the test is "
"slightly higher at `140100`, due to some extra steps required to run the "
"entire test function."
msgstr ""
"En este caso, el uso de gas de la función `sum_n` es `80690` (representación "
"decimal del número hexadecimal). La cantidad total consumida por el ensayo "
"es ligeramente superior a `140100`, debido a algunos pasos adicionales "
"necesarios para ejecutar toda la función de ensayo."

#: src/ch10-01-how-to-write-tests.md:906
msgid "{{#quiz ../quizzes/ch10-01-how_to_write_tests.toml}}"
msgstr "quiz../quizzes/ch10-01-how_to_write_tests.toml"

#: src/ch10-02-test-organization.md:3
msgid ""
"We'll think about tests in terms of two main categories: unit tests and "
"integration tests. Unit tests are small and more focused, testing one module "
"in isolation at a time, and can test private functions. Integration tests "
"use your code in the same way any other external code would, using only the "
"public interface and potentially exercising multiple modules per test."
msgstr ""
"Pensaremos en las pruebas en términos de dos categorías principales: pruebas "
"unitarias y pruebas de integración. Las pruebas unitarias son pequeñas y más "
"enfocadas, probando un módulo en aislamiento a la vez, y pueden probar "
"funciones privadas. Las pruebas de integración utilizan su código de la "
"misma manera que cualquier otro código externo, usando sólo la interfaz "
"pública y potencialmente ejerciendo varios módulos por prueba."

#: src/ch10-02-test-organization.md:5
msgid ""
"Writing both kinds of tests is important to ensure that the pieces of your "
"library are doing what you expect them to, separately and together."
msgstr ""
"Escribir ambos tipos de pruebas es importante para asegurarse de que las "
"piezas de su biblioteca están haciendo lo que usted espera que hagan, por "
"separado y juntos."

#: src/ch10-02-test-organization.md:7
msgid "Unit Tests"
msgstr "Pruebas por unidad"

#: src/ch10-02-test-organization.md:9
msgid ""
"The purpose of unit tests is to test each unit of code in isolation from the "
"rest of the code to quickly pinpoint where code is and isn’t working as "
"expected. You’ll put unit tests in the `src` directory in each file with the "
"code that they’re testing."
msgstr ""
"El propósito de las pruebas unitarias es probar cada unidad de código en "
"forma aislada del resto del código para identificar rápidamente dónde está y "
"no está funcionando el código como se esperaba. Pondrá pruebas unitarias en "
"el directorio `src` en cada archivo con el código que están probando."

#: src/ch10-02-test-organization.md:11
msgid ""
"The convention is to create a module named `tests` in each file to contain "
"the test functions and to annotate the module with `#[cfg(test)]` attribute."
msgstr ""
"La convención es crear un módulo llamado `pruebas` en cada archivo para "
"contener las funciones de prueba y anotar el módulo con el atributo "
"'[cfg(test)]`."

#: src/ch10-02-test-organization.md:13
msgid "The Tests Module and `#[cfg(test)]`"
msgstr "El módulo de pruebas y el «[cfg(test)]»."

#: src/ch10-02-test-organization.md:15
#, fuzzy
msgid ""
"The `#[cfg(test)]` annotation on the tests module tells Cairo to compile and "
"run the test code only when you run `scarb test`, not when you run `scarb "
"build`. This saves compile time when you only want to build the project and "
"saves space in the resulting compiled artifact because the tests are not "
"included. You’ll see that because integration tests go in a different "
"directory, they don’t need the `#[cfg(test)]` annotation. However, because "
"unit tests go in the same files as the code, you’ll use `#[cfg(test)]` to "
"specify that they shouldn’t be included in the compiled result."
msgstr ""
"La anotación \"[cfg(test)]\" en el módulo de pruebas le dice a El Cairo que "
"compile y ejecute el código de prueba sólo cuando ejecute `scarb cairo-"
"test`, no cuando ejecute `scarb cairo-run`. Esto ahorra tiempo de "
"compilación cuando sólo desea construir la biblioteca y ahorra espacio en el "
"artefacto compilado resultante porque las pruebas no están incluidas. Verá "
"que debido a que las pruebas de integración van en un directorio diferente, "
"no necesitan la anotación \"[cfg(test)]\". Sin embargo, debido a que las "
"pruebas de unidad van en los mismos archivos que el código, usará "
"''[cfg(test)]` para especificar que no deben ser incluidos en el resultado "
"compilado."

#: src/ch10-02-test-organization.md:17
#, fuzzy
msgid ""
"Recall that when we created the new `adder` project in the first section of "
"this chapter, we wrote this first test:"
msgstr ""
"Recordemos que cuando creamos el nuevo proyecto _adder_ en la primera "
"sección de este capítulo, escribimos esta primera prueba:"

#: src/ch10-02-test-organization.md:36
#, fuzzy
msgid ""
"The attribute `cfg` stands for _configuration_ and tells Cairo that the "
"following item should only be included given a certain configuration option. "
"In this case, the configuration option is `test`, which is provided by Cairo "
"for compiling and running tests. By using the `cfg` attribute, Cairo "
"compiles our test code only if we actively run the tests with `scarb test`. "
"This includes any helper functions that might be within this module, in "
"addition to the functions annotated with `#[test]`."
msgstr ""
"El atributo `cfg` significa configuración y dice a El Cairo que el siguiente "
"elemento sólo debe incluirse en una determinada opción de configuración. En "
"este caso, la opción de configuración es `test`, que es proporcionada por El "
"Cairo para compilar y ejecutar pruebas. Al utilizar el atributo `cfg`, El "
"Cairo recopila nuestro código de prueba sólo si ejecutamos activamente las "
"pruebas con `escarb cairo-test`. Esto incluye cualquier función de ayuda que "
"pueda estar dentro de este módulo, además de las funciones anotadas con "
"`[test]`."

#: src/ch10-02-test-organization.md:38
#, fuzzy
msgid "Testing Private Functions"
msgstr "3. Funciones privadas"

#: src/ch10-02-test-organization.md:40
msgid ""
"There’s debate within the testing community about whether or not private "
"functions should be tested directly, and other languages make it difficult "
"or impossible to test private functions. Regardless of which testing "
"ideology you adhere to, Cairo's privacy rules do allow you to test private "
"functions. Consider the code below with the private function "
"`internal_adder`."
msgstr ""

#: src/ch10-02-test-organization.md:42 src/ch10-02-test-organization.md:178
msgid "<span class=\"caption\">Filename: src/lib.cairo</span>"
msgstr "<span class=\"caption\">Filename: src/lib.cairo</span>"

#: src/ch10-02-test-organization.md:64
#, fuzzy
msgid ""
"<span class=\"caption\">Listing 10-10: Testing a private function</span>"
msgstr ""
"<span class=\"caption\">Lista 10-1: Una función de prueba simple</span>"

#: src/ch10-02-test-organization.md:66
msgid ""
"Note that the `internal_adder` function is not marked as `pub`. Tests are "
"just Cairo code, and the tests module is just another module. As we "
"discussed in the [\"Paths for Referring to an Item in the Module Tree\"]"
"(ch07-03-paths-for-referring-to-an-item-in-the-module-tree.md) section, "
"items in child modules can use the items in their ancestor modules. In this "
"test, we bring the `tests` module’s parent `internal_adder` into scope with "
"`use super::internal_adder;` and then the test can call `internal_adder`. If "
"you don’t think private functions should be tested, there’s nothing in Cairo "
"that will compel you to do so."
msgstr ""

#: src/ch10-02-test-organization.md:68
msgid "Integration Tests"
msgstr "Pruebas de integración"

#: src/ch10-02-test-organization.md:70
#, fuzzy
msgid ""
"Integration tests use your library in the same way any other code would. "
"Their purpose is to test whether many parts of your library work together "
"correctly. Units of code that work correctly on their own could have "
"problems when integrated, so test coverage of the integrated code is "
"important as well. To create integration tests, you first need a _tests_ "
"directory."
msgstr ""
"Las pruebas de integración utilizan su biblioteca de la misma manera que "
"cualquier otro código. Su propósito es comprobar si muchas partes de su "
"biblioteca funcionan correctamente. Las unidades de código que funcionan "
"correctamente por su cuenta podrían tener problemas cuando se integran, por "
"lo que la cobertura de prueba del código integrado también es importante. "
"Para crear pruebas de integración, primero necesita un directorio de "
"`pruebas`."

#: src/ch10-02-test-organization.md:72
msgid "The _tests_ Directory"
msgstr "El _tests_ Directorio"

#: src/ch10-02-test-organization.md:74
msgid ""
"We create a _tests_ directory at the top level of our project directory, "
"next to _src_. Scarb knows to look for integration test files in this "
"directory. We can then make as many test files as we want, and Scarb will "
"compile each of the files as an individual crate."
msgstr ""

#: src/ch10-02-test-organization.md:76
msgid ""
"Let’s create an integration test. With the code in Listing 10-10 still in "
"the _src/lib.cairo_ file, make a _tests_ directory, and create a new file "
"named _tests/integration_test.cairo_. Your directory structure should look "
"like this:"
msgstr ""

#: src/ch10-02-test-organization.md:89
#, fuzzy
msgid ""
"Enter the code in Listing 10-11 into the _tests/integration_test.cairo_ file:"
msgstr ""
"Finalmente, introduzca este código en el archivo _src/tests/"
"integration_tests.cairo_:"

#: src/ch10-02-test-organization.md:91 src/ch10-02-test-organization.md:167
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/integration_tests.cairo</span>"
msgstr ""
"<span class=\"caption\">Filename: src/tests/integration_tests.cairo</span>"

#: src/ch10-02-test-organization.md:102
#, fuzzy
msgid ""
"<span class=\"caption\">Listing 10-11: An integration test of a function in "
"the `adder` crate</span>"
msgstr ""
"<span class=\"caption\">Lista 10-1: Una función de prueba simple</span>"

#: src/ch10-02-test-organization.md:104
#, fuzzy
msgid ""
"Each file in the `tests` directory is a separate crate, so we need to bring "
"our library into each test crate’s scope. For that reason we add `use adder::"
"add_two` at the top of the code, which we didn’t need in the unit tests."
msgstr ""
"Tenemos que introducir nuestras funciones probadas en cada ámbito de archivo "
"de prueba. Por esa razón añadimos `use adder::it_adds_two` en la parte "
"superior del código, que no necesitábamos en las pruebas de unidad."

#: src/ch10-02-test-organization.md:106
msgid ""
"We don’t need to annotate any code in _tests/integration_test.cairo_ with "
"`#[cfg(test)]`. Scarb treats the tests directory specially and compiles "
"files in this directory only when we run `scarb test`. Run `scarb test` now:"
msgstr ""

#: src/ch10-02-test-organization.md:124
msgid ""
"The two sections of output include the unit tests and the integration tests. "
"Note that if any test in a section fails, the following sections will not be "
"run. For example, if a unit test fails, there won’t be any output for "
"integration tests because those tests will only be run if all unit tests are "
"passing."
msgstr ""

#: src/ch10-02-test-organization.md:126
msgid ""
"The first displayed section is for the integration tests. Each integration "
"test file has its own section, so if we add more files in the _tests_ "
"directory, there will be more integration test sections."
msgstr ""

#: src/ch10-02-test-organization.md:129
msgid ""
"The second displayed section is the same as we’ve been seeing: one line for "
"each unit test (one named add that we added just above) and then a summary "
"line for the unit tests."
msgstr ""

#: src/ch10-02-test-organization.md:131
msgid ""
"We can still run a particular integration test function by specifying the "
"test function’s name as an argument of the option -f to `scarb test` like "
"for instance `scarb test -f integration_tests::internal`. To run all the "
"tests in a particular integration test file, we use the same option of "
"`scarb test` but using only the name of the file."
msgstr ""

#: src/ch10-02-test-organization.md:133
#, fuzzy
msgid ""
"Then, to run all of our integration tests, we can just add a filter to only "
"run tests whose path contains _integration_tests_."
msgstr ""
"Entonces, para ejecutar todas nuestras pruebas de integración, sólo podemos "
"añadir un filtro para ejecutar sólo pruebas cuya ruta contiene "
"\"integration_tests\"."

#: src/ch10-02-test-organization.md:151
msgid ""
"We see that in the second section for the unit tests, 1 has been filtered "
"out because it is not in the _integration_tests_ file."
msgstr ""

#: src/ch10-02-test-organization.md:153
#, fuzzy
msgid "Submodules in Integration Tests"
msgstr "Pruebas de integración"

#: src/ch10-02-test-organization.md:155
msgid ""
"As you add more integration tests, you might want to make more files in the "
"_tests_ directory to help organize them; for example, you can group the test "
"functions by the functionality they’re testing. As mentioned earlier, each "
"file in the tests directory is compiled as its own separate crate, which is "
"useful for creating separate scopes to more closely imitate the way end "
"users will be using your crate. However, this means files in the tests "
"directory don’t share the same behavior as files in _src_ do, as you learned "
"in Chapter 7 regarding how to separate code into modules and files."
msgstr ""

#: src/ch10-02-test-organization.md:157
msgid ""
"The different behavior of tests directory files is most noticeable when you "
"have a set of helper functions to use in multiple integration test files and "
"you try to follow the steps in the [Separating Modules into Different Files]"
"(ch07-05-separating-modules-into-different-files.md) section of Chapter 7 to "
"extract them into a common module. For example, if we create _tests/common."
"cairo_ and place a function named `setup` in it, we can add some code to "
"`setup` that we want to call from multiple test functions in multiple test "
"files:"
msgstr ""

#: src/ch10-02-test-organization.md:159
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/common.cairo</span>"
msgstr "<span class=\"caption\">Filename: src/tests.cairo</span>"

#: src/ch10-02-test-organization.md:163
msgid "\"Setting up tests...\""
msgstr ""

#: src/ch10-02-test-organization.md:174
msgid "\"internal_adder failed\""
msgstr "\"internal_adder falló\""

#: src/ch10-02-test-organization.md:194
msgid ""
"When we run the tests with `scarb test`, we’ll see a new section in the test "
"output for the _common.cairo_ file, even though this file doesn’t contain "
"any test functions nor did we call the setup function from anywhere:"
msgstr ""

#: src/ch10-02-test-organization.md:218
msgid ""
"To avoid systematically getting a section for each file of the _tests_ "
"folder, we also have the option of making the `tests/` directory behave like "
"a regular crate, by adding a `tests/lib.cairo` file. In that case, the "
"`tests` directory will no longer compile as one crate per file, but as one "
"crate for the whole directory."
msgstr ""

#: src/ch10-02-test-organization.md:220
msgid "Let's create this _tests/lib.cairo_ file :"
msgstr ""

#: src/ch10-02-test-organization.md:222
#, fuzzy
msgid "<span class=\"caption\">Filename: tests/lib.cairo</span>"
msgstr "<span class=\"caption\">Filename: src/lib.cairo</span>"

#: src/ch10-02-test-organization.md:229
#, fuzzy
msgid "The project directory will now look like this :"
msgstr "El guión completo se vería así:"

#: src/ch10-02-test-organization.md:243
msgid "When we run the `scarb test` command again, here is the output :"
msgstr ""

#: src/ch10-02-test-organization.md:263
msgid ""
"This way, only the test functions will be tested and the `setup` function "
"can be imported without being tested."
msgstr ""

#: src/ch10-02-test-organization.md:267
msgid ""
"Cairo's testing features provide a way to specify how code should function "
"to ensure it continues to work as you expect, even as you make changes. Unit "
"tests exercise different parts of a library separately and can test private "
"implementation details. Integration tests check that many parts of the "
"library work together correctly, and they use the library’s public API to "
"test the code in the same way external code will use it. Even though Cairo's "
"type system and ownership rules help prevent some kinds of bugs, tests are "
"still important to reduce logic bugs having to do with how your code is "
"expected to behave."
msgstr ""

#: src/ch10-02-test-organization.md:269
msgid "{{#quiz ../quizzes/ch10-02-testing-organization.toml}}"
msgstr "quiz../quizzes/ch10-02-testing-organization.toml"

#: src/ch11-00-advanced-features.md
msgid "Advanced Features"
msgstr "Características avanzadas"

#: src/ch11-00-advanced-features.md
msgid "Now, let's learn about more advanced features offered by Cairo."
msgstr ""
"Ahora, vamos a aprender sobre las características más avanzadas ofrecidas "
"por El Cairo."

#: src/ch11-01-custom-data-structures.md:3
msgid ""
"When you first start programming in Cairo, you'll likely want to use arrays "
"(`Array<T>`) to store collections of data. However, you will quickly realize "
"that arrays have one big limitation - the data stored in them is immutable. "
"Once you append a value to an array, you can't modify it."
msgstr ""
"Cuando empiece a programar por primera vez en El Cairo, es probable que "
"desee utilizar arrays (`Array<TÃ3n) para almacenar colecciones de datos. Sin "
"embargo, se dará cuenta rápidamente de que los arrays tienen una gran "
"limitación - los datos almacenados en ellos son inmutables. Una vez que "
"añada un valor a un array, no puede modificarlo."

#: src/ch11-01-custom-data-structures.md:8
msgid ""
"This can be frustrating when you want to use a mutable data structure. For "
"example, say you're making a game where the players have a level, and they "
"can level up. You might try to store the level of the players in an array:"
msgstr ""
"Esto puede ser frustrante cuando quieres usar una estructura de datos "
"mutable. Por ejemplo, di que estás haciendo un juego donde los jugadores "
"tienen un nivel, y pueden subir de nivel. Puedes intentar almacenar el nivel "
"de los jugadores en una matriz:"

#: src/ch11-01-custom-data-structures.md:16
msgid ""
"But then you realize you can't increase the level at a specific index once "
"it's set. If a player dies, you cannot remove it from the array unless he "
"happens to be in the first position."
msgstr ""
"Pero entonces te das cuenta de que no puedes aumentar el nivel en un índice "
"específico una vez que se establece. Si un jugador muere, no puedes "
"eliminarlo de la matriz a menos que esté en la primera posición."

#: src/ch11-01-custom-data-structures.md:20
msgid ""
"Fortunately, Cairo provides a handy built-in [dictionary type](./ch03-02-"
"dictionaries.md) called `Felt252Dict<T>` that allows us to simulate the "
"behavior of mutable data structures. Let's first explore how to create a "
"struct that contains, among others, a `Felt252Dict<T>`."
msgstr ""
"Afortunadamente, El Cairo proporciona un práctico [tipo diccionario] "
"integrado(./ch03-02-dictionarys.md) llamado `Felt252Dict<Tó que nos permite "
"simular el comportamiento de estructuras de datos mutables. Primero "
"exploremos cómo crear una estructura que contenga, entre otros, un "
"`Felt252Dict<Tó."

#: src/ch11-01-custom-data-structures.md:23
msgid ""
"Note: Several concepts used in this chapter were already presented earlier "
"in the book. We recommend checking out the following chapters if you need to "
"revise them: [Structs](ch05-00-using-structs-to-structure-related-data.md), "
"[Methods](./ch05-03-method-syntax.md), [Generic types](./ch08-00-generic-"
"types-and-traits.md), [Traits](./ch08-02-traits-in-cairo.md)."
msgstr ""
"Nota: Varios conceptos utilizados en este capítulo ya se presentaron "
"anteriormente en el libro. Recomendamos revisar los siguientes capítulos si "
"es necesario revisarlos: [Estructos](ch05-00-using-structs-to-structs-to-"
"structure-related-data.md), [Métodos](./ch05-03-method-syntax.md), [Tipos "
"genéricos](./ch08-00-tipos genéricos-and-traits.md), [Traits](./ch08-02-"
"traits-in-cairo.md)."

#: src/ch11-01-custom-data-structures.md:29
msgid "Dictionaries as Struct Members"
msgstr "Los diccionarios como miembros de la estructura"

#: src/ch11-01-custom-data-structures.md:31
msgid ""
"Defining dictionaries as struct members is possible in Cairo but correctly "
"interacting with them may not be entirely seamless. Let's try implementing a "
"custom _user database_ that will allow us to add users and query them. We "
"will need to define a struct to represent the new type and a trait to define "
"its functionality:"
msgstr ""
"Definir diccionarios como miembros de la estructura es posible en El Cairo, "
"pero interactuar correctamente con ellos puede no ser totalmente perfecto. "
"Intentemos implementar una base de datos personalizada _usuario_ que nos "
"permitirá añadir usuarios y consultarlos. Necesitaremos definir una "
"estructura para representar el nuevo tipo y un rasgo para definir su "
"funcionalidad:"

#: src/ch11-01-custom-data-structures.md:46
msgid ""
"Our new type `UserDatabase<T>` represents a database of users. It is generic "
"over the balances of the users, giving major flexibility to whoever uses our "
"data type. Its two members are:"
msgstr ""
"Nuestro nuevo tipo `UserDatabase<T® representa una base de datos de "
"usuarios. Es genérico sobre los saldos de los usuarios, dando una gran "
"flexibilidad a quien utiliza nuestro tipo de datos. Sus dos miembros son:"

#: src/ch11-01-custom-data-structures.md:48
msgid "`users_updates`, the number of users updates in the dictionary."
msgstr "`users_updates`, el número de usuarios actualiza en el diccionario."

#: src/ch11-01-custom-data-structures.md:49
msgid "`balances`, a mapping of each user to its balance."
msgstr "`equilibrios`, un mapeo de cada usuario a su equilibrio."

#: src/ch11-01-custom-data-structures.md:51
msgid ""
"The database core functionality is defined by `UserDatabaseTrait`. The "
"following methods are defined:"
msgstr ""
"La funcionalidad básica de la base de datos se define por "
"`UserDatabaseTrait`. Se definen los siguientes métodos:"

#: src/ch11-01-custom-data-structures.md:53
msgid "`new` for easily creating new `UserDatabase` types."
msgstr "`nuevo` para crear fácilmente nuevos tipos `UserDatabase`."

#: src/ch11-01-custom-data-structures.md:54
msgid "`update_user` to update the balance of users in the database."
msgstr ""
"`update_user` para actualizar el equilibrio de usuarios en la base de datos."

#: src/ch11-01-custom-data-structures.md:55
msgid "`get_balance` to find user's balance in the database."
msgstr "`get_balance` para encontrar el saldo del usuario en la base de datos."

#: src/ch11-01-custom-data-structures.md:57
msgid ""
"The only remaining step is to implement each of the methods in "
"`UserDatabaseTrait`, but since we are working with [Generic types](./ch08-00-"
"generic-types-and-traits.md) we also need to correctly establish the "
"requirements of `T` so it can be a valid `Felt252Dict<T>` value type:"
msgstr ""
"El único paso que queda es implementar cada uno de los métodos en "
"`UserDatabaseTrait`, pero ya que estamos trabajando con [tipos genéricos](./"
"ch08-00-genéricos-tipos-y-traits.md) también necesitamos establecer "
"correctamente los requisitos de `T` para que pueda ser un tipo de valor "
"válido `Felt252Dict<T®:"

#: src/ch11-01-custom-data-structures.md:59
msgid ""
"`T` should implement the `Copy<T>` since it's required for getting values "
"from a `Felt252Dict<T>`."
msgstr ""
"`T` debe implementar el `Copy<TÃ3n, ya que es necesario para obtener valores "
"de un `Felt252Dict<TÃ3n."

#: src/ch11-01-custom-data-structures.md:60
msgid ""
"All value types of a dictionary implement the `Felt252DictValue<T>`, our "
"generic type should do as well."
msgstr ""
"Todos los tipos de valor de un diccionario implementan el "
"`Felt252DictValue<T®, nuestro tipo genérico también debería hacerlo."

#: src/ch11-01-custom-data-structures.md:61
msgid ""
"To insert values, `Felt252DictTrait<T>` requires all value types to be "
"droppable (implement the `Drop<T>` trait)."
msgstr ""
"Para insertar valores, `Felt252DictTrait<T® requiere que todos los tipos de "
"valores sean droppable (implementar el rasgo `Drop<T®)."

#: src/ch11-01-custom-data-structures.md:63
msgid ""
"The implementation, with all restrictions in place, would be as follows:"
msgstr "La aplicación, con todas las restricciones, sería la siguiente:"

#: src/ch11-01-custom-data-structures.md:67
#: src/ch11-01-custom-data-structures.md:112
msgid "// Creates a database\n"
msgstr "// Crea una base de datos\n"

#: src/ch11-01-custom-data-structures.md:72
#: src/ch11-01-custom-data-structures.md:117
msgid "// Get the user's balance\n"
msgstr "// Consigue el saldo del usuario\n"

#: src/ch11-01-custom-data-structures.md:77
#: src/ch11-01-custom-data-structures.md:122
msgid "// Add a user\n"
msgstr "// Añadir un usuario\n"

#: src/ch11-01-custom-data-structures.md:85
msgid ""
"Our database implementation is almost complete, except for one thing: the "
"compiler doesn't know how to make a `UserDatabase<T>` go out of scope, since "
"it doesn't implement the `Drop<T>` trait, nor the `Destruct<T>` trait. Since "
"it has a `Felt252Dict<T>` as a member, it cannot be dropped, so we are "
"forced to implement the `Destruct<T>` trait manually (refer to the "
"[Ownership](ch04-01-what-is-ownership.md#the-drop-trait) chapter for more "
"information). Using `#[derive(Destruct)]` on top of the `UserDatabase<T>` "
"definition won't work because of the use of [Generic types](./ch08-00-"
"generic-types-and-traits.md) in the struct definition. We need to code the "
"`Destruct<T>` trait implementation by ourselves:"
msgstr ""
"La implementación de nuestra base de datos está casi completa, excepto por "
"una cosa: el compilador no sabe cómo hacer que un `UserDatabase<T® salga del "
"alcance, ya que no implementa el rasgo `Drop<T®, ni el rasgo `Destruct<T®. "
"Ya que tiene un `Felt252Dict<T® como miembro, no puede ser eliminado, por lo "
"que nos vemos obligados a implementar el rasgo `Destruct<T® manualmente "
"(referir a la [Ownnership](ch04-01-what-is-ownership.md#the-drop-trait) "
"capítulo para más información).Utilizar `[derive(Destruct)]` en la parte "
"superior de la `UserDatabase<T® no funcionará debido al uso de [tipos "
"genéricos](./ch08-00-genéricos-types-and-traits.md) en la definición de "
"estructura."

#: src/ch11-01-custom-data-structures.md:97
msgid ""
"Implementing `Destruct<T>` for `UserDatabase` was our last step to get a "
"fully functional database. We can now try it out:"
msgstr ""
"Implementar `Destruct<T® para `UserDatabase` fue nuestro último paso para "
"obtener una base de datos completamente funcional. Ahora podemos probarlo:"

#: src/ch11-01-custom-data-structures.md:147
msgid "\"Expected 40\""
msgstr "\"Expedido 40\""

#: src/ch11-01-custom-data-structures.md:148
msgid "\"Expected 0\""
msgstr "\"Especifíquese 0\""

#: src/ch11-01-custom-data-structures.md:156
msgid "Simulating a Dynamic Array with Dicts"
msgstr "Simulación de una matriz dinámica con dictados"

#: src/ch11-01-custom-data-structures.md:158
msgid ""
"First, let's think about how we want our mutable dynamic array to behave. "
"What operations should it support?"
msgstr ""
"Primero, pensemos en cómo queremos que se comporte nuestra matriz dinámica "
"mutable. ¿Qué operaciones debería soportar?"

#: src/ch11-01-custom-data-structures.md:161
msgid "It should:"
msgstr "Debería:"

#: src/ch11-01-custom-data-structures.md:163
msgid "Allow us to append items at the end."
msgstr "Permítanos agregar elementos al final."

#: src/ch11-01-custom-data-structures.md:164
msgid "Let us access any item by index."
msgstr "Vamos a acceder a cualquier elemento por índice."

#: src/ch11-01-custom-data-structures.md:165
msgid "Allow setting the value of an item at a specific index."
msgstr "Permitir establecer el valor de un elemento en un índice específico."

#: src/ch11-01-custom-data-structures.md:166
msgid "Return the current length."
msgstr "Devuelve la longitud actual."

#: src/ch11-01-custom-data-structures.md:168
msgid "We can define this interface in Cairo like:"
msgstr "Podemos definir esta interfaz en El Cairo como:"

#: src/ch11-01-custom-data-structures.md:181
msgid ""
"This provides a blueprint for the implementation of our dynamic array. We "
"named it _Vec_ as it is similar to the `Vec<T>` data structure in Rust."
msgstr ""
"Esto proporciona un plano para la implementación de nuestro array dinámico. "
"Lo nombramos _Vec_ ya que es similar a la estructura de datos `Vec<Ter® en "
"Rust."

#: src/ch11-01-custom-data-structures.md:184
msgid "Implementing a Dynamic Array in Cairo"
msgstr "Implementación de una matriz dinámica en El Cairo"

#: src/ch11-01-custom-data-structures.md:186
msgid ""
"To store our data, we'll use a `Felt252Dict<T>` which maps index numbers "
"(felts) to values. We'll also store a separate `len` field to track the "
"length."
msgstr ""
"Para almacenar nuestros datos, usaremos un `Felt252Dict<T® que mapea los "
"números de índice (se siente) a los valores. También almacenaremos un campo "
"`len` separado para rastrear la longitud."

#: src/ch11-01-custom-data-structures.md:189
msgid ""
"Here is what our struct looks like. We wrap the type `T` inside `Nullable` "
"pointer to allow using any type `T` in our data structure, as explained in "
"the [Dictionaries](./ch03-02-dictionaries.md#dictionaries-of-types-not-"
"supported-natively) section:"
msgstr ""
"Así es como se ve nuestra estructura. Envolvemos el tipo `T` dentro del "
"puntero `Nulable` para permitir el uso de cualquier tipo `T` en nuestra "
"estructura de datos, como se explica en la sección [Diccionarios](./ch03-02-"
"dictionarys.md#dictionarys-of-types-no-soported-natively):"

#: src/ch11-01-custom-data-structures.md:200
msgid ""
"Since we again have `Felt252Dict<T>` as a struct member, we need to "
"implement the `Destruct<T>` trait to tell the compiler how to make "
"`NullableVec<T>` go out of scope."
msgstr ""
"Ya que tenemos de nuevo `Felt252Dict<T® como miembro de la estructura, "
"tenemos que implementar el rasgo `Destruct<T® para decirle al compilador "
"cómo hacer que `NullableVec<T® salga del alcance."

#: src/ch11-01-custom-data-structures.md:210
msgid ""
"The key thing that makes this vector mutable is that we can insert values "
"into the dictionary to set or update values in our data structure. For "
"example, to update a value at a specific index, we do:"
msgstr ""
"Lo clave que hace que este vector mutable es que podemos insertar valores en "
"el diccionario para establecer o actualizar valores en nuestra estructura de "
"datos. Por ejemplo, para actualizar un valor en un índice específico, lo "
"hacemos:"

#: src/ch11-01-custom-data-structures.md:216
#: src/ch11-01-custom-data-structures.md:245
#: src/ch11-01-custom-data-structures.md:254
msgid "\"Index out of bounds\""
msgstr "\"Index fuera de límites\""

#: src/ch11-01-custom-data-structures.md:221
msgid ""
"This overwrites the previously existing value at that index in the "
"dictionary."
msgstr ""
"Esto sobrescribe el valor previamente existente en ese índice en el "
"diccionario."

#: src/ch11-01-custom-data-structures.md:223
msgid ""
"While arrays are immutable, dictionaries provide the flexibility we need for "
"modifiable data structures like vectors."
msgstr ""
"Mientras que los arrays son inmutables, los diccionarios proporcionan la "
"flexibilidad que necesitamos para estructuras de datos modificables como "
"vectores."

#: src/ch11-01-custom-data-structures.md:226
msgid ""
"The implementation of the rest of the interface is straightforward. The "
"implementation of all the methods defined in our interface can be done as "
"follow :"
msgstr ""
"La implementación del resto de la interfaz es sencilla. La implementación de "
"todos los métodos definidos en nuestra interfaz se puede hacer de la "
"siguiente manera:"

#: src/ch11-01-custom-data-structures.md:263
msgid ""
"The full implementation of the `Vec` structure can be found in the community-"
"maintained library [Alexandria](https://github.com/keep-starknet-strange/"
"alexandria/tree/main/packages/data_structures/src)."
msgstr ""
"La plena aplicación de la estructura \" Vec \" puede encontrarse en la "
"biblioteca comunitaria [Alexandria] (https://github.com/keep-starknet-"
"strange/alexandria/tree/main/paquetes/data_structures/src)."

#: src/ch11-01-custom-data-structures.md:268
msgid "Simulating a Stack with Dicts"
msgstr "Simulación de una pila con dictados"

#: src/ch11-01-custom-data-structures.md:270
msgid ""
"We will now look at a second example and its implementation details: a Stack."
msgstr ""
"Ahora veremos un segundo ejemplo y sus detalles de implementación: un Stack."

#: src/ch11-01-custom-data-structures.md:272
msgid ""
"A Stack is a LIFO (Last-In, First-Out) collection. The insertion of a new "
"element and removal of an existing element takes place at the same end, "
"represented as the top of the stack."
msgstr ""
"Una pila es una colección LIFO (Last-In, First-Out). La inserción de un "
"elemento nuevo y la eliminación de un elemento existente tiene lugar en el "
"mismo extremo, representado como la parte superior de la pila."

#: src/ch11-01-custom-data-structures.md:276
msgid "Let us define what operations we need to create a stack:"
msgstr "Definamos qué operaciones necesitamos para crear una pila:"

#: src/ch11-01-custom-data-structures.md:278
msgid "Push an item to the top of the stack."
msgstr "Empuje un elemento en la parte superior de la pila."

#: src/ch11-01-custom-data-structures.md:279
msgid "Pop an item from the top of the stack."
msgstr "Añadir un artículo de la parte superior de la pila."

#: src/ch11-01-custom-data-structures.md:280
msgid "Check whether there are still any elements in the stack."
msgstr "Compruebe si todavía hay elementos en la pila."

#: src/ch11-01-custom-data-structures.md:282
msgid "From these specifications we can define the following interface :"
msgstr ""
"A partir de estas especificaciones podemos definir la siguiente interfaz:"

#: src/ch11-01-custom-data-structures.md:292
msgid "Implementing a Mutable Stack in Cairo"
msgstr "Implementación de una pila mutable en El Cairo"

#: src/ch11-01-custom-data-structures.md:294
msgid ""
"To create a stack data structure in Cairo, we can again use a "
"`Felt252Dict<T>` to store the values of the stack along with a `usize` field "
"to keep track of the length of the stack to iterate over it."
msgstr ""
"Para crear una estructura de datos de pila en El Cairo, podemos usar de "
"nuevo un `Felt252Dict<T® para almacenar los valores de la pila junto con un "
"campo `usize` para hacer un seguimiento de la longitud de la pila para "
"iterar sobre ella."

#: src/ch11-01-custom-data-structures.md:298
msgid "The Stack struct is defined as:"
msgstr "La estructura Stack se define como:"

#: src/ch11-01-custom-data-structures.md:307
msgid ""
"Next, let's see how our main functions `push` and `pop` are implemented."
msgstr ""
"A continuación, veamos cómo se implementan nuestras principales funciones "
"`push` y `pop`."

#: src/ch11-01-custom-data-structures.md:330
msgid ""
"The code uses the `insert` and `get` methods to access the values in the "
"`Felt252Dict<T>`. To push an element to the top of the stack, the `push` "
"function inserts the element in the dict at index `len` and increases the "
"`len` field of the stack to keep track of the position of the stack top. To "
"remove a value, the `pop` function decreases the value of `len` to update "
"the position of the stack top and then retrieves the last value at position "
"`len`."
msgstr ""
"El código utiliza los métodos `insert` y `get` para acceder a los valores en "
"el `Felt252Dict<T''. Para empujar un elemento a la parte superior de la "
"pila, la función `push` inserta el elemento en el dict en el `len` índice y "
"aumenta el campo `len` de la pila para mantener un registro de la posición "
"de la pila superior. Para eliminar un valor, la función `pop` disminuye el "
"valor de `len` para actualizar la posición de la pila superior y luego "
"recupera el último valor en la posición `len`."

#: src/ch11-01-custom-data-structures.md:337
msgid ""
"The full implementation of the Stack, along with more data structures that "
"you can use in your code, can be found in the community-maintained "
"[Alexandria](https://github.com/keep-starknet-strange/alexandria/tree/main/"
"packages/data_structures/src) library, in the \"data_structures\" crate."
msgstr ""
"La implementación completa de la pila, junto con más estructuras de datos "
"que puede utilizar en su código, se puede encontrar en la biblioteca "
"comunitaria [Alexandria](https://github.com/keep-starknet-strange/alexandria/"
"main/paquetes/data_structures/src), en la caja \"data_structures\"."

#: src/ch11-01-custom-data-structures.md:343
msgid "{{#quiz ../quizzes/ch11-01-custom-structs.toml}}"
msgstr "quiz../quizzes/ch11-01-custom-structs.toml"

#: src/ch11-01-custom-data-structures.md:347
msgid ""
"Well done! Now you have knowledge of arrays, dictionaries and even custom "
"data structures. While Cairo's memory model is immutable and can make it "
"difficult to implement mutable data structures, we can fortunately use the "
"`Felt252Dict<T>` type to simulate mutable data structures. This allows us to "
"implement a wide range of data structures that are useful for many "
"applications, effectively hiding the complexity of the underlying memory "
"model."
msgstr ""
"¡Bien hecho! Ahora tiene conocimiento de matrices, diccionarios e incluso "
"estructuras de datos personalizadas. Si bien el modelo de memoria de El "
"Cairo es inmutable y puede dificultar la implementación de estructuras de "
"datos mutables, afortunadamente podemos utilizar el tipo `Felt252Dict<T® "
"para simular estructuras de datos mutables. Esto nos permite implementar una "
"amplia gama de estructuras de datos que son útiles para muchas aplicaciones, "
"ocultando efectivamente la complejidad del modelo de memoria subyacente."

#: src/ch11-02-smart-pointers.md:3
msgid ""
"A pointer is a general concept for a variable that contains a memory "
"address. This address refers to, or “points at,” some other data. While "
"pointers are a powerful feature, they can also be a source of bugs and "
"security vulnerabilities. For example, a pointer can reference an unassigned "
"memory cell, which means that attempting to access the data at that address "
"would cause the program to crash, making it unprovable. To prevent such "
"issues, Cairo uses _Smart Pointers_."
msgstr ""
"Un puntero es un concepto general para una variable que contiene una "
"dirección de memoria. Esta dirección se refiere, o \"puntos a\", algunos "
"otros datos. Si bien los punteros son una característica poderosa, también "
"pueden ser una fuente de fallos y vulnerabilidades de seguridad. Por "
"ejemplo, un puntero puede hacer referencia a una celda de memoria no "
"asignada, lo que significa que intentar acceder a los datos en esa dirección "
"causaría que el programa se estrellara, lo que lo haría imposible. Para "
"evitar tales problemas, El Cairo utiliza _Smart Pointers_."

#: src/ch11-02-smart-pointers.md:5
msgid ""
"Smart pointers are data structures that act like a pointer, but also have "
"additional metadata and capabilities. The concept of smart pointers isn’t "
"unique to Cairo: smart pointers originated in C++ and exist in other "
"languages like Rust as well. In the specific case of Cairo, smart pointers "
"ensure that memory is not addressed in an unsafe way that could cause a "
"program to be unprovable, by providing a safe way to access memory through "
"strict type checking and ownership rules."
msgstr ""
"Los punteros inteligentes son estructuras de datos que actúan como punteros, "
"pero también tienen metadatos y capacidades adicionales. El concepto de "
"punteros inteligentes no es exclusivo de El Cairo: los punteros inteligentes "
"se originaron en C++ y existen en otros idiomas como Rust también. En el "
"caso específico de El Cairo, los punteros inteligentes aseguran que la "
"memoria no se aborde de una manera insegura que podría causar que un "
"programa sea imposible de probar, proporcionando una forma segura de acceder "
"a la memoria a través de estrictas reglas de verificación de tipo y "
"propiedad."

#: src/ch11-02-smart-pointers.md:7
msgid ""
"Though we didn’t call them as such at the time, we’ve already encountered a "
"few smart pointers in this book, including `Felt252Dict<T>` and `Array<T>` "
"in Chapter 3. Both these types count as smart pointers because they own a "
"memory segment and allow you to manipulate it. They also have metadata and "
"extra capabilities or guarantees. Arrays keep track of their current length "
"to ensure that existing elements are not overwritten, and that new elements "
"are only appended to the end."
msgstr ""
"Aunque no los llamábamos como tales en ese momento, ya nos hemos encontrado "
"con algunos punteros inteligentes en este libro, incluyendo `Felt252Dict<T® "
"y `Array<T® en el capítulo 3. Ambos tipos cuentan como punteros inteligentes "
"porque poseen un segmento de memoria y le permiten manipularlo. También "
"tienen metadatos y capacidades adicionales o garantías. Las matrices "
"mantienen un registro de su longitud actual para asegurarse de que los "
"elementos existentes no están sobrescritos, y que los nuevos elementos sólo "
"se adjuntan al final."

#: src/ch11-02-smart-pointers.md:9
msgid ""
"The Cairo VM memory is composed by multiple segments that can store data, "
"each identified by a unique index. When you create an array, you allocate a "
"new segment in the memory to store the future elements. The array itself is "
"just a pointer to that segment where the elements are stored."
msgstr ""
"La memoria VM de El Cairo está compuesta por varios segmentos que pueden "
"almacenar datos, cada uno identificado por un índice único. Cuando crea una "
"matriz, asigna un segmento nuevo en la memoria para almacenar los elementos "
"futuros. La matriz en sí es sólo un puntero a ese segmento donde se "
"almacenan los elementos."

#: src/ch11-02-smart-pointers.md:11
msgid "The `Box<T>` Type to Manipulate Pointers"
msgstr "El `Box<T® Tipo para manipular punteros"

#: src/ch11-02-smart-pointers.md:13
msgid ""
"The principal smart pointer type in Cairo is a _box_, denoted as `Box<T>`. "
"Manually defining boxes allow you to store data in a specific memory segment "
"of the Cairo VM called the _boxed segment_. This segment is dedicated to "
"store all boxed values, and what remains in the execution segment is only a "
"pointer to the boxed segment. Whenever you instantiate a new pointer "
"variable of type `Box<T>`, you append the data of type `T` to the boxed "
"segment."
msgstr ""
"El tipo de puntero inteligente principal en El Cairo es un _box_, denotado "
"como `Box<T®. Los cuadros que definen manualmente le permiten almacenar "
"datos en un segmento de memoria específico de la VM de El Cairo llamado el "
"segmento _boxed_. Este segmento se dedica a almacenar todos los valores en "
"caja, y lo que queda en el segmento de ejecución es sólo un puntero al "
"segmento en caja. Siempre que se instale una nueva variable de puntero de "
"tipo `Box<T®, se agregan los datos del tipo `T` al segmento en caja."

#: src/ch11-02-smart-pointers.md:15
msgid ""
"Boxes have very little performance overhead, other than writing their inner "
"values to the boxed segment. But they don’t have many extra capabilities "
"either. You’ll use them most often in these situations:"
msgstr ""
"Las cajas tienen muy poco rendimiento por encima, aparte de escribir sus "
"valores internos en el segmento de cajas. Pero tampoco tienen muchas "
"capacidades adicionales. Las usarás con más frecuencia en estas situaciones:"

#: src/ch11-02-smart-pointers.md:17
msgid ""
"When you have a type whose size can’t be known at compile time and you want "
"to use a value of that type in a context that requires an exact size"
msgstr ""
"Cuando usted tiene un tipo cuyo tamaño no puede ser conocido en tiempo de "
"compilación y desea utilizar un valor de ese tipo en un contexto que "
"requiere un tamaño exacto"

#: src/ch11-02-smart-pointers.md:18
msgid ""
"When you have a large amount of data and you want to transfer ownership but "
"ensure the data won’t be copied when you do so"
msgstr ""
"Cuando usted tiene una gran cantidad de datos y desea transferir la "
"propiedad, pero asegúrese de que los datos no serán copiados cuando lo haga"

#: src/ch11-02-smart-pointers.md:20
msgid ""
"We’ll demonstrate the first situation in the [“Enabling Recursive Types with "
"Boxes”](./ch11-02-smart-pointers.md#enabling-recursive-types-with-nullable-"
"boxes) section. In the second case, transferring ownership of a large amount "
"of data can take a long time because the data is copied around in memory. To "
"improve performance in this situation, we can store the large amount of data "
"in the boxed segment using a box type. Then, only the small amount of "
"pointer data is copied around in memory, while the data it references stays "
"in one place on the boxed segment."
msgstr ""
"Demostraremos la primera situación en la sección [“Enabling Recursive Types "
"with Boxes”](./ch11-02-smart-pointers.md#enabling-recursive-types-with-"
"nullable-boxes). En el segundo caso, transferir la propiedad de una gran "
"cantidad de datos puede tomar mucho tiempo porque los datos se copian en "
"memoria. Para mejorar el rendimiento en esta situación, podemos almacenar la "
"gran cantidad de datos en el segmento en caja utilizando un tipo de caja. "
"Entonces, sólo la pequeña cantidad de datos de puntero se copia en memoria, "
"mientras que los datos que hace referencia permanecen en un lugar en el "
"segmento en caja."

#: src/ch11-02-smart-pointers.md:25
msgid "Using a `Box<T>` to Store Data in the Boxed Segment"
msgstr "Usar un `Box<T® para almacenar datos en el segmento de caja"

#: src/ch11-02-smart-pointers.md:27
msgid ""
"Before we discuss the boxed segment storage use cases for `Box<T>`, we’ll "
"cover the syntax and how to interact with values stored within a `Box<T>`."
msgstr ""
"Antes de hablar de los casos de almacenamiento de segmentos en cajas para "
"`Box<TÃ3, cubriremos la sintaxis y la forma de interactuar con los valores "
"almacenados en un `Box<TÃ3."

#: src/ch11-02-smart-pointers.md:29
msgid ""
"Listing 11-1 shows how to use a box to store a value in the boxed segment:"
msgstr ""
"La lista 11-1 muestra cómo usar una caja para almacenar un valor en el "
"segmento en caja:"

#: src/ch11-02-smart-pointers.md:34
msgid "\"b = {}\""
msgstr "\"b = فارسى\""

#: src/ch11-02-smart-pointers.md:38
msgid ""
"<span class=\"caption\">Listing 11-1: Storing a `u128` value in the boxed "
"segment using a box</span>"
msgstr ""
"<span class=\"caption\">Lista 11-1: Almacenar un valor `u128` en el segmento "
"de caja usando una caja</span>"

#: src/ch11-02-smart-pointers.md:40
msgid ""
"We define the variable `b` to have the value of a `Box` that points to the "
"value `5`, which is stored in the boxed segment. This program will print `b "
"= 5`; in this case, we can access the data in the box similar to how we "
"would if this data was simply in the execution memory. Putting a single "
"value in a box isn’t very useful, so you won’t use boxes by themselves in "
"this way very often. Having values like a single `u128` in the execution "
"memory, where they’re stored by default, is more appropriate in the majority "
"of situations. Let’s look at a case where boxes allow us to define types "
"that we wouldn’t be allowed to if we didn’t have boxes."
msgstr ""
"Definimos la variable `b` para tener el valor de una `Box` que apunta al "
"valor `5`, que se almacena en el segmento en caja. Este programa imprimirá "
"`b = 5`; en este caso, podemos acceder a los datos en la caja similar a cómo "
"lo haríamos si estos datos estuvieran simplemente en la memoria de "
"ejecución. Poner un solo valor en una caja no es muy útil, por lo que no "
"usará cajas por sí mismas de esta manera muy a menudo. Tener valores como un "
"solo `u128` en la memoria de ejecución, donde están almacenados por defecto, "
"es más apropiado en la mayoría de situaciones. Veamos un caso en el que las "
"cajas nos permiten definir tipos que no se nos permitirían si no tuviéramos "
"cajas."

#: src/ch11-02-smart-pointers.md:42
msgid "Enabling Recursive Types with Nullable Boxes"
msgstr "Habilitando tipos recursivos con cajas fijas"

#: src/ch11-02-smart-pointers.md:46
msgid "Using Boxes to Improve Performance"
msgstr "Uso de cajas para mejorar el rendimiento"

#: src/ch11-02-smart-pointers.md:48
msgid ""
"Passing pointers between functions allows you to reference data without "
"copying the data itself. Using boxes can improve performance as it allows "
"you to pass a pointer to some data from one function to another, without the "
"need to copy the entire data in memory before performing the function call. "
"Instead of having to write `n` values into memory before calling a function, "
"only a single value is written, corresponding to the pointer to the data. If "
"the data stored in the box is very large, the performance improvement can be "
"significant, as you would save `n-1` memory operations before each function "
"call."
msgstr ""
"El paso de punteros entre funciones le permite hacer referencia a los datos "
"sin copiar los datos en sí. El uso de cajas puede mejorar el rendimiento ya "
"que le permite pasar un puntero a algunos datos de una función a otra, sin "
"la necesidad de copiar todos los datos en memoria antes de realizar la "
"llamada a la función. En lugar de tener que escribir `n` valores en la "
"memoria antes de llamar a una función, sólo se escribe un valor único, "
"correspondiente al puntero a los datos. Si los datos almacenados en la caja "
"es muy grande, la mejora de rendimiento puede ser significativa, ya que "
"guardaría `n-1` operaciones de memoria antes de cada llamada a la función."

#: src/ch11-02-smart-pointers.md:50
msgid ""
"Let's take a look at the code in Listing 11-2, which shows two ways of "
"passing data to a function: by value and by pointer."
msgstr ""
"Echemos un vistazo al código en Listado 11-2, que muestra dos maneras de "
"pasar datos a una función: por valor y por puntero."

#: src/ch11-02-smart-pointers.md:61 src/ch11-02-smart-pointers.md:66
msgid "\"{} is shopping today and bought {} items\""
msgstr "\"Está de compras hoy y compró productos\""

#: src/ch11-02-smart-pointers.md:70
msgid "\"Eli\""
msgstr "\"Eli\""

#: src/ch11-02-smart-pointers.md:73
msgid "\"Uri\""
msgstr "\"Uri\""

#: src/ch11-02-smart-pointers.md:78
msgid ""
"<span class=\"caption\">Listing 11-2: Storing large amounts of data in a box "
"for performance.</span>"
msgstr ""
"<span class=\"caption\">Lista 11-2: Almacenar grandes cantidades de datos en "
"una caja para el rendimiento.</span>"

#: src/ch11-02-smart-pointers.md:80
msgid "The `main` function includes 2 function calls:"
msgstr "La función `main` incluye 2 llamadas a funciones:"

#: src/ch11-02-smart-pointers.md:82
msgid "`pass_data` that takes a variable of type `Cart`."
msgstr "`pass_data` que toma una variable de tipo `Cart`."

#: src/ch11-02-smart-pointers.md:83
msgid "`pass_pointer` that takes a pointer of type `Box<Cart>`."
msgstr "`pass_pointer` que toma un puntero de tipo `Box<Cart®."

#: src/ch11-02-smart-pointers.md:85
msgid ""
"When passing data to a function, the entire data is copied into the last "
"available memory cells right before the function call. Calling `pass_data` "
"will copy all 3 fields of `Cart` to memory, while `pass_pointer` only "
"requires the copy of the `new_box` pointer which is of size 1."
msgstr ""
"Al pasar datos a una función, todos los datos se copian en las últimas "
"celdas de memoria disponibles justo antes de la llamada a la función. Llamar "
"a `pass_data` copiará los 3 campos de `Cart` a la memoria, mientras que "
"`pass_pointer` solo requiere la copia del puntero `new_box` que es de tamaño "
"1."

#: src/ch11-02-smart-pointers.md:94
msgid ""
"The illustration above demonstrates how the memory behaves in both cases. "
"The first instance of `Cart` is stored in the execution segment, and we need "
"to copy all its fields to memory before calling the `pass_data` function. "
"The second instance of `Cart` is stored in the boxed segment, and the "
"pointer to it is stored in the execution segment. When calling the "
"`pass_pointer` function, only the pointer to the struct is copied to memory "
"right before the function call. In both cases, however, instantiating the "
"struct will store all its values in the execution segment: the boxed segment "
"can only be filled with data taken from the execution segment."
msgstr ""
"La ilustración anterior demuestra cómo se comporta la memoria en ambos "
"casos. La primera instancia de `Cart` se almacena en el segmento de "
"ejecución, y necesitamos copiar todos sus campos a la memoria antes de "
"llamar a la función `pass_data`. La segunda instancia de `Cart` se almacena "
"en el segmento de caja, y el puntero a él se almacena en el segmento de "
"ejecución. Al llamar a la función `pass_pointer`, sólo el puntero a la "
"estructura se copia a la memoria justo antes de la llamada a la función. Sin "
"embargo, en ambos casos, la instancia de la estructura almacenará todos sus "
"valores en el segmento de ejecución: el segmento de caja sólo se puede "
"llenar con datos tomados del segmento de ejecución."

#: src/ch11-02-smart-pointers.md:96
msgid "The `Nullable<T>` Type for Dictionaries"
msgstr "El tipo `Nulable<T® para diccionarios"

#: src/ch11-02-smart-pointers.md:98
msgid ""
"`Nullable<T>` is another type of smart pointer that can either point to a "
"value or be `null` in the absence of value. It is defined at the Sierra "
"level. This type is mainly used in dictionaries that contain types that "
"don't implement the `zero_default` method of the `Felt252DictValue<T>` trait "
"(i.e., arrays and structs)."
msgstr ""
"`Nulable<T® es otro tipo de puntero inteligente que puede apuntar a un valor "
"o ser `null` en ausencia de valor. Se define a nivel de Sierra. Este tipo se "
"utiliza principalmente en diccionarios que contienen tipos que no "
"implementan el método `cero_default` del rasgo `Felt252DictValue<T® (es "
"decir, arrays y structs)."

#: src/ch11-02-smart-pointers.md:100
msgid ""
"If we try to access an element that does not exist in a dictionary, the code "
"will fail if the `zero_default` method cannot be called."
msgstr ""
"Si intentamos acceder a un elemento que no existe en un diccionario, el "
"código fallará si no se puede llamar al método `cero_default`."

#: src/ch11-02-smart-pointers.md:102
msgid ""
"[Chapter 3.2](/ch03-02-dictionaries.md#dictionaries-of-types-not-supported-"
"natively) about dictionaries thoroughly explains how to store a "
"`Span<felt252>` variable inside a dictionary using the `Nullable<T>` type. "
"Please refer to it for further information."
msgstr ""
"[Capítulo 3.2](/ch03-02-dictionarys.md#dictionarys-of-types-no-soported-"
"natively) acerca de los diccionarios explica a fondo cómo almacenar una "
"variable `Span<felt252® dentro de un diccionario usando el tipo `Nulable<T®. "
"Consultelo para más información."

#: src/ch11-02-smart-pointers.md:106
msgid "{{#quiz ../quizzes/ch11-02-smart_pointers.toml}}"
msgstr "quiz../quizzes/ch11-02-smart_pointers.toml"

#: src/ch11-03-operator-overloading.md:3
msgid ""
"Operator overloading is a feature in some programming languages that allows "
"the redefinition of standard operators, such as addition (`+`), subtraction "
"(`-`), multiplication (`*`), and division (`/`), to work with user-defined "
"types. This can make the syntax of the code more intuitive, by enabling "
"operations on user-defined types to be expressed in the same way as "
"operations on primitive types."
msgstr ""
"La sobrecarga del operador es una característica en algunos lenguajes de "
"programación que permite la redefinición de los operadores estándar, como la "
"adición (), la resta (`-`), la multiplicación (`*`), y la división (`/`), "
"para trabajar con tipos definidos por el usuario. Esto puede hacer la "
"sintaxis del código más intuitiva, permitiendo que las operaciones en tipos "
"definidos por el usuario se expresen de la misma manera que las operaciones "
"en tipos primitivos."

#: src/ch11-03-operator-overloading.md:5
msgid ""
"In Cairo, operator overloading is achieved through the implementation of "
"specific traits. Each operator has an associated trait, and overloading that "
"operator involves providing an implementation of that trait for a custom "
"type. However, it's essential to use operator overloading judiciously. "
"Misuse can lead to confusion, making the code more difficult to maintain, "
"for example when there is no semantic meaning to the operator being "
"overloaded."
msgstr ""
"En El Cairo, la sobrecarga del operador se logra a través de la "
"implementación de rasgos específicos. Cada operador tiene un rasgo asociado, "
"y sobrecarga que el operador implica proporcionar una implementación de ese "
"rasgo para un tipo personalizado. Sin embargo, es esencial utilizar "
"sobrecarga del operador con juicio. El uso indebido puede conducir a "
"confusión, haciendo el código más difícil de mantener, por ejemplo cuando no "
"hay significado semántico para el operador que se sobrecarga."

#: src/ch11-03-operator-overloading.md:8
msgid ""
"Consider an example where two `Potions` need to be combined. `Potions` have "
"two data fields, mana and health. Combining two `Potions` should add their "
"respective fields."
msgstr ""
"Consideremos un ejemplo en el que hay que combinar dos \" pociones \". Las "
"\" pociones \" tienen dos campos de datos, el maná y la salud, y la "
"combinación de dos \" pociones \" debería añadir sus respectivos campos."

#: src/ch11-03-operator-overloading.md:26
msgid "// Both potions were combined with the `+` operator.\n"
msgstr "// Ambas pociones se combinaron con el operador.\n"

#: src/ch11-03-operator-overloading.md:32
msgid ""
"In the code above, we're implementing the `Add` trait for the `Potion` type. "
"The add function takes two arguments: `lhs` and `rhs` (left and right-hand "
"side). The function body returns a new `Potion` instance, its field values "
"being a combination of `lhs` and `rhs`."
msgstr ""
"En el código anterior, estamos implementando el rasgo `Add` para el tipo "
"`Potion`. La función add toma dos argumentos: `lhs` y `rhs` (izquierda y "
"derecha). El cuerpo de la función devuelve una nueva instancia `Potion`, "
"siendo sus valores de campo una combinación de `lhs` y `rhs`."

#: src/ch11-03-operator-overloading.md:34
msgid ""
"As illustrated in the example, overloading an operator requires "
"specification of the concrete type being overloaded. The overloaded generic "
"trait is `Add<T>`, and we define a concrete implementation for the type "
"`Potion` with `Add<Potion>`."
msgstr ""
"Como se ilustra en el ejemplo, para sobrecargar a un operador es necesario "
"especificar el tipo de concreto que se está sobrecargando. El rasgo genérico "
"sobrecargado es `Add<T®, y definimos una aplicación concreta para el tipo "
"`Potion` con `Add<Potion®."

#: src/ch11-03-operator-overloading.md:36
msgid "{{#quiz ../quizzes/ch11-03-operator-overloading.toml}}"
msgstr "quiz../quizzes/ch11-03-operador-sobrecarga.toml"

#: src/ch11-04-hash.md:1
msgid "Hashes"
msgstr "Hashes"

#: src/ch11-04-hash.md:3
msgid ""
"At its essence, hashing is a process of converting input data (often called "
"a message) of any length into a fixed-size value, typically referred to as a "
"\"hash.\" This transformation is deterministic, meaning that the same input "
"will always produce the same hash value. Hash functions are a fundamental "
"component in various fields, including data storage, cryptography and data "
"integrity verification. They are very often used when developing smart "
"contracts, especially when working with [Merkle trees](https://en.wikipedia."
"org/wiki/Merkle_tree#Uses)."
msgstr ""
"En su esencia, el hashing es un proceso de conversión de datos de entrada (a "
"menudo llamados un mensaje) de cualquier longitud en un valor de tamaño "
"fijo, normalmente llamado \"hash\". Esta transformación es determinista, lo "
"que significa que la misma entrada siempre producirá el mismo valor de hash. "
"Las funciones de hash son un componente fundamental en varios campos, "
"incluyendo almacenamiento de datos, criptografía y verificación de "
"integridad de datos. Se utilizan muy a menudo cuando se desarrollan "
"contratos inteligentes, especialmente cuando se trabaja con [Merkle trees] "
"(https://en.wikipedia.org/wiki/Merkle_tree#Uses)."

#: src/ch11-04-hash.md:5
msgid ""
"In this chapter, we will present the two hash functions implemented natively "
"in the Cairo core library: `Poseidon` and `Pedersen`. We will discuss when "
"and how to use them, and see examples with Cairo programs."
msgstr ""
"En este capítulo, presentaremos las dos funciones de hash implementadas "
"nativamente en la biblioteca central de El Cairo: `Poseidon` y `Pedersen`. "
"Discutiremos cuándo y cómo utilizarlas, y veremos ejemplos con los programas "
"de El Cairo."

#: src/ch11-04-hash.md:9
msgid "Hash Functions in Cairo"
msgstr "Funciones de hash en El Cairo"

#: src/ch11-04-hash.md:11
msgid ""
"The Cairo core library provides two hash functions: Pedersen and Poseidon."
msgstr ""
"La biblioteca central de El Cairo ofrece dos funciones de hash: Pedersen y "
"Poseidón."

#: src/ch11-04-hash.md:13
msgid ""
"Pedersen hash functions are cryptographic algorithms that rely on [elliptic "
"curve cryptography](https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography). These functions perform operations on points along an "
"elliptic curve — essentially, doing math with the locations of these points "
"— which are easy to do in one direction and hard to undo. This one-way "
"difficulty is based on the Elliptic Curve Discrete Logarithm Problem "
"(ECDLP), which is a problem so hard to solve that it ensures the security of "
"the hash function. The difficulty of reversing these operations is what "
"makes the Pedersen hash function secure and reliable for cryptographic "
"purposes."
msgstr ""
"Las funciones de hash de Pedersen son algoritmos criptográficos que se basan "
"en [criptografía de curva elíptica] (https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography). Estas funciones realizan operaciones en puntos a lo "
"largo de una curva elíptica —en esencia, haciendo matemáticas con las "
"ubicaciones de estos puntos— que son fáciles de hacer en una dirección y "
"difíciles de deshacer. Esta dificultad de un solo sentido se basa en el "
"Problema de Logaritmo Discreto de Curva Elíptica (ECDLP), que es un problema "
"tan difícil de resolver que asegura la seguridad de la función de hash. La "
"dificultad de revertir estas operaciones es lo que hace que la función de "
"hash de Pedersen sea segura y fiable para fines criptográficos."

#: src/ch11-04-hash.md:15
msgid ""
"Poseidon is a family of hash functions designed to be very efficient as "
"algebraic circuits. Its design is particularly efficient for Zero-Knowledge "
"proof systems, including STARKs (so, Cairo). Poseidon uses a method called a "
"'sponge construction,' which soaks up data and transforms it securely using "
"a process known as the Hades permutation. Cairo's version of Poseidon is "
"based on a three-element state permutation with [specific parameters]"
"(https://github.com/starkware-industries/poseidon/blob/main/poseidon3.txt)."
msgstr ""
"Poseidón es una familia de funciones de hash diseñadas para ser muy "
"eficientes como circuitos algebraicos. Su diseño es particularmente "
"eficiente para sistemas de prueba de conocimiento cero, incluyendo STARKs "
"(así, El Cairo). Poseidón utiliza un método llamado \"construcción de "
"esponjas\", que absorbe datos y los transforma de forma segura utilizando un "
"proceso conocido como la permutación Hades. La versión de El Cairo de "
"Poseidón se basa en una permutación de tres elementos con [parámetros "
"específicos] (https://github.com/starkware-industries/poseidon/blob/main/"
"poseidon3.txt)."

#: src/ch11-04-hash.md:20
msgid "When to Use Them?"
msgstr "¿ Cuándo usarlos?"

#: src/ch11-04-hash.md:22
msgid ""
"Pedersen was the first hash function used on Starknet, and is still used to "
"compute the addresses of variables in storage (for example, `LegacyMap` uses "
"Pedersen to hash the keys of a storage mapping on Starknet). However, as "
"Poseidon is cheaper and faster than Pedersen when working with STARK proofs "
"system, it's now the recommended hash function to use in Cairo programs."
msgstr ""
"Pedersen fue la primera función de hash utilizada en Starknet, y todavía se "
"utiliza para calcular las direcciones de las variables en el almacenamiento "
"(por ejemplo, `LegacyMap` utiliza Pedersen para hash las claves de una "
"asignación de almacenamiento en Starknet). Sin embargo, como Poseidón es más "
"barato y más rápido que Pedersen cuando se trabaja con el sistema de pruebas "
"STARK, ahora es la función de hash recomendada para usar en los programas de "
"El Cairo."

#: src/ch11-04-hash.md:26
msgid ""
"The core library makes it easy to work with hashes. The `Hash` trait is "
"implemented for all types that can be converted to `felt252`, including "
"`felt252` itself. For more complex types like structs, deriving `Hash` "
"allows them to be hashed easily using the hash function of your choice - "
"given that all of the struct's fields are themselves hashable. You cannot "
"derive the `Hash` trait on a struct that contains un-hashable values, such "
"as `Array<T>` or `Felt252Dict<T>`, even if `T` itself is hashable."
msgstr ""
"La biblioteca central facilita el trabajo con hashes. El rasgo `Hash` se "
"aplica a todos los tipos que se pueden convertir a `felt252`, incluido "
"`felt252` en sí mismo. Para tipos más complejos como structs, derivando "
"`Hash` permite que se fastidien fácilmente utilizando la función hash de su "
"elección, dado que todos los campos de la estructura son hashables en sí "
"mismos. No se puede derivar el rasgo `Hash` en una estructura que contiene "
"valores in-hashables, como `Array<T' o `Felt252Dict<T', incluso si `T` en sí "
"mismo es hashable."

#: src/ch11-04-hash.md:28
msgid ""
"The `Hash` trait is accompanied by the `HashStateTrait` and "
"`HashStateExTrait` that define the basic methods to work with hashes. They "
"allow you to initialize a hash state that will contain the temporary values "
"of the hash after each application of the hash function, update the hash "
"state and finalize it when the computation is completed. `HashStateTrait` "
"and `HashStateExTrait` are defined as follows:"
msgstr ""
"El rasgo `Hash` va acompañado del `HashStateTrait` y `HashStateExTrait` que "
"definen los métodos básicos para trabajar con hashes. Permiten inicializar "
"un estado hash que contendrá los valores temporales del hash después de cada "
"aplicación de la función hash, actualizar el estado hash y finalizarlo "
"cuando se complete el cálculo. `HashStateTrait` y `HashStateExTrait` se "
"definen como sigue:"

#: src/ch11-04-hash.md:31
msgid "/// A trait for hash state accumulators.\n"
msgstr "/// Un rasgo para acumuladores de estado de hash.\n"

#: src/ch11-04-hash.md:36
msgid "/// Extension trait for hash state accumulators.\n"
msgstr "/// Rasgo de extensión para acumuladores de estado de hash.\n"

#: src/ch11-04-hash.md:39 src/ch11-04-hash.md:45
msgid "/// Updates the hash state with the given value.\n"
msgstr "/// Actualiza el estado hash con el valor dado.\n"

#: src/ch11-04-hash.md:42
msgid "/// A trait for values that can be hashed.\n"
msgstr "/// Un rasgo de los valores que se pueden hashed.\n"

#: src/ch11-04-hash.md:50
msgid ""
"To use hashes in your code, you must first import the relevant traits and "
"functions. In the following example, we will demonstrate how to hash a "
"struct using both the Pedersen and Poseidon hash functions."
msgstr ""
"Para usar hashes en su código, primero debe importar los rasgos y funciones "
"relevantes. En el siguiente ejemplo, demostraremos cómo hash una estructura "
"usando las funciones de hash de Pedersen y Poseidón."

#: src/ch11-04-hash.md:52
msgid ""
"The first step is to initialize the hash with either `PoseidonTrait::new() -"
"> HashState` or `PedersenTrait::new(base: felt252) -> HashState` depending "
"on which hash function we want to work with. Then the hash state can be "
"updated with the `update(self: HashState, value: felt252) -> HashState` or "
"`update_with(self: S, value: T) -> S` functions as many times as required. "
"Then the function `finalize(self: HashState) -> felt252` is called on the "
"hash state and it returns the value of the hash as a `felt252`."
msgstr ""
"El primer paso es inicializar el hash con `PoseidonTrait::new() -> "
"HashState` o `PedersenTrait::new(base: feeld252) -> HashState` dependiendo "
"de la función de hash con la que queramos trabajar. Entonces el estado de "
"hash puede actualizarse con el `update(self: HashState, valor: feeld252) -> "
"HashState` o `update_with(self: S, valor: T) -> S` funciona tantas veces "
"como sea necesario. Entonces la función `finalice(self: HashState) -> "
"feeld252` es llamada al estado de hash y devuelve el valor del hash como un "
"`felt252`."

#: src/ch11-04-hash.md:74
msgid ""
"Pedersen is different from Poseidon, as it starts with a base state. This "
"base state must be of `felt252` type, which forces us to either hash the "
"struct with an arbitrary base state using the `update_with` method, or "
"serialize the struct into an array to loop through all of its fields and "
"hash its elements together."
msgstr ""
"Pedersen es diferente de Poseidón, ya que comienza con un estado base. Este "
"estado base debe ser de tipo `felt252`, lo que nos obliga a o bien hash la "
"estructura con un estado base arbitrario utilizando el método `update_with`, "
"o serializar la estructura en un array para lazo a través de todos sus "
"campos y hash sus elementos juntos."

#: src/ch11-04-hash.md:76
msgid "Here is a short example of Pedersen hashing:"
msgstr "He aquí un breve ejemplo del hashing de Pedersen:"

#: src/ch11-04-hash.md:93
msgid "// hash1 is the result of hashing a struct with a base state of 0\n"
msgstr ""
"// hash1 es el resultado del hashing de una estructura con un estado de base "
"de 0\n"

#: src/ch11-04-hash.md:105
msgid "// hash2 is the result of hashing only the fields of the struct\n"
msgstr "// hash2 es el resultado de hashing sólo los campos de la estructura\n"

#: src/ch11-04-hash.md:114
msgid "Advanced Hashing: Hashing Arrays with Poseidon"
msgstr "Hashing avanzado: Arrays de hashing con Poseidón"

#: src/ch11-04-hash.md:116
msgid ""
"Let us look at an example of hashing a struct that contains a "
"`Span<felt252>`. To hash a `Span<felt252>` or a struct that contains a "
"`Span<felt252>` you can use the built-in function `poseidon_hash_span(mut "
"span: Span<felt252>) -> felt252`. Similarly, you can hash `Array<felt252>` "
"by calling `poseidon_hash_span` on its span."
msgstr ""
"Echemos un vistazo a un ejemplo de hashing de una estructura que contiene un "
"`Span<felt252''. Para hash un `Span<felt252'' o una estructura que contiene "
"un `Span<felt252'' se puede utilizar la función incorporada "
"`poseidon_hash_span(múltiplo: Span<felt252>) -> feel252`. Del mismo modo, se "
"puede hash `Array<felt252'' llamando a `poseidon_hash_span` en su espacio."

#: src/ch11-04-hash.md:119
msgid "First, let us import the following traits and function:"
msgstr "En primer lugar, vamos a importar los siguientes rasgos y función:"

#: src/ch11-04-hash.md:127
msgid ""
"Now we define the struct. As you might have noticed, we didn't derive the "
"`Hash` trait. If you attempt to derive the `Hash` trait for this struct, it "
"will result in an error because the structure contains a field that is not "
"hashable."
msgstr ""
"Ahora definimos la estructura. Como habrás notado, no derivamos el rasgo "
"`Hash`. Si intentas derivar el rasgo `Hash` para esta estructura, resultará "
"en un error porque la estructura contiene un campo que no es hashable."

#: src/ch11-04-hash.md:138
msgid ""
"In this example, we initialized a `HashState` (`hash`), updated it and then "
"called the function `finalize()` on the `HashState` to get the computed hash "
"`hash_felt252`. We used `poseidon_hash_span` on the `Span` of the "
"`Array<felt252>` to compute its hash."
msgstr ""
"En este ejemplo, inicializamos un `HashState` (`hash`), lo actualizamos y "
"luego llamamos la función `finalize()` en el `HashState` para obtener el "
"hash computado `hash_felt252`. Usamos `poseidon_hash_span` en el `Span` del "
"`Array<felt252® para calcular su hash."

#: src/ch11-05-macros.md:3
msgid ""
"The Cairo language has some plugins that allow developers to simplify their "
"code. They are called `inline_macros` and are a way of writing code that "
"generates other code."
msgstr ""
"El idioma El Cairo tiene algunos plugins que permiten a los desarrolladores "
"simplificar su código. Se llaman `inline_macros` y son una forma de escribir "
"código que genera otro código."

#: src/ch11-05-macros.md:5
msgid "`consteval_int!` Macro"
msgstr "`consteval_int!` Macro"

#: src/ch11-05-macros.md:7
msgid ""
"In some situations, a developer might need to declare a constant that is the "
"result of a computation of integers. To compute a constant expression and "
"use its result at compile time, it is required to use the `consteval_int!` "
"macro."
msgstr ""
"En algunas situaciones, un desarrollador puede necesitar declarar una "
"constante que es el resultado de un cálculo de enteros. Para calcular una "
"expresión constante y utilizar su resultado en el tiempo de compilación, se "
"requiere utilizar la macro `consteval_int!`."

#: src/ch11-05-macros.md:9
msgid "Here is an example of `consteval_int!`:"
msgstr "He aquí un ejemplo de `consteval_int!`:"

#: src/ch11-05-macros.md:15
msgid "This will be interpreted as `const a: felt252 = 8;` by the compiler."
msgstr "Esto se interpretará como `const a: feed252 = 8;` por el compilador."

#: src/ch11-05-macros.md:17
msgid "`selector!` Macro"
msgstr "`selector!` Macro"

#: src/ch11-05-macros.md:19
msgid ""
"See [Entry Point Selector](./ch15-02-contract-dispatchers-library-"
"dispatchers-and-system-calls.md#entry-point-selector)."
msgstr ""
"Véase [Selector de puntos de entrada](./ch15-02-contract-dispatchers-"
"biblioteca-dispatchers-and-system-calls.md#entry-point-selector)."

#: src/ch11-05-macros.md:21
msgid "`print!` and `println!` Macros"
msgstr "`print!` y `println!` Macros"

#: src/ch11-05-macros.md:23
msgid "Please refer to the [Printing](./ch11-08-printing.md) page."
msgstr "Consulte la página [Imprimir](./ch11-08-printing.md)."

#: src/ch11-05-macros.md:27
msgid "Please refer to the [Arrays](./ch03-01-arrays.md) page."
msgstr "Consulte la página [Arrays](./ch03-01-arrays.md)."

#: src/ch11-05-macros.md:31
msgid ""
"See [Unrecoverable Errors with panic](./ch09-01-unrecoverable-errors-with-"
"panic.html#panic-macro) page."
msgstr ""
"Véase la página [Errores irrecuperables con pánico](./ch09-01-errores "
"irrecuperables-with-panic.html#panic-macro)."

#: src/ch11-05-macros.md:33
msgid "`assert!` and `assert_xx!` Macros"
msgstr "`asertar!` y `asertar_xx!` Macros"

#: src/ch11-05-macros.md:35
msgid "See [How to Write Tests](./ch10-01-how-to-write-tests.md) page."
msgstr ""
"Véase la página [Cómo escribir pruebas](./ch10-01-how-to-write-tests.md)."

#: src/ch11-05-macros.md:37
msgid "`format!` Macro"
msgstr "`formato!` Macro"

#: src/ch11-05-macros.md:39
msgid "See [Printing](./ch11-08-printing.html#formatting) page."
msgstr "Véase la página [Imprimir](./ch11-08-printing.html#formatting)."

#: src/ch11-05-macros.md:41
msgid "`write!` and `writeln!` Macros"
msgstr "`escriba!` y `escriba!` Macros"

#: src/ch11-05-macros.md:43
msgid ""
"See [Printing](./ch11-08-printing.html#printing-custom-data-types) page."
msgstr ""
"Véase la página [Imprimir](./ch11-08-printing.html#printing-custom-data-"
"types)."

#: src/ch11-05-macros.md:45
msgid "`get_dep_component!`, `get_dep_component_mut` and `component!` Macros"
msgstr "`get_dep_component!`, `get_dep_component_mut` y `component!` Macros"

#: src/ch11-05-macros.md:47
msgid ""
"Please refer to the [Composability and Components](./ch16-02-00-"
"composability-and-components.md) chapter."
msgstr ""
"Véase el capítulo [Composibilidad y componentes](./ch16-02-00-composability-"
"and-components.md)."

#: src/ch11-06-inlining-in-cairo.md:3
msgid ""
"Inlining is a common code optimization technique supported by most "
"compilers. It involves replacing a function call at the call site with the "
"actual code of the called function, eliminating the overhead associated with "
"the function call itself. This can improve performance by reducing the "
"number of instructions executed, but may increase the total size of the "
"program. When you're thinking about whether to inline a function, take into "
"account things like how big it is, what parameters it has, how often it gets "
"called, and how it might affect the size of your compiled code."
msgstr ""
"Inlining es una técnica de optimización de código común soportada por la "
"mayoría de los compiladores. Implica reemplazar una llamada de función en el "
"sitio de llamada con el código real de la función llamada, eliminando los "
"gastos generales asociados con la llamada de función en sí. Esto puede "
"mejorar el rendimiento reduciendo el número de instrucciones ejecutadas, "
"pero puede aumentar el tamaño total del programa. Cuando usted está pensando "
"en si inline una función, tener en cuenta cosas como lo grande que es, qué "
"parámetros tiene, con qué frecuencia se llama, y cómo podría afectar el "
"tamaño de su código compilado."

#: src/ch11-06-inlining-in-cairo.md:5
msgid "The `inline` Attribute"
msgstr "El atributo `en línea`"

#: src/ch11-06-inlining-in-cairo.md:7
msgid ""
"In Cairo, the `inline` attribute suggests whether or not the Sierra code "
"corresponding to the attributed function should be directly injected in the "
"caller function's context, rather than using a `function_call` libfunc to "
"execute that code."
msgstr ""
"En El Cairo, el atributo `inline` sugiere si el código Sierra "
"correspondiente a la función atribuida debe inyectarse directamente en el "
"contexto de la función de llamada, en lugar de utilizar un libfunc `func "
"func `func ` para ejecutar ese código."

#: src/ch11-06-inlining-in-cairo.md:9
msgid "There are three variants of the `inline` attribute that one can use:"
msgstr "Hay tres variantes del atributo `inline` que se puede utilizar:"

#: src/ch11-06-inlining-in-cairo.md:11
msgid "`#[inline]` suggests performing an inline expansion."
msgstr "•[en línea]` sugiere realizar una expansión en línea."

#: src/ch11-06-inlining-in-cairo.md:12
msgid ""
"`#[inline(always)]` suggests that an inline expansion should always be "
"performed."
msgstr ""
"•[en línea(siempre)]` sugiere que siempre se debe realizar una expansión en "
"línea."

#: src/ch11-06-inlining-in-cairo.md:13
msgid ""
"`#[inline(never)]` suggests that an inline expansion should never be "
"performed."
msgstr ""
"•[inline(nunca)]` sugiere que nunca se debe realizar una expansión en línea."

#: src/ch11-06-inlining-in-cairo.md:15
msgid ""
"Note: the `inline` attribute in every form is a hint, with no requirements "
"on the language to place a copy of the attributed function in the caller. "
"This means that the attribute may be ignored by the compiler. In practice, "
"`#[inline(always)]` will cause inlining in all but the most exceptional "
"cases."
msgstr ""
"Nota: el atributo `inline` en cada forma es una pista, sin requisitos en el "
"idioma para colocar una copia de la función atribuida en la persona que "
"llama. Esto significa que el atributo puede ser ignorado por el compilador. "
"En la práctica, \"[inline(siempre)]` causará inlining en todos los casos "
"excepto en los más excepcionales."

#: src/ch11-06-inlining-in-cairo.md:17
msgid ""
"Many of the Cairo corelib functions are inlined. User-defined functions may "
"also be annotated with the `inline` attribute. Annoting functions with the "
"`#[inline(always)]` attribute reduces the total number of steps required "
"when calling these attributed functions. Indeed, injecting the Sierra code "
"at the caller site avoids the step-cost involved in calling functions and "
"obtaining their arguments."
msgstr ""
"Muchas de las funciones corelib de El Cairo están alineadas. Las funciones "
"definidas por el usuario también pueden estar anotadas con el atributo "
"`inline`. Anotar funciones con el atributo `[inline(always)]` reduce el "
"número total de pasos requeridos al llamar a estas funciones atribuidas. De "
"hecho, inyectar el código Sierra en el sitio de llamada evita el costo de "
"paso que implica llamar funciones y obtener sus argumentos."

#: src/ch11-06-inlining-in-cairo.md:19
msgid ""
"However, inlining can also lead to increased code size. Whenever a function "
"is inlined, the call site contains a copy of the function's Sierra code, "
"potentially leading to duplication of code across the compiled code."
msgstr ""
"Sin embargo, el inlining también puede dar lugar a un aumento del tamaño del "
"código.Cuando una función está inlineada, el sitio de llamada contiene una "
"copia del código Sierra de la función, lo que puede llevar a la duplicación "
"de código a través del código compilado."

#: src/ch11-06-inlining-in-cairo.md:21
msgid ""
"Therefore, inlining should be applied with caution. Using `#[inline]` or "
"`#[inline(always)]` indiscriminately will lead to increased compile time. It "
"is particularly useful to inline small functions, ideally with many "
"arguments. This is because inlining large functions will increase the code "
"length of the program, and handling many arguments will increase the number "
"of steps to execute these functions."
msgstr ""
"Por lo tanto, el inlining debe ser aplicado con precaución. Usar •[inline]` "
"o •[inline(siempre)]` indiscriminadamente conducirá a un aumento del tiempo "
"de compilación. Es particularmente útil para inline pequeñas funciones, "
"idealmente con muchos argumentos. Esto es porque inlining grandes funciones "
"aumentará la longitud del código del programa, y el manejo de muchos "
"argumentos aumentará el número de pasos para ejecutar estas funciones."

#: src/ch11-06-inlining-in-cairo.md:23
msgid ""
"The more frequently a function is called, the more beneficial inlining "
"becomes in terms of performance. By doing so, the number of steps for the "
"execution will be lower, while the code length will not grow that much or "
"might even decrease in terms of total number of instructions."
msgstr ""
"Cuanto más frecuentemente se llama una función, más beneficioso se convierte "
"en inlining en términos de rendimiento. Al hacerlo, el número de pasos para "
"la ejecución será menor, mientras que la longitud del código no crecerá "
"tanto o incluso podría disminuir en términos de número total de "
"instrucciones."

#: src/ch11-06-inlining-in-cairo.md:25
msgid ""
"Inlining is often a tradeoff between number of steps and code length. Use "
"the `inline` attribute cautiously where it is appropriate."
msgstr ""
"El inlining es a menudo una compensación entre el número de pasos y la "
"longitud del código. Utilice el atributo `inline` con cautela cuando sea "
"apropiado."

#: src/ch11-06-inlining-in-cairo.md:27
msgid "Inlining Example"
msgstr "Ejemplo de inlining"

#: src/ch11-06-inlining-in-cairo.md:29
msgid ""
"Let's introduce a short example to illustrate the mechanisms of inlining in "
"Cairo. Listing 11-3 shows a basic program allowing comparison between "
"inlined and non-inlined functions."
msgstr ""
"Vamos a introducir un breve ejemplo para ilustrar los mecanismos de inlining "
"en El Cairo. Listar 11-3 muestra un programa básico que permite la "
"comparación entre funciones enlineadas y no enlineadas."

#: src/ch11-06-inlining-in-cairo.md:47
msgid ""
"<span class=\"caption\">Listing 11-3: A small Cairo program that adds the "
"return value of 2 functions, with one of them being inlined</span>"
msgstr ""
"<span class=\"caption\">Lista 11-3: Un pequeño programa de El Cairo que "
"añade el valor de retorno de 2 funciones, con una de ellas inlined</span>"

#: src/ch11-06-inlining-in-cairo.md:49
msgid ""
"Let's take a look at the corresponding Sierra code to see how inlining works "
"under the hood:"
msgstr ""
"Echemos un vistazo al código correspondiente de Sierra para ver cómo "
"funciona el inlining debajo del capó:"

#: src/ch11-06-inlining-in-cairo.md:52 src/ch11-06-inlining-in-cairo.md:215
msgid "// type declarations\n"
msgstr "// declaraciones de tipo\n"

#: src/ch11-06-inlining-in-cairo.md:54 src/ch11-06-inlining-in-cairo.md:218
msgid "// libfunc declarations\n"
msgstr "// declaraciones libfunc\n"

#: src/ch11-06-inlining-in-cairo.md:61 src/ch11-06-inlining-in-cairo.md:226
msgid "// statements\n"
msgstr "// declaraciones\n"

#: src/ch11-06-inlining-in-cairo.md:75 src/ch11-06-inlining-in-cairo.md:238
msgid "// funcs\n"
msgstr "// funcs\n"

#: src/ch11-06-inlining-in-cairo.md:82
msgid "The Sierra file is structured in three parts:"
msgstr "El archivo Sierra está estructurado en tres partes:"

#: src/ch11-06-inlining-in-cairo.md:84
msgid "Type and libfunc declarations."
msgstr "Declaraciones tipo y libfunc."

#: src/ch11-06-inlining-in-cairo.md:85
msgid "Statements that constitute the program."
msgstr "Declaraciones que constituyen el programa."

#: src/ch11-06-inlining-in-cairo.md:86
msgid "Declaration of the functions of the program."
msgstr "Declaración de las funciones del programa."

#: src/ch11-06-inlining-in-cairo.md:88
msgid ""
"The Sierra code statements always match the order of function declarations "
"in the Cairo program. Indeed, the declaration of the functions of the "
"program tells us that:"
msgstr ""
"Las declaraciones de código Sierra siempre coinciden con el orden de las "
"declaraciones de función en el programa de El Cairo. De hecho, la "
"declaración de las funciones del programa nos dice que:"

#: src/ch11-06-inlining-in-cairo.md:90
msgid "`main` function starts at line 0, and returns a `felt252` on line 5."
msgstr ""
"La función `main` comienza en la línea 0, y devuelve un `felt252` en la "
"línea 5."

#: src/ch11-06-inlining-in-cairo.md:91
msgid "`inlined` function starts at line 6, and returns a `felt252` on line 8."
msgstr ""
"La función `inlined` comienza en la línea 6 y devuelve un `felt252` en la "
"línea 8."

#: src/ch11-06-inlining-in-cairo.md:92
msgid ""
"`not_inlined` function starts at line 9, and returns a `felt252` on line 11."
msgstr ""
"La función `not_inlined` comienza en la línea 9, y devuelve una `felt252` en "
"la línea 11."

#: src/ch11-06-inlining-in-cairo.md:94
msgid ""
"All statements corresponding to the `main` function are located between "
"lines 0 and 5:"
msgstr ""
"Todas las declaraciones correspondientes a la función \" principal \" se "
"encuentran entre las líneas 0 y 5:"

#: src/ch11-06-inlining-in-cairo.md:105
msgid ""
"The `function_call` libfunc is called on line 0 to execute the `not_inlined` "
"function. This will execute the code from lines 9 to 10 and store the return "
"value in the variable with id `0`."
msgstr ""
"La función `function_call` libfunc se llama en la línea 0 para ejecutar la "
"función `not_inlined`. Esto ejecutará el código de las líneas 9 a 10 y "
"almacenará el valor de retorno en la variable con id `0`."

#: src/ch11-06-inlining-in-cairo.md:112
msgid ""
"This code uses a single data type, `felt252`. It uses two library functions -"
" `felt_const<2>`, which returns the constant `felt252` 2, "
"and `store_temp<felt252>`, which pushes a constant value to memory. The "
"first line calls the `felt_const<2>` libfunc to create a variable with "
"id `0`. Then, the second line pushes this variable to memory for later use."
msgstr ""
"Este código utiliza un solo tipo de datos, `felt252`. Utiliza dos funciones "
"de biblioteca - `felt_const<2'', que devuelve la constante `felt252` 2, y "
"`store_temp<felt252'', que empuja un valor constante a la memoria. La "
"primera línea llama al `felt_const<2'' libfunc para crear una variable con "
"id `0`. A continuación, la segunda línea empuja esta variable a la memoria "
"para su uso posterior."

#: src/ch11-06-inlining-in-cairo.md:114
msgid ""
"After that, Sierra statements from line 1 to 2 are the actual body of the "
"`inlined` function:"
msgstr ""
"Después de eso, las declaraciones de Sierra de las líneas 1 a 2 son el "
"cuerpo real de la función `inlined`:"

#: src/ch11-06-inlining-in-cairo.md:121
msgid ""
"The only difference is that the inlined code will store the `felt252_const` "
"value in a variable with id `1`, because `[0]` refers to a variable "
"previously assigned:"
msgstr ""
"La única diferencia es que el código inlined almacenará el valor "
"`felt252_const` en una variable con id `1`, porque `[0]` se refiere a una "
"variable previamente asignada:"

#: src/ch11-06-inlining-in-cairo.md:128
msgid ""
"Note: in both cases (inlined or not), the `return` instruction of the "
"function being called is not executed, as this would lead to prematurely end "
"the execution of the `main` function. Instead, return values of `inlined` "
"and `not_inlined` will be added and the result will be returned."
msgstr ""
"Nota: En ambos casos (inlineados o no), la instrucción `return` de la "
"función que se llama no se ejecuta, ya que esto llevaría a terminar "
"prematuramente la ejecución de la función `main`; en cambio, se añadirán los "
"valores de retorno de `inlined` y `not_inlined` y se devolverá el resultado."

#: src/ch11-06-inlining-in-cairo.md:130
msgid ""
"Lines 3 to 5 contain the Sierra statements that will add the values "
"contained in variables with ids `0` and `1`, store the result in memory and "
"return it:"
msgstr ""
"Las líneas 3 a 5 contienen las frases Sierra que añadirán los valores "
"contenidos en las variables con los ids `0` y `1`, almacenarán el resultado "
"en memoria y lo devolverán:"

#: src/ch11-06-inlining-in-cairo.md:138
msgid ""
"Now, let's take a look at the Casm code corresponding to this program to "
"really understand the benefits of inlining."
msgstr ""
"Ahora, echemos un vistazo al código Casm correspondiente a este programa "
"para entender realmente los beneficios de inlining."

#: src/ch11-06-inlining-in-cairo.md:140
msgid "Casm Code Explanations"
msgstr "Explicaciones sobre el código de la carcasa"

#: src/ch11-06-inlining-in-cairo.md:142
msgid "Here is the Casm code for our previous program example:"
msgstr "Aquí está el código Casm para nuestro ejemplo de programa anterior:"

#: src/ch11-06-inlining-in-cairo.md:158
msgid ""
"Don't hesitate to use [cairovm.codes](https://cairovm.codes/) playground to "
"follow along and see all the execution trace."
msgstr ""
"No dude en utilizar [cairovm.codes](https://cairovm.codes/) parque infantil "
"para seguir y ver todos los rastros de ejecución."

#: src/ch11-06-inlining-in-cairo.md:160
msgid ""
"Each instruction and each argument for any instruction increment the Program "
"Counter (known as PC) by 1. This means that `ret` on line 2 is actually the "
"instruction at `PC = 3`, as the argument `3` corresponds to `PC = 2`."
msgstr ""
"Cada instrucción y cada argumento para cualquier instrucción incrementan el "
"Contador del Programa (conocido como PC) por 1. Esto significa que `ret` en "
"la línea 2 es realmente la instrucción en `PC = 3 ', ya que el argumento "
"`3'corresponde a `PC = 2 '."

#: src/ch11-06-inlining-in-cairo.md:162
msgid ""
"The `call` and `ret` instructions allow implementation of a function stack:"
msgstr ""
"Las instrucciones \" call \" y \" ret \" permiten la aplicación de una pila "
"de funciones:"

#: src/ch11-06-inlining-in-cairo.md:164
msgid ""
"`call` instruction acts like a jump instruction, updating the PC to a given "
"value, whether relatively to the current value using `rel` or absolutely "
"using `abs`."
msgstr ""
"La instrucción `call` actúa como una instrucción de salto, actualizando el "
"PC a un valor dado, ya sea relativamente al valor actual usando `rel` o "
"absolutamente usando `abs`."

#: src/ch11-06-inlining-in-cairo.md:165
msgid ""
"`ret` instruction jumps back right after the `call` instruction and "
"continues the execution of the code."
msgstr ""
"La instrucción `ret` salta justo después de la instrucción `call` y continúa "
"la ejecución del código."

#: src/ch11-06-inlining-in-cairo.md:167
msgid ""
"We can now decompose how these instructions are executed to understand what "
"this code does:"
msgstr ""
"Ahora podemos descomponer cómo se ejecutan estas instrucciones para entender "
"lo que hace este código:"

#: src/ch11-06-inlining-in-cairo.md:169
msgid ""
"`call rel 3`: this instruction increments the PC by 3 and executes the "
"instruction at this location, which is `call rel 9` at `PC = 4`."
msgstr ""
"`llamada rel 3`: esta instrucción incrementa el PC en 3 y ejecuta la "
"instrucción en este lugar, que es `llamada rel 9` en `PC = 4`."

#: src/ch11-06-inlining-in-cairo.md:170
msgid ""
"`call rel 9` increments the PC by 9 and executes the instruction at `PC = "
"13`, which is actually line 9."
msgstr ""
"`call rel 9` incrementa el PC en 9 y ejecuta la instrucción en `PC = 13`, "
"que es realmente la línea 9."

#: src/ch11-06-inlining-in-cairo.md:171
msgid ""
"`[ap + 0] = 2, ap++`: `ap` stands for Allocation Pointer, which points to "
"the first memory cell that has not been used by the program so far. This "
"means we store the value `2` in the next free memory cell indicated by the "
"current value of `ap`, after which we increment `ap` by 1. Then, we go to "
"the next line which is `ret`."
msgstr ""
"`[ap + 0] = 2, ap: `ap` significa puntero de asignación, que apunta a la "
"primera celda de memoria que no ha sido utilizada por el programa hasta "
"ahora. Esto significa que almacenamos el valor `2` en la siguiente celda de "
"memoria libre indicada por el valor actual de `ap`, después de lo cual "
"incrementamos `ap` por 1. Luego, vamos a la siguiente línea que es `ret`."

#: src/ch11-06-inlining-in-cairo.md:172
msgid "`ret`: jumps back to the line after `call rel 9`, so we go to line 4."
msgstr ""
"`ret`: salta de nuevo a la línea después de `llamar a rel 9`, así que vamos "
"a la línea 4."

#: src/ch11-06-inlining-in-cairo.md:173
msgid ""
"`[ap + 0] = 1, ap++` : we store the value `1` in `[ap]` and we apply `ap++` "
"so that `[ap - 1] = 1`. This means we now have `[ap-1] = 1, [ap-2] = 2` and "
"we go to the next line."
msgstr ""
"`[ap + 0] = 1, ap : almacenamos el valor `1` en `[ap]` y aplicamos `ap de "
"modo que `[ap - 1] = 1`. Esto significa que ahora tenemos `[ap-1] = 1, "
"[ap-2] = 2` y vamos a la siguiente línea."

#: src/ch11-06-inlining-in-cairo.md:174
msgid ""
"`[ap + 0] = [ap + -1] + [ap + -2], ap++`: we sum the values `1` and `2` and "
"store the result in `[ap]`, and we apply `ap++` so the result is `[ap-1] = "
"3, [ap-2] = 1, [ap-3]=2`."
msgstr ""
"`[ap + 0] = [ap + -1] + [ap + -2], ap: sumamos los valores `1` y `2` y "
"almacenamos el resultado en `[ap]`, y aplicamos `ap por lo que el resultado "
"es `[ap-1] = 3, [ap-2] = 1, [ap-3]=2`."

#: src/ch11-06-inlining-in-cairo.md:175
msgid "`ret`: jumps back to the line after `call rel 3`, so we go to line 2."
msgstr ""
"`ret`: salta de nuevo a la línea después de `llamar a rel 3`, así que vamos "
"a la línea 2."

#: src/ch11-06-inlining-in-cairo.md:176
msgid ""
"`ret`: last instruction executed as there is no more `call` instruction "
"where to jump right after. This is the actual return instruction of the "
"Cairo `main` function."
msgstr ""
"`ret`: última instrucción ejecutada ya que no hay más instrucción `call` "
"donde saltar justo después. Esta es la instrucción real de retorno de la "
"función `main` de El Cairo."

#: src/ch11-06-inlining-in-cairo.md:178
msgid "To summarize:"
msgstr "En resumen:"

#: src/ch11-06-inlining-in-cairo.md:180
msgid ""
"`call rel 3` corresponds to the `main` function, which is obviously not "
"inlined."
msgstr ""
"\" call rel 3 \" corresponde a la función \" principal \", que obviamente no "
"está inlineada."

#: src/ch11-06-inlining-in-cairo.md:181
msgid ""
"`call rel 9` triggers the call the `not_inlined` function, which returns `2` "
"and stores it at the final location `[ap-3]`."
msgstr ""
"`call rel 9` activa la función `not_inlined`, que devuelve `2` y la almacena "
"en el lugar final `[ap-3]`."

#: src/ch11-06-inlining-in-cairo.md:182
msgid ""
"The line 4 is the inlined code of the `inlined` function, which returns `1` "
"and stores it at the final location `[ap-2]`. We clearly see that there is "
"no `call` instruction in this case, because the body of the function is "
"inserted and directly executed."
msgstr ""
"La línea 4 es el código inlineado de la función `inlined`, que devuelve `1` "
"y lo almacena en la ubicación final `[ap-2]`. Vemos claramente que no hay "
"instrucción `call` en este caso, porque el cuerpo de la función se inserta y "
"se ejecuta directamente."

#: src/ch11-06-inlining-in-cairo.md:183
msgid ""
"After that, the sum is computed and we ultimately go back to the line 2 "
"which contains the final `ret` instruction that returns the sum, "
"corresponding to the return value of the `main` function."
msgstr ""
"Después de eso, la suma se calcula y en última instancia volvemos a la línea "
"2 que contiene la instrucción final `ret` que devuelve la suma, "
"correspondiente al valor de retorno de la función `main`."

#: src/ch11-06-inlining-in-cairo.md:185
msgid ""
"It is interesting to note that in both Sierra code and Casm code, the "
"`not_inlined` function will be called and executed before the body of the "
"`inlined` function, even though the Cairo program executes `inlined() + "
"not_inlined()`."
msgstr ""
"Es interesante señalar que tanto en el código Sierra como en el código Casm, "
"la función `not_inlined` será llamada y ejecutada antes del cuerpo de la "
"función `inlined`, aunque el programa El Cairo ejecute `inlined() + "
"not_inlined()`."

#: src/ch11-06-inlining-in-cairo.md:187
msgid ""
"The Casm code of our program clearly shows that there is a function call for "
"the `not_inlined` function, while the `inlined` function is correctly "
"inlined."
msgstr ""
"El código Casm de nuestro programa muestra claramente que hay una llamada de "
"función para la función `not_inlined`, mientras que la función `inlined` "
"está correctamente alineada."

#: src/ch11-06-inlining-in-cairo.md:189
msgid "Additional Optimizations"
msgstr "Optimizaciones adicionales"

#: src/ch11-06-inlining-in-cairo.md:191
msgid ""
"Let's study another program that shows other benefits that inlining may "
"sometimes provide. Listing 11-4 shows a Cairo program that calls 2 functions "
"and doesn't return anything:"
msgstr ""
"Vamos a estudiar otro programa que muestra otros beneficios que el inlining "
"puede a veces proporcionar. Listar 11-4 muestra un programa de El Cairo que "
"llama a 2 funciones y no devuelve nada:"

#: src/ch11-06-inlining-in-cairo.md:210
msgid ""
"<span class=\"caption\">Listing 11-4: A small Cairo program that calls "
"`inlined` and `not_inlined` and doesn't return any value.</span>"
msgstr ""
"<span class=\"caption\">Lista 11-4: Un pequeño programa de El Cairo que "
"llama a `inlined` y `not_inlined` y no devuelve ningún valor.</span>"

#: src/ch11-06-inlining-in-cairo.md:212
msgid "Here is the corresponding Sierra code:"
msgstr "Aquí está el código correspondiente de Sierra:"

#: src/ch11-06-inlining-in-cairo.md:245
msgid ""
"In this specific case, we can observe that the compiler has applied "
"additional optimizations to the `main` function of our code : the code of "
"the `inlined` function, which is annotated with the `#[inline(always)]` "
"attribute, is actually not copied in the `main` function. Instead, the "
"`main` function starts with the `function_call` libfunc to call the "
"`not_inlined` function, entirely omitting the code of the `inlined` function."
msgstr ""
"En este caso concreto, podemos observar que el compilador ha aplicado "
"optimizaciones adicionales a la función `main` de nuestro código: el código "
"de la función `inlined`, que está anotado con el atributo "
"`[inline(always)]`, en realidad no se copia en la función `main`. En cambio, "
"la función `main` comienza con la función `function_call` libfunc para "
"llamar a la función `not_inlined`, omitiendo totalmente el código de la "
"función `inlined`."

#: src/ch11-06-inlining-in-cairo.md:247
msgid ""
"Because `inlined` return value is never used, the compiler optimizes the "
"`main` function by skipping the `inlined` function code. This will actually "
"reduce the code length while reducing the number of steps required to "
"execute `main`."
msgstr ""
"Dado que el valor de retorno `inlined` nunca se utiliza, el compilador "
"optimiza la función `main` omitiendo el código de función `inlined`. Esto "
"reducirá la longitud del código al tiempo que reduce el número de pasos "
"necesarios para ejecutar `main`."

#: src/ch11-06-inlining-in-cairo.md:249
msgid ""
"In contrast, line 0 uses the `function_call` libfunc to execute the "
"`not_inlined` function normally. This means that all the code from lines 7 "
"to 8 will be executed:"
msgstr ""
"Por el contrario, la línea 0 utiliza el libfunc `function_call` para "
"ejecutar la función `not_inlined` normalmente. Esto significa que todo el "
"código de las líneas 7 a 8 se ejecutará:"

#: src/ch11-06-inlining-in-cairo.md:256
msgid ""
"This value stored in the variable with id `0` is then dropped on line 1, as "
"it is not used in the `main` function:"
msgstr ""
"Este valor almacenado en la variable con id `0` se deja caer en la línea 1, "
"ya que no se utiliza en la función `main`:"

#: src/ch11-06-inlining-in-cairo.md:262
msgid ""
"Finally, as the `main` function doesn't return any value, a variable of unit "
"type `()` is created and returned:"
msgstr ""
"Por último, como la función `main` no devuelve ningún valor, se crea y "
"devuelve una variable de tipo de unidad `()`:"

#: src/ch11-06-inlining-in-cairo.md:271
msgid ""
"Inlining is a compiler optimization technique that can be very useful in "
"various situations. Inlining a function allows to get rid of the overhead of "
"calling a function with the `function_call` libfunc by injecting the Sierra "
"code directly in the caller function's context, while potentially optimizing "
"the Sierra code executed to reduce the number of steps. If used effectively, "
"inlining can even reduce code length as shown in the previous example."
msgstr ""
"Inlining es una técnica de optimización del compilador que puede ser muy "
"útil en varias situaciones. Inlining una función permite deshacerse de la "
"sobrecarga de llamar a una función con el libfunc `función_call` inyectando "
"el código Sierra directamente en el contexto de la función de llamada, "
"mientras que potencialmente optimiza el código Sierra ejecutado para reducir "
"el número de pasos. Si se utiliza eficazmente, inlining puede incluso "
"reducir la longitud del código como se muestra en el ejemplo anterior."

#: src/ch11-06-inlining-in-cairo.md:273
msgid ""
"Nevertheless, applying the `inline` attribute to a function with a lot of "
"code and few parameters might result in an increased code size, especially "
"if the inlined function is used many times in the codebase. Use inlining "
"only where it makes sense, and be aware that the compiler handles inlining "
"by default. Therefore, manually applying inlining is not recommended in most "
"situations, but can help improve and fine-tune your code's behavior."
msgstr ""
"Sin embargo, aplicar el atributo `inline` a una función con mucho código y "
"pocos parámetros podría resultar en un mayor tamaño de código, especialmente "
"si la función inlined se utiliza muchas veces en la base de código. Use "
"inlining sólo donde tenga sentido, y tenga en cuenta que el compilador "
"maneja inlining por defecto. Por lo tanto, la aplicación manual de inlining "
"no se recomienda en la mayoría de las situaciones, pero puede ayudar a "
"mejorar y ajustar el comportamiento de su código."

#: src/ch11-08-printing.md:3
msgid ""
"When writing a program, it is quite common to print some data to the "
"console, either for the normal process of the program or for debugging "
"purpose. In this chapter, we describe the options you have to print simple "
"and complex data types."
msgstr ""
"Al escribir un programa, es bastante común imprimir algunos datos en la "
"consola, ya sea para el proceso normal del programa o para el propósito de "
"depuración. En este capítulo, describimos las opciones que tiene para "
"imprimir tipos de datos simples y complejos."

#: src/ch11-08-printing.md:5
msgid "Printing Standard Data Types"
msgstr "Imprimir tipos de datos estándar"

#: src/ch11-08-printing.md:7
msgid "Cairo provides two macros to print standard data types:"
msgstr "El Cairo proporciona dos macros para imprimir tipos de datos estándar:"

#: src/ch11-08-printing.md:9
msgid "`println!` which prints on a new line"
msgstr "`println!` que imprime en una nueva línea"

#: src/ch11-08-printing.md:10
msgid "`print!` with inline printing"
msgstr "`print!` con impresión en línea"

#: src/ch11-08-printing.md:12
msgid ""
"Both take a `ByteArray` string as first parameter (see [Data Types](./"
"ch02-02-data-types.md#byte-array-strings)), which can be a simple string to "
"print a message or a string with placeholders to format the way values are "
"printed."
msgstr ""
"Ambos toman una cadena `ByteArray` como primer parámetro (ver [Tipos de "
"datos](./ch02-02-data-types.md#byte-array-strings)), que puede ser una "
"cadena simple para imprimir un mensaje o una cadena con marcadores de "
"posición para formatear los valores de forma se imprimen."

#: src/ch11-08-printing.md:14
msgid "There are two ways to use these placeholders and both can be mixed:"
msgstr ""
"Hay dos maneras de utilizar estos marcadores de posición y ambos se pueden "
"mezclar:"

#: src/ch11-08-printing.md:16
msgid ""
"empty curly brackets `{}` are replaced by values given as parameters to the "
"`print!` macro, in the same order."
msgstr ""
"los corchetes de rizos vacíos  se sustituyen por los valores dados como "
"parámetros a la macro `print!`, en el mismo orden."

#: src/ch11-08-printing.md:17
msgid ""
"curly brackets with variable names are directly replaced by the variable "
"value."
msgstr ""
"los soportes rizados con nombres variables son reemplazados directamente por "
"el valor variable."

#: src/ch11-08-printing.md:19
msgid "Here are some examples:"
msgstr "He aquí algunos ejemplos:"

#: src/ch11-08-printing.md:27
msgid "\"Hello world!\""
msgstr "\"¡Hola mundo!\""

#: src/ch11-08-printing.md:28
msgid "\"{} {} {}\""
msgstr

#: src/ch11-08-printing.md:28
msgid "// 10 20 30\n"
msgstr "// 10 20 30\n"

#: src/ch11-08-printing.md:29
msgid "\"{c} {a} {}\""
msgstr "\" {c} {a} {a}\""

#: src/ch11-08-printing.md:29
msgid "// 30 10 20\n"
msgstr "// 30 10 20\n"

#: src/ch11-08-printing.md:33
msgid ""
"`print!` and `println!` macros use the `Display` trait under the hood, and "
"are therefore used to print the value of types that implement it. This is "
"the case for basic data types, but not for more complex ones. If you try to "
"print complex data type values with these macros, e.g. for debugging "
"purposes, you will get an error. In that case, you can either [manually "
"implement](./ch11-08-printing.md#printing-custom-data-types) the `Display` "
"trait for your type or use the `Debug` trait (see [below](./ch11-08-printing."
"md#print-debug-traces))."
msgstr ""
"Las macros `print!` y `println!` utilizan el rasgo `Display` bajo el capó y, "
"por lo tanto, se utilizan para imprimir el valor de los tipos que lo "
"implementan. Este es el caso de los tipos de datos básicos, pero no de los "
"más complejos. Si intenta imprimir valores de tipo de datos complejos con "
"estas macros, por ejemplo, con fines de depuración, obtendrá un error. En "
"ese caso, puede [imprimir manualmente](./ch11-08-printing.md#printing-custom-"
"data-types) el rasgo `Display` para su tipo o utilizar el rasgo `Debug` "
"(véase [abajo](./ch11-08-printing.md#print-debug-traces))."

#: src/ch11-08-printing.md:39
msgid "Formatting"
msgstr "Formato"

#: src/ch11-08-printing.md:41
msgid ""
"Cairo also provides a useful macro to handle string formatting: `format!`. "
"This macro works like `println!`, but instead of printing the output to the "
"screen, it returns a `ByteArray` with the contents. In the following "
"example, we perform string concatenation using either the `+` operator or "
"the `format!` macro. The version of the code using `format!` is much easier "
"to read, and the code generated by the `format!` macro uses snapshots, so "
"that this call doesn’t take ownership of any of its parameters."
msgstr ""
"El Cairo también proporciona una macro útil para manejar el formato de "
"cadena: `format!`. Esta macro funciona como `println!`, pero en lugar de "
"imprimir la salida a la pantalla, devuelve un `ByteArray` con el contenido. "
"En el siguiente ejemplo, realizamos la concatenación de cadena usando el "
"operador  o la macro `format!`. La versión del código usando `format!` es "
"mucho más fácil de leer, y el código generado por la macro `format!` utiliza "
"instantáneas, de modo que esta llamada no toma la propiedad de ninguno de "
"sus parámetros."

#: src/ch11-08-printing.md:46 src/ch11-08-printing.md:52
msgid "\"tic\""
msgstr "\"Tic\""

#: src/ch11-08-printing.md:47 src/ch11-08-printing.md:53
msgid "\"tac\""
msgstr "\"tac\""

#: src/ch11-08-printing.md:48 src/ch11-08-printing.md:54
msgid "\"toe\""
msgstr "\"Dedo del pie\""

#: src/ch11-08-printing.md:49
msgid "\"-\""
msgstr "\"-\""

#: src/ch11-08-printing.md:50
msgid ""
"// using + operator consumes the strings, so they can't be used again!\n"
msgstr ""
"// usando + operador consume las cadenas, por lo que no se pueden utilizar "
"de nuevo!\n"

#: src/ch11-08-printing.md:55
msgid "\"{s1}-{s2}-{s3}\""
msgstr "\"{s1}-{s2}-{s3}\""

#: src/ch11-08-printing.md:55
msgid ""
"// s1, s2, s3 are not consumed by format!\n"
"    // or\n"
msgstr "// s1, s2, s3 no se consumen por formato! // o\n"

#: src/ch11-08-printing.md:57
msgid "\"{}-{}-{}\""
msgstr "\"-----\""

#: src/ch11-08-printing.md:63
msgid "Printing Custom Data Types"
msgstr "Imprimir tipos de datos personalizados"

#: src/ch11-08-printing.md:65
msgid ""
"As previously explained, if you try to print the value of a custom data type "
"with `print!` or `println!` macros, you'll get an error telling you that the "
"`Display` trait is not implemented for your custom type:"
msgstr ""
"Como se ha explicado anteriormente, si intenta imprimir el valor de un tipo "
"de datos personalizado con macros `print!` o `println!`, obtendrá un error "
"diciéndole que el rasgo `Display` no está implementado para su tipo "
"personalizado:"

#: src/ch11-08-printing.md:71
msgid ""
"The `println!` macro can do many kinds of formatting, and by default, the "
"curly brackets tell `println!` to use formatting known as `Display` - output "
"intended for direct end user consumption. The primitive types we’ve seen so "
"far implement `Display` by default because there’s only one way you’d want "
"to show a `1` or any other primitive type to a user. But with structs, the "
"way `println!` should format the output is less clear because there are more "
"display possibilities: Do we want commas or not? Do we want to print the "
"curly brackets? Should all the fields be shown? Due to this ambiguity, Cairo "
"doesn’t try to guess what we want, and structs don’t have a provided "
"implementation of `Display` to use with `println!` and the `{}` placeholder."
msgstr ""
"La macro `println!` puede hacer muchos tipos de formato, y por defecto, los "
"corchetes rizados le dicen a `println!` que use el formato conocido como "
"`Display` - salida destinada al consumo final directo del usuario. Los tipos "
"primitivos que hemos visto hasta ahora implementar `Display` por defecto "
"porque hay sólo una manera en que usted desea mostrar un `1` o cualquier "
"otro tipo primitivo a un usuario. Pero con estructuras, la forma "
"`println!'debe formatear la salida es menos clara porque hay más "
"posibilidades de visualización: ¿Queremos comas o no? ¿Queremos imprimir los "
"corchetes rizados? ¿Deberíamos mostrar todos los campos? Debido a esta "
"ambigüedad, El Cairo no trata de adivinar lo que queremos, y las estructuras "
"no tienen una implementación proporcionada de `Display` para usar con "
"`println!` y el marcador de posición."

#: src/ch11-08-printing.md:73
msgid "Here is the `Display` trait to implement:"
msgstr "A continuación se presenta el rasgo de `display` para aplicar:"

#: src/ch11-08-printing.md:81
msgid ""
"The second parameter `f` is of type `Formatter`, which is just a struct "
"containing a `ByteArray`, representing the pending result of formatting:"
msgstr ""
"El segundo parámetro `f` es de tipo `Formateria`, que es sólo una estructura "
"que contiene un `ByteArray`, que representa el resultado pendiente del "
"formato:"

#: src/ch11-08-printing.md:86
msgid "/// The pending result of formatting.\n"
msgstr "/// El resultado pendiente del formato.\n"

#: src/ch11-08-printing.md:91
msgid ""
"Knowing this, here is an example of how to implement the `Display` trait for "
"a custom `Point` struct:"
msgstr ""
"Sabiendo esto, aquí hay un ejemplo de cómo implementar el rasgo `Display` "
"para una estructura `Point` personalizada:"

#: src/ch11-08-printing.md:104
msgid "\"Point ({}, {})\""
msgstr "\"Punto (, )\""

#: src/ch11-08-printing.md:112 src/ch11-08-printing.md:156
msgid "// Point: (1, 3)\n"
msgstr "// Punto: (1, 3)\n"

#: src/ch11-08-printing.md:116
msgid ""
"Cairo also provides the `write!` and `writeln!` macros to write formatted "
"strings in a formatter. Here is a short example using `write!` macro to "
"concatenate multiple strings on the same line and then print the result:"
msgstr ""
"El Cairo también proporciona las macros `write!` y `writeln!` para escribir "
"cadenas formateadas en formateria. He aquí un ejemplo corto usando `write!` "
"macro para concatenar múltiples cadenas en la misma línea y luego imprimir "
"el resultado:"

#: src/ch11-08-printing.md:126
msgid "\"hello\""
msgstr "\"hola\""

#: src/ch11-08-printing.md:127
msgid "\"world\""
msgstr "\"mundo\""

#: src/ch11-08-printing.md:128
msgid "\" {a} {b}\""
msgstr "\" {a} {b}\""

#: src/ch11-08-printing.md:130
msgid "// helloworld 10 20\n"
msgstr "// helloworld 10 20\n"

#: src/ch11-08-printing.md:134
msgid ""
"It is also possible to implement the `Display` trait for the `Point` struct "
"using these macros, as shown here:"
msgstr ""
"También es posible poner en práctica el rasgo `Display` para la estructura "
"`Point` utilizando estas macros, como se muestra a continuación:"

#: src/ch11-08-printing.md:150
msgid "\"Point ({x}, {y})\""
msgstr "\"Punto ({x}, {y})\""

#: src/ch11-08-printing.md:160
msgid ""
"Printing complex data types this way might not be ideal as it requires "
"additional steps to use the `print!` and `println!` macros. If you need to "
"print complex data types, especially when debugging, use the `Debug` trait "
"described below instead."
msgstr ""
"La impresión de tipos de datos complejos de esta manera puede no ser ideal, "
"ya que requiere pasos adicionales para usar las macros `print!` y `println!"
"`. Si necesita imprimir tipos de datos complejos, especialmente al depurar, "
"utilice el rasgo `Debug` descrito a continuación."

#: src/ch11-08-printing.md:162
msgid "Print Debug Traces"
msgstr "Imprimir rastros de depuración"

#: src/ch11-08-printing.md:164
msgid ""
"Cairo provides the `Debug` trait, which can be derived to print the value of "
"variables when debugging. Simply add `:?` within the curly brackets `{}` "
"placeholders in a `print!` or `println!` macro string."
msgstr ""
"El Cairo proporciona el rasgo `Debug`, que se puede derivar para imprimir el "
"valor de las variables al depurar. Simplemente añádase `:?` dentro de los "
"corchetes rizados  marcadores de posición en una cadena macro `print!` o "
"`println!`."

#: src/ch11-08-printing.md:166
msgid ""
"This trait is very useful and is implemented by default for basic data "
"types. It can also be simply derived for complex data types using the "
"`#[derive(Debug)]` attribute, as long as all types they contain implement "
"it. This eliminates the need to manually implement extra code to print "
"complex data types."
msgstr ""
"Este rasgo es muy útil y se implementa de forma predeterminada para los "
"tipos de datos básicos. También se puede derivar simplemente para tipos de "
"datos complejos usando el atributo •[derive(Debug)]`, siempre y cuando todos "
"los tipos que contengan lo implementen. Esto elimina la necesidad de "
"implementar manualmente código adicional para imprimir tipos de datos "
"complejos."

#: src/ch11-08-printing.md:168
msgid ""
"Note that `assert_xx!` macros used in tests require the provided values to "
"implement the `Debug` trait, as they also print the result in case of "
"assertion failure."
msgstr ""
"Tenga en cuenta que las macros `assert_xx!` utilizadas en los ensayos "
"requieren los valores proporcionados para implementar el rasgo `Debug`, ya "
"que también imprimen el resultado en caso de fallo de la afirmación."

#: src/ch11-08-printing.md:170
msgid ""
"For more details about the `Debug` trait and its usage for printing values "
"when debugging, please refer to the [Derivable Traits](./appendix-03-"
"derivable-traits.md#debug-trait-for-printing-and-debugging) appendix."
msgstr ""
"Para obtener más detalles sobre el rasgo `Debug` y su uso para la impresión "
"de valores al depurar, consulte el apéndice [Rasgos Derivados](./appendix-03-"
"derivable-traits.md#debug-trait-for-printing-and-debugging)."

#: src/appendix-00.md
msgid ""
"The following sections contain reference material you may find useful in "
"your Cairo journey."
msgstr ""
"Las siguientes secciones contienen material de referencia que puede "
"encontrar útil en su viaje a El Cairo."

#: src/appendix-01-keywords.md:1
msgid "Appendix A - Keywords"
msgstr "Apéndice A - Palabras clave"

#: src/appendix-01-keywords.md:3
msgid ""
"The following list contains keywords that are reserved for current or future "
"use by the Cairo language."
msgstr ""
"La siguiente lista contiene palabras clave que están reservadas para su uso "
"actual o futuro en el idioma de El Cairo."

#: src/appendix-01-keywords.md:5
msgid "There are three keyword categories:"
msgstr "Hay tres categorías de palabras clave:"

#: src/appendix-01-keywords.md:7
msgid "strict"
msgstr "estricto"

#: src/appendix-01-keywords.md:8
msgid "loose"
msgstr "suelta"

#: src/appendix-01-keywords.md:9
msgid "reserved"
msgstr "reservadas"

#: src/appendix-01-keywords.md:11
msgid ""
"There is a fourth category, which are functions from the core library. While "
"their names are not reserved, they are not recommended to be used as names "
"of any items to follow good practices."
msgstr ""
"Hay una cuarta categoría, que son funciones de la biblioteca principal. Si "
"bien sus nombres no están reservados, no se recomienda utilizarlos como "
"nombres de ningún elemento para seguir buenas prácticas."

#: src/appendix-01-keywords.md:16
msgid "Strict keywords"
msgstr "Palabras clave estrictas"

#: src/appendix-01-keywords.md:18
msgid ""
"These keywords can only be used in their correct contexts. They cannot be "
"used as names of any items."
msgstr ""
"Estas palabras clave sólo se pueden usar en sus contextos correctos. No se "
"pueden usar como nombres de ningún elemento."

#: src/appendix-01-keywords.md:21
msgid "`as` - Rename import"
msgstr "`as` - Cambiar el nombre de importación"

#: src/appendix-01-keywords.md:22
msgid "`break` - Exit a loop immediately"
msgstr "`break` - Salir de un bucle inmediatamente"

#: src/appendix-01-keywords.md:23
msgid "`const` - Define constant items"
msgstr "`const` - Definir elementos constantes"

#: src/appendix-01-keywords.md:24
msgid "`continue` - Continue to the next loop iteration"
msgstr "`continuar` - Continuar a la iteración del bucle siguiente"

#: src/appendix-01-keywords.md:25
msgid "`else` - Fallback for `if` and `if let` control flow constructs"
msgstr "`else` - Retroceso para `if` y `if let` control flow constructs"

#: src/appendix-01-keywords.md:26
msgid "`enum` - Define an enumeration"
msgstr "`Enum` - Definir una enumeración"

#: src/appendix-01-keywords.md:27
msgid ""
"`extern` - Function defined at the compiler level that can be compiled to "
"CASM"
msgstr ""
"`externa` - Función definida a nivel del compilador que puede compilarse a "
"CASM"

#: src/appendix-01-keywords.md:28
msgid "`false` - Boolean false literal"
msgstr "`falso` - Falso literal booleano"

#: src/appendix-01-keywords.md:29
msgid "`fn` - Define a function"
msgstr "`fn` - Definir una función"

#: src/appendix-01-keywords.md:30
msgid "`if` - Branch based on the result of a conditional expression"
msgstr "`si` - Subdivisión basada en el resultado de una expresión condicional"

#: src/appendix-01-keywords.md:31
msgid "`impl` - Implement inherent or trait functionality"
msgstr "`impl` - Implementar funcionalidad inherente o característica"

#: src/appendix-01-keywords.md:32
msgid ""
"`implicits` - Special kind of function parameters that are required to "
"perform certain actions"
msgstr ""
"`implícitas` - Tipo especial de parámetros de función que se requieren para "
"llevar a cabo ciertas acciones"

#: src/appendix-01-keywords.md:33
msgid "`let` - Bind a variable"
msgstr "`let` - Enlazar una variable"

#: src/appendix-01-keywords.md:34
msgid "`loop` - Loop unconditionally"
msgstr "`Loop` - Loop incondicionalmente"

#: src/appendix-01-keywords.md:35
msgid "`match` - Match a value to patterns"
msgstr "`match` - Coincidir con un valor a los patrones"

#: src/appendix-01-keywords.md:36
msgid "`mod` - Define a module"
msgstr "`mod` - Definir un módulo"

#: src/appendix-01-keywords.md:37
msgid "`mut` - Denote variable mutability"
msgstr "`mut` - Mutabilidad variable de la nota"

#: src/appendix-01-keywords.md:38
msgid ""
"`nopanic` - Functions marked with this notation mean that the function will "
"never panic."
msgstr ""
"`nopánico` - Las funciones marcadas con esta notación significan que la "
"función nunca entrará en pánico."

#: src/appendix-01-keywords.md:39
msgid "`of` - Implement a trait"
msgstr "`de` - Aplicar un rasgo"

#: src/appendix-01-keywords.md:40
msgid ""
"`pub` - Denote public visibility in items, such as struct and struct fields, "
"enums, consts, traits and impl blocks, or modules"
msgstr ""
"`pub` - Denotar la visibilidad pública en elementos, tales como campos de "
"estructura y estructura, enums, consts, rasgos y bloques de impl, o módulos"

#: src/appendix-01-keywords.md:41
msgid "`ref` - Parameter passed implicitly returned at the end of a function"
msgstr ""
"`ref` - Parámetro pasado implícitamente devuelto al final de una función"

#: src/appendix-01-keywords.md:42
msgid "`return` - Return from function"
msgstr "`retorno` - Retorno de la función"

#: src/appendix-01-keywords.md:43
msgid "`struct` - Define a structure"
msgstr "`struct` - Definir una estructura"

#: src/appendix-01-keywords.md:44
msgid "`trait` - Define a trait"
msgstr "`ratio` - Definir un rasgo"

#: src/appendix-01-keywords.md:45
msgid "`true` - Boolean true literal"
msgstr "`true` - Boolean verdadero literal"

#: src/appendix-01-keywords.md:46
msgid "`type` - Define a type alias"
msgstr "`tipo` - Definir un alias de tipo"

#: src/appendix-01-keywords.md:47
msgid "`use` - Bring symbols into scope"
msgstr "`uso` - Introducir símbolos en el ámbito de aplicación"

#: src/appendix-01-keywords.md:48
msgid "`while` - loop conditionally based on the result of an expression"
msgstr ""
"`while` - bucle condicionalmente basado en el resultado de una expresión"

#: src/appendix-01-keywords.md:52
msgid "Loose Keywords"
msgstr "Palabras clave sueltas"

#: src/appendix-01-keywords.md:54
msgid ""
"These keywords are associated with a specific behaviour, but can also be "
"used to define items."
msgstr ""
"Estas palabras clave están asociadas con un comportamiento específico, pero "
"también se pueden utilizar para definir elementos."

#: src/appendix-01-keywords.md:56
msgid "`self` - Method subject"
msgstr "`Self'- Method subject"

#: src/appendix-01-keywords.md:57
msgid "`super` - Parent module of the current module"
msgstr "`super` - Módulo padre del módulo actual"

#: src/appendix-01-keywords.md:61
msgid "Reserved Keywords"
msgstr "Palabras clave reservadas"

#: src/appendix-01-keywords.md:63
msgid ""
"These keywords aren't used yet, but they are reserved for future use. For "
"now, it is possible to use them to define items, although it is highly "
"recommended not to do so. The reasoning behind this recommendation is to "
"make current programs forward compatible with future versions of Cairo by "
"forbidding them to use these keywords."
msgstr ""
"Estas palabras clave no se utilizan todavía, pero están reservadas para uso "
"futuro. Por ahora, es posible utilizarlas para definir elementos, aunque es "
"muy recomendable no hacerlo. El razonamiento detrás de esta recomendación es "
"hacer los programas actuales hacia adelante compatibles con futuras "
"versiones de El Cairo, prohibiéndoles usar estas palabras clave."

#: src/appendix-01-keywords.md:68
msgid "`Self`"
msgstr "`Auto'"

#: src/appendix-01-keywords.md:69
msgid "`do`"
msgstr "`hacer`"

#: src/appendix-01-keywords.md:70
msgid "`dyn`"
msgstr "`dyn`"

#: src/appendix-01-keywords.md:71
msgid "`for`"
msgstr "`por`"

#: src/appendix-01-keywords.md:72
msgid "`hint`"
msgstr "`hit`"

#: src/appendix-01-keywords.md:73
msgid "`in`"
msgstr "`en`"

#: src/appendix-01-keywords.md:74
msgid "`macro`"
msgstr "`macro`"

#: src/appendix-01-keywords.md:75
msgid "`move`"
msgstr "`mover`"

#: src/appendix-01-keywords.md:76
msgid "`static_assert`"
msgstr "`static_assert`"

#: src/appendix-01-keywords.md:77
msgid "`static`"
msgstr "`estático`"

#: src/appendix-01-keywords.md:78
msgid "`try`"
msgstr "`tratar`"

#: src/appendix-01-keywords.md:79
msgid "`typeof`"
msgstr "`tipo de '"

#: src/appendix-01-keywords.md:80
msgid "`unsafe`"
msgstr "`inseguro`"

#: src/appendix-01-keywords.md:81
msgid "`where`"
msgstr "`donde '"

#: src/appendix-01-keywords.md:82
msgid "`with`"
msgstr "`con '"

#: src/appendix-01-keywords.md:83
msgid "`yield`"
msgstr "`yield`"

#: src/appendix-01-keywords.md:87
msgid "Built-in Functions"
msgstr "Funciones integradas"

#: src/appendix-01-keywords.md:89
msgid ""
"The Cairo programming language provides several specific functions that "
"serve a special purpose. We will not cover all of them in this book, but "
"using the names of these functions as names of other items is not "
"recommended."
msgstr ""
"El lenguaje de programación de El Cairo proporciona varias funciones "
"específicas que sirven a un propósito especial. No cubriremos todos ellos en "
"este libro, pero el uso de los nombres de estas funciones como nombres de "
"otros elementos no se recomienda."

#: src/appendix-01-keywords.md:91
msgid ""
"`assert` - This function checks a boolean expression, and if it evaluates to "
"false, it triggers the panic function."
msgstr ""
"`assert` - Esta función comprueba una expresión booleana, y si se evalúa a "
"false, desencadena la función de pánico."

#: src/appendix-01-keywords.md:92
msgid ""
"`panic` - This function acknowledges the occurrence of an error and "
"terminates the program."
msgstr ""
"`panic` - Esta función reconoce la ocurrencia de un error y termina el "
"programa."

#: src/appendix-02-operators-and-symbols.md:1
msgid "Appendix B - Operators and Symbols"
msgstr "Apéndice B - Operadores y símbolos"

#: src/appendix-02-operators-and-symbols.md:3
msgid ""
"This appendix contains a glossary of Cairo's syntax, including operators and "
"other symbols that appear by themselves or in the context of paths, "
"generics, macros, attributes, comments, tuples, and brackets."
msgstr ""
"Este apéndice contiene un glosario de la sintaxis de El Cairo, incluyendo "
"operadores y otros símbolos que aparecen por sí mismos o en el contexto de "
"rutas, genéricos, macros, atributos, comentarios, tuplas y paréntesis."

#: src/appendix-02-operators-and-symbols.md:5
msgid "Operators"
msgstr "Operadores"

#: src/appendix-02-operators-and-symbols.md:7
msgid ""
"Table B-1 contains the operators in Cairo, an example of how the operator "
"would appear in context, a short explanation, and whether that operator is "
"overloadable. If an operator is overloadable, the relevant trait to use to "
"overload that operator is listed."
msgstr ""
"La Tabla B-1 contiene a los operadores en El Cairo, un ejemplo de cómo el "
"operador aparecería en contexto, una breve explicación, y si el operador es "
"sobrecargable. Si un operador es sobrecargable, el rasgo relevante a "
"utilizar para sobrecargar a ese operador se enumera."

#: src/appendix-02-operators-and-symbols.md:9
msgid "Operator"
msgstr "Operador"

#: src/appendix-02-operators-and-symbols.md:9
#: src/appendix-02-operators-and-symbols.md:55
#: src/appendix-02-operators-and-symbols.md:66
#: src/appendix-02-operators-and-symbols.md:76
#: src/appendix-02-operators-and-symbols.md:89
#: src/appendix-02-operators-and-symbols.md:120
#: src/appendix-02-operators-and-symbols.md:146
#: src/appendix-02-operators-and-symbols.md:154
#: src/appendix-02-operators-and-symbols.md:168
msgid "Explanation"
msgstr "Explicación"

#: src/appendix-02-operators-and-symbols.md:9
msgid "Overloadable?"
msgstr "¿Sobrecargable?"

#: src/appendix-02-operators-and-symbols.md:11
msgid "`!`"
msgstr "`!`"

#: src/appendix-02-operators-and-symbols.md:11
msgid "`!expr`"
msgstr "`!expr`"

#: src/appendix-02-operators-and-symbols.md:11
msgid "Logical complement"
msgstr "Complemento lógico"

#: src/appendix-02-operators-and-symbols.md:11
msgid "`Not`"
msgstr "`No '"

#: src/appendix-02-operators-and-symbols.md:12
msgid "`~`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:12
msgid "`~expr`"
msgstr "«expr»"

#: src/appendix-02-operators-and-symbols.md:12
msgid "Bitwise NOT"
msgstr "Bitwise NO"

#: src/appendix-02-operators-and-symbols.md:12
msgid "`BitNot`"
msgstr "`BitNot`"

#: src/appendix-02-operators-and-symbols.md:13
msgid "`!=`"
msgstr "`!=`"

#: src/appendix-02-operators-and-symbols.md:13
msgid "`expr != expr`"
msgstr "`expr!=expr`"

#: src/appendix-02-operators-and-symbols.md:13
msgid "Non-equality comparison"
msgstr "Comparación de la falta de igualdad"

#: src/appendix-02-operators-and-symbols.md:13
#: src/appendix-02-operators-and-symbols.md:38
msgid "`PartialEq`"
msgstr "`PartialEq`"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`%`"
msgstr "`%`"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`expr % expr`"
msgstr "«expr % expr»"

#: src/appendix-02-operators-and-symbols.md:14
msgid "Arithmetic remainder"
msgstr "Restos aritméticos"

#: src/appendix-02-operators-and-symbols.md:14
msgid "`Rem`"
msgstr "`Rem`"

#: src/appendix-02-operators-and-symbols.md:15
msgid "`%=`"
msgstr "`%=`"

#: src/appendix-02-operators-and-symbols.md:15
msgid "`var %= expr`"
msgstr "`var %= expr`"

#: src/appendix-02-operators-and-symbols.md:15
msgid "Arithmetic remainder and assignment"
msgstr "Resto y asignación aritméticos"

#: src/appendix-02-operators-and-symbols.md:15
msgid "`RemEq`"
msgstr "`RemEq`"

#: src/appendix-02-operators-and-symbols.md:16
msgid "`&`"
msgstr "`&`"

#: src/appendix-02-operators-and-symbols.md:16
msgid "`expr & expr`"
msgstr "`expr & expr`"

#: src/appendix-02-operators-and-symbols.md:16
msgid "Bitwise AND"
msgstr "Bitwise Y"

#: src/appendix-02-operators-and-symbols.md:16
msgid "`BitAnd`"
msgstr "`BitAnd`"

#: src/appendix-02-operators-and-symbols.md:17
msgid "`&&`"
msgstr "`&&`"

#: src/appendix-02-operators-and-symbols.md:17
msgid "`expr && expr`"
msgstr "`expr & & expr`"

#: src/appendix-02-operators-and-symbols.md:17
msgid "Short-circuiting logical AND"
msgstr "Lógico de cortocircuito y"

#: src/appendix-02-operators-and-symbols.md:18
#: src/appendix-02-operators-and-symbols.md:21
msgid "`*`"
msgstr "`*`"

#: src/appendix-02-operators-and-symbols.md:18
msgid "`expr * expr`"
msgstr "`expr * expr '"

#: src/appendix-02-operators-and-symbols.md:18
msgid "Arithmetic multiplication"
msgstr "Multiplicación aritmética"

#: src/appendix-02-operators-and-symbols.md:18
msgid "`Mul`"
msgstr "`Mul`"

#: src/appendix-02-operators-and-symbols.md:19
msgid "`*=`"
msgstr "`*=`"

#: src/appendix-02-operators-and-symbols.md:19
msgid "`var *= expr`"
msgstr "`var *= expr`"

#: src/appendix-02-operators-and-symbols.md:19
msgid "Arithmetic multiplication and assignment"
msgstr "Multiplicación y asignación aritmética"

#: src/appendix-02-operators-and-symbols.md:19
msgid "`MulEq`"
msgstr "`MulEq`"

#: src/appendix-02-operators-and-symbols.md:20
msgid "`@`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:20
msgid "`@var`"
msgstr "â € € ¢varâ"

#: src/appendix-02-operators-and-symbols.md:20
msgid "Snapshot"
msgstr "Snapshot"

#: src/appendix-02-operators-and-symbols.md:21
msgid "`*var`"
msgstr "`*var`"

#: src/appendix-02-operators-and-symbols.md:21
msgid "Desnap"
msgstr "Desnap"

#: src/appendix-02-operators-and-symbols.md:22
msgid "`+`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:22
msgid "`expr + expr`"
msgstr "`expr + expr '"

#: src/appendix-02-operators-and-symbols.md:22
msgid "Arithmetic addition"
msgstr "Adición aritmética"

#: src/appendix-02-operators-and-symbols.md:22
msgid "`Add`"
msgstr "`Add '"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`+=`"
msgstr ""
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • "
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • "
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • "
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • "
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • "
"• • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • • •"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`var += expr`"
msgstr "`var + = expr '"

#: src/appendix-02-operators-and-symbols.md:23
msgid "Arithmetic addition and assignment"
msgstr "Adición y asignación aritmética"

#: src/appendix-02-operators-and-symbols.md:23
msgid "`AddEq`"
msgstr "`AddEq`"

#: src/appendix-02-operators-and-symbols.md:24
msgid "`,`"
msgstr "`,`"

#: src/appendix-02-operators-and-symbols.md:24
msgid "`expr, expr`"
msgstr "`expr, expr`"

#: src/appendix-02-operators-and-symbols.md:24
msgid "Argument and element separator"
msgstr "Argumento y separador de elementos"

#: src/appendix-02-operators-and-symbols.md:25
#: src/appendix-02-operators-and-symbols.md:26
msgid "`-`"
msgstr "`-`"

#: src/appendix-02-operators-and-symbols.md:25
msgid "`-expr`"
msgstr "`-expr`"

#: src/appendix-02-operators-and-symbols.md:25
msgid "Arithmetic negation"
msgstr "Negación aritmética"

#: src/appendix-02-operators-and-symbols.md:25
msgid "`Neg`"
msgstr "`Neg`"

#: src/appendix-02-operators-and-symbols.md:26
msgid "`expr - expr`"
msgstr "`expr - expr '"

#: src/appendix-02-operators-and-symbols.md:26
msgid "Arithmetic subtraction"
msgstr "Sustracción aritmética"

#: src/appendix-02-operators-and-symbols.md:26
msgid "`Sub`"
msgstr "`Sub`"

#: src/appendix-02-operators-and-symbols.md:27
msgid "`-=`"
msgstr "`-=`"

#: src/appendix-02-operators-and-symbols.md:27
msgid "`var -= expr`"
msgstr "`var -= expr`"

#: src/appendix-02-operators-and-symbols.md:27
msgid "Arithmetic subtraction and assignment"
msgstr "Sustracción y asignación aritmética"

#: src/appendix-02-operators-and-symbols.md:27
msgid "`SubEq`"
msgstr "`SubEq`"

#: src/appendix-02-operators-and-symbols.md:28
msgid "`->`"
msgstr "`-®"

#: src/appendix-02-operators-and-symbols.md:28
msgid "`fn(...) -> type`, <code>\\|...\\| -> type</code>"
msgstr "`fn(...) -> type`, <code... -> type</code>"

#: src/appendix-02-operators-and-symbols.md:28
msgid "Function and closure return type"
msgstr "Función y tipo de retorno de cierre"

#: src/appendix-02-operators-and-symbols.md:29
msgid "`.`"
msgstr "`.`"

#: src/appendix-02-operators-and-symbols.md:29
msgid "`expr.ident`"
msgstr "`expr.ident`"

#: src/appendix-02-operators-and-symbols.md:29
msgid "Member access"
msgstr "Acceso de los miembros"

#: src/appendix-02-operators-and-symbols.md:30
msgid "`/`"
msgstr "`/`"

#: src/appendix-02-operators-and-symbols.md:30
msgid "`expr / expr`"
msgstr "`expr/expr`"

#: src/appendix-02-operators-and-symbols.md:30
msgid "Arithmetic division"
msgstr "División aritmética"

#: src/appendix-02-operators-and-symbols.md:30
msgid "`Div`"
msgstr "`Div`"

#: src/appendix-02-operators-and-symbols.md:31
msgid "`/=`"
msgstr "`/=`"

#: src/appendix-02-operators-and-symbols.md:31
msgid "`var /= expr`"
msgstr "`var /= expr`"

#: src/appendix-02-operators-and-symbols.md:31
msgid "Arithmetic division and assignment"
msgstr "División y asignación aritmética"

#: src/appendix-02-operators-and-symbols.md:31
msgid "`DivEq`"
msgstr "`DivEq`"

#: src/appendix-02-operators-and-symbols.md:32
#: src/appendix-02-operators-and-symbols.md:33
msgid "`:`"
msgstr "«:»"

#: src/appendix-02-operators-and-symbols.md:32
msgid "`pat: type`, `ident: type`"
msgstr "`Pat: tipo`, `ident: tipo`"

#: src/appendix-02-operators-and-symbols.md:32
msgid "Constraints"
msgstr "Limitaciones"

#: src/appendix-02-operators-and-symbols.md:33
msgid "`ident: expr`"
msgstr "`ident: expr`"

#: src/appendix-02-operators-and-symbols.md:33
msgid "Struct field initializer"
msgstr "Iniciador de campo de estructura"

#: src/appendix-02-operators-and-symbols.md:34
msgid "`;`"
msgstr "«;»;"

#: src/appendix-02-operators-and-symbols.md:34
msgid "`expr;`"
msgstr "«expr;»."

#: src/appendix-02-operators-and-symbols.md:34
msgid "Statement and item terminator"
msgstr "Declaración y terminación de los temas"

#: src/appendix-02-operators-and-symbols.md:35
msgid "`<`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:35
msgid "`expr < expr`"
msgstr "`expr < expr '"

#: src/appendix-02-operators-and-symbols.md:35
msgid "Less than comparison"
msgstr "Menos que la comparación"

#: src/appendix-02-operators-and-symbols.md:35
#: src/appendix-02-operators-and-symbols.md:36
#: src/appendix-02-operators-and-symbols.md:40
#: src/appendix-02-operators-and-symbols.md:41
msgid "`PartialOrd`"
msgstr "`PartialOrd`"

#: src/appendix-02-operators-and-symbols.md:36
msgid "`<=`"
msgstr "=»"

#: src/appendix-02-operators-and-symbols.md:36
msgid "`expr <= expr`"
msgstr "«expr <=expr»"

#: src/appendix-02-operators-and-symbols.md:36
msgid "Less than or equal to comparison"
msgstr "Menos o igual a la comparación"

#: src/appendix-02-operators-and-symbols.md:37
msgid "`=`"
msgstr "`=`"

#: src/appendix-02-operators-and-symbols.md:37
msgid "`var = expr`"
msgstr "`var = expr`"

#: src/appendix-02-operators-and-symbols.md:37
msgid "Assignment"
msgstr "Asignación"

#: src/appendix-02-operators-and-symbols.md:38
msgid "`==`"
msgstr "`==`"

#: src/appendix-02-operators-and-symbols.md:38
msgid "`expr == expr`"
msgstr "`expr == expr `"

#: src/appendix-02-operators-and-symbols.md:38
msgid "Equality comparison"
msgstr "Comparación de la igualdad"

#: src/appendix-02-operators-and-symbols.md:39
msgid "`=>`"
msgstr "`="

#: src/appendix-02-operators-and-symbols.md:39
msgid "`pat => expr`"
msgstr "`pat = > expr '"

#: src/appendix-02-operators-and-symbols.md:39
msgid "Part of match arm syntax"
msgstr "Parte de la sintaxis del brazo de partido"

#: src/appendix-02-operators-and-symbols.md:40
msgid "`>`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:40
msgid "`expr > expr`"
msgstr "`expr > expr '"

#: src/appendix-02-operators-and-symbols.md:40
msgid "Greater than comparison"
msgstr "Mayor que la comparación"

#: src/appendix-02-operators-and-symbols.md:41
msgid "`>=`"
msgstr "=»"

#: src/appendix-02-operators-and-symbols.md:41
msgid "`expr >= expr`"
msgstr "`expr > = expr`"

#: src/appendix-02-operators-and-symbols.md:41
msgid "Greater than or equal to comparison"
msgstr "Mayor o igual a la comparación"

#: src/appendix-02-operators-and-symbols.md:42
msgid "`^`"
msgstr ""

#: src/appendix-02-operators-and-symbols.md:42
msgid "`expr ^ expr`"
msgstr "«expr ^ expr»"

#: src/appendix-02-operators-and-symbols.md:42
msgid "Bitwise exclusive OR"
msgstr "Exclusivo bitwise OR"

#: src/appendix-02-operators-and-symbols.md:42
msgid "`BitXor`"
msgstr "`BitXor`"

#: src/appendix-02-operators-and-symbols.md:43
msgid "<code>\\|</code>"
msgstr "<code/code>"

#: src/appendix-02-operators-and-symbols.md:43
msgid "<code>expr \\| expr</code>"
msgstr "<code>expr  expr</code>"

#: src/appendix-02-operators-and-symbols.md:43
msgid "Bitwise OR"
msgstr "Bitwise O"

#: src/appendix-02-operators-and-symbols.md:43
msgid "`BitOr`"
msgstr "`BitOr`"

#: src/appendix-02-operators-and-symbols.md:44
msgid "<code>\\|\\|</code>"
msgstr "<code/code>"

#: src/appendix-02-operators-and-symbols.md:44
msgid "<code>expr \\|\\| expr</code>"
msgstr "<code>expr  expr</code>"

#: src/appendix-02-operators-and-symbols.md:44
msgid "Short-circuiting logical OR"
msgstr "OR lógico de cortocircuito"

#: src/appendix-02-operators-and-symbols.md:45
msgid "`?`"
msgstr "`?`"

#: src/appendix-02-operators-and-symbols.md:45
msgid "expr?"
msgstr "¿expr?"

#: src/appendix-02-operators-and-symbols.md:45
msgid "Error propagation"
msgstr "Propagación de errores"

#: src/appendix-02-operators-and-symbols.md:47
msgid "<span class=\"caption\">Table B-1: Operators</span>"
msgstr "<span class=\"caption\">Tabla B-1: Operadores</span>"

#: src/appendix-02-operators-and-symbols.md:49
msgid "Non Operator Symbols"
msgstr "Símbolos no operativos"

#: src/appendix-02-operators-and-symbols.md:51
msgid ""
"The following list contains all symbols that are not used as operators; that "
"is, they do not have the same behavior as a function or method call."
msgstr ""
"La siguiente lista contiene todos los símbolos que no se utilizan como "
"operadores; es decir, no tienen el mismo comportamiento que una llamada a "
"función o método."

#: src/appendix-02-operators-and-symbols.md:53
msgid ""
"Table B-2 shows symbols that appear on their own and are valid in a variety "
"of locations."
msgstr ""
"La Tabla B-2 muestra símbolos que aparecen por su cuenta y son válidos en "
"una variedad de ubicaciones."

#: src/appendix-02-operators-and-symbols.md:55
#: src/appendix-02-operators-and-symbols.md:66
#: src/appendix-02-operators-and-symbols.md:76
#: src/appendix-02-operators-and-symbols.md:89
#: src/appendix-02-operators-and-symbols.md:120
#: src/appendix-02-operators-and-symbols.md:146
#: src/appendix-02-operators-and-symbols.md:154
msgid "Symbol"
msgstr "Símbolo"

#: src/appendix-02-operators-and-symbols.md:57
msgid "`..._u8`, `..._usize`, `..._bool`, etc."
msgstr "`..._u8`, `..._usize`, `..._bool`, etc."

#: src/appendix-02-operators-and-symbols.md:57
msgid "Numeric literal of specific type"
msgstr "Literales numéricos de tipo específico"

#: src/appendix-02-operators-and-symbols.md:58
msgid "`\"...\"`"
msgstr "`\"...\"`"

#: src/appendix-02-operators-and-symbols.md:58
msgid "String literal"
msgstr "Cadena literal"

#: src/appendix-02-operators-and-symbols.md:59
msgid "`'...'`"
msgstr "`'...'`"

#: src/appendix-02-operators-and-symbols.md:59
msgid "Short string, 31 ASCII characters maximum"
msgstr "Cadena corta, 31 caracteres ASCII como máximo"

#: src/appendix-02-operators-and-symbols.md:60
msgid "`_`"
msgstr "«_»"

#: src/appendix-02-operators-and-symbols.md:60
msgid "“Ignored” pattern binding"
msgstr "Encuadernación del patrón “ignorado”"

#: src/appendix-02-operators-and-symbols.md:62
msgid "<span class=\"caption\">Table B-2: Stand-Alone Syntax</span>"
msgstr "<clase span=\"caption\">Tabla B-2: Sintaxis Stand-Alone</span>"

#: src/appendix-02-operators-and-symbols.md:64
msgid ""
"Table B-3 shows symbols that are used within the context of a module "
"hierarchy path to access an item."
msgstr ""
"La tabla B-3 muestra los símbolos que se utilizan en el contexto de una ruta "
"de jerarquía de módulo para acceder a un elemento."

#: src/appendix-02-operators-and-symbols.md:68
msgid "`ident::ident`"
msgstr "`ident::ident`"

#: src/appendix-02-operators-and-symbols.md:68
msgid "Namespace path"
msgstr "Ruta del espacio de nombres"

#: src/appendix-02-operators-and-symbols.md:69
msgid "`super::path`"
msgstr "«super::path»"

#: src/appendix-02-operators-and-symbols.md:69
msgid "Path relative to the parent of the current module"
msgstr "Ruta relativa al padre del módulo actual"

#: src/appendix-02-operators-and-symbols.md:70
msgid "`trait::method(...)`"
msgstr "`ratio::método(...)'"

#: src/appendix-02-operators-and-symbols.md:70
msgid "Disambiguating a method call by naming the trait that defines it"
msgstr "Desambiguar una llamada de método nombrando el rasgo que la define"

#: src/appendix-02-operators-and-symbols.md:72
msgid "<span class=\"caption\">Table B-3: Path-Related Syntax</span>"
msgstr ""
"<span class=\"caption\">Tabla B-3: Sintaxis relacionada con el camino</span>"

#: src/appendix-02-operators-and-symbols.md:74
msgid ""
"Table B-4 shows symbols that appear in the context of using generic type "
"parameters."
msgstr ""
"La tabla B-4 muestra los símbolos que aparecen en el contexto del uso de "
"parámetros de tipo genérico."

#: src/appendix-02-operators-and-symbols.md:78
msgid "`path<...>`"
msgstr "`path<...â € ~"

#: src/appendix-02-operators-and-symbols.md:78
msgid "Specifies parameters to generic type in a type (e.g., `Array<u8>`)"
msgstr ""
"Especifica los parámetros del tipo genérico en un tipo (por ejemplo, "
"`Array<u8».)"

#: src/appendix-02-operators-and-symbols.md:79
msgid "`path::<...>`, `method::<...>`"
msgstr "`path:::<..., `método::<..."

#: src/appendix-02-operators-and-symbols.md:79
msgid ""
"Specifies parameters to a generic type, function, or method in an "
"expression; often referred to as turbofish"
msgstr ""
"Especifica parámetros para un tipo, función o método genérico en una "
"expresión; a menudo se conoce como turbofish"

#: src/appendix-02-operators-and-symbols.md:80
msgid "`fn ident<...> ...`"
msgstr "`fn ident<...>...`"

#: src/appendix-02-operators-and-symbols.md:80
msgid "Define generic function"
msgstr "Definir función genérica"

#: src/appendix-02-operators-and-symbols.md:81
msgid "`struct ident<...> ...`"
msgstr "`struct ident<...>...`"

#: src/appendix-02-operators-and-symbols.md:81
msgid "Define generic structure"
msgstr "Definir la estructura genérica"

#: src/appendix-02-operators-and-symbols.md:82
msgid "`enum ident<...> ...`"
msgstr "`enum ident<...>...`"

#: src/appendix-02-operators-and-symbols.md:82
msgid "Define generic enumeration"
msgstr "Definir enumeración genérica"

#: src/appendix-02-operators-and-symbols.md:83
msgid "`impl<...> ...`"
msgstr "`impl<...>...`"

#: src/appendix-02-operators-and-symbols.md:83
msgid "Define generic implementation"
msgstr "Definir la aplicación genérica"

#: src/appendix-02-operators-and-symbols.md:85
msgid "<span class=\"caption\">Table B-4: Generics</span>"
msgstr "<span class=\"caption\">Tabla B-4: Genéricos</span>"

#: src/appendix-02-operators-and-symbols.md:87
msgid ""
"Table B-5 shows symbols that appear in the context of specifying attributes "
"on an item."
msgstr ""
"La tabla B-5 muestra símbolos que aparecen en el contexto de especificar "
"atributos en un elemento."

#: src/appendix-02-operators-and-symbols.md:91
msgid "`#[derive(...)]`"
msgstr "«[derive(...)]»"

#: src/appendix-02-operators-and-symbols.md:91
msgid "Automatically implements a trait for a type"
msgstr "Implementa automáticamente un rasgo para un tipo"

#: src/appendix-02-operators-and-symbols.md:92
msgid "`#[inline]`"
msgstr "«[en línea]»"

#: src/appendix-02-operators-and-symbols.md:92
msgid "Hint to the compiler to allow inlining of annotated function"
msgstr "Consejo al compilador para permitir el inlining de la función anotada"

#: src/appendix-02-operators-and-symbols.md:93
msgid "`#[inline(always)]`"
msgstr "«[en línea(siempre)]»."

#: src/appendix-02-operators-and-symbols.md:93
msgid "Hint to the compiler to systematically inline annotated function"
msgstr "Indíquese al compilador la función anotada en línea sistemática"

#: src/appendix-02-operators-and-symbols.md:94
msgid "`#[inline(never)]`"
msgstr "«[en línea(nunca)]»."

#: src/appendix-02-operators-and-symbols.md:94
msgid "Hint to the compiler to never inline annotated function"
msgstr "Sugerir al compilador que nunca inline función anotada"

#: src/appendix-02-operators-and-symbols.md:95
msgid "`#[must_use]`"
msgstr "«[debe_usar]»"

#: src/appendix-02-operators-and-symbols.md:95
msgid ""
"Hint to the compiler that the return value of a function or a specific "
"returned type must be used"
msgstr ""
"Sugerir al compilador que el valor de retorno de una función o un tipo "
"específico devuelto debe ser utilizado"

#: src/appendix-02-operators-and-symbols.md:96
msgid "`#[generate_trait]`"
msgstr "«[generate_trait]»"

#: src/appendix-02-operators-and-symbols.md:96
msgid "Automatically generates a trait for an impl"
msgstr "Genera automáticamente un rasgo para un impl"

#: src/appendix-02-operators-and-symbols.md:97
msgid "`#[available_gas(...)]`"
msgstr "«[disponible_gas(...)]»"

#: src/appendix-02-operators-and-symbols.md:97
msgid "Set the maximum amount of gas available to execute a function"
msgstr ""
"Establecer la cantidad máxima de gas disponible para ejecutar una función"

#: src/appendix-02-operators-and-symbols.md:98
msgid "`#[panic_with('...', wrapper_name)]`"
msgstr "«[panic_with('...', wrapper_name)]»."

#: src/appendix-02-operators-and-symbols.md:98
msgid ""
"Creates a wrapper for the annotated function which will panic if the "
"function returns `None` or `Err`, with the given data as the panic error"
msgstr ""
"Crea una envoltura para la función anotada que entrará en pánico si la "
"función devuelve `None` o `Err`, con los datos dados como el error de pánico"

#: src/appendix-02-operators-and-symbols.md:99
msgid "`#[test]`"
msgstr "«[prueba]»"

#: src/appendix-02-operators-and-symbols.md:99
msgid "Describe a function as a test function"
msgstr "Describir una función como función de prueba"

#: src/appendix-02-operators-and-symbols.md:100
msgid "`#[cfg(...)]`"
msgstr "«[cfg(...]]»"

#: src/appendix-02-operators-and-symbols.md:100
msgid ""
"Configuration attribute, especially used to configure a `tests` module with "
"`#[cfg(test)]`"
msgstr ""
"Atributo de configuración, especialmente utilizado para configurar un módulo "
"de `pruebas` con '[cfg(test)]`"

#: src/appendix-02-operators-and-symbols.md:101
msgid "`#[should_panic]`"
msgstr "«[debería_panic]»"

#: src/appendix-02-operators-and-symbols.md:101
msgid "Specifies that a test function should necessarily panic"
msgstr ""
"Especifica que una función de prueba debe necesariamente entrar en pánico"

#: src/appendix-02-operators-and-symbols.md:102
msgid "`#[starknet::contract]`"
msgstr "«[starknet::contrato]»."

#: src/appendix-02-operators-and-symbols.md:102
msgid "Defines a Starknet smart contract"
msgstr "Define un contrato inteligente Starknet"

#: src/appendix-02-operators-and-symbols.md:103
msgid "`#[starknet::interface]`"
msgstr "«[starknet::interface]»"

#: src/appendix-02-operators-and-symbols.md:103
msgid "Defines a Starknet interface"
msgstr "Define una interfaz Starknet"

#: src/appendix-02-operators-and-symbols.md:104
msgid "`#[starknet::component]`"
msgstr "«[starknet::componente]»."

#: src/appendix-02-operators-and-symbols.md:104
msgid "Defines a Starknet component"
msgstr "Define un componente Starknet"

#: src/appendix-02-operators-and-symbols.md:105
msgid "`#[starknet::embeddable]`"
msgstr "«[starknet::embedddable]»"

#: src/appendix-02-operators-and-symbols.md:105
msgid ""
"Defines an isolated embeddable implementation that can be injected in any "
"smart contract"
msgstr ""
"Define una implementación incrustable aislada que puede inyectarse en "
"cualquier contrato inteligente"

#: src/appendix-02-operators-and-symbols.md:106
msgid "`#[embeddable_as(...)]`"
msgstr "•[embeddable_as(...)]`"

#: src/appendix-02-operators-and-symbols.md:106
msgid "Defines an embeddable implementation inside a component"
msgstr "Define una implementación incrustable dentro de un componente"

#: src/appendix-02-operators-and-symbols.md:107
msgid "`#[storage]`"
msgstr "«[Almacenamiento]»"

#: src/appendix-02-operators-and-symbols.md:107
msgid "Defines the storage of a smart contract"
msgstr "Define el almacenamiento de un contrato inteligente"

#: src/appendix-02-operators-and-symbols.md:108
msgid "`#[event]`"
msgstr "«[evento]»"

#: src/appendix-02-operators-and-symbols.md:108
msgid "Defines an event in a smart contract"
msgstr "Define un evento en un contrato inteligente"

#: src/appendix-02-operators-and-symbols.md:109
msgid "`#[constructor]`"
msgstr "«[constructor]»"

#: src/appendix-02-operators-and-symbols.md:109
msgid "Defines the constructor in a smart contract"
msgstr "Define el constructor en un contrato inteligente"

#: src/appendix-02-operators-and-symbols.md:110
msgid "`#[abi(embed_v0)]`"
msgstr "«[abi(embed_v0)]»"

#: src/appendix-02-operators-and-symbols.md:110
msgid ""
"Defines an implementation of a trait, exposing the functions of the impl as "
"entrypoints of a contract"
msgstr ""
"Define la implementación de un rasgo, exponiendo las funciones del impl como "
"puntos de entrada de un contrato"

#: src/appendix-02-operators-and-symbols.md:111
msgid "`#[abi(per_item)]`"
msgstr "«[abi(per_item)]»."

#: src/appendix-02-operators-and-symbols.md:111
msgid ""
"Allows individual definition of the entrypoint type of functions inside an "
"impl"
msgstr ""
"Permite definir individualmente el tipo de punto de entrada de funciones "
"dentro de un impl"

#: src/appendix-02-operators-and-symbols.md:112
msgid "`#[external(v0)]`"
msgstr "«[external(v0)]»."

#: src/appendix-02-operators-and-symbols.md:112
msgid "Defines an external function when `#[abi(per_item)]` is used"
msgstr "Define una función externa cuando se utiliza «[abi(per_item)]»"

#: src/appendix-02-operators-and-symbols.md:113
msgid "`#[flat]`"
msgstr "«[plano]»"

#: src/appendix-02-operators-and-symbols.md:113
msgid ""
"Defines a enum variant of the `Event` enum that is not nested, ignoring the "
"variant name in the serialization process, very useful for composability "
"when using Starknet components"
msgstr ""
"Define una variante de enum del enum `Event` que no está anidado, ignorando "
"el nombre de la variante en el proceso de serialización, muy útil para la "
"composibilidad cuando se utilizan componentes Starknet"

#: src/appendix-02-operators-and-symbols.md:114
msgid "`#[key]`"
msgstr "«[clave]»"

#: src/appendix-02-operators-and-symbols.md:114
msgid ""
"Defines an indexed `Event` enum field, allowing for more efficient queries "
"and filtering of events"
msgstr ""
"Define un campo de enum `Evento' indexado, permitiendo consultas más "
"eficientes y filtrado de eventos"

#: src/appendix-02-operators-and-symbols.md:116
msgid "<span class=\"caption\">Table B-5: Attributes</span>"
msgstr "<span class=\"caption\">Tabla B-5: Atributos</span>"

#: src/appendix-02-operators-and-symbols.md:118
msgid ""
"Table B-6 shows symbols that appear in the context of calling or defining "
"macros."
msgstr ""
"La Tabla B-6 muestra símbolos que aparecen en el contexto de llamar o "
"definir macros."

#: src/appendix-02-operators-and-symbols.md:122
msgid "`print!`"
msgstr "`print!`"

#: src/appendix-02-operators-and-symbols.md:122
msgid "Inline printing"
msgstr "Impresión en línea"

#: src/appendix-02-operators-and-symbols.md:123
msgid "`println!`"
msgstr "`println! '"

#: src/appendix-02-operators-and-symbols.md:123
msgid "Print on a new line"
msgstr "Imprimir en una nueva línea"

#: src/appendix-02-operators-and-symbols.md:124
msgid "`consteval_int!`"
msgstr "`consteval_int! '"

#: src/appendix-02-operators-and-symbols.md:124
msgid "Declare a constant that is the result of a computation of integers"
msgstr "Declarar una constante que es el resultado de un cálculo de enteros"

#: src/appendix-02-operators-and-symbols.md:125
msgid "`array!`"
msgstr "`array! '"

#: src/appendix-02-operators-and-symbols.md:125
msgid "Instantiate and fill arrays"
msgstr "Instantátese y llene los arrays"

#: src/appendix-02-operators-and-symbols.md:126
msgid "`panic!`"
msgstr "¡Pánico!"

#: src/appendix-02-operators-and-symbols.md:126
msgid ""
"Calls `panic` function and allows to provide a message error longer than 31 "
"characters"
msgstr ""
"Llama a la función `panic` y permite proporcionar un error de mensaje de más "
"de 31 caracteres"

#: src/appendix-02-operators-and-symbols.md:127
msgid "`assert!`"
msgstr "`asertar! '"

#: src/appendix-02-operators-and-symbols.md:127
msgid "Evaluates a Boolean and panics if `false`"
msgstr "Evalúa a un booleano y entra en pánico si `falso'"

#: src/appendix-02-operators-and-symbols.md:128
msgid "`assert_eq!`"
msgstr "`assert_eq! '"

#: src/appendix-02-operators-and-symbols.md:128
msgid "Evaluates an equality, and panics if not equal"
msgstr "Evalúa una igualdad, y entra en pánico si no es igual"

#: src/appendix-02-operators-and-symbols.md:129
msgid "`assert_ne!`"
msgstr "`assert_ne! '"

#: src/appendix-02-operators-and-symbols.md:129
msgid "Evaluates an equality, and panics if equal"
msgstr "Evalúa una igualdad, y entra en pánico si es igual"

#: src/appendix-02-operators-and-symbols.md:130
msgid "`assert_lt!`"
msgstr "`assert_lt! '"

#: src/appendix-02-operators-and-symbols.md:130
msgid "Evaluates a comparison, and panics if greater or equal"
msgstr "Evalúa una comparación, y entra en pánico si es mayor o igual"

#: src/appendix-02-operators-and-symbols.md:131
msgid "`assert_le!`"
msgstr "`assert_le! '"

#: src/appendix-02-operators-and-symbols.md:131
msgid "Evaluates a comparison, and panics if greater"
msgstr "Evalúa una comparación y, si es mayor, entra en pánico."

#: src/appendix-02-operators-and-symbols.md:132
msgid "`assert_gt!`"
msgstr "`assert_gt! '"

#: src/appendix-02-operators-and-symbols.md:132
msgid "Evaluates a comparison, and panics if lower or equal"
msgstr "Evalúa una comparación, y entra en pánico si es inferior o igual"

#: src/appendix-02-operators-and-symbols.md:133
msgid "`assert_ge!`"
msgstr "`assert_ge! '"

#: src/appendix-02-operators-and-symbols.md:133
msgid "Evaluates a comparison, and panics if lower"
msgstr "Evalúa una comparación, y entra en pánico si es menor"

#: src/appendix-02-operators-and-symbols.md:134
msgid "`format!`"
msgstr "`formato! '"

#: src/appendix-02-operators-and-symbols.md:134
msgid "Format a string and returns a `ByteArray` with the contents"
msgstr "Formatear una cadena y devuelve un `ByteArray` con el contenido"

#: src/appendix-02-operators-and-symbols.md:135
msgid "`write!`"
msgstr "`escriba!`"

#: src/appendix-02-operators-and-symbols.md:135
msgid "Write formatted strings in a formatter"
msgstr "Escribir cadenas formateadas en una formateria"

#: src/appendix-02-operators-and-symbols.md:136
msgid "`writeln!`"
msgstr "`writelin! '"

#: src/appendix-02-operators-and-symbols.md:136
msgid "Write formatted strings in a formatter on a new line"
msgstr "Escribir cadenas formateadas en formateria en una nueva línea"

#: src/appendix-02-operators-and-symbols.md:137
msgid "`get_dep_component!`"
msgstr "‘get_dep_component!’"

#: src/appendix-02-operators-and-symbols.md:137
msgid ""
"Returns the requested component state from a snapshot of the state inside a "
"component"
msgstr ""
"Devuelve el estado de componente solicitado de una instantánea del estado "
"dentro de un componente"

#: src/appendix-02-operators-and-symbols.md:138
msgid "`get_dep_component_mut!`"
msgstr "`get_dep_component_mut!`"

#: src/appendix-02-operators-and-symbols.md:138
msgid ""
"Returns the requested component state from a reference of the state inside a "
"component"
msgstr ""
"Devuelve el estado de componente solicitado desde una referencia del estado "
"dentro de un componente"

#: src/appendix-02-operators-and-symbols.md:139
msgid "`component!`"
msgstr "`componente!`"

#: src/appendix-02-operators-and-symbols.md:139
msgid "Macro used in Starknet contracts to embed a component inside a contract"
msgstr ""
"Macro utilizado en los contratos Starknet para incrustar un componente "
"dentro de un contrato"

#: src/appendix-02-operators-and-symbols.md:142
msgid "<span class=\"caption\">Table B-6: Macros</span>"
msgstr "<span class=\"caption\">Tabla B-6: Macros</span>"

#: src/appendix-02-operators-and-symbols.md:144
msgid "Table B-7 shows symbols that create comments."
msgstr "La tabla B-7 muestra símbolos que crean comentarios."

#: src/appendix-02-operators-and-symbols.md:148
msgid "`//`"
msgstr "`//`"

#: src/appendix-02-operators-and-symbols.md:148
msgid "Line comment"
msgstr "Comentario de línea"

#: src/appendix-02-operators-and-symbols.md:150
msgid "<span class=\"caption\">Table B-7: Comments</span>"
msgstr "<span class=\"caption\">Tabla B-7: Comentarios</span>"

#: src/appendix-02-operators-and-symbols.md:152
msgid "Table B-8 shows symbols that appear in the context of using tuples."
msgstr ""
"La tabla B-8 muestra los símbolos que aparecen en el contexto del uso de "
"tuplas."

#: src/appendix-02-operators-and-symbols.md:156
msgid "`()`"
msgstr "`()'"

#: src/appendix-02-operators-and-symbols.md:156
msgid "Empty tuple (aka unit), both literal and type"
msgstr "Tupla vacía (alias unidad), tanto literal como tipo"

#: src/appendix-02-operators-and-symbols.md:157
msgid "`(expr)`"
msgstr "`(expr)`"

#: src/appendix-02-operators-and-symbols.md:157
msgid "Parenthesized expression"
msgstr "Expresión entre paréntesis"

#: src/appendix-02-operators-and-symbols.md:158
msgid "`(expr,)`"
msgstr "`(expr.)'"

#: src/appendix-02-operators-and-symbols.md:158
msgid "Single-element tuple expression"
msgstr "Expresión de tupla de un solo elemento"

#: src/appendix-02-operators-and-symbols.md:159
msgid "`(type,)`"
msgstr "`(tipo,)'"

#: src/appendix-02-operators-and-symbols.md:159
msgid "Single-element tuple type"
msgstr "Tipo de tupla de un solo elemento"

#: src/appendix-02-operators-and-symbols.md:160
msgid "`(expr, ...)`"
msgstr "`(expr,...)`"

#: src/appendix-02-operators-and-symbols.md:160
msgid "Tuple expression"
msgstr "Expresión de tuplas"

#: src/appendix-02-operators-and-symbols.md:161
msgid "`(type, ...)`"
msgstr "`(tipo,...)`"

#: src/appendix-02-operators-and-symbols.md:161
msgid "Tuple type"
msgstr "Tipo de tupla"

#: src/appendix-02-operators-and-symbols.md:162
msgid "`expr(expr, ...)`"
msgstr "`expr(expr,...)`"

#: src/appendix-02-operators-and-symbols.md:162
msgid ""
"Function call expression; also used to initialize tuple `struct`s and tuple "
"`enum` variants"
msgstr ""
"Expresión de llamada de función; también se utiliza para inicializar "
"variantes de tuple `struct`s y tuple `enum`"

#: src/appendix-02-operators-and-symbols.md:164
msgid "<span class=\"caption\">Table B-8: Tuples</span>"
msgstr "<span class=\"caption\">Tabla B-8: Tuples</span>"

#: src/appendix-02-operators-and-symbols.md:166
msgid "Table B-9 shows the contexts in which curly braces are used."
msgstr ""
"En la Tabla B-9 se muestran los contextos en los que se utilizan las "
"abrazaderas rizadas."

#: src/appendix-02-operators-and-symbols.md:168
msgid "Context"
msgstr "Contexto"

#: src/appendix-02-operators-and-symbols.md:170
msgid "`{...}`"
msgstr ""
"♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ "
"♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ "
"♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ "
"♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪ ♪"

#: src/appendix-02-operators-and-symbols.md:170
msgid "Block expression"
msgstr "Expresión de bloque"

#: src/appendix-02-operators-and-symbols.md:171
msgid "`Type {...}`"
msgstr "Tipo {..."

#: src/appendix-02-operators-and-symbols.md:171
msgid "`struct` literal"
msgstr "`struct` literal"

#: src/appendix-02-operators-and-symbols.md:173
msgid "<span class=\"caption\">Table B-9: Curly Braces</span>"
msgstr "<span class=\"caption\">Tabla B-9: Rizos </span>"

#: src/appendix-03-derivable-traits.md:1
msgid "Appendix C - Derivable Traits"
msgstr "Apéndice C - Rasgos derivados"

#: src/appendix-03-derivable-traits.md:3
msgid ""
"In various places in the book, we’ve discussed the `derive` attribute, which "
"you can apply to a struct or enum definition. The `derive` attribute "
"generates code to implement a default trait on the type you’ve annotated "
"with the `derive` syntax."
msgstr ""
"En varios lugares del libro, hemos discutido el atributo `derive`, que se "
"puede aplicar a una definición struct o enum. El atributo `derive` genera "
"código para implementar un rasgo predeterminado en el tipo que has anotado "
"con la sintaxis `derive`."

#: src/appendix-03-derivable-traits.md:5
msgid ""
"In this appendix, we provide a comprehensive reference detailing all the "
"traits in the standard library compatible with the `derive` attribute."
msgstr ""
"En este apéndice, proporcionamos una referencia completa en la que se "
"detallan todos los rasgos de la biblioteca estándar compatibles con el "
"atributo `derive`."

#: src/appendix-03-derivable-traits.md:7
msgid ""
"These traits listed here are the only ones defined by the core library that "
"can be implemented on your types using `derive`. Other traits defined in the "
"standard library don’t have sensible default behavior, so it’s up to you to "
"implement them in a way that makes sense for what you’re trying to "
"accomplish."
msgstr ""
"Estos rasgos enumerados aquí son los únicos definidos por la biblioteca "
"principal que se pueden implementar en sus tipos usando `derive`. Otros "
"rasgos definidos en la biblioteca estándar no tienen un comportamiento "
"predeterminado sensato, por lo que depende de usted para implementarlos de "
"una manera que tenga sentido para lo que está tratando de lograr."

#: src/appendix-03-derivable-traits.md:9
msgid "Drop and Destruct"
msgstr "Caída y destrucción"

#: src/appendix-03-derivable-traits.md:11
msgid ""
"When moving out of scope, variables need to be moved first. This is where "
"the `Drop` trait intervenes. You can find more details about its usage [here]"
"(ch04-01-what-is-ownership.md#no-op-destruction-the-drop-trait)."
msgstr ""
"Al salir del alcance, las variables deben ser movidas primero. Aquí es donde "
"interviene el rasgo `Drop`. Puede encontrar más detalles sobre su uso [aquí]"
"(ch04-01-what-is-ownership.md#no-op-destruction-the-drop-trait)."

#: src/appendix-03-derivable-traits.md:13
msgid ""
"Moreover, Dictionaries need to be squashed before going out of scope. "
"Calling the `squash` method on each of them manually can quickly become "
"redundant. `Destruct` trait allows Dictionaries to be automatically squashed "
"when they get out of scope. You can also find more information about "
"`Destruct` [here](ch04-01-what-is-ownership.md#destruction-with-a-side-"
"effect-the-destruct-trait)."
msgstr ""
"Además, los diccionarios deben ser aplastados antes de salir del alcance. "
"Llamar al método `squash` en cada uno de ellos manualmente puede convertirse "
"rápidamente en redundante. El rasgo `Destruct` permite a los diccionarios "
"ser aplastados automáticamente cuando se salen del alcance. También puede "
"encontrar más información sobre `Destruct` [aquí](ch04-01-what-is-ownership."
"md#destruction-with-a-side-effect-the-destruction-trait)."

#: src/appendix-03-derivable-traits.md:15
msgid "`Clone` and `Copy` for Duplicating Values"
msgstr "`Clone` y `Copy` para duplicar valores"

#: src/appendix-03-derivable-traits.md:17
msgid ""
"The `Clone` trait provides the functionality to explicitly create a deep "
"copy of a value."
msgstr ""
"El rasgo \" Clone \" proporciona la funcionalidad para crear explícitamente "
"una copia profunda de un valor."

#: src/appendix-03-derivable-traits.md:19
msgid ""
"Deriving `Clone` implements the `clone` method, which, in turn, calls clone "
"on each of the type's components. This means all the fields or values in the "
"type must also implement `Clone` to derive `Clone`."
msgstr ""
"Derivado `Clone` se aplica el método `clone`, que, a su vez, llama clon en "
"cada uno de los componentes del tipo. Esto significa que todos los campos o "
"valores del tipo también deben implementar `Clone` para derivar `Clone`."

#: src/appendix-03-derivable-traits.md:21
msgid "Here is a simple example:"
msgstr "He aquí un ejemplo sencillo:"

#: src/appendix-03-derivable-traits.md:32
#: src/appendix-03-derivable-traits.md:50
msgid "\"Not equal\""
msgstr "\"No es igual\""

#: src/appendix-03-derivable-traits.md:36
msgid ""
"The `Copy` trait allows for the duplication of values. You can derive `Copy` "
"on any type whose parts all implement `Copy`."
msgstr ""
"El rasgo `Copy` permite la duplicación de valores. Usted puede derivar "
"`Copy` en cualquier tipo cuyas partes todas implementan `Copy`."

#: src/appendix-03-derivable-traits.md:49
msgid "// Copy Trait prevents first_struct from moving into second_struct\n"
msgstr "// Copiar rasgo impide que first_struct se mueva a second_struct\n"

#: src/appendix-03-derivable-traits.md:51
msgid "\"Not Equal\""
msgstr "\"No es igual\""

#: src/appendix-03-derivable-traits.md:55
msgid "`Debug` for Printing and Debugging"
msgstr "`Depuración` para impresión y depuración"

#: src/appendix-03-derivable-traits.md:57
msgid ""
"The `Debug` trait enables debug formatting in format strings, which you "
"indicate by adding `:?` within `{}` placeholders."
msgstr ""
"El rasgo `Debug` permite el formato de depuración en cadenas de formato, que "
"indica añadiendo `:?` dentro de los marcadores de posición."

#: src/appendix-03-derivable-traits.md:59
msgid ""
"It allows you to print instances of a type for debugging purposes, so you "
"and other programmers using this type can inspect an instance at a "
"particular point in a program’s execution."
msgstr ""
"Le permite imprimir instancias de un tipo para propósitos de depuración, por "
"lo que usted y otros programadores que usan este tipo pueden inspeccionar "
"una instancia en un punto particular en la ejecución de un programa."

#: src/appendix-03-derivable-traits.md:61
msgid ""
"For example, if you want to print the value of a variable of type `Point`, "
"you can do it as follows:"
msgstr ""
"Por ejemplo, si desea imprimir el valor de una variable de tipo `Punto`, "
"puede hacerlo de la siguiente manera:"

#: src/appendix-03-derivable-traits.md:72
msgid "\"{:?}\""
msgstr "\"{:?}\""

#: src/appendix-03-derivable-traits.md:81
msgid ""
"The `Debug` trait is required, for example, when using the `assert_xx!` "
"macros in tests. Theses macros print the values of instances given as "
"arguments if the equality or comparison assertion fails so programmers can "
"see why the two instances weren’t equal."
msgstr ""
"El rasgo `Debug` se requiere, por ejemplo, cuando se utilizan las macros "
"`assert_xx!` en las pruebas. Las macros de tesis imprimen los valores de las "
"instancias dadas como argumentos si la afirmación de igualdad o comparación "
"falla así que los programadores pueden ver por qué las dos instancias no "
"eran iguales."

#: src/appendix-03-derivable-traits.md:83
msgid "`Default` for Default Values"
msgstr "`Default` para valores por defecto"

#: src/appendix-03-derivable-traits.md:85
msgid ""
"The `Default` trait allows creation of a default value of a type. The most "
"common default value is zero. All primitive types in the standard library "
"implement `Default`."
msgstr ""
"El rasgo `Default` permite crear un valor predeterminado de un tipo. El "
"valor predeterminado más común es cero. Todos los tipos primitivos de la "
"biblioteca estándar implementan `Default`."

#: src/appendix-03-derivable-traits.md:87
msgid ""
"If you want to derive `Default` on a composite type, each of its elements "
"must already implement `Default`. If you have an [`enum`](ch06-01-enums.md) "
"type, you must declare its default value by using the `#[default]` attribute "
"on one of its variants."
msgstr ""
"Si desea derivar `Default` en un tipo compuesto, cada uno de sus elementos "
"debe implementar `Default`. Si tiene un tipo [`enum`](ch06-01-enums.md) debe "
"declarar su valor predeterminado utilizando el atributo `[default]` en una "
"de sus variantes."

#: src/appendix-03-derivable-traits.md:89
msgid "An example:"
msgstr "Un ejemplo:"

#: src/appendix-03-derivable-traits.md:108
msgid "\"item1 mismatch\""
msgstr "Desajuste del tema 1"

#: src/appendix-03-derivable-traits.md:109
msgid "\"item2 mismatch\""
msgstr "Desajuste del tema 2"

#: src/appendix-03-derivable-traits.md:112
msgid "\"case mismatch\""
msgstr "\"Desajuste de casos\""

#: src/appendix-03-derivable-traits.md:116
msgid "`PartialEq` for Equality Comparisons"
msgstr "`PartialEq` para comparaciones de igualdad"

#: src/appendix-03-derivable-traits.md:118
msgid ""
"The `PartialEq` trait allows for comparison between instances of a type for "
"equality, thereby enabling the `==` and `!=` operators."
msgstr ""
"El rasgo `PartialEq` permite la comparación entre instancias de un tipo para "
"la igualdad, permitiendo así a los operadores `== y `!=`."

#: src/appendix-03-derivable-traits.md:120
msgid ""
"When `PartialEq` is derived on structs, two instances are equal only if all "
"their fields are equal; they are not equal if any field is different. When "
"derived for enums, each variant is equal to itself and not equal to the "
"other variants."
msgstr ""
"Cuando `PartialEq` se deriva de structs, dos instancias son iguales sólo si "
"todos sus campos son iguales; no son iguales si cualquier campo es "
"diferente. Cuando se deriva de enums, cada variante es igual a sí misma y no "
"igual a las otras variantes."

#: src/appendix-03-derivable-traits.md:122
msgid ""
"You can write your own implementation of the `PartialEq` trait for your "
"type, if you can't derive it or if you want to implement your custom rules. "
"In the following example, we write an implementation for `PartialEq` in "
"which we consider that two rectangles are equal if they have the same area:"
msgstr ""
"Puede escribir su propia implementación del rasgo `PartialEq` para su tipo, "
"si no lo puede derivar o si desea implementar sus reglas personalizadas. En "
"el siguiente ejemplo, escribimos una implementación para `PartialEq` en la "
"que consideramos que dos rectángulos son iguales si tienen el mismo área:"

#: src/appendix-03-derivable-traits.md:145
msgid "\"Are rect1 and rect2 equal? {}\""
msgstr "\"¿Son iguales el recto1 y el recto2?\""

#: src/appendix-03-derivable-traits.md:149
msgid ""
"The `PartialEq` trait is required when using the `assert_eq!` macro in "
"tests, which needs to be able to compare two instances of a type for "
"equality."
msgstr ""
"El rasgo `PartialEq` se requiere cuando se utiliza la macro `assert_eq!'en "
"las pruebas, que necesita ser capaz de comparar dos instancias de un tipo "
"para la igualdad."

#: src/appendix-03-derivable-traits.md:162
msgid "\"Structs are different\""
msgstr "\"Las estructuras son diferentes\""

#: src/appendix-03-derivable-traits.md:166
msgid "Serializing with `Serde`"
msgstr "Serialización con `Serde`"

#: src/appendix-03-derivable-traits.md:168
msgid ""
"`Serde` provides trait implementations for `serialize` and `deserialize` "
"functions for data structures defined in your crate. It allows you to "
"transform your structure into an array (or the opposite)."
msgstr ""
"`Serde` proporciona implementaciones de rasgos para `serialize` y "
"`deserialize` funciones para estructuras de datos definidas en su caja. Le "
"permite transformar su estructura en una matriz (o lo contrario)."

#: src/appendix-03-derivable-traits.md:170
msgid ""
"**[Serialization](https://en.wikipedia.org/wiki/Serialization)** is a "
"process of transforming data structures into a format that can be easily "
"stored or transmitted. Let's say you are running a program and would like to "
"persist its state to be able to resume it later. To do this, you could take "
"each of the objects your program is using and save their information, for "
"example in a file. This is a simplified version of serialization. Now if you "
"want to resume your program with this saved state, you would perform "
"**deserialization**, which means loading the state of the objects from the "
"saved source."
msgstr ""
"**[Serialization](https://en.wikipedia.org/wiki/Serialization)** es un "
"proceso de transformación de estructuras de datos en un formato que se puede "
"almacenar o transmitir fácilmente. Digamos que está ejecutando un programa y "
"le gustaría persistir en su estado para poder reanudarlo más tarde. Para "
"ello, podría tomar cada uno de los objetos que su programa está utilizando y "
"guardar su información, por ejemplo en un archivo. Esta es una versión "
"simplificada de la serialización. Ahora, si desea reanudar su programa con "
"este estado guardado, realizaría **deserialización**, lo que significa "
"cargar el estado de los objetos desde la fuente guardada."

#: src/appendix-03-derivable-traits.md:172
msgid "For example:"
msgstr "Por ejemplo:"

#: src/appendix-03-derivable-traits.md:190
msgid "If you run the `main` function, the output will be:"
msgstr "Si ejecuta la función `main`, la salida será:"

#: src/appendix-03-derivable-traits.md:196
msgid ""
"We can see here that our struct `A` has been serialized into the output "
"array. Note that the `serialize` function takes as argument a snapshot of "
"the type you want to convert into an array. This is why deriving `Drop` for "
"`A` is required here, as the `main` function keeps ownership of the "
"`first_struct` struct."
msgstr ""
"Podemos ver aquí que nuestra estructura `A` ha sido seriada en el array de "
"salida. Tenga en cuenta que la función `serialize` toma como argumento una "
"instantánea del tipo que desea convertir en un array. Es por eso que se "
"requiere derivar `Drop` para `A` aquí, ya que la función `main` mantiene la "
"propiedad de la estructura `first_struct`."

#: src/appendix-03-derivable-traits.md:198
msgid ""
"Also, we can use the `deserialize` function to convert the serialized array "
"back into our `A` struct."
msgstr ""
"Además, podemos utilizar la función `deserialize` para convertir el array "
"serializado de nuevo en nuestra estructura `A`."

#: src/appendix-03-derivable-traits.md:218
msgid ""
"Here we are converting a serialized array span back to the struct `A`. "
"`deserialize` returns an `Option` so we need to unwrap it. When using "
"`deserialize` we also need to specify the type we want to deserialize into."
msgstr ""
"Aquí estamos convirtiendo un array serializado que se remonta a la "
"estructura `A`. `deserialize` devuelve una `Opción` por lo que tenemos que "
"desenvolverlo. Al usar `deserialize` también tenemos que especificar el tipo "
"en el que queremos deserializar."

#: src/appendix-03-derivable-traits.md:220
msgid "Hashing with `Hash`"
msgstr "Hashing con `Hash`"

#: src/appendix-03-derivable-traits.md:222
msgid ""
"It is possible to derive the `Hash` trait on structs and enums. This allows "
"them to be hashed easily using any available hash function. For a struct or "
"an enum to derive the `Hash` attribute, all fields or variants need to be "
"hashable themselves."
msgstr ""
"Es posible derivar el rasgo `Hash` en structs y enums. Esto les permite ser "
"hashed fácilmente usando cualquier función de hash disponible. Para que una "
"struct o un enum de derivar el atributo `Hash`, todos los campos o variantes "
"necesitan ser hashable ellos mismos."

#: src/appendix-03-derivable-traits.md:224
msgid ""
"You can refer to the [Hashes section](ch11-04-hash.md) to get more "
"information about how to hash complex data types."
msgstr ""
"Puede consultar la sección [Hashes](ch11-04-hash.md) para obtener más "
"información sobre cómo hash tipos de datos complejos."

#: src/appendix-03-derivable-traits.md:226
msgid "Starknet Storage with `starknet::Store`"
msgstr "Almacenamiento Starknet con `starknet::Store`"

#: src/appendix-03-derivable-traits.md:228
msgid ""
"The `starknet::Store` trait is relevant only when building on [Starknet]"
"(ch13-00-introduction-to-starknet-smart-contracts.md). It allows for a type "
"to be used in smart contract storage by automatically implementing the "
"necessary read and write functions."
msgstr ""
"El `starknet::Store` rasgo es relevante sólo cuando se construye en "
"[Starknet] (ch13-00-introducción-a-starknet-smart-contracts.md). Permite que "
"un tipo se utilice en el almacenamiento de contratos inteligentes mediante "
"la implementación automática de las funciones de lectura y escritura "
"necesarias."

#: src/appendix-03-derivable-traits.md:230
msgid ""
"You can find detailed information about the inner workings of Starknet "
"storage in the [Contract storage section](ch14-01-contract-storage.md)."
msgstr ""
"Puede encontrar información detallada sobre el funcionamiento interno del "
"almacenamiento de Starknet en la [sección de almacenamiento del contrato] "
"(ch14-01-contract-storage.md)."

#: src/appendix-04-cairo-prelude.md:1
msgid "Appendix D - The Cairo Prelude"
msgstr "Apéndice D - El Preludio de El Cairo"

#: src/appendix-04-cairo-prelude.md:3
msgid "Prelude"
msgstr "Preludio"

#: src/appendix-04-cairo-prelude.md:5
msgid ""
"The Cairo prelude is a collection of commonly used modules, functions, data "
"types, and traits that are automatically brought into scope of every module "
"in a Cairo crate without needing explicit import statements. Cairo's prelude "
"provides the basic building blocks developers need to start Cairo programs "
"and writing smart contracts."
msgstr ""
"El preludio de El Cairo es una colección de módulos, funciones, tipos de "
"datos y rasgos de uso común que se introducen automáticamente en el alcance "
"de cada módulo en una caja de El Cairo sin necesidad de declaraciones de "
"importación explícitas. El preludio de El Cairo proporciona los componentes "
"básicos que los desarrolladores necesitan para iniciar los programas de El "
"Cairo y escribir contratos inteligentes."

#: src/appendix-04-cairo-prelude.md:11
msgid ""
"The core library prelude is defined in the _[lib.cairo](https://github.com/"
"starkware-libs/cairo/blob/main/corelib/src/lib.cairo)_ file of the corelib "
"crate and contains Cairo's primitive data types, traits, operators, and "
"utility functions. This includes:"
msgstr ""
"El preludio de la biblioteca principal se define en el archivo _[lib.cairo]"
"(https://github.com/starkware-libs/cairo/blob/main/corelib/src/lib.cairo)_ "
"de la caja de corelib y contiene los tipos de datos primitivos, rasgos, "
"operadores y funciones de utilidad de El Cairo. Esto incluye:"

#: src/appendix-04-cairo-prelude.md:15
msgid "Data types: integers, bools, arrays, dicts, etc."
msgstr "Tipos de datos: enteros, boos, arrays, dictados, etc."

#: src/appendix-04-cairo-prelude.md:16
msgid ""
"Traits: behaviors for arithmetic, comparison, and serialization operations"
msgstr ""
"Rasgos: comportamientos para operaciones de aritmética, comparación y "
"serialización"

#: src/appendix-04-cairo-prelude.md:17
msgid "Operators: arithmetic, logical, bitwise"
msgstr "Operadores: aritmética, lógica, bitwise"

#: src/appendix-04-cairo-prelude.md:18
msgid "Utility functions - helpers for arrays, maps, boxing, etc."
msgstr "Funciones de utilidad - ayudantes para arrays, mapas, boxeo, etc."

#: src/appendix-04-cairo-prelude.md:20
msgid ""
"The core library prelude delivers the fundamental programming constructs and "
"operations needed for basic Cairo programs, without requiring the explicit "
"import of elements. Since the core library prelude is automatically "
"imported, its contents are available for use in any Cairo crate without "
"explicit imports. This prevents repetition and provides a better devX. This "
"is what allows you to use `ArrayTrait::append()` or the `Default` trait "
"without bringing them explicitly into scope."
msgstr ""
"El preludio de la biblioteca central proporciona los constructos y "
"operaciones de programación fundamentales necesarios para los programas "
"básicos de El Cairo, sin exigir la importación explícita de elementos. Dado "
"que el preludio de la biblioteca central se importa automáticamente, sus "
"contenidos están disponibles para su uso en cualquier caja de El Cairo sin "
"importaciones explícitas. Esto evita la repetición y proporciona un mejor "
"devX. Esto es lo que le permite utilizar `ArrayTrait::append()` o el rasgo "
"`Default` sin introducirlos explícitamente en el ámbito de aplicación."

#: src/appendix-04-cairo-prelude.md:28
msgid ""
"You can choose which prelude to use. For example, adding `edition = "
"\"2023_11\"` in the _Scarb.toml_ configuration file will load the prelude "
"from November 2023. Note that when you create a new project using `scarb "
"new` command, the _Scarb.toml_ file will automatically include `edition = "
"\"2023_11\"`."
msgstr ""
"Puede elegir qué preludio usar. Por ejemplo, añadir `edición = \"2023_11\"` "
"en el archivo de configuración _Scarb.toml_ cargará el preludio a partir de "
"noviembre de 2023. Tenga en cuenta que cuando cree un nuevo proyecto usando "
"el comando `scarb new`, el archivo _Scarb.toml_ incluirá automáticamente "
"`edición = \"2023_11\"`."

#: src/appendix-04-cairo-prelude.md:30
msgid "The compiler currently exposes 2 different versions of the prelude:"
msgstr "El compilador actualmente expone 2 versiones diferentes del preludio:"

#: src/appendix-04-cairo-prelude.md:32
msgid ""
"A general version, with a lot of traits that are made available, "
"corresponding to `edition = \"2023_01\"`."
msgstr ""
"Una versión general, con muchos rasgos que se ponen a disposición, "
"correspondiente a `edición = \"2023_01\"`."

#: src/appendix-04-cairo-prelude.md:33
msgid ""
"A restricted version, including the most essential traits needed for general "
"Cairo programming, corresponding to `edition = 2023_11`."
msgstr ""
"Una versión restringida, que incluye los rasgos más esenciales necesarios "
"para la programación general de El Cairo, correspondiente a `edición = "
"2023_11`."

#: src/appendix-05-common-error-messages.md:1
msgid "Appendix E - Common Error Messages"
msgstr "Apéndice E - Mensajes de error comunes"

#: src/appendix-05-common-error-messages.md:3
msgid ""
"You might encounter error messages when writing Cairo code. Some of them "
"occur very frequently, which is why we will be listing the most common error "
"messages in this appendix to help you resolve common issues."
msgstr ""
"Usted puede encontrar mensajes de error al escribir el código de El Cairo. "
"Algunos de ellos ocurren con mucha frecuencia, por lo que vamos a enumerar "
"los mensajes de error más comunes en este apéndice para ayudarle a resolver "
"problemas comunes."

#: src/appendix-05-common-error-messages.md:5
msgid ""
"`Variable not dropped.`: this error message means that you are trying to "
"make a variable with a type that do not implement the `Drop` trait go out of "
"scope, withtout destroying it. Make sure that variables that need to be "
"dropped at the end of the execution of a function implement the `Drop` trait "
"or the `Destruct` trait. See [Ownership](ch04-01-what-is-ownership."
"md#destroying-values---example-with-feltdict) section."
msgstr ""
"`Variable no se cayó.`: este mensaje de error significa que usted está "
"tratando de hacer una variable con un tipo que no implementa el rasgo `Drop` "
"sale fuera de alcance, sin destruirlo. Asegúrese de que las variables que "
"necesitan ser caídas al final de la ejecución de una función implementen el "
"rasgo `Drop` o el rasgo `Destruct`. Vea [Propiedad](ch04-01-what-is-"
"ownership.md#destroying-values---ejemplo-with-feltdict) sección."

#: src/appendix-05-common-error-messages.md:7
msgid ""
"`Variable was previously moved.`: this error message means that you are "
"trying to use a variable whose ownership has already been transferred to "
"another function. When a variable doesn't implement the `Copy` trait, it is "
"passed by value to functions, and ownership of the variable is transferred "
"to the function. Such a variable cannot be used anymore in the current "
"context after its ownership has been transferred. It is often useful to use "
"the `clone` method in this situation."
msgstr ""
"`Variable fue movido previamente.`: este mensaje de error significa que "
"usted está tratando de utilizar una variable cuya propiedad ya ha sido "
"transferida a otra función. Cuando una variable no implementa el rasgo "
"`Copiar`, se pasa por valor a las funciones, y la propiedad de la variable "
"se transfiere a la función. Tal variable ya no puede ser utilizada en el "
"contexto actual después de su propiedad ha sido transferida. A menudo es "
"útil utilizar el método `clone'en esta situación."

#: src/appendix-05-common-error-messages.md:9
msgid ""
"`error: Trait has no implementation in context: core::fmt::Display::"
"<package_name::struct_name>`: this error message is encountered if you try "
"to print an instance of a custom data type with `{}` placeholders in a "
"`print!` or `println!` macro. To mitigate this issue, you need to either "
"manually implement the `Display` trait for your type, or use the `Debug` "
"trait by applying `derive(Debug)` to your type, allowing to print your "
"instance by adding `:?` in `{}` placeholders."
msgstr ""
"`error: El rasgo no tiene implementación en contexto: core::fmt::Display::"
"<package_name:::struct_name»: este mensaje de error se encuentra si intenta "
"imprimir una instancia de un tipo de datos personalizado con marcadores de "
"posición  en una macro `print!` o `println!`. Para mitigar este problema, "
"necesita implementar manualmente el rasgo `Display` para su tipo, o utilizar "
"el rasgo `Debug` aplicando `derive(Debug)` a su tipo, permitiendo imprimir "
"su instancia agregando `:?` en  marcadores de posición."

#: src/appendix-05-common-error-messages.md:11
msgid ""
"`Got an exception while executing a hint: Hint Error: Failed to deserialize "
"param #x.`: this error means that the execution failed because an entrypoint "
"was called without the expected arguments. Make sure that the arguments you "
"provide when calling an entrypoint are correct. There is a classic issue "
"with `u256` variables, which are actually structs of 2 `u128`. Therefore, "
"when calling a function that takes a `u256` as argument, you need to pass 2 "
"values."
msgstr ""
"`Tengo una excepción al ejecutar una pista: Error de pista: Falló al "
"deserializar el param #x.`: este error significa que la ejecución falló "
"porque se llamó un punto de entrada sin los argumentos esperados. Asegúrese "
"de que los argumentos que proporciona al llamar a un punto de entrada son "
"correctos. Hay un problema clásico con las variables `u256`, que en realidad "
"son structs de 2 `u128. Por lo tanto, al llamar a una función que toma un "
"`u256` como argumento, es necesario pasar 2 valores."

#: src/appendix-05-common-error-messages.md:13
msgid ""
"`Item path::item is not visible in this context.`: this error message lets "
"us know that the path to bring an item into scope is correct, but there is a "
"vibility issue. In cairo, all items are private to parent modules by "
"default. To resolve this issue, make sure that all the modules on the path "
"to items and items themselves are declared with `pub(crate)` or `pub` to "
"have access to them."
msgstr ""
"`Item path:: item is not visible in this context.`: este mensaje de error "
"nos permite saber que la ruta para introducir un elemento en el alcance es "
"correcta, pero hay un problema de visibilidad. En cairo, todos los elementos "
"son privados a los módulos de origen por defecto. Para resolver este "
"problema, asegúrese de que todos los módulos en la ruta a los elementos y "
"elementos se declaran con `pub(crate)` o `pub` para tener acceso a ellos."

#: src/appendix-05-common-error-messages.md:15
msgid ""
"`Identifier not found.`: this error message is a bit aspecific but might "
"indicate that:"
msgstr ""
"`Identificador no encontrado.`: este mensaje de error es un poco específico, "
"pero podría indicar que:"

#: src/appendix-05-common-error-messages.md:16
msgid ""
"A variable is being used before it has been declared. Make sure to declare "
"variables with the `let` keyword."
msgstr ""
"Se está utilizando una variable antes de que se haya declarado. Asegúrese de "
"declarar variables con la palabra clave `let`."

#: src/appendix-05-common-error-messages.md:17
msgid ""
"The path to bring an item into scope is wrongly defined. Make sure to use "
"valid paths."
msgstr ""
"La ruta para introducir un elemento en el alcance está mal definida. "
"Asegúrese de utilizar rutas válidas."

#: src/appendix-05-common-error-messages.md:19
msgid "Starknet Components Related Error Messages"
msgstr "Starknet Components Related Error Messages"

#: src/appendix-05-common-error-messages.md:21
msgid ""
"You might encounter some errors when trying to implement components. "
"Unfortunately, some of them lack meaningful error messages to help debug. "
"This section aims to provide you with some pointers to help you debug your "
"code."
msgstr ""
"Es posible que encuentre algunos errores al intentar implementar "
"componentes. Desafortunadamente, algunos de ellos carecen de mensajes de "
"error significativos para ayudar a depurar. Esta sección tiene como objetivo "
"proporcionarle algunos punteros para ayudarle a depurar su código."

#: src/appendix-05-common-error-messages.md:25
msgid ""
"`Trait not found. Not a trait.`: this error can occur when you're not "
"importing the component's impl block correctly in your contract. Make sure "
"to respect the following syntax:"
msgstr ""
"`Trato no encontrado. No es un rasgo.`: este error puede ocurrir cuando no "
"está importando correctamente el bloque de impl del componente en su "
"contrato. Asegúrese de respetar la siguiente sintaxis:"

#: src/appendix-05-common-error-messages.md:33
msgid ""
"`Plugin diagnostic: name is not a substorage member in the contract's "
"Storage. Consider adding to Storage: (...)`: the compiler helps you a lot "
"debugging this by giving you recommendation on the action to take. "
"Basically, you forgot to add the component's storage to your contract's "
"storage. Make sure to add the path to the component's storage annotated with "
"the `#[substorage(v0)]` attribute to your contract's storage."
msgstr ""
"`Plugin diagnostic: name is not a substorage member in the contract's "
"Storage. Considere añadir a Storage: (...)`: el compilador le ayuda mucho a "
"depurar esto dándole una recomendación sobre la acción a tomar. Básicamente, "
"olvidó agregar el almacenamiento del componente al almacenamiento de su "
"contrato. Asegúrese de añadir la ruta al almacenamiento del componente "
"anotado con el atributo '[substorage(v0)]` al almacenamiento de su contrato."

#: src/appendix-05-common-error-messages.md:35
msgid ""
"`Plugin diagnostic: name is not a nested event in the contract's Event enum. "
"Consider adding to the Event enum:` similar to the previous error, the "
"compiler tells you that you forgot to add the component's events to your "
"contract's events. Make sure to add the path to the component's events to "
"your contract's events."
msgstr ""
"`Plugin diagnostic: name is not an nided event in the contract's Event enum. "
"Considere añadir al Evento enum:` similar al error anterior, el compilador "
"le dice que olvidó agregar los eventos del componente a los eventos del "
"contrato. Asegúrese de agregar la ruta a los eventos del componente a los "
"eventos del contrato."

#: src/appendix-06-useful-development-tools.md:1
msgid "Appendix F - Useful Development Tools"
msgstr "Apéndice F - Herramientas de desarrollo útiles"

#: src/appendix-06-useful-development-tools.md:3
msgid ""
"In this appendix, we talk about some useful development tools that the Cairo "
"project provides. We’ll look at automatic formatting, quick ways to apply "
"warning fixes, a linter, and integrating with IDEs."
msgstr ""
"En este apéndice, hablamos de algunas herramientas de desarrollo útiles que "
"ofrece el proyecto de El Cairo. Vamos a ver el formateo automático, formas "
"rápidas de aplicar correcciones de advertencia, un linter, y la integración "
"con IDEs."

#: src/appendix-06-useful-development-tools.md:7
msgid "Automatic Formatting with `scarb fmt`"
msgstr "Formato automático con `scarb fmt`"

#: src/appendix-06-useful-development-tools.md:9
msgid ""
"Scarb projects can be formatted using the `scarb fmt` command. If you're "
"using the Cairo binaries directly, you can run `cairo-format` instead. Many "
"collaborative projects use `scarb fmt` to prevent arguments about which "
"style to use when writing Cairo: everyone formats their code using the tool."
msgstr ""
"Los proyectos de Scarb se pueden formatear usando el comando `scarb fmt`. Si "
"está usando los binarios de El Cairo directamente, puede ejecutar `cairo-"
"formato` en su lugar. Muchos proyectos de colaboración utilizan `scarb fmt` "
"para evitar argumentos sobre qué estilo usar al escribir El Cairo: cada uno "
"formatea su código usando la herramienta."

#: src/appendix-06-useful-development-tools.md:14
msgid ""
"To format any Cairo project, enter the following inside the project "
"directory:"
msgstr ""
"Para formatear cualquier proyecto de El Cairo, introduzca lo siguiente "
"dentro del directorio del proyecto:"

#: src/appendix-06-useful-development-tools.md:20
msgid "IDE Integration Using `cairo-language-server`"
msgstr "Integración IDE Usando `cairo-lenguaje-servidor'"

#: src/appendix-06-useful-development-tools.md:22
msgid ""
"To help IDE integration, the Cairo community recommends using the [`cairo-"
"language-server`](https://github.com/starkware-libs/cairo/tree/main/crates/"
"cairo-lang-language-server)<!-- ignore -->. This tool is a set of compiler-"
"centric utilities that speaks the [Language Server Protocol](http://"
"langserver.org/)<!--\n"
"ignore -->, which is a specification for IDEs and programming languages to "
"communicate with each other. Different clients can use `cairo-language-"
"server`, such as [the Cairo extension for Visual Studio Code](https://"
"marketplace.visualstudio.com/items?itemName=starkware.cairo1)."
msgstr ""
"Para ayudar a la integración del IDE, la comunidad de El Cairo recomienda "
"que se utilice el [`cairo-language-server`] (https://github.com/starkware-"
"libs/cairo/tree/main/crates/cairo-lang-language-server)<!-- ignore -->. Esta "
"herramienta es un conjunto de utilidades centradas en compiladores que habla "
"el [Protocolo de servidor de idiomas](http://langserver.org/)<!-- ignore --"
">, que es una especificación para que los IDE y los lenguajes de "
"programación se comuniquen entre sí. Diferentes clientes pueden utilizar el "
"`cairo-language-server`, como [la extensión de El Cairo para el Código de "
"Visual Studio](https://marketplace.visualstudio.com/items?itemName=starkware."
"cairo1)."

#: src/appendix-06-useful-development-tools.md:32
msgid ""
"Visit the `vscode-cairo` [page](https://marketplace.visualstudio.com/items?"
"itemName=starkware.cairo1)<!-- ignore --> to install it on VSCode. You will "
"get abilities such as autocompletion, jump to definition, and inline errors."
msgstr ""
"Visite el `vscode-cairo` [página](https://marketplace.visualstudio.com/items?"
"itemName=starkware.cairo1)<!-- ignore --> para instalarlo en VSOde. Obtendrá "
"habilidades como autocompletado, salto a la definición y errores en línea."

#: src/appendix-06-useful-development-tools.md:38
msgid ""
"Note: If you have Scarb installed, it should work out of the box with the "
"Cairo VSCode extension, without a manual installation of the language server."
msgstr ""
"Nota: Si usted tiene Scarb instalado, debe funcionar fuera de la caja con la "
"extensión de El Cairo VSCode, sin una instalación manual del servidor de "
"idiomas."

#: src/appendix-07-cairo-binaries.md:1
msgid "Appendix G - Installing the Cairo Binaries"
msgstr "Apéndice G - Instalación de los binarios de El Cairo"

#: src/appendix-07-cairo-binaries.md:3
msgid ""
"If you want to have access to the Cairo binaries, for anything that you "
"could not achieve by purely using Scarb you can install them by following "
"the instructions below."
msgstr ""
"Si quieres tener acceso a los binarios de El Cairo, para cualquier cosa que "
"no puedas lograr usando Scarb puedes instalarlos siguiendo las siguientes "
"instrucciones."

#: src/appendix-07-cairo-binaries.md:5
msgid "Prerequisites"
msgstr "Requisitos previos"

#: src/appendix-07-cairo-binaries.md:7
msgid ""
"You will need to have [Rust](https://www.rust-lang.org) and [Git](https://"
"git-scm.com/) installed."
msgstr ""
"Deberá instalarse [Rust](https://www.rust-lang.org) y [Git](https://git-scm."
"com/)."

#: src/appendix-07-cairo-binaries.md:9
msgid ""
"To install Rust, you first need the [`rustup`](https://www.rust-lang.org/"
"tools/install) tool. It allows you to install Rust using the following "
"command:"
msgstr ""
"Para instalar Rust, primero necesita la herramienta [`rustup`](https://www."
"rust-lang.org/tools/install). Le permite instalar Rust usando el siguiente "
"comando:"

#: src/appendix-07-cairo-binaries.md:11
msgid "# Install stable Rust\n"
msgstr "# Instalar Rust estable\n"

#: src/appendix-07-cairo-binaries.md:15
msgid ""
"Follow the link for information on how to install [Git](https://git-scm.com/"
"downloads)."
msgstr ""
"Siga el enlace para obtener información sobre cómo instalar [Git](https://"
"git-scm.com/downloads)."

#: src/appendix-07-cairo-binaries.md:17
msgid ""
"The next step is to install Cairo. We will download Cairo manually, using "
"Cairo repository or with an installation script. You’ll need an internet "
"connection for the download."
msgstr ""
"El siguiente paso es instalar El Cairo. Descargaremos El Cairo manualmente, "
"utilizando el repositorio de El Cairo o con un script de instalación. "
"Necesitará una conexión a Internet para la descarga."

#: src/appendix-07-cairo-binaries.md:19
msgid ""
"Installing Cairo with a Script ([Installer](https://github.com/franalgaba/"
"cairo-installer) by [Fran](https://github.com/franalgaba))"
msgstr ""
"Instalación de El Cairo con un Script ([Installer](https://github.com/"
"franalgaba/cairo-installer) por [Fran](https://github.com/franalgaba))"

#: src/appendix-07-cairo-binaries.md:21
msgid "Install"
msgstr "Instalar"

#: src/appendix-07-cairo-binaries.md:23
msgid ""
"If you wish to install a specific release of Cairo rather than the latest "
"head, set the `CAIRO_GIT_TAG` environment variable (e.g. `export "
"CAIRO_GIT_TAG=v2.5.1`)."
msgstr ""
"Si desea instalar una versión específica de El Cairo en lugar de la última "
"cabeza, establezca la variable de entorno `CAIRO_GIT_TAG` (por ejemplo, "
"`exportar CAIRO_GIT_TAG=v2.5.1`)."

#: src/appendix-07-cairo-binaries.md:29
msgid ""
"After installing, follow [these instructions](#set-up-your-shell-environment-"
"for-cairo) to set up your shell environment."
msgstr ""
"Después de instalar, siga [estas instrucciones](#set-up-your-shell-"
"environment-for-cairo) para configurar el entorno de su shell."

#: src/appendix-07-cairo-binaries.md:31
msgid "Update"
msgstr "Actualizar"

#: src/appendix-07-cairo-binaries.md:33
msgid ""
"```\n"
"rm -fr ~/.cairo\n"
"curl -L https://github.com/franalgaba/cairo-installer/raw/main/bin/cairo-"
"installer | bash\n"
"```"
msgstr ""
"rm -fr ~/.cairo curl -L https://github.com/franalgaba/cairo-installer/raw/"
"main/bin/cairo-installer  bash"

#: src/appendix-07-cairo-binaries.md:38
msgid "Uninstall"
msgstr "Desinstalar"

#: src/appendix-07-cairo-binaries.md:40
msgid ""
"Cairo is installed within `$CAIRO_ROOT` (default: ~/.cairo). To uninstall, "
"just remove it:"
msgstr ""
"El Cairo está instalado dentro de `$CAIRO_ROOT` (default: ~/.cairo). Para "
"desinstalar, sólo tiene que eliminarlo:"

#: src/appendix-07-cairo-binaries.md:46
msgid "then remove these three lines from .bashrc:"
msgstr "a continuación, eliminar estas tres líneas de.bashrc:"

#: src/appendix-07-cairo-binaries.md:49
msgid "\"$HOME/.cairo/target/release:$PATH\""
msgstr "\"$HOME/.cairo/target/release:$PATH\""

#: src/appendix-07-cairo-binaries.md:52
msgid "and finally, restart your shell:"
msgstr "y finalmente, reinicie su shell:"

#: src/appendix-07-cairo-binaries.md:58
msgid "Set Up your Shell Environment for Cairo"
msgstr "Establezca su entorno Shell para El Cairo"

#: src/appendix-07-cairo-binaries.md:60
msgid ""
"Define environment variable `CAIRO_ROOT` to point to the path where Cairo "
"will store its data. `$HOME/.cairo` is the default. If you installed Cairo "
"via Git checkout, we recommend to set it to the same location as where you "
"cloned it."
msgstr ""
"Definir la variable de entorno `CAIRO_ROOT` para apuntar a la ruta donde El "
"Cairo almacenará sus datos. `$HOME/.cairo` es el valor predeterminado. Si "
"instaló El Cairo a través de Git checkout, le recomendamos que lo establezca "
"en la misma ubicación que donde lo clonó."

#: src/appendix-07-cairo-binaries.md:64
msgid "Add the `cairo-*` executables to your `PATH` if it's not already there"
msgstr "Añádanse los ejecutables `cairo-*` a su `PATH` si no está ya allí"

#: src/appendix-07-cairo-binaries.md:66
msgid ""
"The below setup should work for the vast majority of users for common use "
"cases."
msgstr ""
"La siguiente configuración debe funcionar para la gran mayoría de los "
"usuarios para casos de uso común."

#: src/appendix-07-cairo-binaries.md:68
msgid "For **bash**:"
msgstr "En lugar de **bash**:"

#: src/appendix-07-cairo-binaries.md:70
msgid ""
"Stock Bash startup files vary widely between distributions in which of them "
"source which, under what circumstances, in what order and what additional "
"configuration they perform. As such, the most reliable way to get Cairo in "
"all environments is to append Cairo configuration commands to both `.bashrc` "
"(for interactive shells) and the profile file that Bash would use (for login "
"shells)."
msgstr ""
"Los archivos de inicio de stock Bash varían ampliamente entre distribuciones "
"en cuál de ellas es la fuente que, en qué circunstancias, en qué orden y qué "
"configuración adicional realizan. Como tal, la forma más confiable de "
"obtener El Cairo en todos los entornos es añadir comandos de configuración "
"de El Cairo a `.bashrc` (para shells interactivos) y el archivo de perfil "
"que Bash usaría (para shells de inicio de sesión)."

#: src/appendix-07-cairo-binaries.md:76
msgid ""
"First, add the commands to `~/.bashrc` by running the following in your "
"terminal:"
msgstr ""
"En primer lugar, añada los comandos a â € /.bashrc` ejecutando lo siguiente "
"en su terminal:"

#: src/appendix-07-cairo-binaries.md:79 src/appendix-07-cairo-binaries.md:89
#: src/appendix-07-cairo-binaries.md:95 src/appendix-07-cairo-binaries.md:102
msgid "'export CAIRO_ROOT=\"$HOME/.cairo\"'"
msgstr "'exportar CAIRO_ROOT=\"$HOME/.cairo\"'"

#: src/appendix-07-cairo-binaries.md:80 src/appendix-07-cairo-binaries.md:90
#: src/appendix-07-cairo-binaries.md:96 src/appendix-07-cairo-binaries.md:103
msgid ""
"'command -v cairo-compile >/dev/null || export PATH=\"$CAIRO_ROOT/target/"
"release:$PATH\"'"
msgstr ""
"'command -v cairo-compile >/dev/null  export PATH=\"$CAIRO_ROOT/target/"
"release:$PATH\"'"

#: src/appendix-07-cairo-binaries.md:83
msgid ""
"Then, if you have `~/.profile`, `~/.bash_profile` or `~/.bash_login`, add "
"the commands there as well. If you have none of these, add them to `~/."
"profile`."
msgstr ""
"Luego, si tienes â € ¢/.profile`, â €/.bash_profile` o â €/.bash_login`, "
"agrega las órdenes allí también. Si no tienes ninguna de estas, agrégalas a "
"â €/.profile`."

#: src/appendix-07-cairo-binaries.md:86
msgid "to add to `~/.profile`:"
msgstr "añádase a «/.profile»:"

#: src/appendix-07-cairo-binaries.md:93
msgid "to add to `~/.bash_profile`:"
msgstr "para añadir a /.bash_profile`:"

#: src/appendix-07-cairo-binaries.md:99
msgid "For **Zsh**:"
msgstr "En lugar de **Zsh**:"

#: src/appendix-07-cairo-binaries.md:106
msgid ""
"If you wish to get Cairo in non-interactive login shells as well, also add "
"the commands to `~/.zprofile` or `~/.zlogin`."
msgstr ""
"Si desea obtener El Cairo en shells de inicio de sesión no interactivos "
"también, también agregue los comandos a â € /.zprofile` o â € /.zlogin`."

#: src/appendix-07-cairo-binaries.md:108
msgid "For **Fish shell**:"
msgstr "Para **Concha de pescado**:"

#: src/appendix-07-cairo-binaries.md:110
msgid "If you have Fish 3.2.0 or newer, execute this interactively:"
msgstr "Si tiene Fish 3.2.0 o más reciente, ejecute esto interactivamente:"

#: src/appendix-07-cairo-binaries.md:117
msgid "Otherwise, execute the snippet below:"
msgstr "De lo contrario, ejecute el fragmento a continuación:"

#: src/appendix-07-cairo-binaries.md:124
msgid ""
"In MacOS, you might also want to install [Fig](https://fig.io/) which "
"provides alternative shell completions for many command line tools with an "
"IDE-like popup interface in the terminal window. (Note that their "
"completions are independent of Cairo's codebase so they might be slightly "
"out of sync for bleeding-edge interface changes.)"
msgstr ""
"En MacOS, es posible que también desee instalar [Fig](https://fig.io/) que "
"proporciona terminaciones de shell alternativas para muchas herramientas de "
"línea de comandos con una interfaz emergente similar a IDE en la ventana de "
"terminal. (Tenga en cuenta que sus terminaciones son independientes de la "
"base de código de El Cairo, por lo que podrían estar un poco fuera de "
"sincronización para cambios de interfaz de borde sangrante.)"

#: src/appendix-07-cairo-binaries.md:130
msgid "Restart your Shell"
msgstr "Reinicie su Shell"

#: src/appendix-07-cairo-binaries.md:132
msgid "for the `PATH` changes to take effect."
msgstr "para que surtan efecto los cambios del \" PATH \"."

#: src/appendix-07-cairo-binaries.md:135
msgid "\"$SHELL\""
msgstr "$SHELL"

#: src/appendix-07-cairo-binaries.md:138
msgid ""
"Installing Cairo Manually ([Guide](https://github.com/auditless/cairo-"
"template) by [Abdel](https://github.com/abdelhamidbakhta))"
msgstr ""
"Instalación manual de El Cairo ([Guía](https://github.com/auditless/cairo-"
"template) por [Abdel](https://github.com/abdelhamidbakhta))"

#: src/appendix-07-cairo-binaries.md:140
msgid "Step 1: Install Cairo 1.0"
msgstr "Paso 1: Instalar Cairo 1.0"

#: src/appendix-07-cairo-binaries.md:142
msgid ""
"If you are using an x86 Linux system and can use the release binary, "
"download Cairo here: <https://github.com/starkware-libs/cairo/releases>."
msgstr ""
"Si está utilizando un sistema Linux x86 y puede utilizar el binario de "
"liberación, descargue El Cairo aquí: <https://github.com/starkware-libs/"
"cairo/releases>."

#: src/appendix-07-cairo-binaries.md:144
msgid "For everyone else, we recommend compiling Cairo from source as follows:"
msgstr ""
"Para todos los demás, recomendamos compilar El Cairo a partir de la fuente "
"de la siguiente manera:"

#: src/appendix-07-cairo-binaries.md:147
msgid "# Start by defining environment variable CAIRO_ROOT\n"
msgstr "# Comience definiendo la variable de entorno CAIRO_ROOT\n"

#: src/appendix-07-cairo-binaries.md:148
msgid "\"${HOME}/.cairo\""
msgstr "\"(HOME)/.cairo\""

#: src/appendix-07-cairo-binaries.md:149
msgid "# Create .cairo folder if it doesn't exist yet\n"
msgstr "# Crear carpeta.cairo si no existe todavía\n"

#: src/appendix-07-cairo-binaries.md:152
msgid "# Clone the Cairo compiler in $CAIRO_ROOT (default root)\n"
msgstr ""
"# Clon el compilador de El Cairo en $CAIRO_ROOT (raíz predeterminada)\n"

#: src/appendix-07-cairo-binaries.md:155
msgid ""
"# OPTIONAL/RECOMMENDED: If you want to install a specific version of the "
"compiler\n"
"# Fetch all tags (versions)\n"
msgstr ""
"# OPCIONAL/RECOMENDADO: Si desea instalar una versión específica del "
"compilador # Obtener todas las etiquetas (versiones)\n"

#: src/appendix-07-cairo-binaries.md:158
msgid "# View tags (you can also do this in the Cairo compiler repository)\n"
msgstr ""
"# Ver etiquetas (también puede hacer esto en el repositorio del compilador "
"de El Cairo)\n"

#: src/appendix-07-cairo-binaries.md:160
msgid "# Checkout the version you want\n"
msgstr "# Revisa la versión que quieras\n"

#: src/appendix-07-cairo-binaries.md:163
msgid "# Generate release binaries\n"
msgstr "# Generar binarios de liberación\n"

#: src/appendix-07-cairo-binaries.md:168
msgid "."
msgstr "."

#: src/appendix-07-cairo-binaries.md:170
msgid "**NOTE: Keeping Cairo up to date**"
msgstr "**NOTA: Mantener El Cairo actualizado**"

#: src/appendix-07-cairo-binaries.md:172
msgid ""
"Now that your Cairo compiler is in a cloned repository, all you will need to "
"do is pull the latest changes and rebuild as follows:"
msgstr ""
"Ahora que su compilador de El Cairo está en un repositorio clonado, todo lo "
"que tendrá que hacer es extraer los últimos cambios y reconstruir como sigue:"

#: src/appendix-07-cairo-binaries.md:179
msgid "Step 2: Add Cairo 1.0 Executables to Your Path"
msgstr "Paso 2: Añadir El Cairo 1.0 Ejecutables a su camino"

#: src/appendix-07-cairo-binaries.md:182
msgid "\"$CAIRO_ROOT/target/release:$PATH\""
msgstr "\"$CAIRO_ROOT/target/release:$PATH\""

#: src/appendix-07-cairo-binaries.md:185
msgid ""
"**NOTE: If installing from a Linux binary, adapt the destination path "
"accordingly.**"
msgstr ""
"**NOTA: Si se instala desde un binario Linux, adapte la ruta de destino en "
"consecuencia.**"

#: src/appendix-07-cairo-binaries.md:187
msgid "Step 3: Setup Language Server"
msgstr "Paso 3: Configurar el servidor de lenguaje"

#: src/appendix-07-cairo-binaries.md:189
msgid "VS Code Extension"
msgstr "Extensión de código VS"

#: src/appendix-07-cairo-binaries.md:191
msgid ""
"If you have the previous Cairo 0 extension installed, you can disable/"
"uninstall it."
msgstr ""
"Si tiene instalada la extensión anterior Cairo 0, puede desactivarla/"
"desinstalarla."

#: src/appendix-07-cairo-binaries.md:192
msgid ""
"Install the Cairo 1 extension for proper syntax highlighting and code "
"navigation. You can find the link to the extension [here](https://"
"marketplace.visualstudio.com/items?itemName=starkware.cairo1&ssr=false), or "
"just search for \"Cairo 1.0\" in the VS Code marketplace."
msgstr ""
"Instale la extensión El Cairo 1 para resaltar correctamente la sintaxis y la "
"navegación de código. Puede encontrar el enlace a la extensión [aquí]"
"(https://marketplace.visualstudio.com/items?itemName=starkware."
"cairo1&ssr=false), o simplemente busque \"El Cairo 1.0\" en el mercado de "
"código VS."

#: src/appendix-07-cairo-binaries.md:193
msgid ""
"The extension will work out of the box once you will have [Scarb](./ch01-03-"
"hello-scarb.md) installed."
msgstr ""
"La extensión funcionará fuera de la caja una vez que usted tenga [Scarb](./"
"ch01-03-hello-scarb.md) instalado."

#: src/appendix-07-cairo-binaries.md:195
msgid "Cairo Language Server without Scarb"
msgstr "Servidor de idioma de El Cairo sin escarcha"

#: src/appendix-07-cairo-binaries.md:197
msgid ""
"If you don't want to depend on Scarb, you can still use the Cairo Language "
"Server with the compiler binary. From [Step 1](#installing-cairo-with-a-"
"script-installer-by-fran), the `cairo-language-server` binary should be "
"built and executing this command will copy its path into your clipboard."
msgstr ""
"Si no quieres depender de Scarb, puedes usar el servidor de idioma Cairo con "
"el binario del compilador. Desde [Paso 1](#installing-cairo-with-a-script-"
"installer-by-fran), el binario `cairo-language-server` debe ser construido y "
"ejecutar este comando copiará su ruta en tu portapapeles."

#: src/appendix-07-cairo-binaries.md:204
msgid ""
"Update the `cairo1.languageServerPath` of the Cairo 1.0 extension by pasting "
"the path."
msgstr ""
"Actualizar el `cairo1.languageServerPath` de la extensión El Cairo 1.0 "
"pegando el camino."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"All through the previous sections, you've mostly written programs with a "
"`main` entrypoint. In the coming sections, you will learn to write and "
"deploy Starknet contracts."
msgstr ""
"En todas las secciones anteriores, usted ha escrito principalmente programas "
"con un punto de entrada principal. En las secciones siguientes, usted "
"aprenderá a escribir e implementar contratos Starknet."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"One of the key applications of the Cairo language is writing smart contracts "
"for the Starknet network. Starknet is a permissionless decentralized network "
"that leverages zk-STARKs technology for scalability. As a Layer 2 (L2) "
"scalability solution for Ethereum, Starknet aims to provide fast, secure, "
"and low-cost transactions. It operates as a validity rollup, commonly known "
"as a zero-knowledge rollup, and is built on top of the Cairo VM."
msgstr ""
"Una de las aplicaciones clave del idioma de El Cairo es escribir contratos "
"inteligentes para la red Starknet. Starknet es una red descentralizada sin "
"permiso que aprovecha la tecnología zk-STARKs para la escalabilidad. Como "
"solución de escalabilidad de la capa 2 (L2) para Ethereum, Starknet tiene "
"como objetivo proporcionar transacciones rápidas, seguras y de bajo costo. "
"Funciona como un rollup de validez, comúnmente conocido como un rollup de "
"conocimiento cero, y está construido sobre la VM de El Cairo."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Starknet contracts are programs specifically designed to run within the "
"Starknet OS. The Starknet OS is a Cairo program itself, which means that any "
"operation executed by the Starknet OS can be proven and succinctly verified. "
"Smart contracts can access Starknet's persistent state through the OS, "
"enabling them to read or modify variables in Starknet’s state, communicate "
"with other contracts, and interact seamlessly with the underlying Layer 1 "
"(L1) network."
msgstr ""
"Los contratos Starknet son programas diseñados específicamente para "
"funcionar dentro del sistema operativo Starknet. El sistema operativo "
"Starknet es un programa de El Cairo en sí mismo, lo que significa que "
"cualquier operación ejecutada por el sistema operativo Starknet puede ser "
"probada y verificada sucintamente. Los contratos inteligentes pueden acceder "
"al estado persistente de Starknet a través del sistema operativo, "
"permitiéndoles leer o modificar variables en el estado de Starknet, "
"comunicarse con otros contratos e interactuar sin problemas con la red "
"subyacente de la capa 1 (L1)."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"If you want to learn more about the Starknet network itself, its "
"architecture and the tooling available, you should read the [Starknet Book]"
"(https://book.starknet.io/). In this book, we will only focus on writing "
"smart contracts in Cairo."
msgstr ""
"Si quieres saber más sobre la propia red Starknet, su arquitectura y las "
"herramientas disponibles, debes leer el [Starknet Book] (https://book."
"starknet.io/). En este libro, sólo nos centraremos en escribir contratos "
"inteligentes en El Cairo."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Scarb"
msgstr "Cicatriz"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Scarb facilitates smart contract development for Starknet. To enable this "
"feature, you'll need to make some configurations in your _Scarb.toml_ file "
"(see [Installation](./ch01-01-installation.md) for how to install Scarb)."
msgstr ""
"Scarb facilita el desarrollo de contratos inteligentes para Starknet. Para "
"habilitar esta función, necesitará realizar algunas configuraciones en su "
"archivo _Scarb.toml_ (ver [Instalación](./ch01-01-installation.md) para "
"saber cómo instalar Scarb)."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"First, add the `starknet` dependency to your _Scarb.toml_ file. Next, enable "
"the Starknet contract compilation of the package by adding a `[[target."
"starknet-contract]]` section. By default, specifying this target will build "
"a Sierra Contract Class file, which can be deployed on Starknet. If you omit "
"to specify the target, your package will compile but will not produce an "
"output that you can use with Starknet."
msgstr ""
"En primer lugar, añada la dependencia `starknet` a su archivo _Scarb.toml_. "
"A continuación, active la compilación del contrato Starknet del paquete "
"añadiendo una sección `[[target.starknet-contract]]`. Por defecto, "
"especificar este objetivo construirá un archivo Sierra Contract Class, que "
"se puede implementar en Starknet. Si omite especificar el objetivo, su "
"paquete compilará pero no producirá una salida que pueda utilizar con "
"Starknet."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Below is the minimal _Scarb.toml_ file required to compile a crate "
"containing Starknet contracts:"
msgstr ""
"A continuación se muestra el archivo _Scarb.toml_ mínimo necesario para "
"compilar una caja que contiene los contratos Starknet:"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"package_name\"\n"
"version = \"0.1.0\"\n"
"\n"
"[dependencies]\n"
"starknet = \">=2.6.3\"\n"
"\n"
"[[target.starknet-contract]]\n"
"```"
msgstr ""
"Nombre del paquete = \"package_name\" versión = \"0.1.0\" [dependencias] "
"blacknet = \">2.6.3\" [[target.starknet-contract]]"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"To compile contracts defined in your package's dependencies, please refer to "
"the [Scarb documentation](https://docs.swmansion.com/scarb/docs/extensions/"
"starknet/contract-target.html#compiling-external-contracts)."
msgstr ""
"Para compilar los contratos definidos en las dependencias de su paquete, "
"consulte la [Documentación de Scarb](https://docs.swmansion.com/scarb/docs/"
"extensions/starknet/contract-target.html#compilating-external-contracts)."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid "Starknet Foundry"
msgstr "Fundición Starknet"

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"Starknet Foundry is a tool chain for Starknet smart contract development. It "
"supports many features, including writing and running tests with advanced "
"features, deploying contracts, interacting with the Starknet network, and "
"more."
msgstr ""
"Starknet Foundry es una cadena de herramientas para el desarrollo de "
"contratos inteligentes Starknet. Soporta muchas características, incluyendo "
"la escritura y la ejecución de pruebas con características avanzadas, el "
"despliegue de contratos, la interacción con la red Starknet, y más."

#: src/ch13-00-introduction-to-starknet-smart-contracts.md
msgid ""
"We'll describe Starknet Foundry in more detail in [Chapter 17](./ch17-02-"
"testing-smart-contracts.md#testing-smart-contracts-with-starknet-foundry) "
"when discussing Starknet smart contract testing and security."
msgstr ""
"Vamos a describir Starknet Foundry con más detalle en [Capítulo 17](./"
"ch17-02-testing-smart-contracts.md#testing-smart-contracts-with-starknet-"
"foundry) cuando se discute Starknet smart contract testing and security."

#: src/ch13-01-general-introduction-to-smart-contracts.md:3
msgid ""
"This chapter will give you a high level introduction to what smart contracts "
"are, what they are used for, and why blockchain developers would use Cairo "
"and Starknet. If you are already familiar with blockchain programming, feel "
"free to skip this chapter. The last part might still be interesting though."
msgstr ""
"Este capítulo le dará una introducción de alto nivel a lo que son los "
"contratos inteligentes, lo que se utilizan para, y por qué los "
"desarrolladores de blockchain utilizar El Cairo y Starknet. Si ya está "
"familiarizado con la programación de blockchain, no dude en saltarse este "
"capítulo. La última parte podría ser interesante sin embargo."

#: src/ch13-01-general-introduction-to-smart-contracts.md:6
msgid "Smart Contracts"
msgstr "Contratos inteligentes"

#: src/ch13-01-general-introduction-to-smart-contracts.md:8
msgid ""
"Smart contracts gained popularity and became more widespread with the birth "
"of Ethereum. Smart contracts are essentially programs deployed on a "
"blockchain. The term \"smart contract\" is somewhat misleading, as they are "
"neither \"smart\" nor \"contracts\" but rather code and instructions that "
"are executed based on specific inputs. They primarily consist of two "
"components: storage and functions. Once deployed, users can interact with "
"smart contracts by initiating blockchain transactions containing execution "
"data (which function to call and with what input). Smart contracts can "
"modify and read the storage of the underlying blockchain. A smart contract "
"has its own address and is considered a blockchain account, meaning it can "
"hold tokens."
msgstr ""
"Los contratos inteligentes ganaron popularidad y se generalizaron con el "
"nacimiento de Ethereum. Los contratos inteligentes son esencialmente "
"programas implementados en una cadena de bloques. El término \"contrato "
"inteligente\" es algo engañoso, ya que no son ni \"inteligentes\" ni "
"\"contratos\", sino más bien código e instrucciones que se ejecutan sobre la "
"base de entradas específicas. Se componen principalmente de dos componentes: "
"almacenamiento y funciones. Una vez implementados, los usuarios pueden "
"interactuar con contratos inteligentes iniciando transacciones de cadena de "
"bloques que contienen datos de ejecución (que funcionan para llamar y con "
"qué entrada). Los contratos inteligentes pueden modificar y leer el "
"almacenamiento de la cadena de bloques subyacente. Un contrato inteligente "
"tiene su propia dirección y se considera una cuenta de cadena de bloques, lo "
"que significa que puede contener fichas."

#: src/ch13-01-general-introduction-to-smart-contracts.md:10
msgid ""
"The programming language used to write smart contracts varies depending on "
"the blockchain. For example, on Ethereum and the [EVM-compatible ecosystem]"
"(https://ethereum.org/en/developers/docs/evm/), the most commonly used "
"language is Solidity, while on Starknet, it is Cairo. The way the code is "
"compiled also differs based on the blockchain. On Ethereum, Solidity is "
"compiled into bytecode. On Starknet, Cairo is compiled into Sierra and then "
"into Cairo Assembly (CASM)."
msgstr ""
"El lenguaje de programación utilizado para escribir contratos inteligentes "
"varía dependiendo de la cadena de bloques. Por ejemplo, en Ethereum y el "
"[ecosistema compatible con EVM](https://ethereum.org/en/developers/docs/"
"evm/), el lenguaje más utilizado es Solidity, mientras que en Starknet, es "
"El Cairo. La forma en que se compila el código también difiere según la "
"cadena de bloques. En Ethereum, Solidity se compila en bytecode. En "
"Starknet, El Cairo se compila en Sierra y luego en El Cairo Assembly (CASM)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:12
msgid ""
"Smart contracts possess several unique characteristics. They are "
"**permissionless**, meaning anyone can deploy a smart contract on the "
"network (within the context of a decentralized blockchain, of course). Smart "
"contracts are also **transparent**; the data stored by the smart contract is "
"accessible to anyone. The code that composes the contract can also be "
"transparent, enabling **composability**. This allows developers to write "
"smart contracts that use other smart contracts. Smart contracts can only "
"access and interact with data from the blockchain they are deployed on. They "
"require third-party software (called _oracles_) to access external data (the "
"price of a token for instance)."
msgstr ""
"Los contratos inteligentes poseen varias características únicas. Son "
"**permissionless**, lo que significa que cualquier persona puede implementar "
"un contrato inteligente en la red (en el contexto de una cadena de bloques "
"descentralizada, por supuesto). Los contratos inteligentes también son "
"**transparentes**; los datos almacenados por el contrato inteligente son "
"accesibles para cualquier persona. El código que compone el contrato también "
"puede ser transparente, permitiendo **composability**. Esto permite a los "
"desarrolladores escribir contratos inteligentes que utilizan otros contratos "
"inteligentes. Los contratos inteligentes sólo pueden acceder e interactuar "
"con los datos de la cadena de bloques en que se despliegan. Requieren "
"software de terceros (llamado _oráculos_) para acceder a datos externos (el "
"precio de un símbolo, por ejemplo)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:14
msgid ""
"For developers to build smart contracts that can interact with each other, "
"it is required to know what the other contracts look like. Hence, Ethereum "
"developers started to build standards for smart contract development, the "
"`ERCxx`. The two most used and famous standards are the `ERC20`, used to "
"build tokens like `USDC`, `DAI` or `STARK`, and the `ERC721`, for NFTs (Non-"
"Fungible Tokens) like `CryptoPunks` or `Everai`."
msgstr ""
"Para que los desarrolladores creen contratos inteligentes que puedan "
"interactuar entre sí, es necesario saber cómo son los demás contratos. Por "
"consiguiente, los desarrolladores de Ethereum comenzaron a elaborar normas "
"para el desarrollo de contratos inteligentes, el `ERCxx`. Las dos normas más "
"utilizadas y famosas son las `ERC20`, que se utilizan para construir fichas "
"como `USDC`, `DAI` o `STARK`, y el `ERC721`, para las NFT (Tokens no "
"fungibles) como `CryptoPunks` o `Everai`."

#: src/ch13-01-general-introduction-to-smart-contracts.md:18
msgid "Use Cases"
msgstr "Casos de uso"

#: src/ch13-01-general-introduction-to-smart-contracts.md:20
msgid ""
"There are many possible use cases for smart contracts. The only limits are "
"the technical constraints of the blockchain and the creativity of developers."
msgstr ""
"Hay muchos casos de uso posible para los contratos inteligentes. Los únicos "
"límites son las limitaciones técnicas de la cadena de bloques y la "
"creatividad de los desarrolladores."

#: src/ch13-01-general-introduction-to-smart-contracts.md:22
msgid "DeFi"
msgstr "DeFi"

#: src/ch13-01-general-introduction-to-smart-contracts.md:24
msgid ""
"For now, the principal use case for smart contracts is similar to that of "
"Ethereum or Bitcoin, which is essentially handling money. In the context of "
"the alternative payment system promised by Bitcoin, smart contracts on "
"Ethereum enable the creation of decentralized financial applications that no "
"longer rely on traditional financial intermediaries. This is what we call "
"DeFi (decentralized finance). DeFi consists of various projects such as "
"lending/borrowing applications, decentralized exchanges (DEX), on-chain "
"derivatives, stablecoins, decentralized hedge funds, insurance, and many "
"more."
msgstr ""
"Por el momento, el principal caso de uso de los contratos inteligentes es "
"similar al de Ethereum o Bitcoin, que esencialmente está manejando dinero. "
"En el contexto del sistema de pago alternativo prometido por Bitcoin, los "
"contratos inteligentes de Ethereum permiten la creación de aplicaciones "
"financieras descentralizadas que ya no dependen de intermediarios "
"financieros tradicionales. Esto es lo que llamamos DeFi (financiación "
"descentralizada). DeFi consiste en varios proyectos tales como solicitudes "
"de préstamos/préstamos, bolsas descentralizadas (DEX), derivados en cadena, "
"monedas estables, fondos de cobertura descentralizados, seguros, y muchos "
"más."

#: src/ch13-01-general-introduction-to-smart-contracts.md:26
msgid "Tokenization"
msgstr "Tokenización"

#: src/ch13-01-general-introduction-to-smart-contracts.md:28
msgid ""
"Smart contracts can facilitate the tokenization of real-world assets, such "
"as real estate, art, or precious metals. Tokenization divides an asset into "
"digital tokens, which can be easily traded and managed on blockchain "
"platforms. This can increase liquidity, enable fractional ownership, and "
"simplify the buying and selling process."
msgstr ""
"Los contratos inteligentes pueden facilitar la tokenización de activos del "
"mundo real, como bienes raíces, arte o metales preciosos. La tokenización "
"divide un activo en fichas digitales, que se pueden negociar y gestionar "
"fácilmente en plataformas de blockchain. Esto puede aumentar la liquidez, "
"permitir la propiedad fraccionada y simplificar el proceso de compra y venta."

#: src/ch13-01-general-introduction-to-smart-contracts.md:30
msgid "Voting"
msgstr "Votación"

#: src/ch13-01-general-introduction-to-smart-contracts.md:32
msgid ""
"Smart contracts can be used to create secure and transparent voting systems. "
"Votes can be recorded on the blockchain, ensuring immutability and "
"transparency. The smart contract can then automatically tally the votes and "
"declare the results, minimizing the potential for fraud or manipulation."
msgstr ""
"Los contratos inteligentes se pueden utilizar para crear sistemas de "
"votación seguros y transparentes. Los votos se pueden registrar en la cadena "
"de bloques, garantizando la inmutabilidad y la transparencia. El contrato "
"inteligente puede entonces contar automáticamente los votos y declarar los "
"resultados, minimizando el potencial de fraude o manipulación."

#: src/ch13-01-general-introduction-to-smart-contracts.md:34
msgid "Royalties"
msgstr "Derechos de autor"

#: src/ch13-01-general-introduction-to-smart-contracts.md:36
msgid ""
"Smart contracts can automate royalty payments for artists, musicians, and "
"other content creators. When a piece of content is consumed or sold, the "
"smart contract can automatically calculate and distribute the royalties to "
"the rightful owners, ensuring fair compensation and reducing the need for "
"intermediaries."
msgstr ""
"Los contratos inteligentes pueden automatizar los pagos de regalías para "
"artistas, músicos y otros creadores de contenido. Cuando un contenido se "
"consume o vende, el contrato inteligente puede calcular y distribuir "
"automáticamente las regalías a los propietarios legítimos, garantizando una "
"compensación justa y reduciendo la necesidad de intermediarios."

#: src/ch13-01-general-introduction-to-smart-contracts.md:38
msgid "Decentralized Identities DIDs"
msgstr "IDENTIDADES DESCENTRALIZADAS"

#: src/ch13-01-general-introduction-to-smart-contracts.md:40
msgid ""
"Smart contracts can be used to create and manage digital identities, "
"allowing individuals to control their personal information and share it with "
"third parties securely. The smart contract could verify the authenticity of "
"a user's identity and automatically grant or revoke access to specific "
"services based on the user's credentials."
msgstr ""
"Los contratos inteligentes se pueden utilizar para crear y gestionar "
"identidades digitales, permitiendo a las personas controlar su información "
"personal y compartirla con terceros de forma segura.El contrato inteligente "
"podría verificar la autenticidad de la identidad de un usuario y conceder o "
"revocar automáticamente el acceso a servicios específicos basados en las "
"credenciales del usuario."

#: src/ch13-01-general-introduction-to-smart-contracts.md:46
msgid "The Rise of Starknet and Cairo"
msgstr "El ascenso de Starknet y El Cairo"

#: src/ch13-01-general-introduction-to-smart-contracts.md:48
msgid ""
"Ethereum, being the most widely used and resilient smart contract platform, "
"became a victim of its own success. With the rapid adoption of some "
"previously mentioned use cases, mainly DeFi, the cost of performing "
"transactions became extremely high, rendering the network almost unusable. "
"Engineers and researchers in the ecosystem began working on solutions to "
"address this scalability issue."
msgstr ""
"Ethereum, siendo la plataforma de contratos inteligentes más utilizada y "
"resistente, se convirtió en víctima de su propio éxito. Con la rápida "
"adopción de algunos casos de uso mencionados anteriormente, principalmente "
"DeFi, el costo de realizar transacciones se volvió extremadamente alto, "
"haciendo que la red casi inutilizable. Ingenieros e investigadores en el "
"ecosistema comenzaron a trabajar en soluciones para abordar este problema de "
"escalabilidad."

#: src/ch13-01-general-introduction-to-smart-contracts.md:50
msgid ""
"A famous trilemma called The Blockchain Trilemma in the blockchain space "
"states that it is hard to achieve a high level of scalability, "
"decentralization, and security simultaneously; trade-offs must be made. "
"Ethereum is at the intersection of decentralization and security. "
"Eventually, it was decided that Ethereum's purpose would be to serve as a "
"secure settlement layer, while complex computations would be offloaded to "
"other networks built on top of Ethereum. These are called Layer 2s (L2s)."
msgstr ""
"Un famoso trilema llamado The Blockchain Trilemma en el espacio blockchain "
"afirma que es difícil lograr un alto nivel de escalabilidad, "
"descentralización y seguridad simultáneamente; se deben hacer "
"compensaciones. Ethereum está en la intersección de descentralización y "
"seguridad. Eventualmente, se decidió que el propósito de Ethereum sería "
"servir como una capa de asentamiento segura, mientras que los cálculos "
"complejos se descargarían a otras redes construidas en la parte superior de "
"Ethereum. Estos se llaman Capa 2s (L2s)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:52
msgid ""
"The two primary types of L2s are optimistic rollups and validity rollups. "
"Both approaches involve compressing and batching numerous transactions "
"together, computing the new state, and settling the result on Ethereum (L1). "
"The difference lies in the way the result is settled on L1. For optimistic "
"rollups, the new state is considered valid by default, but there is a 7-day "
"window for nodes to identify malicious transactions."
msgstr ""
"Los dos tipos primarios de L2s son rollos optimistas y rollos de validez. "
"Ambos enfoques implican comprimir y por lotes numerosas transacciones "
"juntas, computar el nuevo estado, y resolver el resultado en Ethereum (L1). "
"La diferencia radica en la forma en que el resultado se establece en L1. "
"Para los rollos optimistas, el nuevo estado se considera válido por defecto, "
"pero hay una ventana de 7 días para nodos para identificar transacciones "
"maliciosas."

#: src/ch13-01-general-introduction-to-smart-contracts.md:54
msgid ""
"In contrast, validity rollups, such as Starknet, use cryptography to prove "
"that the new state has been correctly computed. This is the purpose of "
"STARKs, this cryptographic technology could permit validity rollups to scale "
"significantly more than optimistic rollups. You can learn more about STARKs "
"from Starkware's Medium [article](https://medium.com/starkware/starks-"
"starkex-and-starknet-9a426680745a), which serves as a good primer."
msgstr ""
"Por el contrario, los rollups de validez, como Starknet, utilizan la "
"criptografía para demostrar que el nuevo estado ha sido correctamente "
"computado. Este es el propósito de STARKs, esta tecnología criptográfica "
"podría permitir que los rollups de validez escalaran significativamente más "
"que los rollups optimistas. Puede aprender más sobre STARKs de Starkware's "
"Medium [article](https://medium.com/starkware/starks-starkex-and-"
"starknet-9a426680745a), que sirve como una buena imprimación."

#: src/ch13-01-general-introduction-to-smart-contracts.md:56
msgid ""
"Starknet's architecture is thoroughly described in the [Starknet Book]"
"(https://book.starknet.io/ch03-00-architecture.html), which is a great "
"resource to learn more about the Starknet network."
msgstr ""
"La arquitectura de Starknet se describe a fondo en el [Libro Starknet] "
"(https://book.starknet.io/ch03-00-architecture.html), que es un gran recurso "
"para aprender más sobre la red Starknet."

#: src/ch13-01-general-introduction-to-smart-contracts.md:58
msgid ""
"Remember Cairo? It is, in fact, a language developed specifically to work "
"with STARKs and make them general-purpose. With Cairo, we can write "
"**provable code**. In the context of Starknet, this allows proving the "
"correctness of computations from one state to another."
msgstr ""
"¿Recuerdas El Cairo? De hecho, es un lenguaje desarrollado específicamente "
"para trabajar con STARKs y hacerlos de propósito general. Con El Cairo, "
"podemos escribir **código demostrable**. En el contexto de Starknet, esto "
"permite probar la corrección de los cálculos de un estado a otro."

#: src/ch13-01-general-introduction-to-smart-contracts.md:60
msgid ""
"Unlike most (if not all) of Starknet's competitors that chose to use the EVM "
"(either as-is or adapted) as a base layer, Starknet employs its own VM. This "
"frees developers from the constraints of the EVM, opening up a broader range "
"of possibilities. Coupled with decreased transaction costs, the combination "
"of Starknet and Cairo creates an exciting playground for developers. Native "
"account abstraction enables more complex logic for accounts, that we call "
"\"Smart Accounts\", and transaction flows. Emerging use cases include "
"**transparent AI** and machine learning applications. Finally, **blockchain "
"games** can be developed entirely **on-chain**. Starknet has been "
"specifically designed to maximize the capabilities of STARK proofs for "
"optimal scalability."
msgstr ""
"A diferencia de la mayoría (si no todos) de los competidores de Starknet que "
"optaron por utilizar la EVM (ya sea como está o adaptado) como una capa "
"base, Starknet emplea su propia VM. Esto libera a los desarrolladores de las "
"restricciones de la EVM, abriendo una gama más amplia de posibilidades. "
"Junto con la disminución de los costos de transacción, la combinación de "
"Starknet y El Cairo crea un parque infantil emocionante para los "
"desarrolladores. La abstracción de cuentas nativas permite una lógica más "
"compleja para las cuentas, que llamamos \"cuentas inteligentes\", y flujos "
"de transacciones. Los casos de uso emergentes incluyen ** AI transparente** "
"y aplicaciones de aprendizaje automático. Por último, ** juegos de "
"blockchain** se pueden desarrollar completamente ** en cadena**. Starknet ha "
"sido diseñado específicamente para maximizar las capacidades de las pruebas "
"STARK para una escalabilidad óptima."

#: src/ch13-01-general-introduction-to-smart-contracts.md:62
msgid ""
"Learn more about Account Abstraction in the [Starknet Book](https://book."
"starknet.io/ch04-00-account-abstraction.html)."
msgstr ""
"Más información sobre Abstracción de cuentas en el [Libro Starknet](https://"
"book.starknet.io/ch04-00-account-abstraction.html)."

#: src/ch13-01-general-introduction-to-smart-contracts.md:68
msgid "Cairo Programs and Starknet Contracts: What Is the Difference?"
msgstr "El Cairo Programs y Starknet Contracts: ¿Cuál es la diferencia?"

#: src/ch13-01-general-introduction-to-smart-contracts.md:70
msgid ""
"Starknet contracts are a special superset of Cairo programs, so the concepts "
"previously learned in this book are still applicable to write Starknet "
"contracts. As you may have already noticed, a Cairo program must always have "
"a `main` function that serves as the entry point for this program:"
msgstr ""
"Los contratos Starknet son un superconjunto especial de programas de El "
"Cairo, por lo que los conceptos aprendidos anteriormente en este libro "
"siguen siendo aplicables para escribir contratos Starknet. Como ya habrá "
"notado, un programa de El Cairo debe tener siempre una función `principal` "
"que sirve como punto de entrada para este programa:"

#: src/ch13-01-general-introduction-to-smart-contracts.md:77
msgid ""
"Contracts deployed on the Starknet network are essentially programs that are "
"run by the sequencer, and as such, have access to Starknet's state. "
"Contracts do not have a `main` function but one or multiple functions that "
"can serve as entry points."
msgstr ""
"Los contratos implementados en la red Starknet son esencialmente programas "
"que son administrados por el secuenciador, y como tal, tienen acceso al "
"estado de Starknet. Los contratos no tienen una función principal sino una o "
"múltiples funciones que pueden servir como puntos de entrada."

#: src/ch13-01-general-introduction-to-smart-contracts.md:79
msgid ""
"Starknet contracts are defined within [modules](./ch07-02-defining-modules-"
"to-control-scope.md). For a module to be handled as a contract by the "
"compiler, it must be annotated with the `#[starknet::contract]` attribute."
msgstr ""
"Los contratos Starknet se definen dentro de [módulos](./ch07-02-definir-"
"módulos-a-control-scope.md). Para que un módulo sea manejado como un "
"contrato por el compilador, debe ser anotado con el atributo [starknet::"
"contract]`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:3
msgid ""
"This chapter will introduce you to the basics of Starknet contracts using a "
"very simple smart contract as example. You will learn how to write a "
"contract that allows anyone to store a single number on the Starknet "
"blockchain."
msgstr ""
"Este capítulo le presentará los conceptos básicos de los contratos Starknet "
"usando un contrato inteligente muy simple como ejemplo. Aprenderá cómo "
"escribir un contrato que permite a cualquier persona almacenar un solo "
"número en la cadena de bloques Starknet."

#: src/ch13-02-anatomy-of-a-simple-contract.md:5
msgid ""
"Let's consider the following contract for the whole chapter. It might not be "
"easy to understand it all at once, but we will go through it step by step:"
msgstr ""
"Consideremos el siguiente contrato para todo el capítulo. Puede que no sea "
"fácil entenderlo todo de una vez, pero lo pasaremos paso a paso:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:34
msgid "<span class=\"caption\">Listing 13-1: A simple storage contract</span>"
msgstr ""
"<span class=\"caption\">Lista 13-1: Un simple contrato de almacenamiento</"
"span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:36
msgid "What Is this Contract?"
msgstr "¿Qué es este Contrato?"

#: src/ch13-02-anatomy-of-a-simple-contract.md:38
msgid ""
"Contracts are defined by encapsulating state and logic within a module "
"annotated with the `#[starknet::contract]` attribute."
msgstr ""
"Los contratos se definen encapsulando el estado y la lógica dentro de un "
"módulo anotado con el atributo \"[starknet::contract]`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:40
msgid ""
"The state is defined within the `Storage` struct, and is always initialized "
"empty. Here, our struct contains a single a field called `stored_data` of "
"type `u128` (unsigned integer of 128 bits), indicating that our contract can "
"store any number between 0 and \\\\( {2^{128}} - 1 \\\\)."
msgstr ""
"El estado se define dentro de la estructura `Almacenamiento`, y siempre se "
"inicializa vacío. Aquí, nuestra estructura contiene un solo campo llamado "
"`stored_data` de tipo `u128` (un número entero sin firmar de 128 bits), lo "
"que indica que nuestro contrato puede almacenar cualquier número entre 0 y"

#: src/ch13-02-anatomy-of-a-simple-contract.md:42
msgid ""
"The logic is defined by functions that interact with the state. Here, our "
"contract defines and publicly exposes the functions `set` and `get` that can "
"be used to modify or retrieve the value of the stored variable. You can "
"think of it as a single slot in a database that you can query and modify by "
"calling functions of the code that manages the database."
msgstr ""
"La lógica está definida por funciones que interactúan con el estado. Aquí, "
"nuestro contrato define y expone públicamente las funciones `set` y `get` "
"que se pueden utilizar para modificar o recuperar el valor de la variable "
"almacenada. Puede pensar en ello como una única ranura en una base de datos "
"que puede consultar y modificar llamando a las funciones del código que "
"administra la base de datos."

#: src/ch13-02-anatomy-of-a-simple-contract.md:45
msgid "The Interface: the Contract's Blueprint"
msgstr "La interfaz: el plan del contrato"

#: src/ch13-02-anatomy-of-a-simple-contract.md:55
msgid "<span class=\"caption\">Listing 13-2: A basic contract interface</span>"
msgstr ""
"<span class=\"caption\">Lista 13-2: Una interfaz de contrato básica</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:58
msgid ""
"Interfaces represent the blueprint of the contract. They define the "
"functions that the contract exposes to the outside world. In Cairo, they're "
"defined by annotating a trait with the `#[starknet::interface]` attribute. "
"All functions of the trait are considered public functions of any contract "
"that implements this trait, and are callable from the outside world."
msgstr ""
"Las interfaces representan el plano del contrato. Define las funciones que "
"el contrato expone al mundo exterior. En El Cairo, se definen anotando un "
"rasgo con el atributo •[starknet::interface]`. Todas las funciones del rasgo "
"se consideran funciones públicas de cualquier contrato que implementa este "
"rasgo, y son susceptibles de ser invocadas desde el mundo exterior."

#: src/ch13-02-anatomy-of-a-simple-contract.md:60
msgid ""
"All contract interfaces use a generic type for the `self` parameter, "
"representing the contract state. We chose to name this generic parameter "
"`TContractState` in our interface, but this is not enforced and any name can "
"be chosen."
msgstr ""
"Todas las interfaces de contrato utilizan un tipo genérico para el parámetro "
"`self`, que representa el estado del contrato. Elegimos nombrar este "
"parámetro genérico `TContractState` en nuestra interfaz, pero esto no se "
"hace cumplir y se puede elegir cualquier nombre."

#: src/ch13-02-anatomy-of-a-simple-contract.md:62
msgid ""
"In our interface, note the generic type `TContractState` of the `self` "
"argument which is passed by reference to the `set` function. Seeing the "
"`self` argument passed in a contract function tells us that this function "
"can access the state of the contract. The `ref` modifier implies that `self` "
"may be modified, meaning that the storage variables of the contract may be "
"modified inside the `set` function."
msgstr ""
"En nuestra interfaz, tenga en cuenta el tipo genérico `TContractState` del "
"argumento `auto' que se pasa por referencia a la función `set`. Al ver el "
"argumento `auto` aprobado en una función contractual, nos indica que esta "
"función puede acceder al estado del contrato. El `ref` modificador implica "
"que `auto` puede modificarse, lo que significa que las variables de "
"almacenamiento del contrato pueden modificarse dentro de la función `set`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:64
msgid ""
"On the other hand, the `get` function takes a snapshot of `TContractState`, "
"which immediately tells us that it does not modify the state (and indeed, "
"the compiler will complain if we try to modify storage inside the `get` "
"function)."
msgstr ""
"Por otra parte, la función `get` toma una instantánea de `TContractState`, "
"que inmediatamente nos dice que no modifica el estado (y de hecho, el "
"compilador se quejará si tratamos de modificar el almacenamiento dentro de "
"la función `get`)."

#: src/ch13-02-anatomy-of-a-simple-contract.md:66
msgid ""
"By leveraging the [traits & impls](./ch08-02-traits-in-cairo.md) mechanism "
"from Cairo, we can make sure that the actual implementation of the contract "
"matches its interface. In fact, you will get a compilation error if your "
"contract doesn’t conform with the declared interface. For example, Listing "
"13-3 shows a wrong implementation of the `ISimpleStorage` interface, "
"containing a slightly different `set` function that doesn't have the same "
"signature."
msgstr ""
"Al aprovechar el mecanismo [traits & impls](./ch08-02-traits-in-cairo.md) de "
"El Cairo, podemos asegurarnos de que la aplicación real del contrato "
"coincide con su interfaz. De hecho, obtendrá un error de compilación si su "
"contrato no se ajusta a la interfaz declarada. Por ejemplo, el listado 13-3 "
"muestra una implementación incorrecta de la interfaz `IsimpleStorage`, que "
"contiene una función `set` ligeramente diferente que no tiene la misma firma."

#: src/ch13-02-anatomy-of-a-simple-contract.md:78
msgid ""
"<span class=\"caption\">Listing 13-3: A wrong implementation of the "
"interface of the contract. This does not compile, as the signature of `set` "
"doesn't match the trait's.</span>"
msgstr ""
"<span class=\"caption\">Lista 13-3: Una implementación incorrecta de la "
"interfaz del contrato. Esto no se compila, ya que la firma de `set` no "
"coincide con la de los rasgos.</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:80
msgid ""
"Trying to compile a contract using this implementation will result in the "
"following error:"
msgstr ""
"Intentar compilar un contrato usando esta implementación resultará en el "
"siguiente error:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:100
msgid "Public Functions Defined in an Implementation Block"
msgstr "Funciones públicas definidas en un bloque de implementación"

#: src/ch13-02-anatomy-of-a-simple-contract.md:102
msgid "Before we explore things further down, let's define some terminology."
msgstr "Antes de explorar las cosas más abajo, definamos algo de terminología."

#: src/ch13-02-anatomy-of-a-simple-contract.md:104
msgid ""
"In the context of Starknet, a _public function_ is a function that is "
"exposed to the outside world. A public function can be called by anyone, "
"either from outside the contract or from within the contract itself. In the "
"example above, `set` and `get` are public functions."
msgstr ""
"En el contexto de Starknet, una función pública es una función que está "
"expuesta al mundo exterior. Una función pública puede ser llamada por "
"cualquier persona, ya sea desde fuera del contrato o desde dentro del propio "
"contrato. En el ejemplo anterior, `set` y `get` son funciones públicas."

#: src/ch13-02-anatomy-of-a-simple-contract.md:106
msgid ""
"What we call an _external_ function is a public function that can be "
"directly invoked through a Starknet transaction and that can mutate the "
"state of the contract. `set` is an external function."
msgstr ""
"Lo que llamamos una función _external_ es una función pública que puede ser "
"invocada directamente a través de una transacción Starknet y que puede mutar "
"el estado del contrato. `set` es una función externa."

#: src/ch13-02-anatomy-of-a-simple-contract.md:108
msgid ""
"A _view_ function is a public function that is typically read-only and "
"cannot mutate the state of the contract. However, this limitation is only "
"enforced by the compiler, and not by Starknet itself. We will discuss the "
"implications of this in a later section. `get` is a view function."
msgstr ""
"Una función _view_ es una función pública que es típicamente de sólo lectura "
"y no puede mutar el estado del contrato. Sin embargo, esta limitación sólo "
"es aplicada por el compilador, y no por Starknet mismo. Vamos a discutir las "
"implicaciones de esto en una sección posterior. `get` es una función de "
"vista."

#: src/ch13-02-anatomy-of-a-simple-contract.md:123
msgid ""
"<span class=\"caption\">Listing 13-4: `SimpleStorage` implementation</span>"
msgstr ""
"<span class=\"caption\">Lista 13-4: `SimpleStorage` implementation</span>"

#: src/ch13-02-anatomy-of-a-simple-contract.md:125
msgid ""
"Since the contract interface is defined as the `ISimpleStorage` trait, in "
"order to match the interface, the public functions of the contract must be "
"defined in an implementation of this trait — which allows us to make sure "
"that the implementation of the contract matches its interface."
msgstr ""
"Dado que la interfaz del contrato se define como el rasgo `IsimpleStorage`, "
"para que coincida con la interfaz, las funciones públicas del contrato deben "
"definirse en una aplicación de este rasgo, lo que nos permite asegurarnos de "
"que la ejecución del contrato coincide con su interfaz."

#: src/ch13-02-anatomy-of-a-simple-contract.md:127
msgid ""
"However, simply defining the functions in the implementation block is not "
"enough. The implementation block must be annotated with the "
"`#[abi(embed_v0)]` attribute. This attribute exposes the functions defined "
"in this implementation to the outside world — forget to add it and your "
"functions will not be callable from the outside. All functions defined in a "
"block marked as `#[abi(embed_v0)]` are consequently _public functions_."
msgstr ""
"Sin embargo, simplemente definir las funciones en el bloque de "
"implementación no es suficiente. El bloque de implementación debe estar "
"anotado con el atributo •[abi(embed_v0)]`. Este atributo expone las "
"funciones definidas en esta implementación al mundo exterior —olvídese de "
"añadirlo y sus funciones no serán susceptibles de ser llamadas desde el "
"exterior. Todas las funciones definidas en un bloque marcado como "
"•[abi(embed_v0)]` son en consecuencia _funciones públicas_."

#: src/ch13-02-anatomy-of-a-simple-contract.md:129
msgid ""
"Because the `SimpleStorage` contract is defined as a module, we need to "
"access the interface defined in the parent module. We can either bring it to "
"the current scope with the `use` keyword, or refer to it directly using "
"`super`."
msgstr ""
"Dado que el contrato `SimpleStorage` se define como un módulo, tenemos que "
"acceder a la interfaz definida en el módulo padre. Podemos llevarlo al "
"alcance actual con la palabra clave `usar`, o referirnos directamente a él "
"usando `super`."

#: src/ch13-02-anatomy-of-a-simple-contract.md:131
msgid ""
"When writing the implementation of an interface, the `self` parameter in the "
"trait methods **must** be of type `ContractState`. The `ContractState` type "
"is generated by the compiler, and gives access to the storage variables "
"defined in the `Storage` struct. Additionally, `ContractState` gives us the "
"ability to emit events. The name `ContractState` is not surprising, as it’s "
"a representation of the contract’s state, which is what we think of `self` "
"in the contract interface trait. When `self` is a snapshot of "
"`ContractState`, only read access is allowed, and emitting events is not "
"possible."
msgstr ""
"Al escribir la aplicación de una interfaz, el parámetro `auto` en los "
"métodos de rasgo ** debe ser de tipo `ContractState`. El tipo "
"`ContractState` es generado por el compilador, y da acceso a las variables "
"de almacenamiento definidas en la estructura `Almacenamiento`. Además, "
"`ContractState` nos da la capacidad de emitir eventos. El nombre "
"`ContractState` no es sorprendente, ya que es una representación del estado "
"del contrato, que es lo que pensamos de `auto` en el rasgo de interfaz del "
"contrato. Cuando `auto` es una instantánea de `ContractState`, sólo se "
"permite el acceso de lectura, y no es posible emitir eventos."

#: src/ch13-02-anatomy-of-a-simple-contract.md:135
msgid "Accessing and Modifying the Contract's State"
msgstr "Acceso y modificación del Estado del contrato"

#: src/ch13-02-anatomy-of-a-simple-contract.md:137
msgid ""
"Two methods are commonly used to access or modify the state of a contract:"
msgstr ""
"Para acceder o modificar el estado de un contrato se utilizan comúnmente dos "
"métodos:"

#: src/ch13-02-anatomy-of-a-simple-contract.md:138
msgid ""
"`read`, which returns the value of a storage variable. This method is called "
"on the variable itself and does not take any argument."
msgstr ""
"`read`, que devuelve el valor de una variable de almacenamiento. Este método "
"se llama a la variable en sí y no toma ningún argumento."

#: src/ch13-02-anatomy-of-a-simple-contract.md:144
msgid ""
"`write`, which allows to write a new value in a storage slot. This method is "
"also called on the variable itself and takes one argument, which is the "
"value to be written. Note that `write` may take more than one argument, "
"depending on the type of the storage variable. For example, writing on a "
"mapping requires 2 arguments: the key and the value to be written."
msgstr ""
"`write`, que permite escribir un nuevo valor en una ranura de "
"almacenamiento. Este método también se llama a la variable en sí y toma un "
"argumento, que es el valor a escribir. Tenga en cuenta que `write` puede "
"tomar más de un argumento, dependiendo del tipo de la variable de "
"almacenamiento. Por ejemplo, escribir en una asignación requiere 2 "
"argumentos: la clave y el valor a escribir."

#: src/ch13-02-anatomy-of-a-simple-contract.md:150
msgid ""
"Reminder: if the contract state is passed as a snapshot with `@` instead of "
"passed by reference with `ref`, attempting to modify the contract state will "
"result in a compilation error."
msgstr ""
"Recordatorio: si el estado del contrato se pasa como una instantánea con  en "
"lugar de pasar por referencia con `ref`, intentar modificar el estado del "
"contrato dará lugar a un error de compilación."

#: src/ch13-02-anatomy-of-a-simple-contract.md:152
msgid ""
"This contract does not do much apart from allowing anyone to store a single "
"number that is accessible by anyone in the world. Anyone could call `set` "
"again with a different value and overwrite the current number. Nevertheless, "
"each value stored in the storage of the contract will still be stored in the "
"history of the blockchain. Later in this book, you will see how you can "
"impose access restrictions so that only you can alter the number."
msgstr ""
"Este contrato no hace mucho aparte de permitir a cualquier persona almacenar "
"un solo número que es accesible por cualquier persona en el mundo. "
"Cualquiera podría llamar `set` de nuevo con un valor diferente y "
"sobrescribir el número actual. Sin embargo, cada valor almacenado en el "
"almacenamiento del contrato todavía se almacenará en la historia del "
"blockchain. Más adelante en este libro, usted verá cómo se puede imponer "
"restricciones de acceso para que sólo usted puede alterar el número."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"In the previous section, we gave an introductory example of a smart contract "
"written in Cairo, describing the basic blocks to build smart contracts on "
"Starknet. In this section, we'll be taking a deeper look at all the "
"components of a smart contract, step by step."
msgstr ""
"En la sección anterior, dimos un ejemplo introductorio de un contrato "
"inteligente escrito en El Cairo, describiendo los bloques básicos para "
"construir contratos inteligentes en Starknet. En esta sección, vamos a echar "
"un vistazo más profundo a todos los componentes de un contrato inteligente, "
"paso a paso."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"When we discussed [_interfaces_](./ch13-02-anatomy-of-a-simple-contract."
"md#the-interface-the-contracts-blueprint), we specified the difference "
"between the two types of _public functions_, i.e., _external functions_ and "
"_view functions_, and we mentioned how to interact with the _storage_ of a "
"contract."
msgstr ""
"Cuando discutimos [_interfaces_](./ch13-02-anatomía-de-un-contrato simple."
"md#la-interface-los-contratos-plano), especificamos la diferencia entre los "
"dos tipos de _funciones públicas_, es decir, _funciones externas_ y _ver "
"funciones_, y mencionamos cómo interactuar con el _almacenamiento_ de un "
"contrato."

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "At this point, you should have multiple questions that come to mind:"
msgstr ""
"En este punto, usted debe tener múltiples preguntas que vienen a la mente:"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How can I store more complex data types?"
msgstr "¿Cómo puedo almacenar tipos de datos más complejos?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How do I define internal/private functions?"
msgstr "¿Cómo defino las funciones internas/privadas?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "How can I emit events? How can I index them?"
msgstr "¿Cómo puedo emitir eventos? ¿Cómo puedo indexarlos?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid "Is there a way to reduce the boilerplate?"
msgstr "¿Hay alguna manera de reducir la placa de caldera?"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"Luckily, we'll be answering all these questions in this chapter. Let's "
"consider the `NameRegistry` contract in Listing 14-1 that we'll be using "
"throughout this chapter:"
msgstr ""
"Por suerte, responderemos a todas estas preguntas en este capítulo. "
"Consideremos el contrato `NameRegistry` en Listar 14-1 que usaremos a lo "
"largo de este capítulo:"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:62 src/ch14-01-contract-storage.md:184
#: src/ch14-01-contract-storage.md:297 src/ch14-01-contract-storage.md:403
#: src/ch14-01-contract-storage.md:509 src/ch14-01-contract-storage.md:615
#: src/ch14-01-contract-storage.md:727 src/ch14-01-contract-storage.md:833
#: src/ch14-02-contract-functions.md:38
msgid "// Public functions inside an impl block\n"
msgstr "// Funciones públicas dentro de un bloque de impl\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:79 src/ch14-01-contract-storage.md:201
#: src/ch14-01-contract-storage.md:314 src/ch14-01-contract-storage.md:420
#: src/ch14-01-contract-storage.md:526 src/ch14-01-contract-storage.md:632
#: src/ch14-01-contract-storage.md:744 src/ch14-01-contract-storage.md:850
#: src/ch14-02-contract-functions.md:97
msgid "// Standalone public function\n"
msgstr "// Función pública autónoma\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:85 src/ch14-01-contract-storage.md:207
#: src/ch14-01-contract-storage.md:320 src/ch14-01-contract-storage.md:426
#: src/ch14-01-contract-storage.md:532 src/ch14-01-contract-storage.md:638
#: src/ch14-01-contract-storage.md:750 src/ch14-01-contract-storage.md:856
#: src/ch14-02-contract-functions.md:112
msgid "// Could be a group of functions about a same topic\n"
msgstr "// Podría ser un grupo de funciones sobre un mismo tema\n"

#: src/ch14-00-building-starknet-smart-contracts.md
#: src/ch14-01-contract-storage.md:102 src/ch14-01-contract-storage.md:224
#: src/ch14-01-contract-storage.md:337 src/ch14-01-contract-storage.md:443
#: src/ch14-01-contract-storage.md:549 src/ch14-01-contract-storage.md:655
#: src/ch14-01-contract-storage.md:767 src/ch14-01-contract-storage.md:873
#: src/ch14-02-contract-functions.md:129
msgid "// Free function\n"
msgstr "// Función gratuita\n"

#: src/ch14-00-building-starknet-smart-contracts.md
msgid ""
"<span class=\"caption\">Listing 14-1: Our reference contract for this "
"chapter</span>"
msgstr ""
"<span class=\"caption\">Lista 14-1: Nuestro contrato de referencia para este "
"capítulo</span>"

#: src/ch14-01-contract-storage.md:3
msgid ""
"The most common way for interacting with a contract’s storage is through "
"storage variables. As stated previously, storage variables allow you to "
"store data that will be stored in the contract's storage that is itself "
"stored on the blockchain. These data are persistent and can be accessed and "
"potentially modified anytime once the contract is deployed."
msgstr ""
"La forma más común de interactuar con el almacenamiento de un contrato es a "
"través de variables de almacenamiento. Como se ha indicado anteriormente, "
"las variables de almacenamiento le permiten almacenar datos que se "
"almacenarán en el almacenamiento del contrato que se almacena en sí mismo en "
"la cadena de bloques. Estos datos son persistentes y pueden ser accedidos y "
"potencialmente modificados en cualquier momento una vez que el contrato se "
"despliega."

#: src/ch14-01-contract-storage.md:5
msgid ""
"Storage variables in Starknet contracts are stored in a special struct "
"called `Storage`:"
msgstr ""
"Las variables de almacenamiento en los contratos Starknet se almacenan en "
"una estructura especial llamada `Almacenamiento`:"

#: src/ch14-01-contract-storage.md:111
msgid ""
"The `Storage` struct is a [struct](./ch05-00-using-structs-to-structure-"
"related-data.md) like any other, except that it **must** be annotated with "
"the `#[storage]` attribute. This annotation tells the compiler to generate "
"the required code to interact with the blockchain state, and allows you to "
"read and write data from and to storage. Moreover, this allows you to define "
"storage mappings using the dedicated `LegacyMap` type."
msgstr ""
"La estructura `Almacenamiento` es un [struct](./ch05-00-using-structs-to-"
"structure-related-data.md) como cualquier otro, excepto que **debe** estar "
"anotado con el atributo '[Almacenamiento]`. Esta anotación le dice al "
"compilador que genere el código requerido para interactuar con el estado "
"blockchain, y le permite leer y escribir datos desde y hasta el "
"almacenamiento. Además, esto le permite definir asignaciones de "
"almacenamiento utilizando el tipo dedicado `LegacyMap`."

#: src/ch14-01-contract-storage.md:113
msgid ""
"Variables declared in the `Storage` struct are not stored contiguously but "
"in different locations in the contract's storage. The storage address of a "
"particular variable is determined by the variable's name, and the eventual "
"keys of the variable if it is a mapping."
msgstr ""
"Las variables declaradas en la estructura `Almacenamiento` no se almacenan "
"de manera contigua, sino en diferentes ubicaciones del almacenamiento del "
"contrato. La dirección de almacenamiento de una variable determinada se "
"determina por el nombre de la variable y las claves de la variable si se "
"trata de un mapeo."

#: src/ch14-01-contract-storage.md:117
msgid "Addresses of Storage Variables"
msgstr "Direcciones de las variables de almacenamiento"

#: src/ch14-01-contract-storage.md:119
msgid "The address of a storage variable is computed as follows:"
msgstr ""
"La dirección de una variable de almacenamiento se calcula de la siguiente "
"manera:"

#: src/ch14-01-contract-storage.md:121
msgid ""
"If the variable is a single value, the address is the `sn_keccak` hash of "
"the ASCII encoding of the variable's name. `sn_keccak` is Starknet's version "
"of the Keccak256 hash function, whose output is truncated to 250 bits."
msgstr ""
"Si la variable es un valor único, la dirección es el hash `sn_keccak` de la "
"codificación ASCII del nombre de la variable. `sn_keccak` es la versión de "
"Starknet de la función de hash Keccak256, cuya salida está truncada a 250 "
"bits."

#: src/ch14-01-contract-storage.md:123
msgid ""
"If the variable is composed of multiple values (i.e., a tuple, a struct or "
"an enum), we also use the `sn_keccak` hash of the ASCII encoding of the "
"variable's name to determine the base address in storage. Then, depending on "
"the type, the storage layout will differ. See the [\"Storing Custom Types\"]"
"(./ch14-01-contract-storage.md#storing-custom-types) section."
msgstr ""
"Si la variable está compuesta por varios valores (es decir, una tupla, una "
"estructura o un enum), también utilizamos el hash `sn_keccak` de la "
"codificación ASCII del nombre de la variable para determinar la dirección de "
"la base en almacenamiento. Luego, dependiendo del tipo, el diseño de "
"almacenamiento diferirá. Vea la sección [\"Tipos personalizados de "
"almacenamiento\"](./ch14-01-contract-storage.md#storing-custom-types)."

#: src/ch14-01-contract-storage.md:125
msgid ""
"If the variable is a [mapping](./ch14-01-contract-storage.html#storage-"
"mappings) with a key `k`, the address of the value at key `k` is "
"`h(sn_keccak(variable_name),k)`, where ℎ is the Pedersen hash and the final "
"value is taken modulo \\\\( {2^{251}} - 256\\\\). If the key is composed of "
"more than one `felt252`, the address of the value will be `h(..."
"h(h(sn_keccak(variable_name),k_1),k_2),...,k_n)`, with `k_1,...,k_n` being "
"all `felt252` that constitute the key. In the case of mappings to complex "
"values (e.g., tuples or structs), then this complex value lies in a "
"continuous segment starting from the address calculated with the previous "
"formula. Note that 256 field elements is the current limitation on the "
"maximal size of a complex storage value."
msgstr ""
"Si la variable es un [mapping](./ch14-01-contract-storage.html#storage-"
"mappings) con una clave `k`, la dirección del valor en clave `k` es "
"`h(sn_keccak(variable_name),k)`, donde h es el hash de Pedersen y el valor "
"final se toma modulo"

#: src/ch14-01-contract-storage.md:127
msgid ""
"You can access the address of a storage variable by calling the `address` "
"function on the variable, which returns a `StorageBaseAddress` value."
msgstr ""
"Puede acceder a la dirección de una variable de almacenamiento llamando a la "
"función `dirección` de la variable, que devuelve un valor "
"`AlmacenamientoBaseAddress`."

#: src/ch14-01-contract-storage.md:236
msgid "Interacting with Storage Variables"
msgstr "Interacción con las variables de almacenamiento"

#: src/ch14-01-contract-storage.md:238
msgid ""
"Variables stored in the `Storage` struct can be accessed and modified using "
"the `read` and `write` functions, respectively. As previously mentioned, you "
"can get their address in storage using the `address` function. All these "
"functions are automatically generated by the compiler for each storage "
"variable."
msgstr ""
"Se puede acceder a las variables almacenadas en la estructura "
"`Almacenamiento` y modificarlas utilizando las funciones `read` y `write`, "
"respectivamente. Como se mencionó anteriormente, puede obtener su dirección "
"en el almacenamiento utilizando la función `dirección`. Todas estas "
"funciones son generadas automáticamente por el compilador para cada variable "
"de almacenamiento."

#: src/ch14-01-contract-storage.md:240
msgid ""
"To read the value of the `owner` storage variable, which is a single value, "
"we call the `read` function on the `owner` variable, passing in no "
"parameters."
msgstr ""
"Para leer el valor de la variable de almacenamiento `propietario`, que es un "
"valor único, llamamos a la función `leído` en la variable `propietario`, sin "
"pasar parámetros."

#: src/ch14-01-contract-storage.md:346
msgid ""
"To read the value of the storage variable `names`, which is a mapping from "
"`ContractAddress` to `felt252`, we call the `read` function on the `names` "
"variable, passing in the key `address` as a parameter. If the mapping had "
"more than one key, we would pass in the other keys as parameters as well."
msgstr ""
"Para leer el valor de la variable de almacenamiento `nombres`, que es una "
"asignación de `ContractAddress` a `felt252`, llamamos a la función `read` en "
"la variable `nombres`, pasando la clave `dirección` como parámetro. Si la "
"asignación tuviera más de una clave, también pasaríamos las otras claves "
"como parámetros."

#: src/ch14-01-contract-storage.md:452
msgid ""
"To write a new value to the storage slot of a storage variable, we call the "
"`write` function passing in the eventual keys and the value as arguments. As "
"with the `read` function, the number of arguments depends on the storage "
"variable type. Here, we only pass in the value to write to the `owner` "
"variable as it is a simple variable."
msgstr ""
"Para escribir un nuevo valor en la ranura de almacenamiento de una variable "
"de almacenamiento, llamamos a la función `write` pasando las claves "
"eventuales y el valor como argumentos. Al igual que con la función `read`, "
"el número de argumentos depende del tipo de variable de almacenamiento. "
"Aquí, sólo pasamos en el valor para escribir a la variable `owner` ya que es "
"una variable simple."

#: src/ch14-01-contract-storage.md:558
msgid ""
"In this second example, we need to pass `user` and `name` as arguments, "
"because `names` is a mapping, with `user` as key and `name` as value."
msgstr ""
"En este segundo ejemplo, tenemos que pasar `usuario` y `nombre` como "
"argumentos, porque `nombres` es un mapeo, con `usuario` como clave y "
"`nombre` como valor."

#: src/ch14-01-contract-storage.md:664
msgid "Storing Custom Types"
msgstr "Almacenar tipos personalizados"

#: src/ch14-01-contract-storage.md:666
msgid ""
"The `Store` trait, defined in the `starknet::storage_access` module, is used "
"to specify how a type should be stored in storage. In order for a type to be "
"stored in storage, it **must** implement the `Store` trait. Most types from "
"the core library, such as unsigned integers (`u8`, `u128`, `u256`...), "
"`felt252`, `bool`, `ByteArray`, `ContractAddress`, etc. implement the "
"`Store` trait and can thus be stored without further action."
msgstr ""
"El rasgo `Almacenamiento`, definido en el módulo `starknet::storage_access`, "
"se utiliza para especificar cómo debe almacenarse un tipo. Para que un tipo "
"se almacene, **debe** implementar el rasgo `Almacenamiento`. La mayoría de "
"los tipos de la biblioteca central, como los enteros no firmados (`u8`, "
"`u128, `u256`...), `felt252`, `bool`, `ByteArray`, `ContractAddress`, etc., "
"aplican el rasgo `Almacenamiento` y, por lo tanto, pueden almacenarse sin "
"más medidas."

#: src/ch14-01-contract-storage.md:668
msgid ""
"But what if you wanted to store a type that you defined yourself, such as an "
"enum or a struct? In that case, you have to explicitly tell the compiler how "
"to store this type."
msgstr ""
"Pero, ¿qué pasa si quieres almacenar un tipo que te definiste a ti mismo, "
"como un enum o una estructura? En ese caso, tienes que decirle "
"explícitamente al compilador cómo almacenar este tipo."

#: src/ch14-01-contract-storage.md:670
msgid ""
"In our example, we want to store a `Person` struct in storage, which is only "
"possible by implementing the `Store` trait for the `Person` type. This can "
"be simply achieved by adding a `#[derive(starknet::Store)]` attribute on top "
"of our struct definition. Note that all the members of the struct need to "
"implement the `Store` trait."
msgstr ""
"En nuestro ejemplo, queremos almacenar una estructura `Person` en el "
"almacenamiento, que sólo es posible mediante la aplicación del rasgo "
"`Almacenamiento` para el tipo `Persona`. Esto puede lograrse simplemente "
"añadiendo un atributo `[derive(starknet::Store)]` encima de nuestra "
"definición de estructura. Tenga en cuenta que todos los miembros de la "
"estructura necesitan implementar el rasgo `Almacenamiento`."

#: src/ch14-01-contract-storage.md:776
msgid ""
"Similarly, Enums can only be written to storage if they implement the "
"`Store` trait, which can be trivially derived as long as all associated "
"types implement the `Store` trait."
msgstr ""
"Del mismo modo, los enums sólo pueden escribirse para su almacenamiento si "
"aplican el rasgo de `Almacenamiento`, que puede derivarse trivialmente "
"mientras todos los tipos asociados apliquen el rasgo de `Almacenamiento '."

#: src/ch14-01-contract-storage.md:882
msgid ""
"You might have noticed that we also derived `Drop` and `Serde` on our custom "
"types. Both of them are required for properly serializing arguments passed "
"to entrypoints and deserializing their outputs."
msgstr ""
"Usted podría haber notado que también derivamos `Drop` y `Serde` en nuestros "
"tipos personalizados. Ambos son necesarios para serializar correctamente los "
"argumentos pasados a los puntos de entrada y deserializar sus productos."

#: src/ch14-01-contract-storage.md:884
msgid "Structs Storage Layout"
msgstr "Diseño de almacenamiento de estructuras"

#: src/ch14-01-contract-storage.md:886
msgid ""
"On Starknet, structs are stored in storage as a sequence of primitive types. "
"The elements of the struct are stored in the same order as they are defined "
"in the struct definition. The first element of the struct is stored at the "
"base address of the struct, which is computed as specified in [\"Addresses "
"of Storage Variables\"](./ch14-01-contract-storage.html#addresses-of-storage-"
"variables) section and can be obtained by calling `var.address()`, and "
"subsequent elements are stored at addresses contiguous to the first element. "
"For example, the storage layout for the `owner` variable of type `Person` "
"will result in the following layout:"
msgstr ""
"En Starknet, las estructuras se almacenan en el almacenamiento como una "
"secuencia de tipos primitivos. Los elementos de la estructura se almacenan "
"en el mismo orden que se definen en la definición de estructura. El primer "
"elemento de la estructura se almacena en la dirección de base de la "
"estructura, que se calcula como se especifica en [\"Dirección de variables "
"de almacenamiento\"](./ch14-01-contract-storage.html#direcciones-de-"
"almacenamiento-variables) sección y se puede obtener llamando a `var."
"address()`, y los elementos posteriores se almacenan en direcciones "
"contiguas al primer elemento. Por ejemplo, el diseño de almacenamiento de la "
"variable `propietario` del tipo `Person` dará como resultado el siguiente "
"diseño:"

#: src/ch14-01-contract-storage.md:890
msgid "Fields"
msgstr "Campos"

#: src/ch14-01-contract-storage.md:890 src/ch14-01-contract-storage.md:905
#: src/ch14-01-contract-storage.md:912
msgid "Address"
msgstr "Dirección"

#: src/ch14-01-contract-storage.md:892
msgid "name"
msgstr "nombre"

#: src/ch14-01-contract-storage.md:892
msgid "owner.address()"
msgstr "owner.address()"

#: src/ch14-01-contract-storage.md:893
msgid "address"
msgstr "dirección"

#: src/ch14-01-contract-storage.md:893
msgid "owner.address() +1"
msgstr "owner.address() +1"

#: src/ch14-01-contract-storage.md:895
msgid ""
"Note that tuples are similarly stored in contract's storage, with the first "
"element of the tuple being stored at the base address, and subsequent "
"elements stored contiguously."
msgstr ""
"Tenga en cuenta que las tuplas se almacenan de manera similar en el "
"almacenamiento del contrato, con el primer elemento de la tupla almacenado "
"en la dirección de la base, y los elementos posteriores almacenados de forma "
"contigua."

#: src/ch14-01-contract-storage.md:899
msgid "Enums Storage Layout"
msgstr "Disposición de almacenamiento de enums"

#: src/ch14-01-contract-storage.md:901
msgid ""
"When you store an enum variant, what you're essentially storing is the "
"variant's index and eventual associated values. This index starts at 0 for "
"the first variant of your enum and increments by 1 for each subsequent "
"variant. If your variant has an associated value, this value is stored "
"starting from the address immediately following the address of the index of "
"the variant. For example, suppose we have the `RegistrationType` enum with "
"the `finite` variant that carries an associated limit date, and the "
"`infinite` variant without associated data. The storage layout for the "
"`finite` variant would look like this:"
msgstr ""
"Cuando se almacena una variante de enum, lo que se almacena esencialmente es "
"el índice de la variante y los valores asociados. Este índice comienza en 0 "
"para la primera variante de su enum y aumenta por 1 para cada variante "
"posterior. Si su variante tiene un valor asociado, este valor se almacena a "
"partir de la dirección inmediatamente siguiente a la dirección del índice de "
"la variante. Por ejemplo, supongamos que tenemos el `RegistroType` enum con "
"la variante `finite` que lleva una fecha límite asociada, y la variante "
"`infinite` sin datos asociados. El diseño de almacenamiento de la variante "
"`finite` tendría este aspecto:"

#: src/ch14-01-contract-storage.md:905 src/ch14-01-contract-storage.md:912
msgid "Element"
msgstr "Elemento"

#: src/ch14-01-contract-storage.md:907
msgid "Variant index (0 for finite)"
msgstr "Índice de variantes (0 para finitos)"

#: src/ch14-01-contract-storage.md:907 src/ch14-01-contract-storage.md:914
msgid "registration_type.address()"
msgstr "registration_type.address()"

#: src/ch14-01-contract-storage.md:908
msgid "Associated limit date"
msgstr "Fecha límite asociada"

#: src/ch14-01-contract-storage.md:908
msgid "registration_type.address() + 1"
msgstr "registration_type.address() + 1"

#: src/ch14-01-contract-storage.md:910
msgid "while the storage layout for the `infinite` would be as follows:"
msgstr ""
"mientras que el esquema de almacenamiento del `infinito` sería el siguiente:"

#: src/ch14-01-contract-storage.md:914
msgid "Variant index (1 for infinite)"
msgstr "Índice de variantes (1 para infinito)"

#: src/ch14-01-contract-storage.md:916
msgid "Storage Mappings"
msgstr "Cartografías de almacenamiento"

#: src/ch14-01-contract-storage.md:918
msgid ""
"Storage mappings are similar to hash tables in that they allow mapping keys "
"to values. However, unlike a typical hash table, the key data itself is not "
"stored - only its hash is used to look up the associated value in the "
"contract's storage. Mappings do not have a concept of length or whether a "
"key/value pair is set. All values are by default set to 0. The only way to "
"remove an entry from a mapping is to set its value to the default zero value."
msgstr ""
"Las asignaciones de almacenamiento son similares a las tablas de hash en el "
"sentido de que permiten asignar claves a los valores. Sin embargo, a "
"diferencia de una tabla de hash típica, los datos clave en sí no se "
"almacenan - sólo se utiliza su hash para buscar el valor asociado en el "
"almacenamiento del contrato. Los mapas no tienen un concepto de longitud o "
"si se establece un par de claves/valor. Todos los valores se establecen por "
"defecto en 0. La única manera de eliminar una entrada de una asignación es "
"establecer su valor en el valor cero predeterminado."

#: src/ch14-01-contract-storage.md:921
msgid ""
"Mappings are only used to compute the location of data in the storage of a "
"contract given certain keys. They are thus **only allowed as storage "
"variables**. They cannot be used as parameters or return parameters of "
"contract functions, and cannot be used as types inside structs."
msgstr ""
"Los mapas sólo se utilizan para calcular la ubicación de los datos en el "
"almacenamiento de un contrato dado ciertas claves. Por lo tanto ** sólo se "
"permiten como variables de almacenamiento**. No se pueden utilizar como "
"parámetros o parámetros de retorno de las funciones del contrato, y no se "
"pueden utilizar como tipos dentro de estructuras."

#: src/ch14-01-contract-storage.md:933
msgid ""
"To declare a mapping, use the `LegacyMap` type enclosed in angle brackets "
"`<>`, specifying the key and value types."
msgstr ""
"Para declarar una asignación, utilice el tipo `LegacyMap` incluido entre "
"corchetes, especificando los tipos de clave y valor."

#: src/ch14-01-contract-storage.md:936
msgid ""
"You can also create more complex mappings with multiple keys. You can find "
"in Listing 14-2 the popular `allowances` storage variable of the ERC20 "
"Standard which maps an `owner` and an allowed `spender` to their `allowance` "
"amount using multiple keys passed inside a tuple:"
msgstr ""
"También puede crear asignaciones más complejas con varias claves. Puede "
"encontrar en la lista 14-2 la popular variable de almacenamiento "
"`permitences` de la Norma ERC20 que asigna un `propietario` y un `pasajero` "
"permitido a su cantidad `permitence` usando varias claves pasadas dentro de "
"una tupla:"

#: src/ch14-01-contract-storage.md:945
msgid ""
"<span class=\"caption\">Listing 14-2: Storing a mapping with multiple keys "
"inside a tuple</span>"
msgstr ""
"<span class=\"caption\">Lista 14-2: Almacenar una asignación con varias "
"teclas dentro de una tupla</span>"

#: src/ch14-01-contract-storage.md:947
msgid ""
"The address in storage of a variable stored in a mapping is computed "
"according to the description in the [\"Addresses of Storage Variables\"](./"
"ch14-01-contract-storage.html#addresses-of-storage-variables) section."
msgstr ""
"La dirección en almacenamiento de una variable almacenada en una asignación "
"se calcula según la descripción en la sección [\"Dirección de variables de "
"almacenamiento\"](./ch14-01-contract-storage.html#direcciones-de-"
"almacenamiento-variables)."

#: src/ch14-01-contract-storage.md:949
msgid ""
"If the key of a mapping is a struct, each element of the struct constitutes "
"a key. Moreover, the struct should implement the `Hash` trait, which can be "
"derived with the `#[derive(Hash)]` attribute. For example, if you have a "
"struct with two fields, the address will be `h(h(sn_keccak(variable_name),"
"k_1),k_2)` modulo \\\\( {2^{251}} - 256\\\\), where `k_1` and `k_2` are the "
"values of the two fields of the struct."
msgstr ""
"Si la clave de una asignación es una estructura, cada elemento de la "
"estructura constituye una clave. Además, la estructura debe implementar el "
"rasgo `Hash`, que se puede derivar con el atributo `[derive(Hash)]`. Por "
"ejemplo, si tiene una estructura con dos campos, la dirección será "
"`h(h(sn_keccak(variable_name),k_1),k_2)` modulo فارسى( {2­251• - 256/23370/), "
"donde `k_1` y `k_2` son los valores de los dos campos de la estructura."

#: src/ch14-01-contract-storage.md:951
msgid ""
"Similarly, in the case of a nested mapping using a tuple as key, such as "
"`LegacyMap::<(ContractAddress, ContractAddress), u8>`, the address will be "
"computed in the same way, with each element of the tuple being a key: "
"`h(h(sn_keccak(variable_name),k_1),k_2)`."
msgstr ""
"Del mismo modo, en el caso de un mapeo anidado utilizando una tupla como "
"clave, como `LegacyMap::<(ContractAddress, ContractAddress), u8-, la "
"dirección se calculará de la misma manera, siendo cada elemento de la tupla "
"una clave: `h(h(sn_keccak(variable_name),k_1),k_2)`."

#: src/ch14-02-contract-functions.md:3
msgid ""
"In this section, we are going to be looking at the different types of "
"functions you could encounter in Starknet smart contracts."
msgstr ""
"En esta sección, vamos a ver los diferentes tipos de funciones que se pueden "
"encontrar en los contratos inteligentes Starknet."

#: src/ch14-02-contract-functions.md:5
msgid ""
"Functions can access the contract's state easily via `self: ContractState`, "
"which abstracts away the complexity of underlying system calls "
"(`storage_read_syscall` and `storage_write_syscall`). The compiler provides "
"two modifiers: `ref` and `@` to decorate `self`, which intends to "
"distinguish view and external functions."
msgstr ""
"Las funciones pueden acceder fácilmente al estado del contrato a través de "
"`self: ContractState`, que abstrae la complejidad de las llamadas "
"subyacentes del sistema (`storage_read_syscall` y `storage_write_syscall`). "
"El compilador proporciona dos modificadores: `ref` y  para decorar `self`, "
"que tiene la intención de distinguir la vista y las funciones externas."

#: src/ch14-02-contract-functions.md:7
msgid "1. Constructors"
msgstr "1. Constructores"

#: src/ch14-02-contract-functions.md:9
msgid ""
"Constructors are a special type of function that only runs once when "
"deploying a contract, and can be used to initialize the state of a contract."
msgstr ""
"Los constructores son un tipo especial de función que sólo se ejecuta una "
"vez al desplegar un contrato, y se puede utilizar para inicializar el estado "
"de un contrato."

#: src/ch14-02-contract-functions.md:20
msgid "Some important rules to note:"
msgstr "Algunas reglas importantes a tener en cuenta:"

#: src/ch14-02-contract-functions.md:22
msgid "A contract can't have more than one constructor."
msgstr "Un contrato no puede tener más de un constructor."

#: src/ch14-02-contract-functions.md:23
msgid ""
"The constructor function must be named `constructor`, and must be annotated "
"with the `#[constructor]` attribute."
msgstr ""
"La función constructora debe llamarse `constructor`, y debe estar anotada "
"con el atributo '[constructor]`."

#: src/ch14-02-contract-functions.md:25
msgid ""
"The `constructor` function might take arguments, which are passed when "
"deploying the contract. In our example, we pass some value corresponding to "
"a `Person` type as argument in order to store the `owner` information "
"(address and name) in the contract."
msgstr ""
"La función `constructor` podría tomar argumentos, que se pasan al desplegar "
"el contrato. En nuestro ejemplo, pasamos algún valor correspondiente a un "
"tipo `Person'como argumento para almacenar la información de "
"`propietario'(dirección y nombre) en el contrato."

#: src/ch14-02-contract-functions.md:27
msgid ""
"Note that the `constructor` function **must** take `self` as a first "
"argument, corresponding to the state of the contract, generally passed by "
"reference with the `ref` keyword to be able to modify the contract's state. "
"We will explain `self` and its type shortly."
msgstr ""
"Obsérvese que la función `constructor` ** debe tomar `auto' como primer "
"argumento, correspondiente al estado del contrato, generalmente aprobado por "
"referencia con la palabra clave `ref` para poder modificar el estado del "
"contrato. Explicaremos `auto' y su tipo en breve."

#: src/ch14-02-contract-functions.md:29
msgid "2. Public Functions"
msgstr "2. Funciones públicas"

#: src/ch14-02-contract-functions.md:31
msgid ""
"As stated previously, public functions are accessible from outside of the "
"contract. They are usually defined inside an implementation block annotated "
"with the `#[abi(embed_v0)]` attribute, but might also be defined "
"independently under the `#[external(v0)]` attribute."
msgstr ""
"Como se ha indicado anteriormente, las funciones públicas son accesibles "
"desde fuera del contrato. Generalmente se definen dentro de un bloque de "
"implementación anotado con el atributo '[abi(embed_v0)]`, pero también "
"pueden definirse de forma independiente bajo el atributo '[external(v0)]`."

#: src/ch14-02-contract-functions.md:33
msgid ""
"The `#[abi(embed_v0)]` attribute means that all functions embedded inside it "
"are implementations of the Starknet interface of the contract, and therefore "
"potential entry points."
msgstr ""
"El atributo \"[abi(embed_v0)]\" significa que todas las funciones "
"incrustadas en su interior son implementaciones de la interfaz Starknet del "
"contrato, y por lo tanto posibles puntos de entrada."

#: src/ch14-02-contract-functions.md:35
msgid ""
"Annotating an impl block with the `#[abi(embed_v0)]` attribute only affects "
"the visibility (i.e., public vs private/internal) of the functions it "
"contains, but it doesn't inform us on the ability of these functions to "
"modify the state of the contract."
msgstr ""
"Anotar un bloque de impl con el atributo \"[abi(embed_v0)]\" sólo afecta a "
"la visibilidad (es decir, pública vs privada/interna) de las funciones que "
"contiene, pero no nos informa sobre la capacidad de estas funciones para "
"modificar el estado del contrato."

#: src/ch14-02-contract-functions.md:56
msgid ""
"Similarly to the `constructor` function, all public functions, either "
"standalone functions annotated with the `#[external(v0)]` or functions "
"within an impl block annotated with the `#[abi(embed_v0)]` attribute, "
"**must** take `self` as a first argument. This is not the case for private "
"functions."
msgstr ""
"Similarmente a la función `constructor`, todas las funciones públicas, ya "
"sea funciones independientes anotadas con el '[external(v0)]` o funciones "
"dentro de un bloque de impl anotado con el '[abi(embed_v0)]` atributo, "
"**debe** tomar `self` como primer argumento. Este no es el caso de las "
"funciones privadas."

#: src/ch14-02-contract-functions.md:58
msgid "External Functions"
msgstr "Funciones externas"

#: src/ch14-02-contract-functions.md:60
msgid ""
"External functions are _public_ functions where the `self: ContractState` "
"argument is passed by reference with the `ref` keyword, which exposes both "
"the `read` and `write` access to storage variables. This allows modifying "
"the state of the contract via `self` directly."
msgstr ""
"Las funciones externas son funciones _públicas en las que el argumento "
"`self: ContractState` se pasa por referencia a la palabra clave `ref`, que "
"expone tanto el acceso a las variables de almacenamiento a través de `leed` "
"como `write`, lo que permite modificar directamente el estado del contrato "
"por medio de `self`."

#: src/ch14-02-contract-functions.md:69
msgid "View Functions"
msgstr "Ver funciones"

#: src/ch14-02-contract-functions.md:71
msgid ""
"View functions are _public_ functions where the `self: ContractState` "
"argument is passed as snapshot, which only allows the `read` access to "
"storage variables, and restricts writes to storage made via `self` by "
"causing compilation errors. The compiler will mark their `state_mutability` "
"to `view`, preventing any state modification through `self` directly."
msgstr ""
"Las funciones View son funciones _public_ en las que el argumento `self: "
"ContractState` se pasa como instantánea, lo que sólo permite el acceso "
"`leer` a las variables de almacenamiento, y restringe la escritura al "
"almacenamiento realizado a través de `self` causando errores de compilación. "
"El compilador marcará su `state_mutabilidad` a `view`, evitando cualquier "
"modificación de estado a través de `self` directamente."

#: src/ch14-02-contract-functions.md:80
msgid "State Mutability of Public Functions"
msgstr "Mutabilidad estatal de las funciones públicas"

#: src/ch14-02-contract-functions.md:82
msgid ""
"However, as you may have noticed, passing `self` as a snapshot only "
"restricts the storage write access via `self` at compile time. It does not "
"prevent state modification via direct system calls, nor calling another "
"contract that would modify the state."
msgstr ""
"Sin embargo, como usted puede haber notado, pasar `self` como una "
"instantánea sólo restringe el acceso de escritura de almacenamiento a través "
"de `self` en el momento de la compilación. No impide la modificación del "
"estado a través de llamadas directas del sistema, ni llama a otro contrato "
"que modificaría el estado."

#: src/ch14-02-contract-functions.md:84
msgid ""
"The read-only property of view functions is not enforced on Starknet, and "
"sending a transaction targeting a view function _could_  change the state."
msgstr ""
"La propiedad de solo lectura de las funciones de vista no se aplica en "
"Starknet, y el envío de una transacción dirigida a una función de vista "
"_could_ cambiar el estado."

#: src/ch14-02-contract-functions.md:86
msgid ""
"In conclusion, even though external and view functions are distinguished by "
"the Cairo compiler, **all public functions** can be called through an invoke "
"transaction and have the potential to modify states on Starknet. Also, all "
"public functions can be queried via `starknet_call` on Starknet, which will "
"not create a transaction and hence will not change the state."
msgstr ""
"En conclusión, aunque las funciones externas y de vista se distinguen por el "
"compilador de El Cairo, **todas las funciones públicas** pueden ser llamadas "
"a través de una transacción invocada y tienen el potencial de modificar "
"estados en Starknet. Además, todas las funciones públicas pueden ser "
"consultadas a través de `starknet_call` en Starknet, que no creará una "
"transacción y por lo tanto no cambiará el estado."

#: src/ch14-02-contract-functions.md:88
msgid ""
"**Warning:** This is different from the EVM where a `staticcall` opcode is "
"provided, which prevents storage modifications in the current context and "
"subcontexts. Hence developers **should not** have the assumption that "
"calling a view function on another contract cannot modify the state."
msgstr ""
"**Advertencia:** Esto es diferente de la EVM donde se proporciona un opcode "
"`staticcall`, que evita modificaciones de almacenamiento en el contexto "
"actual y subcontextos. Por lo tanto, los desarrolladores **no deben** tener "
"la suposición de que llamar a una función de vista en otro contrato no puede "
"modificar el estado."

#: src/ch14-02-contract-functions.md:90
msgid "Standalone Public Functions"
msgstr "Funciones públicas independientes"

#: src/ch14-02-contract-functions.md:92
msgid ""
"It is also possible to define public functions outside of an implementation "
"of a trait, using the `#[external(v0)]` attribute. Doing this will "
"automatically generate the corresponding ABI, allowing these standalone "
"public functions to be callable by anyone from the outside. These functions "
"can also be called from within the contract just like any function in "
"Starknet contracts. The first parameter must be `self`."
msgstr ""
"También es posible definir las funciones públicas fuera de la implementación "
"de un rasgo, usando el atributo \"[external(v0)]`. Hacer esto generará "
"automáticamente el ABI correspondiente, permitiendo que estas funciones "
"públicas independientes puedan ser llamadas por cualquier persona desde el "
"exterior. Estas funciones también pueden ser llamadas desde dentro del "
"contrato como cualquier función en los contratos Starknet. El primer "
"parámetro debe ser \"self\"."

#: src/ch14-02-contract-functions.md:94
msgid ""
"Here, we define a standalone `get_contract_name` function outside of an impl "
"block:"
msgstr ""
"Aquí, definimos una función independiente `get_contract_name` fuera de un "
"bloque impl:"

#: src/ch14-02-contract-functions.md:104
msgid "3. Private Functions"
msgstr "3. Funciones privadas"

#: src/ch14-02-contract-functions.md:106
msgid ""
"Functions that are not defined with the `#[external(v0)]` attribute or "
"inside a block annotated with the `#[abi(embed_v0)]` attribute are private "
"functions (also called internal functions). They can only be called from "
"within the contract."
msgstr ""
"Las funciones que no se definen con el atributo «[external(v0)]» o dentro de "
"un bloque anotado con el atributo «[abi(embed_v0)]» son funciones privadas "
"(también llamadas funciones internas)."

#: src/ch14-02-contract-functions.md:108
msgid ""
"They can be grouped in a dedicated impl block (e.g., in components, to "
"easily import internal functions all at once in the embedding contracts) or "
"just be added as free functions inside the contract module. Note that these "
"2 methods are equivalent. Just choose the one that makes your code more "
"readable and easy to use."
msgstr ""
"Pueden agruparse en un bloque de impl dedicado (por ejemplo, en componentes, "
"para importar fácilmente funciones internas de una sola vez en los contratos "
"de incrustación) o simplemente añadirse como funciones gratuitas dentro del "
"módulo de contrato. Tenga en cuenta que estos 2 métodos son equivalentes. "
"Simplemente elija el que hace que su código sea más legible y fácil de usar."

#: src/ch14-02-contract-functions.md:135
msgid ""
"Wait, what is this `#[generate_trait]` attribute? Where is the trait "
"definition for this implementation? Well, the `#[generate_trait]` attribute "
"is a special attribute that tells the compiler to generate a trait "
"definition for the implementation block. This allows you to get rid of the "
"boilerplate code of defining a trait with generic parameters and "
"implementing it for the implementation block. With this attribute, we can "
"simply define the implementation block directly, without any generic "
"parameter, and use `self: ContractState` in our functions."
msgstr ""
"Espera, ¿cuál es este atributo?[generate_trait]`? ¿Dónde está la definición "
"de rasgo para esta implementación? Bueno, el atributo?[generate_trait]` es "
"un atributo especial que le dice al compilador que genere una definición de "
"rasgo para el bloque de implementación. Esto le permite deshacerse del "
"código de la placa de caldera de definir un rasgo con parámetros genéricos e "
"implementarlo para el bloque de implementación. Con este atributo, podemos "
"simplemente definir el bloque de implementación directamente, sin ningún "
"parámetro genérico, y utilizar `self: ContractState` en nuestras funciones."

#: src/ch14-02-contract-functions.md:137
msgid ""
"The `#[generate_trait]` attribute is mostly used to define private impl "
"blocks. It might also be used in addition to `#[abi(per_item)]` to define "
"the various entrypoints of a contract (see [next section](./ch14-02-contract-"
"functions.md#4-abiper_item-attribute))."
msgstr ""
"El atributo \"[generate_trait]` se utiliza principalmente para definir "
"bloques de impl privados. También puede utilizarse además de "
"\"[abi(per_item)]` para definir los diversos puntos de entrada de un "
"contrato (véase [la siguiente sección](./ch14-02-contract-functions.md#4-"
"abiper_item-atribute))."

#: src/ch14-02-contract-functions.md:139
msgid ""
"Note: using `#[generate_trait]` in addition to the `#[abi(embed_v0)]` "
"attribute for a public impl block is not recommended, as it will result in a "
"failure to generate the corresponding ABI. Public functions should only be "
"defined in an impl block annotated with `#[generate_trait]` if this block is "
"also annotated with the `#[abi(per_item)]` attribute."
msgstr ""
"Nota: no se recomienda el uso de un bloque de impl público, ya que no se "
"generará el ABI correspondiente. Las funciones públicas sólo deben definirse "
"en un bloque de impl anotado con •[generate_trait]` si este bloque también "
"está anotado con el atributo •[abi(per_item)]`."

#: src/ch14-02-contract-functions.md:144
msgid "`[abi(per_item)]` Attribute"
msgstr "Atributo `[abi(per_item)]`"

#: src/ch14-02-contract-functions.md:146
msgid ""
"You can also define the entrypoint type of functions individually inside an "
"impl block using the`#[abi(per_item)]` attribute on top of your impl. It is "
"often used with the `#[generate_trait]` attribute, as it allows you to "
"define entrypoints without an explicit interface. In this case, the "
"functions will not be grouped under an impl in the ABI. Note that when using "
"`#[abi(per_item)]` attribute, public functions need to be annotated with the "
"`#[external(v0)]` attribute - otherwise, they will not be exposed and will "
"be considered as private functions."
msgstr ""
"También puede definir el tipo de punto de entrada de funciones "
"individualmente dentro de un bloque de impl usando el atributo "
"•[abi(per_item)]` en la parte superior de su impl. A menudo se utiliza con "
"el atributo •[generate_trait]`, ya que le permite definir puntos de entrada "
"sin una interfaz explícita. En este caso, las funciones no se agruparán bajo "
"un impl en el ABI. Tenga en cuenta que cuando se utiliza •[abi(per_item)]` "
"atributo, las funciones públicas deben estar anotadas con el atributo "
"•[external(v0)]` - de lo contrario, no se expondrán y se considerarán como "
"funciones privadas."

#: src/ch14-02-contract-functions.md:148
msgid "Here is a short example:"
msgstr "He aquí un breve ejemplo:"

#: src/ch14-02-contract-functions.md:160
msgid "// this is a constructor function\n"
msgstr "// esto es una función constructora\n"

#: src/ch14-02-contract-functions.md:164
msgid "// this is a public function\n"
msgstr "// esto es una función pública\n"

#: src/ch14-02-contract-functions.md:168
msgid "// this is a l1_handler function\n"
msgstr "// esto es una función l1_handler\n"

#: src/ch14-02-contract-functions.md:171
msgid "// this is an internal function\n"
msgstr "// esta es una función interna\n"

#: src/ch14-02-contract-functions.md:177
msgid ""
"In the case of `#[abi(per_item)]` attribute usage without "
"`#[generate_trait]`, it will only be possible to include `constructor`, `l1-"
"handler` and `internal` functions in the trait implementation. Indeed, "
"`#[abi(per_item)]` only works with a trait that is not defined as a Starknet "
"interface. Hence, it will be mandatory to create another trait defined as "
"interface to implement public functions."
msgstr ""
"En el caso de las funciones de «abi(per_item)]`atribuir el uso sin la "
"aplicación del rasgo», sólo será posible incluir las funciones de "
"`constructor`, `l1-handler` e `interna` en la aplicación del rasgo. De "
"hecho, `[abi(per_item)]` sólo funciona con un rasgo que no se define como "
"una interfaz Starknet. Por lo tanto, será obligatorio crear otro rasgo "
"definido como interfaz para la ejecución de las funciones públicas."

#: src/ch14-03-contract-events.md:3
msgid ""
"Events are custom data structures that are emitted by smart contracts during "
"execution. They provide a way for smart contracts to communicate with the "
"external world by logging information about specific occurrences in a "
"contract."
msgstr ""
"Los eventos son estructuras de datos personalizadas que se emiten mediante "
"contratos inteligentes durante la ejecución. Proporcionan una forma para que "
"los contratos inteligentes se comuniquen con el mundo externo registrando "
"información sobre sucesos específicos en un contrato."

#: src/ch14-03-contract-events.md:5
msgid ""
"Events play a crucial role in the integration of smart contracts in real-"
"world applications. Take, for instance, the Non-Fungible Tokens (NFTs) "
"minted on Starknet. An event is emitted each time a token is minted. This "
"event is indexed and stored in some database, allowing applications to "
"display almost instantaneously useful information to users. If the contract "
"doesn't emit an event when minting a new token, it would be less practical, "
"with the need of querying the state of the blockchain to get the data needed."
msgstr ""
"Los eventos juegan un papel crucial en la integración de contratos "
"inteligentes en aplicaciones del mundo real. Tomemos, por ejemplo, los "
"Tokens no fungibles (NFTs) acuñados en Starknet. Se emite un evento cada vez "
"que se acuña un token. Este evento se indexa y almacena en alguna base de "
"datos, permitiendo que las aplicaciones muestren información casi "
"instantáneamente útil a los usuarios. Si el contrato no emite un evento al "
"acuñar un nuevo token, sería menos práctico, con la necesidad de consultar "
"el estado de la cadena de bloques para obtener los datos necesarios."

#: src/ch14-03-contract-events.md:7
msgid "Defining Events"
msgstr "Definir los acontecimientos"

#: src/ch14-03-contract-events.md:9
msgid ""
"All the different events in a contract are defined under the `Event` enum, "
"which must implement the `starknet::Event` trait. This trait is defined in "
"the core library as follows:"
msgstr ""
"Todos los diferentes eventos de un contrato se definen bajo el enum "
"`Evento`, que debe implementar el rasgo `starknet::Evento`. Este rasgo se "
"define en la biblioteca principal de la siguiente manera:"

#: src/ch14-03-contract-events.md:18
msgid ""
"The `#[derive(starknet::Event)]` attribute causes the compiler to generate "
"an implementation for the above trait, instantiated with the `Event` type, "
"which in our example is the following enum:"
msgstr ""
"El atributo \"derive(starknet::Event)]` hace que el compilador genere una "
"implementación para el rasgo anterior, instaurado con el tipo \"Event\", que "
"en nuestro ejemplo es el siguiente enum:"

#: src/ch14-03-contract-events.md:29
msgid ""
"Each variant of the `Event` enum has to be a struct or an enum, and each "
"variant needs to implement the `starknet::Event` trait itself. Moreover, the "
"members of these variants must implement the `Serde` trait (_c.f._ [Appendix "
"C: Serializing with Serde](./appendix-03-derivable-traits.html#serializing-"
"with-serde)), as keys/data are added to the event using a serialization "
"process."
msgstr ""
"Cada variante del enum `Evento` tiene que ser una estructura o un enum, y "
"cada variante necesita implementar el rasgo `starknet::Evento` en sí mismo. "
"Además, los miembros de estas variantes deben implementar el rasgo `Serde` "
"(_c.f._ [Apéndice C: Serializando con Serde](./apéndice-03-derivable-traits."
"html#serializing-with-serde)), ya que las claves/datos se añaden al evento "
"utilizando un proceso de serialización."

#: src/ch14-03-contract-events.md:31
msgid ""
"The auto-implementation of the `starknet::Event` trait will implement the "
"`append_keys_and_data` function for each variant of our `Event` enum. The "
"generated implementation will append a single key based on the variant name "
"(`StoredName`), and then recursively call `append_keys_and_data` in the impl "
"of the `Event` trait for the variant’s type."
msgstr ""
"La aplicación automática de la `starknet::Event` rasgo implementará la "
"función `append_keys_and_data` para cada variante de nuestro `Event` enum. "
"La aplicación generada agregará una sola clave basada en el nombre de la "
"variante (`StoredName`), y luego recursivamente llamará a "
"`append_keys_and_data` en el impl del rasgo `Event` para el tipo de la "
"variante."

#: src/ch14-03-contract-events.md:33
msgid ""
"In our example, the `Event` enum contains only one variant, which is a "
"struct named `StoredName`. We chose to name our variant with the same name "
"as the struct name, but this is not enforced."
msgstr ""
"En nuestro ejemplo, el enum `Evento` contiene sólo una variante, que es una "
"estructura llamada `Nombre guardado`. Elegimos nombrar nuestra variante con "
"el mismo nombre que el nombre de la estructura, pero esto no se hace cumplir."

#: src/ch14-03-contract-events.md:44
msgid ""
"Whenever an enum that derives the `starknet::Event` trait has an enum "
"variant, this enum is nested by default. Therefore, the list of keys "
"corresponding to the variant’s name will include the `sn_keccak` hash of the "
"variant's name itself. This can be superfluous, typically when using "
"embedded components in contracts. Indeed, in such cases, we might want the "
"events defined in the components to be emitted without any additional data, "
"and it could be useful to annotate the enum variant with the `#[flat]` "
"attribute. By doing so, we allow to opt out of the nested behavior and "
"ignore the variant name in the serialization process. On the other hand, "
"nested events have the benefit of distinguishing between the main contract "
"event and different components events, which might be helpful."
msgstr ""
"Cada vez que un enum que deriva el `starknet::Event` rasgo tiene una "
"variante de enum, este enum es anidado por defecto. Por lo tanto, la lista "
"de claves correspondientes al nombre de la variante incluirá el `sn_keccak` "
"hash del propio nombre de la variante. Esto puede ser superfluo, típicamente "
"cuando se utilizan componentes incrustados en contratos. De hecho, en tales "
"casos, podríamos querer que los eventos definidos en los componentes se "
"emitan sin ningún dato adicional, y podría ser útil anotar la variante de "
"enum con el atributo `[flat]`. Al hacerlo, permitimos que se deje de lado el "
"comportamiento anidado e ignorar el nombre de la variante en el proceso de "
"serialización. Por otro lado, los eventos anidados tienen el beneficio de "
"distinguir entre el evento principal del contrato y los diferentes eventos "
"de componentes, lo que podría ser útil."

#: src/ch14-03-contract-events.md:46
msgid ""
"In our contract, we defined an event named `StoredName` that emits the "
"contract address of the caller and the name stored within the contract, "
"where the `user` field is serialized as a key and the `name` field is "
"serialized as data."
msgstr ""
"En nuestro contrato, definimos un evento llamado `Nombre guardado` que emite "
"la dirección del contrato del que llama y el nombre almacenado en el "
"contrato, donde el campo `usuario` se serializa como una clave y el campo "
"`nombre` se serializa como datos."

#: src/ch14-03-contract-events.md:48
msgid ""
"Indexing events fields allows for more efficient queries and filtering of "
"events. To index a field as a key of an event, simply annotate it with the "
"`#[key]` attribute as demonstrated in the example for the `user` key. By "
"doing so, any indexed field will allow queries of events that contain a "
"given value for that field with \\\\( O(log(n)) \\\\) time complexity, while "
"non indexed fields require any query to iterate over all events, providing \\"
"\\( O(n) \\\\) time complexity."
msgstr ""
"Para indexar un campo como clave de un evento, basta con anotarlo con el "
"atributo \"[key]` como se demuestra en el ejemplo para la clave `user`. Al "
"hacerlo, cualquier campo indexado permitirá consultas de eventos que "
"contengan un valor dado para ese campo con la complejidad del tiempo de "
"\"( O(log(n)) فارسى\", mientras que los campos no indexados requieren "
"cualquier consulta para iterar sobre todos los eventos, proporcionando la "
"complejidad del tiempo de \"( O(n) ♥)."

#: src/ch14-03-contract-events.md:50
msgid ""
"When emitting the event with `self.emit(StoredName { user: user, name: "
"name })`, a key corresponding to the name ` StoredName`, specifically "
"`sn_keccak(StoredName)`, is appended to the keys list. `user`is serialized "
"as key, thanks to the `#[key]` attribute, while address is serialized as "
"data. After everything is processed, we end up with the following keys and "
"data: `keys = [sn_keccak(\"StoredName\"),user]` and `data = [name]`."
msgstr ""
"Al emitir el evento con `self.emit(StoredName { user: user, name: name })`, "
"una clave correspondiente al nombre ` StoredName`, específicamente "
"`sn_keccak(StoredName)`, se adjunta a la lista de claves. `user`se serializa "
"como clave, gracias al atributo `[key]`, mientras que la dirección se "
"serializa como datos. Después de todo se procesa, terminamos con las "
"siguientes claves y datos: `keys = [sn_keccak(\"StoredName\"), usuario]` y "
"`data = [name]`."

#: src/ch14-03-contract-events.md:54
msgid "Emitting Events"
msgstr "Emitiendo eventos"

#: src/ch14-03-contract-events.md:56
msgid ""
"After defining events, we can emit them using `self.emit`, with the "
"following syntax:"
msgstr ""
"Después de definir los eventos, podemos emitirlos usando `self.emit`, con la "
"siguiente sintaxis:"

#: src/ch14-03-contract-events.md:62
msgid ""
"The `emit` function is called on `self` and takes a reference to `self`, i."
"e., state modification capabilities are required. Therefore, it is not "
"possible to emit events in view functions."
msgstr ""
"La función `emit` se denomina `auto' y se refiere a `auto', es decir, se "
"requieren capacidades de modificación del Estado, por lo que no es posible "
"emitir eventos a la vista de las funciones."

#: src/ch15-00-starknet-cross-contract-interactions.md
msgid ""
"Interactions between smart contracts are an important feature when creating "
"complex decentralized applications, as it allows for composability and "
"separation of concerns. This chapter sheds light on how to make contracts "
"interact with each other."
msgstr ""
"Las interacciones entre contratos inteligentes son una característica "
"importante a la hora de crear aplicaciones descentralizadas complejas, ya "
"que permiten la composibilidad y la separación de preocupaciones.Este "
"capítulo arroja luz sobre cómo hacer que los contratos interactúen entre sí."

#: src/ch15-00-starknet-cross-contract-interactions.md
msgid ""
"Specifically, you'll learn about ABIs, contract interfaces, the contract and "
"library dispatchers and their low-level system call equivalents!"
msgstr ""
"¡Específicamente, aprenderás sobre ABIs, interfaces de contrato, los "
"despachadores de contratos y bibliotecas y sus equivalentes de llamadas de "
"sistema de bajo nivel!"

#: src/ch15-01-abis-and-contract-interfaces.md:3
msgid ""
"Cross-contract interactions between smart contracts on a blockchain is a "
"common practice which enables us to build flexible contracts that can speak "
"with each other."
msgstr ""
"La interacción entre contratos entre contratos inteligentes en una cadena de "
"bloques es una práctica común que nos permite construir contratos flexibles "
"que puedan hablar entre sí."

#: src/ch15-01-abis-and-contract-interfaces.md:5
msgid "Achieving this on Starknet requires something we call an interface."
msgstr "Lograr esto en Starknet requiere algo que llamamos una interfaz."

#: src/ch15-01-abis-and-contract-interfaces.md:7
msgid "ABI - Application Binary Interface"
msgstr "ABI - Interfaz binaria de aplicaciones"

#: src/ch15-01-abis-and-contract-interfaces.md:9
msgid ""
"On Starknet, the ABI of a contract is a JSON representation of the "
"contract's functions and structures, giving anyone (or any other contract) "
"the ability to form encoded calls to it. It is a blueprint that instructs "
"how functions should be called, what input parameters they expect, and in "
"what format."
msgstr ""
"En Starknet, la ABI de un contrato es una representación JSON de las "
"funciones y estructuras del contrato, dando a cualquier persona (o cualquier "
"otro contrato) la capacidad de formar llamadas codificadas a él. Es un plan "
"que instruye cómo las funciones deben ser llamadas, qué parámetros de "
"entrada esperan, y en qué formato."

#: src/ch15-01-abis-and-contract-interfaces.md:11
msgid ""
"While we write our smart contract logics in high-level Cairo, they are "
"stored on the VM as executable bytecodes which are in binary formats. Since "
"this bytecode is not human readable, it requires interpretation to be "
"understood. This is where ABIs come into play, defining specific methods "
"which can be called to a smart contract for execution. Without an ABI, it "
"becomes practically impossible for external actors to understand how to "
"interact with a contract."
msgstr ""
"Mientras escribimos nuestras lógicas de contrato inteligentes en El Cairo de "
"alto nivel, se almacenan en la VM como bytecodes ejecutables que están en "
"formatos binarios. Dado que este bytecode no es legible por el ser humano, "
"requiere interpretación para ser entendido. Aquí es donde entran en juego "
"los ABIs, definiendo métodos específicos que pueden ser llamados a un "
"contrato inteligente para la ejecución. Sin un ABI, es prácticamente "
"imposible para los actores externos entender cómo interactuar con un "
"contrato."

#: src/ch15-01-abis-and-contract-interfaces.md:13
msgid ""
"ABIs are typically used in dApps frontends, allowing it to format data "
"correctly, making it understandable by the smart contract and vice versa. "
"When you interact with a smart contract through a block explorer like "
"[Voyager](https://voyager.online/) or [Starkscan](https://starkscan.co/), "
"they use the contract's ABI to format the data you send to the contract and "
"the data it returns."
msgstr ""
"Los ABIs se utilizan normalmente en dApps frontends, permitiéndole formatear "
"los datos correctamente, haciéndolos comprensibles por el contrato "
"inteligente y viceversa. Cuando interactúas con un contrato inteligente a "
"través de un explorador de bloques como [Voyager](https://voyager.online/) o "
"[Starkscan](https://starkscan.co/), utilizan el ABI del contrato para "
"formatear los datos que envías al contrato y los datos que devuelve."

#: src/ch15-01-abis-and-contract-interfaces.md:15
#: src/ch16-05-02-randomness.md:25
msgid "Interface"
msgstr "Interfaz"

#: src/ch15-01-abis-and-contract-interfaces.md:17
msgid ""
"The interface of a contract is a list of the functions it exposes publicly. "
"It specifies the function signatures (name, parameters, visibility and "
"return value) contained in a smart contract without including the function "
"body."
msgstr ""
"La interfaz de un contrato es una lista de las funciones que expone "
"públicamente. Especifica las firmas de funciones (nombre, parámetros, "
"visibilidad y valor de retorno) contenidas en un contrato inteligente sin "
"incluir el cuerpo de funciones."

#: src/ch15-01-abis-and-contract-interfaces.md:20
msgid ""
"Contract interfaces in Cairo are traits annotated with the `#[starknet::"
"interface]` attribute. If you are new to traits, check out the dedicated "
"chapter on [traits](./ch08-02-traits-in-cairo.md)."
msgstr ""
"Las interfaces de contrato en El Cairo son rasgos anotados con el atributo "
"\"[starknet::interface]`. Si usted es nuevo en los rasgos, consulte el "
"capítulo dedicado en [traits](./ch08-02-traits-in-cairo.md)."

#: src/ch15-01-abis-and-contract-interfaces.md:22
msgid ""
"One important specification is that this trait must be generic over the "
"`TContractState` type. This is required for functions to access the "
"contract's storage, so that they can read and write to it."
msgstr ""
"Una especificación importante es que este rasgo debe ser genérico sobre el "
"tipo `TcontractState`, que es necesario para que las funciones tengan acceso "
"al almacenamiento del contrato, de modo que puedan leerlo y escribirlo."

#: src/ch15-01-abis-and-contract-interfaces.md:24
msgid ""
"Note: The contract constructor is not part of the interface. Nor are "
"internal functions part of the interface."
msgstr ""
"Nota: El constructor de contratos no forma parte de la interfaz, ni las "
"funciones internas forman parte de la interfaz."

#: src/ch15-01-abis-and-contract-interfaces.md:26
msgid ""
"Here's a sample interface for an ERC20 token contract. As you can see, it's "
"a generic trait over the `TContractState` type. `view` functions have a self "
"parameter of type `@TContractState`, while `external` functions have a self "
"parameter of type passed by reference `ref self: TContractState`."
msgstr ""
"Como puede ver, es un rasgo genérico sobre el tipo `TContractState`. Las "
"funciones `view` tienen un parámetro propio del tipo `TContractState`, "
"mientras que las funciones `externas` tienen un parámetro propio del tipo "
"pasado por la referencia `ref self: TContractState`."

#: src/ch15-01-abis-and-contract-interfaces.md:55
msgid "<span class=\"caption\">Listing 15-1: A simple ERC20 Interface.</span>"
msgstr "<span class=\"caption\">Lista 15-1: Una interfaz ERC20 simple.</span>"

#: src/ch15-01-abis-and-contract-interfaces.md:57
msgid ""
"In the next chapter, we will see how we can call contracts from other smart "
"contracts using _dispatchers_ and _syscalls_ ."
msgstr ""
"En el siguiente capítulo, veremos cómo podemos llamar a contratos de otros "
"contratos inteligentes usando _dispatchers_ y _syscalls_."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:3
msgid ""
"Each time a contract interface is defined, two dispatchers are automatically "
"created and exported by the compiler. Let's consider an interface that we "
"named IERC20, these would be:"
msgstr ""
"Cada vez que se define una interfaz de contrato, dos despachadores son "
"creados y exportados automáticamente por el compilador. Consideremos una "
"interfaz que llamamos IERC20, estos serían:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:5
msgid "The Contract Dispatcher `IERC20Dispatcher`"
msgstr "El despachador de contratos `IERC20Dispatcher '"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:6
msgid "The Library Dispatcher `IERC20LibraryDispatcher`"
msgstr "El despachador de la biblioteca `IERC20LibraryDispatcher`"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:8
msgid ""
"The compiler also generates a trait `IERC20DispatcherTrait`, allowing us to "
"call the functions defined in the interface on the dispatcher struct."
msgstr ""
"El compilador también genera un rasgo `IERC20DispatcherTrait`, lo que nos "
"permite llamar a las funciones definidas en la interfaz en la estructura del "
"despachador."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:10
msgid ""
"In this chapter, we are going to discuss what these are, how they work and "
"how to use them."
msgstr ""
"En este capítulo, vamos a discutir cuáles son, cómo funcionan y cómo usarlos."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:12
msgid ""
"To effectively break down the concepts in this chapter, we are going to be "
"using the IERC20 interface from the previous chapter (refer to Listing 15-1)."
msgstr ""
"Para desglosar eficazmente los conceptos de este capítulo, vamos a utilizar "
"la interfaz IERC20 del capítulo anterior (consultar la lista 15-1)."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:14
msgid "Contract Dispatcher"
msgstr "Expedidor de contratos"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:16
msgid ""
"As mentioned previously, traits annotated with the `#[starknet::interface]` "
"attribute automatically generate a dispatcher and a trait on compilation. "
"Our `IERC20` interface is expanded into something like this:"
msgstr ""
"Como se ha mencionado anteriormente, los rasgos anotados con el atributo "
"\"[starknet::interface]` generan automáticamente un despachador y un rasgo "
"en la compilación. Nuestra interfaz `IERC20` se expande en algo como esto:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:19
msgid ""
"**Note:** The expanded code for our IERC20 interface is a lot longer, but to "
"keep this chapter concise and straight to the point, we focused on one view "
"function `name`, and one external function `transfer`."
msgstr ""
"**Nota:** El código ampliado para nuestra interfaz IERC20 es mucho más "
"largo, pero para mantener este capítulo conciso y directo al punto, nos "
"centramos en una función de vista `nombre`, y una función externa "
"`transferencia`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:37
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:41
msgid "// starknet::call_contract_syscall is called in here\n"
msgstr "// Starknet::call_contract_syscall se llama aquí\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:46
msgid ""
"<span class=\"caption\">Listing 15-2: An expanded form of the "
"IERC20Dispatcher trait.</span>"
msgstr ""
"<span class=\"caption\">Lista 15-2: Una forma expandida del rasgo "
"IERC20Dispatcher.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:48
msgid ""
"As you can see, the \"classic\" dispatcher is just a struct that wraps a "
"contract address and implements the `DispatcherTrait` generated by the "
"compiler, allowing us to call functions from another contract. This means "
"that we can instantiate a struct with the address of the contract we want to "
"call, and then simply call the functions defined in the interface on the "
"dispatcher struct as if they were methods of that type."
msgstr ""
"Como se puede ver, el despachador \"clásico\" es sólo una estructura que "
"envuelve una dirección de contrato e implementa el `DispatcherTrait` "
"generado por el compilador, lo que nos permite llamar funciones de otro "
"contrato. Esto significa que podemos instanciar una estructura con la "
"dirección del contrato que queremos llamar, y luego simplemente llamar a las "
"funciones definidas en la interfaz en la estructura de despachador como si "
"fueran métodos de ese tipo."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:50
msgid ""
"It's also worthy of note that all these are abstracted behind the scenes "
"thanks to the power of Cairo plugins."
msgstr ""
"También es digno de notar que todos estos se abstraen detrás de las escenas "
"gracias al poder de los plugins de El Cairo."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:52
msgid "Calling Contracts using the Contract Dispatcher"
msgstr "Llamar a contratos utilizando el despachador de contratos"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:54
msgid ""
"This is an example of a contract named `TokenWrapper` using a dispatcher to "
"call functions defined on an ERC-20 token. Calling `transfer_token` will "
"modify the state of the contract deployed at `contract_address`."
msgstr ""
"Este es un ejemplo de un contrato llamado `TokenWrapper` que utiliza un "
"despachador para llamar a las funciones definidas en un token ERC-20. Llamar "
"a `transfer_token` modificará el estado del contrato desplegado en "
"`contract_address`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:94
msgid "//**** Specify interface here ****//\n"
msgstr "//**** Especifique la interfaz aquí ****//\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:125
msgid ""
"<span class=\"caption\">Listing 15-3: A sample contract which uses the "
"Contract Dispatcher.</span>"
msgstr ""
"<span class=\"caption\">Lista 15-3: Un contrato de muestra que utiliza el "
"Despacho de Contrato.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:127
msgid ""
"As you can see, we had to first import `IERC20DispatcherTrait` and "
"`IERC20Dispatcher` generated by the compiler, which allows us to make calls "
"to the methods implemented for the `IERC20Dispatcher` struct (`name`, "
"`transfer`, etc), passing in the `contract_address` of the contract we want "
"to call in the `IERC20Dispatcher` struct."
msgstr ""
"Como pueden ver, primero tuvimos que importar `IERC20DispatcherTrait` y "
"`IERC20Dispatcher` generados por el compilador, lo que nos permite hacer "
"llamadas a los métodos implementados para la estructura `IERC20Dispatcher` "
"(`nombre`, `transferencia`, etc.), pasando la `contract_address` del "
"contrato que queremos llamar en la estructura `IERC20Dispatcher`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:129
msgid "Library Dispatcher"
msgstr "Despacho de biblioteca"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:131
msgid ""
"The key difference between the contract dispatcher and the library "
"dispatcher lies in the execution context of the logic defined in the class. "
"While regular dispatchers are used to call functions from **contracts** "
"(with an associated state), library dispatchers are used to call **classes** "
"(stateless)."
msgstr ""
"La diferencia clave entre el despachador de contratos y el despachador de "
"bibliotecas radica en el contexto de ejecución de la lógica definida en la "
"clase. Mientras que los despachadores regulares se utilizan para llamar a "
"funciones de **contratos** (con un estado asociado), los despachadores de "
"bibliotecas se utilizan para llamar **clases** (apátridas)."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:133
msgid "Let's consider two contracts A and B."
msgstr "Consideremos dos contratos A y B."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:135
msgid ""
"When A uses `IBDispatcher` to call functions from the **contract** B, the "
"execution context of the logic defined in B is that of B. This means that "
"the value returned by `get_caller_address()` in B will return the address of "
"A, and updating a storage variable in B will update the storage of B."
msgstr ""
"Cuando A utiliza `IBDispatcher` para llamar a las funciones del **contract** "
"B, el contexto de ejecución de la lógica definida en B es el de B. Esto "
"significa que el valor devuelto por `get_caller_address()` en B devolverá la "
"dirección de A, y la actualización de una variable de almacenamiento en B "
"actualizará el almacenamiento de B."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:137
msgid ""
"When A uses `IBLibraryDispatcher` to call functions from the **class** of B, "
"the execution context of the logic defined in B's class is that of A. This "
"means that the value returned by `get_caller_address()` variable in B will "
"return the address of the caller of A, and updating a storage variable in "
"B's class will update the storage of A (remember that the **class** of B is "
"stateless; there is no state that can be updated!)"
msgstr ""
"Cuando A usa `IBLibraryDispatcher` para llamar a las funciones de la "
"**clase** de B, el contexto de ejecución de la lógica definida en la clase B "
"es el de A. Esto significa que la variable `get_caller_address()` devuelve "
"la dirección de la persona que llama a A, y la actualización de una variable "
"de almacenamiento en la clase B actualizará el almacenamiento de A (recuerda "
"que la **clase** de B es apátrida; ¡no hay estado que pueda actualizarse!)"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:139
msgid ""
"The expanded form of the struct and trait generated by the compiler look "
"like:"
msgstr ""
"La forma expandida de la estructura y el rasgo generado por el compilador "
"parecen:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:157
#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:161
msgid "// starknet::syscalls::library_call_syscall  is called in here\n"
msgstr "// blacknet::syscalls::library_call_syscall se llama aquí\n"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:166
msgid ""
"<span class=\"caption\">Listing 15-4: An expanded form of the IERC20 trait.</"
"span>"
msgstr ""
"<span class=\"caption\">Lista 15-4: Una forma expandida del rasgo IERC20.</"
"span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:168
msgid ""
"Notice that the main difference between the regular contract dispatcher and "
"the library dispatcher is that the former uses `call_contract_syscall` while "
"the latter uses `library_call_syscall`."
msgstr ""
"Observe que la principal diferencia entre el expedidor regular del contrato "
"y el expedidor de la biblioteca es que el primero utiliza "
"`call_contract_syscall` mientras que el segundo utiliza "
"`library_call_syscall`."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:170
msgid "Calling Contracts using the Library Dispatcher"
msgstr "Llamar a contratos usando el despachador de la biblioteca"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:172
msgid ""
"Below's a sample code for calling contracts using the Library Dispatcher."
msgstr ""
"Abajo hay un código de ejemplo para llamar a contratos usando el Dispatcher "
"de la Biblioteca."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:208
msgid ""
"<span class=\"caption\">Listing 15-5: A sample contract using the Library "
"Dispatcher.</span>"
msgstr ""
"<span class=\"caption\">Lista 15-5: Un contrato de muestra usando el "
"Dispatcher de la Biblioteca.</span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:210
msgid ""
"As you can see, we had to first import in our contract the "
"`IContractADispatcherTrait` and `IContractALibraryDispatcher` which were "
"generated from our interface by the compiler. Then, we can create an "
"instance of `IContractALibraryDispatcher` passing in the `class_hash` of the "
"class we want to make library calls to. From there, we can call the "
"functions defined in that class, executing its logic in the context of our "
"contract. When we call `set_value` on ContractA, it will make a library call "
"to the `set_value` function in IContractA, updating the value of the storage "
"variable `value` in ContractA."
msgstr ""
"Como puede ver, tuvimos que importar primero en nuestro contrato el "
"`IContractADispatcherTrait` e `IContractALIbraryDispatcher` que fueron "
"generados desde nuestra interfaz por el compilador. Entonces, podemos crear "
"una instancia de `IContractALIbraryDispatcher` pasando en la `class_hash` de "
"la clase a la que queremos hacer llamadas a la biblioteca. A partir de ahí, "
"podemos llamar a las funciones definidas en esa clase, ejecutando su lógica "
"en el contexto de nuestro contrato. Cuando llamamos `set_value` en "
"ContractA, hará una llamada a la biblioteca a la función `set_value` en "
"IContractA, actualizando el valor de la variable de almacenamiento `value` "
"en ContractA."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:212
msgid "Using low-level syscalls"
msgstr "Uso de syscalls de bajo nivel"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:214
msgid ""
"Another way to call other contracts and classes is to use the `starknet::"
"call_contract_syscall`and `starknet::library_call_syscall` system calls. The "
"dispatchers we described in the previous sections are high-level syntaxes "
"for these low-level system calls."
msgstr ""
"Otra forma de llamar a otros contratos y clases es usar las llamadas del "
"sistema `starknet::call_contract_syscall` y `starknet::"
"library_call_syscall`. Los despachadores que describimos en las secciones "
"anteriores son sintaxis de alto nivel para estas llamadas del sistema de "
"bajo nivel."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:216
msgid ""
"Using these syscalls can be handy for customized error handling or to get "
"more control over the serialization/deserialization of the call data and the "
"returned data. Here's an example demonstrating how to use a "
"`call_contract_sycall` to call the `transfer` function of an ERC20 contract:"
msgstr ""
"El uso de estos syscalls puede ser útil para la manipulación personalizada "
"de errores o para obtener más control sobre la serialización/deserialización "
"de los datos de llamada y los datos devueltos. Aquí hay un ejemplo que "
"demuestra cómo usar un `call_contract_sycall` para llamar a la función "
"`transferencia` de un contrato ERC20:"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:254
msgid "\"transferFrom\""
msgstr "\"Transferencia de\""

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:265
msgid ""
"<span class=\"caption\">Listing 15-6: A sample contract using syscalls.</"
"span>"
msgstr ""
"<span class=\"caption\">Lista 15-6: Un contrato de muestra usando syscalls.</"
"span>"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:267
msgid ""
"To use this syscall, we passed in the contract address, the selector of the "
"function we want to call (see next section), and the call arguments."
msgstr ""
"Para usar esta syscall, pasamos en la dirección del contrato, el selector de "
"la función a la que queremos llamar (ver sección siguiente) y los argumentos "
"de la llamada."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:269
msgid ""
"The call arguments must be provided as an array of `felt252`. To build this "
"array, we serialize the expected function parameters into an "
"`Array<felt252>` using the `Serde` trait, and then pass this array as "
"calldata. At the end, we are returned a serialized value which we'll need to "
"deserialize ourselves!"
msgstr ""
"Los argumentos de llamada deben ser provistos como una matriz de `felt252`. "
"Para construir esta matriz, serializamos los parámetros de función esperados "
"en un `Array<felt252® usando el rasgo `Serde`, y luego pasamos este array "
"como calldata. Al final, se nos devuelve un valor seriado que necesitaremos "
"para deserializarnos a nosotros mismos!"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:271
msgid "Entry Point Selector"
msgstr "Selector de puntos de entrada"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:273
msgid ""
"In the context of a smart contract, a selector is a unique identifier for a "
"specific entrypoint of a contract. When a transaction is sent to a contract, "
"it includes the selector in the calldata to specify which function should be "
"executed."
msgstr ""
"En el contexto de un contrato inteligente, un selector es un identificador "
"único para un punto de entrada específico de un contrato. Cuando una "
"transacción se envía a un contrato, incluye el selector en los datos de "
"llamada para especificar qué función debe ejecutarse."

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:275
msgid ""
"On Starknet, the selector is computed by applying the `sn_keccak` hash "
"function to the string representation of the function name. If the function "
"name is `transfer`, the selector can be computed with `selector!"
"(\"transfer\")`"
msgstr ""
"En Starknet, el selector se calcula aplicando la función `sn_keccak` hash a "
"la representación de cadena del nombre de la función. Si el nombre de la "
"función es `transferencia`, el selector se puede calcular con `selector!"
"(\"transferencia\")`"

#: src/ch15-02-contract-dispatchers-library-dispatchers-and-system-calls.md:277
msgid ""
"Note that in `starknet::call_contract_syscall`, we didn't specify the "
"function name as a string, but rather used the `selector!` macro, which "
"computes the `sn_keccak` hash of the provided function signature."
msgstr ""
"Tenga en cuenta que en `starknet::call_contract_syscall`, no especificamos "
"el nombre de la función como una cadena, sino que usamos la macro `selector!"
"`, que calcula el hash `sn_keccak` de la firma de la función proporcionada."

#: src/ch16-01-optimizing-storage-costs.md:3
msgid ""
"Bit-packing is a simple concept: use as few bits as possible to store a "
"piece of data. When done well, it can significantly reduce the size of the "
"data you need to store. This is especially important in smart contracts, "
"where storage is expensive."
msgstr ""
"El empaquetado de bits es un concepto simple: utilizar tan pocos bits como "
"sea posible para almacenar un pedazo de datos. Cuando se hace bien, puede "
"reducir significativamente el tamaño de los datos que necesita almacenar. "
"Esto es especialmente importante en los contratos inteligentes, donde el "
"almacenamiento es caro."

#: src/ch16-01-optimizing-storage-costs.md:5
msgid ""
"When writing Cairo smart contracts, it is important to optimize storage "
"usage to reduce gas costs. Indeed, most of the cost associated with a "
"transaction is related to storage updates; and each storage slot costs gas "
"to write to. This means that by packing multiple values into fewer slots, "
"you can decrease the gas cost incurred by the users of your smart contract."
msgstr ""
"Al escribir contratos inteligentes de El Cairo, es importante optimizar el "
"uso de almacenamiento para reducir los costos de gas. De hecho, la mayor "
"parte del costo asociado con una transacción está relacionado con "
"actualizaciones de almacenamiento; y cada ranura de almacenamiento cuesta "
"gas a escribir. Esto significa que al empaquetar varios valores en menos "
"ranuras, puede disminuir el costo de gas en que incurran los usuarios de su "
"contrato inteligente."

#: src/ch16-01-optimizing-storage-costs.md:8
msgid "Integer Structure and Bitwise Operators"
msgstr "Estructura integral y operadores de Bitwise"

#: src/ch16-01-optimizing-storage-costs.md:10
msgid ""
"An integer is coded on a certain number of bits, depending on its size (For "
"example, a `u8` integer is coded on 8 bits)."
msgstr ""
"Un entero está codificado en un cierto número de bits, dependiendo de su "
"tamaño (Por ejemplo, un entero `u8` está codificado en 8 bits)."

#: src/ch16-01-optimizing-storage-costs.md:19
msgid ""
"Intuitively, several integers can be combined into a single integer if the "
"size of this single integer is greater than or equal to the sum of the sizes "
"of the integers (For example, two `u8` and one `u16` in one `u32`)."
msgstr ""
"Intuitivamente, varios enteros se pueden combinar en un solo entero si el "
"tamaño de este entero es mayor o igual a la suma de los tamaños de los "
"enteros (Por ejemplo, dos `u8` y uno `u16` en uno `u32`)."

#: src/ch16-01-optimizing-storage-costs.md:21
msgid "But, to do that, we need some bitwise operators:"
msgstr "Pero, para hacer eso, necesitamos algunos operadores bitwise:"

#: src/ch16-01-optimizing-storage-costs.md:23
msgid ""
"multiplying or dividing an integer by a power of 2 shifts the integer value "
"to the left or to the right respectively"
msgstr ""
"multiplicar o dividir un entero por una potencia de 2 desplaza el valor "
"entero a la izquierda o a la derecha respectivamente"

#: src/ch16-01-optimizing-storage-costs.md:32
msgid ""
"applying a mask (`AND` operator) on an integer value isolates some bits of "
"this integer"
msgstr ""
"aplicar una máscara (‘AND’ operator) a un valor entero aísla algunos bits de "
"este entero"

#: src/ch16-01-optimizing-storage-costs.md:41
msgid ""
"adding (`OR` operator) two integers will combine both values into a single "
"one."
msgstr ""
"añadir (‘OR’ operador) dos enteros combinarán ambos valores en uno solo."

#: src/ch16-01-optimizing-storage-costs.md:50
msgid ""
"With these bitwise operators, let's see how to combine two `u8` integers "
"into a single `u16` integer (called `packing`) and reversely (called "
"`unpacking`) in the following example:"
msgstr ""
"Con estos operadores bitwise, veamos cómo combinar dos enteros `u8` en un "
"solo entero `u16` (llamado `embalaje`) e inversamente (llamado "
"`desembalaje`) en el siguiente ejemplo:"

#: src/ch16-01-optimizing-storage-costs.md:59
msgid "Bit-packing in Cairo"
msgstr "Envases en Bit-packing en El Cairo"

#: src/ch16-01-optimizing-storage-costs.md:61
msgid ""
"The storage of a Starknet smart contract is a map with 2<sup>251</sup> "
"slots, where each slot is a `felt252` which is initialized to 0."
msgstr ""
"El almacenamiento de un contrato inteligente Starknet es un mapa con 2 "
"ranuras<sup>251</sup>, donde cada ranura es un `felt252` que se inicializa a "
"0."

#: src/ch16-01-optimizing-storage-costs.md:63
msgid ""
"As we saw earlier, to reduce gas costs due to storage updates, we have to "
"use as few bits as possible, so we have to organize stored variables by "
"packing them."
msgstr ""
"Como vimos antes, para reducir los costos de gas debido a las "
"actualizaciones de almacenamiento, tenemos que utilizar tan pocos bits como "
"sea posible, por lo que tenemos que organizar las variables almacenadas "
"mediante el embalaje."

#: src/ch16-01-optimizing-storage-costs.md:65
msgid ""
"For example, consider the following `Sizes` struct with 3 fields of "
"different types: one `u8`, one `u32` and one `u64`. The total size is 8 + 32 "
"+ 64 = 104 bits. This is less than a slot size (i.e 251 bits) so we can pack "
"them together to be stored into a single slot."
msgstr ""
"Por ejemplo, considere la siguiente estructura con tres campos de diferentes "
"tipos: un `u8`, un `u32` y un `u64`. El tamaño total es de 8 + 32 + 64 = 104 "
"bits. Esto es menos que un tamaño de ranura (es decir 251 bits) para que "
"podamos empaquetarlos juntos para que se almacenen en una sola ranura."

#: src/ch16-01-optimizing-storage-costs.md:67
msgid ""
"Note that, as it also fits in a `u128`, it's a good practice to use the "
"smallest type to pack all your variables, so here a `u128` should be used."
msgstr ""
"Tenga en cuenta que, como también cabe en un `u128, es una buena práctica "
"utilizar el tipo más pequeño para empaquetar todas sus variables, por lo que "
"aquí se debe utilizar un `u128`."

#: src/ch16-01-optimizing-storage-costs.md:77
msgid ""
"To pack these 3 variables into a `u128` we have to successively shift them "
"to the left, and finally sum them."
msgstr ""
"Para envasar estas 3 variables en un `u128` tenemos que desplazarlas "
"sucesivamente a la izquierda, y finalmente sumarlas."

#: src/ch16-01-optimizing-storage-costs.md:86
msgid ""
"To unpack these 3 variables from a `u128` we have to successively shift them "
"to the right and use a mask to isolate them."
msgstr ""
"Para desenvasar estas 3 variables de un `u128` tenemos que desplazarlas "
"sucesivamente a la derecha y utilizar una máscara para aislarlas."

#: src/ch16-01-optimizing-storage-costs.md:95
msgid "The `StorePacking` Trait"
msgstr "El rasgo de `Almacenamiento`"

#: src/ch16-01-optimizing-storage-costs.md:97
msgid ""
"Cairo provides the `StorePacking` trait to enable packing struct fields into "
"fewer storage slots. `StorePacking<T, PackedT>` is a generic trait taking "
"the type you want to pack (`T`) and the destination type (`PackedT`) as "
"parameters. It provides two functions to implement: `pack` and `unpack`."
msgstr ""
"El Cairo proporciona el rasgo `StorePacking` para permitir que los campos de "
"estructura de embalaje en menos ranuras de almacenamiento. `StorePacking<T, "
"PackedT® es un rasgo genérico que toma el tipo que desea empaquetar (`T`) y "
"el tipo de destino (`PackedT`) como parámetros. Proporciona dos funciones "
"para implementar: `pack'y `unpack '."

#: src/ch16-01-optimizing-storage-costs.md:99
msgid "Here is the implementation of the example of the previous chapter:"
msgstr "Aquí está la implementación del ejemplo del capítulo anterior:"

#: src/ch16-01-optimizing-storage-costs.md:138
msgid "//don't forget to import it!\n"
msgstr "//no te olvides de importarlo!\n"

#: src/ch16-01-optimizing-storage-costs.md:147
msgid ""
"// This will automatically pack the\n"
"        // struct into a single u128\n"
msgstr ""
"// Esto automáticamente empaquetará la estructura // en un único u128\n"

#: src/ch16-01-optimizing-storage-costs.md:155
msgid ""
"// this will automatically unpack the\n"
"        // packed-representation into the Sizes struct\n"
msgstr ""
"// esto desempaquetará automáticamente la representación // empaquetada en "
"la estructura Tamaños\n"

#: src/ch16-01-optimizing-storage-costs.md:166
msgid "In this code snippet, you see that:"
msgstr "En este fragmento de código, se ve que:"

#: src/ch16-01-optimizing-storage-costs.md:168
msgid ""
"`TWO_POW_8` and `TWO_POW_40` are used to shift left in the `pack` function "
"and shift right in the `unpack`function,"
msgstr ""
"`Two_POW_8` y `Two_POW_40` se utilizan para cambiar a la izquierda en la "
"función `pack'y cambiar a la derecha en la función `unpack`,"

#: src/ch16-01-optimizing-storage-costs.md:169
msgid ""
"`MASK_8` and `MASK_32` are used to isolate a variable in the `unpack` "
"function,"
msgstr ""
"`MASK_8` y `MASK_32` se utilizan para aislar una variable en la función "
"`unpack`,"

#: src/ch16-01-optimizing-storage-costs.md:170
msgid ""
"all the variables from the storage are converted to `u128` to be able to use "
"bitwise operators."
msgstr ""
"todas las variables del almacenamiento se convierten a `u128` para poder "
"utilizar operadores de bitwise."

#: src/ch16-01-optimizing-storage-costs.md:172
msgid ""
"This technique can be used for any group of fields that fit within the bit "
"size of the packed storage type. For example, if you have a struct with "
"multiple fields whose bit sizes add up to 256 bits, you can pack them into a "
"single `u256` variable. If the bit sizes add up to 512 bits, you can pack "
"them into a single `u512` variable, and so on. You can define your own "
"structs and logic to pack and unpack them."
msgstr ""
"Esta técnica se puede utilizar para cualquier grupo de campos que se ajusten "
"al tamaño de bits del tipo de almacenamiento empaquetado. Por ejemplo, si "
"tiene una estructura con múltiples campos cuyos tamaños de bits suman 256 "
"bits, puede empaquetarlos en una sola variable `u256`. Si los tamaños de "
"bits suman 512 bits, puede empaquetarlos en una sola variable `u512`, y así "
"sucesivamente. Puede definir sus propias estructuras y lógica para "
"empaquetarlos y desempacarlos."

#: src/ch16-01-optimizing-storage-costs.md:174
msgid ""
"The rest of the work is done magically by the compiler - if a type "
"implements the `StorePacking` trait, then the compiler will know it can use "
"the `StoreUsingPacking` implementation of the `Store` trait in order to pack "
"before writing and unpack after reading from storage. One important detail, "
"however, is that the type that `StorePacking::pack` spits out also has to "
"implement `Store` for `StoreUsingPacking` to work. Most of the time, we will "
"want to pack into a felt252 or u256 - but if you want to pack into a type of "
"your own, make sure that this one implements the `Store` trait."
msgstr ""
"El resto del trabajo lo realiza mágicamente el compilador: si un tipo "
"implementa el rasgo `StorePacking`, entonces el compilador sabrá que puede "
"utilizar la aplicación `StoreUsingPacking` del rasgo `Store` para que "
"funcione antes de escribir y desempacar después de leer desde el "
"almacenamiento. Sin embargo, un detalle importante es que el tipo "
"`StorePacking::pack` escupe también tiene que implementar `Store` para que "
"funcione `StoreUsingPacking`."

#: src/ch16-02-00-composability-and-components.md:1
msgid "Components: Lego-Like Building Blocks for Smart Contracts"
msgstr ""
"Componentes: Lego-como bloques de construcción para contratos inteligentes"

#: src/ch16-02-00-composability-and-components.md:3
msgid ""
"Developing contracts sharing a common logic and storage can be painful and "
"bug-prone, as this logic can hardly be reused and needs to be reimplemented "
"in each contract. But what if there was a way to snap in just the extra "
"functionality you need inside your contract, separating the core logic of "
"your contract from the rest?"
msgstr ""
"El desarrollo de contratos que comparten una lógica y almacenamiento comunes "
"puede ser doloroso y propenso a errores, ya que esta lógica difícilmente "
"puede ser reutilizada y necesita ser aplicada de nuevo en cada contrato. "
"Pero, ¿qué pasa si hubiera una manera de encajar en la funcionalidad "
"adicional que necesita dentro de su contrato, separando la lógica central de "
"su contrato del resto?"

#: src/ch16-02-00-composability-and-components.md:9
msgid ""
"Components provide exactly that. They are modular add-ons encapsulating "
"reusable logic, storage, and events that can be incorporated into multiple "
"contracts. They can be used to extend a contract's functionality, without "
"having to reimplement the same logic over and over again."
msgstr ""
"Los componentes proporcionan exactamente eso. Son complementos modulares que "
"encapsulan la lógica reutilizable, el almacenamiento y los eventos que se "
"pueden incorporar en múltiples contratos. Se pueden utilizar para ampliar la "
"funcionalidad de un contrato, sin tener que volver a aplicar la misma lógica "
"una y otra vez."

#: src/ch16-02-00-composability-and-components.md:14
msgid ""
"Think of components as Lego blocks. They allow you to enrich your contracts "
"by plugging in a module that you or someone else wrote. This module can be a "
"simple one, like an ownership component, or more complex like a full-fledged "
"ERC20 token."
msgstr ""
"Piense en los componentes como bloques de Lego. Le permiten enriquecer sus "
"contratos mediante la conexión de un módulo que usted o alguien más "
"escribió. Este módulo puede ser simple, como un componente de propiedad, o "
"más complejo como un token ERC20 completo."

#: src/ch16-02-00-composability-and-components.md:19
msgid ""
"A component is a separate module that can contain storage, events, and "
"functions. Unlike a contract, a component cannot be declared or deployed. "
"Its logic will eventually be part of the contract’s bytecode it has been "
"embedded in."
msgstr ""
"Un componente es un módulo separado que puede contener almacenamiento, "
"eventos y funciones. A diferencia de un contrato, un componente no puede ser "
"declarado o desplegado. Su lógica será eventualmente parte del bytecode del "
"contrato en el que ha sido incrustado."

#: src/ch16-02-00-composability-and-components.md:24
msgid "What's in a Component?"
msgstr "¿Qué hay en un componente?"

#: src/ch16-02-00-composability-and-components.md:26
msgid "A component is very similar to a contract. It can contain:"
msgstr "Un componente es muy similar a un contrato. Puede contener:"

#: src/ch16-02-00-composability-and-components.md:28
msgid "Storage variables"
msgstr "Variables de almacenamiento"

#: src/ch16-02-00-composability-and-components.md:29
msgid "Events"
msgstr "Acontecimientos"

#: src/ch16-02-00-composability-and-components.md:30
msgid "External and internal functions"
msgstr "Funciones externas e internas"

#: src/ch16-02-00-composability-and-components.md:32
msgid ""
"Unlike a contract, a component cannot be deployed on its own. The "
"component's code becomes part of the contract it's embedded to."
msgstr ""
"A diferencia de un contrato, un componente no se puede implementar por sí "
"solo. El código del componente se convierte en parte del contrato al que "
"está incrustado."

#: src/ch16-02-00-composability-and-components.md:35
msgid "Creating Components"
msgstr "Creación de componentes"

#: src/ch16-02-00-composability-and-components.md:37
msgid ""
"To create a component, first define it in its own module decorated with a "
"`#[starknet::component]` attribute. Within this module, you can declare a ` "
"Storage` struct and `Event` enum, as usually done in [contracts](./ch13-02-"
"anatomy-of-a-simple-contract.md)."
msgstr ""
"Para crear un componente, primero definalo en su propio módulo decorado con "
"un atributo \"[starknet::component]`. Dentro de este módulo, puede declarar "
"un \" Storage \" struct y \"Event\" enum, como se suele hacer en [contracts]"
"(./ch13-02-anatomía-of-a-simple-contract.md)."

#: src/ch16-02-00-composability-and-components.md:41
msgid ""
"The next step is to define the component interface, containing the "
"signatures of the functions that will allow external access to the "
"component's logic. You can define the interface of the component by "
"declaring a trait with the `#[starknet::interface]` attribute, just as you "
"would with contracts. This interface will be used to enable external access "
"to the component's functions using the [dispatcher](./ch15-02-contract-"
"dispatchers-library-dispatchers-and-system-calls.md) pattern."
msgstr ""
"El siguiente paso es definir la interfaz del componente, que contiene las "
"firmas de las funciones que permitirán el acceso externo a la lógica del "
"componente. Puede definir la interfaz del componente declarando un rasgo con "
"el atributo •[starknet:::interface]`, tal como lo haría con los contratos. "
"Esta interfaz se utilizará para habilitar el acceso externo a las funciones "
"del componente utilizando el patrón [dispatcher](./ch15-02-contract-"
"dispatchers-library-dispatchers-and-system-calls.md)."

#: src/ch16-02-00-composability-and-components.md:48
msgid ""
"The actual implementation of the component's external logic is done in an "
"`impl` block marked as `#[embeddable_as(name)]`. Usually, this `impl` block "
"will be an implementation of the trait defining the interface of the "
"component."
msgstr ""
"La implementación real de la lógica externa del componente se realiza en un "
"bloque `impl` marcado como •[embeddable_as(name)]`. Usualmente, este bloque "
"`impl` será una implementación del rasgo que define la interfaz del "
"componente."

#: src/ch16-02-00-composability-and-components.md:52
msgid ""
"Note: `name` is the name that we’ll be using in the contract to refer to the "
"component. It is different than the name of your impl."
msgstr ""
"Nota: `nombre` es el nombre que usaremos en el contrato para referirnos al "
"componente. Es diferente al nombre de su impl."

#: src/ch16-02-00-composability-and-components.md:55
msgid ""
"You can also define internal functions that will not be accessible "
"externally, by simply omitting the `#[embeddable_as(name)]` attribute above "
"the internal `impl` block. You will be able to use these internal functions "
"inside the contract you embed the component in, but not interact with it "
"from outside, as they're not a part of the abi of the contract."
msgstr ""
"También puede definir funciones internas a las que no se podrá acceder "
"externamente, simplemente omitiendo el atributo «[embeddable_as(name)]» por "
"encima del bloque interno «impl». Podrá utilizar estas funciones internas "
"dentro del contrato en el que incruste el componente, pero no interactúe con "
"él desde fuera, ya que no forman parte del abi del contrato."

#: src/ch16-02-00-composability-and-components.md:61
msgid ""
"Functions within these `impl` block expect arguments like `ref self: "
"ComponentState<TContractState>` (for state-modifying functions) or `self: "
"@ComponentState<TContractState>` (for view functions). This makes the impl "
"generic over `TContractState`, allowing us to use this component in any "
"contract."
msgstr ""
"Las funciones dentro de este bloque `impl` esperan argumentos como `ref "
"self: ComponentState<TContractState® (para funciones de modificación del "
"estado) o `self: @ComponentState<TContractState® (para funciones de "
"visualización). Esto hace que el impl genérico sobre `TContractState`, que "
"nos permite utilizar este componente en cualquier contrato."

#: src/ch16-02-00-composability-and-components.md:70
msgid "Example: an Ownable Component"
msgstr "Ejemplo: un componente propio"

#: src/ch16-02-00-composability-and-components.md:72
msgid ""
"⚠️ The example shown below has not been audited and is not intended for "
"production use. The authors are not responsible for any damages caused by "
"the use of this code."
msgstr ""
"El ejemplo que se muestra a continuación no ha sido auditado y no está "
"destinado al uso de la producción. Los autores no son responsables de los "
"daños causados por el uso de este código."

#: src/ch16-02-00-composability-and-components.md:76
msgid ""
"The interface of the Ownable component, defining the methods available "
"externally to manage ownership of a contract, would look like this:"
msgstr ""
"La interfaz del componente Propiedad, que define los métodos disponibles "
"externamente para gestionar la propiedad de un contrato, se vería así:"

#: src/ch16-02-00-composability-and-components.md:88
msgid "The component itself is defined as:"
msgstr "El componente en sí se define como:"

#: src/ch16-02-00-composability-and-components.md:166
msgid ""
"This syntax is actually quite similar to the syntax used for contracts. The "
"only differences relate to the `#[embeddable_as]` attribute above the impl "
"and the genericity of the impl block that we will dissect in details."
msgstr ""
"Esta sintaxis es en realidad bastante similar a la sintaxis utilizada para "
"los contratos. Las únicas diferencias se relacionan con el atributo "
"\"[embeddable_as]` por encima de la impl y la genérica del bloque de impl "
"que vamos a diseccionar en detalles."

#: src/ch16-02-00-composability-and-components.md:170
msgid ""
"As you can see, our component has two `impl` blocks: one corresponding to "
"the implementation of the interface trait, and one containing methods that "
"should not be exposed externally and are only meant for internal use. "
"Exposing the `assert_only_owner` as part of the interface wouldn't make "
"sense, as it's only meant to be used internally by a contract embedding the "
"component."
msgstr ""
"Como puede ver, nuestro componente tiene dos bloques `impl`: uno que "
"corresponde a la implementación del rasgo de interfaz, y otro que contiene "
"métodos que no deben exponerse externamente y que sólo están destinados a "
"uso interno. Exponer el `assert_only_owner` como parte de la interfaz no "
"tendría sentido, ya que sólo está destinado a ser utilizado internamente por "
"un contrato que incrusta el componente."

#: src/ch16-02-00-composability-and-components.md:176
msgid "A Closer Look at the `impl` Block"
msgstr "Una mirada más cercana al bloque `impl`"

#: src/ch16-02-00-composability-and-components.md:185
msgid ""
"The `#[embeddable_as]` attribute is used to mark the impl as embeddable "
"inside a contract. It allows us to specify the name of the impl that will be "
"used in the contract to refer to this component. In this case, the component "
"will be referred to as `Ownable` in contracts embedding it."
msgstr ""
"El atributo `[embeddable_as]` se utiliza para marcar el impl como "
"incrustable dentro de un contrato. Nos permite especificar el nombre del "
"impl que se utilizará en el contrato para referirse a este componente. En "
"este caso, el componente se denominará `Ownable` en los contratos que lo "
"incrustan."

#: src/ch16-02-00-composability-and-components.md:190
msgid ""
"The implementation itself is generic over `ComponentState<TContractState>`, "
"with the added restriction that `TContractState` must implement the "
"`HasComponent<T>` trait. This allows us to use the component in any "
"contract, as long as the contract implements the `HasComponent` trait. "
"Understanding this mechanism in details is not required to use components, "
"but if you're curious about the inner workings, you can read more in the "
"[\"Components Under the Hood\"](./ch16-02-01-under-the-hood.md) section."
msgstr ""
"La aplicación en sí misma es genérica sobre `ComponentState<TContractState®, "
"con la restricción añadida de que `TContractState` debe implementar el rasgo "
"`HasComponent<T®. Esto nos permite utilizar el componente en cualquier "
"contrato, siempre y cuando el contrato implemente el rasgo `HasComponent`. "
"Entender este mecanismo en detalles no es necesario para usar componentes, "
"pero si tienes curiosidad por el funcionamiento interno, puedes leer más en "
"la sección [\"Components Under the Hood\"](./ch16-02-01-under-the-hood.md)."

#: src/ch16-02-00-composability-and-components.md:197
msgid ""
"One of the major differences from a regular smart contract is that access to "
"storage and events is done via the generic `ComponentState<TContractState>` "
"type and not `ContractState`. Note that while the type is different, "
"accessing storage or emitting events is done similarly via `self."
"storage_var_name.read()` or `self.emit(...).`"
msgstr ""
"Una de las principales diferencias con respecto a un contrato inteligente "
"regular es que el acceso al almacenamiento y a los eventos se realiza a "
"través del tipo genérico `ComponentState<TContractState® y no "
"`ContractState`. Tenga en cuenta que, si bien el tipo es diferente, acceder "
"al almacenamiento o emitir eventos se hace de manera similar a través de "
"`self.storage_var_name.read()` o `self.emit(...)`."

#: src/ch16-02-00-composability-and-components.md:203
msgid ""
"Note: To avoid the confusion between the embeddable name and the impl name, "
"we recommend keeping the suffix `Impl` in the impl name."
msgstr ""
"Nota: Para evitar la confusión entre el nombre incrustable y el nombre impl, "
"recomendamos mantener el sufijo `Impl` en el nombre impl."

#: src/ch16-02-00-composability-and-components.md:208
msgid "Migrating a Contract to a Component"
msgstr "Migrar un contrato a un componente"

#: src/ch16-02-00-composability-and-components.md:210
msgid ""
"Since both contracts and components share a lot of similarities, it's "
"actually very easy to migrate from a contract to a component. The only "
"changes required are:"
msgstr ""
"Dado que ambos contratos y componentes comparten muchas similitudes, en "
"realidad es muy fácil migrar de un contrato a un componente. Los únicos "
"cambios requeridos son:"

#: src/ch16-02-00-composability-and-components.md:214
msgid "Adding the `#[starknet::component]` attribute to the module."
msgstr "Añadiendo el atributo \"[starknet::componente]` al módulo."

#: src/ch16-02-00-composability-and-components.md:215
msgid ""
"Adding the `#[embeddable_as(name)]` attribute to the `impl` block that will "
"be embedded in another contract."
msgstr ""
"Añadiendo el atributo \"[embeddable_as(name)]` al bloque `impl` que será "
"incrustado en otro contrato."

#: src/ch16-02-00-composability-and-components.md:217
msgid "Adding generic parameters to the `impl` block:"
msgstr "Añadiendo parámetros genéricos al bloque `impl`:"

#: src/ch16-02-00-composability-and-components.md:218
msgid "Adding `TContractState` as a generic parameter."
msgstr "Añadiendo `TContractState` como parámetro genérico."

#: src/ch16-02-00-composability-and-components.md:219
msgid "Adding `+HasComponent<TContractState>` as an impl restriction."
msgstr ""
"Añadiendo â € TM tiene Component< TcontractStateâ TM como una restricción de "
"impl."

#: src/ch16-02-00-composability-and-components.md:220
msgid ""
"Changing the type of the `self` argument in the functions inside the `impl` "
"block to `ComponentState<TContractState>` instead of `ContractState`."
msgstr ""
"Cambiar el tipo de argumento `auto` en las funciones dentro del bloque "
"`impl` a `EstadoComponente<EstadoTContract` en lugar de `EstadoContracto`."

#: src/ch16-02-00-composability-and-components.md:223
msgid ""
"For traits that do not have an explicit definition and are generated using "
"`#[generate_trait]`, the logic is the same - but the trait is generic over "
"`TContractState` instead of `ComponentState<TContractState>`, as "
"demonstrated in the example with the `InternalTrait`."
msgstr ""
"En el caso de los rasgos que no tienen una definición explícita y que se "
"generan utilizando el término \"[generate_trait]\", la lógica es la misma, "
"pero el rasgo es genérico sobre \"TcontractState\" en lugar de "
"\"ComponentState<TcontractState\", como se demuestra en el ejemplo del "
"\"Trait interno\"."

#: src/ch16-02-00-composability-and-components.md:228
msgid "Using Components Inside a Contract"
msgstr "Uso de componentes dentro de un contrato"

#: src/ch16-02-00-composability-and-components.md:230
msgid ""
"The major strength of components is how it allows reusing already built "
"primitives inside your contracts with a restricted amount of boilerplate. To "
"integrate a component into your contract, you need to:"
msgstr ""
"La principal fuerza de los componentes es cómo permite reutilizar primitivos "
"ya construidos dentro de sus contratos con una cantidad restringida de placa "
"de caldera. Para integrar un componente en su contrato, usted necesita:"

#: src/ch16-02-00-composability-and-components.md:234
msgid "Declare it with the `component!()` macro, specifying"
msgstr "Declararlo con la macro `component!()`, especificando"

#: src/ch16-02-00-composability-and-components.md:236
msgid "The path to the component `path::to::component`."
msgstr "La ruta hacia el componente `camino::a::component`."

#: src/ch16-02-00-composability-and-components.md:237
msgid ""
"The name of the variable in your contract's storage referring to this "
"component's storage (e.g. `ownable`)."
msgstr ""
"El nombre de la variable en el almacenamiento de su contrato que se refiere "
"al almacenamiento de este componente (por ejemplo, `propietario`)."

#: src/ch16-02-00-composability-and-components.md:239
msgid ""
"The name of the variant in your contract's event enum referring to this "
"component's events (e.g. `OwnableEvent`)."
msgstr ""
"El nombre de la variante en el enum de evento de su contrato que se refiere "
"a los eventos de este componente (por ejemplo, `OwnableEvent`)."

#: src/ch16-02-00-composability-and-components.md:242
msgid ""
"Add the path to the component's storage and events to the contract's "
"`Storage` and `Event`. They must match the names provided in step 1 (e.g. "
"`ownable: ownable_component::Storage` and `OwnableEvent: ownable_component::"
"Event`)."
msgstr ""
"Añádase la ruta al almacenamiento y los eventos del componente a los "
"términos `Almacenamiento` y `Evento` del contrato. Deben coincidir con los "
"nombres indicados en el paso 1 (por ejemplo, `propiedad: "
"propiedad_componente::Almacenamiento` y `OwnableEvento: "
"propiedad_componente::Evento`)."

#: src/ch16-02-00-composability-and-components.md:247
msgid ""
"The storage variable **MUST** be annotated with the `#[substorage(v0)]` "
"attribute."
msgstr ""
"La variable de almacenamiento **MUST** esté anotada con el atributo "
"[subalmacenamiento(v0)]`."

#: src/ch16-02-00-composability-and-components.md:250
msgid ""
"Embed the component's logic defined inside your contract, by instantiating "
"the component's generic impl with a concrete `ContractState` using an impl "
"alias. This alias must be annotated with `#[abi(embed_v0)]` to externally "
"expose the component's functions."
msgstr ""
"Incorpore la lógica del componente definida dentro de su contrato, "
"instaurando el impl genérico del componente con un concreto `Contract State` "
"usando un alias de impl. Este alias debe anotarse con '[abi(embed_v0)]` para "
"exponer externamente las funciones del componente."

#: src/ch16-02-00-composability-and-components.md:255
msgid ""
"As you can see, the InternalImpl is not marked with `#[abi(embed_v0)]`. "
"Indeed, we don't want to expose externally the functions defined in this "
"impl. However, we might still want to access them internally."
msgstr ""
"Como puede ver, el In InternalImpl no está marcado con «[abi(embed_v0)]». De "
"hecho, no queremos exponer externamente las funciones definidas en este "
"impl. Sin embargo, todavía podríamos querer acceder a ellas internamente."

#: src/ch16-02-00-composability-and-components.md:259
msgid ""
"For example, to embed the `Ownable` component defined above, we would do the "
"following:"
msgstr ""
"Por ejemplo, para incrustar el componente `Ownable` definido anteriormente, "
"haríamos lo siguiente:"

#: src/ch16-02-00-composability-and-components.md:297
msgid ""
"The component's logic is now seamlessly part of the contract! We can "
"interact with the components functions externally by calling them using the "
"`IOwnableDispatcher` instantiated with the contract's address."
msgstr ""
"La lógica del componente es ahora parte del contrato sin problemas! Podemos "
"interactuar con las funciones de los componentes externamente llamándolos "
"usando el `IOwnableDispatcher` instantiated con la dirección del contrato."

#: src/ch16-02-00-composability-and-components.md:310
msgid "Stacking Components for Maximum Composability"
msgstr "Componentes de apilado para la máxima composibilidad"

#: src/ch16-02-00-composability-and-components.md:312
msgid ""
"The composability of components really shines when combining multiple of "
"them together. Each adds its features onto the contract. You can rely on "
"[Openzeppelin's](https://github.com/OpenZeppelin/cairo-contracts) "
"implementation of components to quickly plug-in all the common "
"functionalities you need a contract to have."
msgstr ""
"La composibilidad de los componentes realmente brilla al combinar varios de "
"ellos juntos. Cada uno añade sus características al contrato. Puede confiar "
"en [Openzeppelin's](https://github.com/OpenZeppelin/cairo-contracts) la "
"implementación de componentes para conectar rápidamente todas las "
"funcionalidades comunes que necesita un contrato para tener."

#: src/ch16-02-00-composability-and-components.md:318
msgid ""
"Developers can focus on their core contract logic while relying on battle-"
"tested and audited components for everything else."
msgstr ""
"Los desarrolladores pueden centrarse en su lógica de contrato principal "
"mientras confían en componentes probados y auditados para todo lo demás."

#: src/ch16-02-00-composability-and-components.md:321
msgid ""
"Components can even [depend](./ch16-02-02-component-dependencies.md) on "
"other components by restricting the `TContractstate` they're generic on to "
"implement the trait of another component. Before we dive into this "
"mechanism, let's first look at [how components work under the hood](./"
"ch16-02-01-under-the-hood.md)."
msgstr ""
"Los componentes pueden incluso [depender](./ch16-02-02-component-"
"dependencias.md) de otros componentes restringiendo el `TContractstate` son "
"genéricos para implementar el rasgo de otro componente. Antes de sumergirnos "
"en este mecanismo, veamos primero [cómo funcionan los componentes bajo el "
"capó](./ch16-02-01-under-the-hood.md)."

#: src/ch16-02-01-under-the-hood.md:1
msgid "Components: Under the Hood"
msgstr "Componentes: Bajo el capó"

#: src/ch16-02-01-under-the-hood.md:3
msgid ""
"Components provide powerful modularity to Starknet contracts. But how does "
"this magic actually happen behind the scenes?"
msgstr ""
"Los componentes proporcionan una potente modularidad a los contratos de "
"Starknet. Pero, ¿cómo es que esta magia realmente sucede entre bastidores?"

#: src/ch16-02-01-under-the-hood.md:6
msgid ""
"This chapter will dive deep into the compiler internals to explain the "
"mechanisms that enable component composability."
msgstr ""
"Este capítulo se sumergirá profundamente en los internos del compilador para "
"explicar los mecanismos que permiten la composibilidad de los componentes."

#: src/ch16-02-01-under-the-hood.md:9
msgid "A Primer on Embeddable Impls"
msgstr "Un Primer sobre Implicaciones Incrustables"

#: src/ch16-02-01-under-the-hood.md:11
msgid ""
"Before digging into components, we need to understand _embeddable impls_."
msgstr ""
"Antes de cavar en los componentes, necesitamos entender _embeddable impls_."

#: src/ch16-02-01-under-the-hood.md:13
msgid ""
"An impl of a Starknet interface trait (marked with `#[starknet::interface]`) "
"can be made embeddable. Embeddable impls can be injected into any contract, "
"adding new entry points and modifying the ABI of the contract."
msgstr ""
"Un impl de un rasgo de interfaz de Starknet (marcado con [starknet::"
"interface]`) se puede hacer incrustable. Impls incrustable se puede inyectar "
"en cualquier contrato, añadiendo nuevos puntos de entrada y modificando el "
"ABI del contrato."

#: src/ch16-02-01-under-the-hood.md:17
msgid "Let's look at an example to see this in action:"
msgstr "Veamos un ejemplo para ver esto en acción:"

#: src/ch16-02-01-under-the-hood.md:42
msgid ""
"By embedding `SimpleImpl`, we externally expose `ret4` in the contract's ABI."
msgstr ""
"Al incorporar `SimpleImpl`, exponemos externamente `ret4` en el ABI del "
"contrato."

#: src/ch16-02-01-under-the-hood.md:44
msgid ""
"Now that we’re more familiar with the embedding mechanism, we can now see "
"how components build on this."
msgstr ""
"Ahora que estamos más familiarizados con el mecanismo de incrustación, ahora "
"podemos ver cómo los componentes se basan en esto."

#: src/ch16-02-01-under-the-hood.md:47
msgid "Inside Components: Generic Impls"
msgstr "Componentes interiores: Implicaciones genéricas"

#: src/ch16-02-01-under-the-hood.md:49
msgid "Recall the impl block syntax used in components:"
msgstr "Recuerde la sintaxis de bloque de impl utilizada en los componentes:"

#: src/ch16-02-01-under-the-hood.md:58
msgid "The key points:"
msgstr "Los puntos clave:"

#: src/ch16-02-01-under-the-hood.md:60
msgid ""
"`OwnableImpl` requires the implementation of the "
"`HasComponent<TContractState>` trait by the underlying contract, which is "
"automatically generated with the `component!()` macro when using a component "
"inside a contract."
msgstr ""
"`OwnableImpl` requiere la aplicación del rasgo `HasComponent<TContractState® "
"por el contrato subyacente, que se genera automáticamente con la macro "
"`componente!()` cuando se utiliza un componente dentro de un contrato."

#: src/ch16-02-01-under-the-hood.md:65
msgid ""
"The compiler will generate an impl that wraps any function in `OwnableImpl`, "
"replacing the `self: ComponentState<TContractState>` argument with `self: "
"TContractState`, where access to the component state is made via the "
"`get_component` function in the `HasComponent<TContractState>` trait."
msgstr ""
"El compilador generará un impl que envuelve cualquier función en "
"`OwnableImpl`, reemplazando el argumento `self: "
"ComponentState<TContractState® por `self: TContractState`, donde el acceso "
"al estado del componente se hace a través de la función `get_component` en "
"el rasgo `HasComponent<TContractState®."

#: src/ch16-02-01-under-the-hood.md:70
msgid ""
"For each component, the compiler generates a `HasComponent` trait. This "
"trait defines the interface to bridge between the actual `TContractState` of "
"a generic contract, and `ComponentState<TContractState>`."
msgstr ""
"Para cada componente, el compilador genera un rasgo \" HasComponent \", que "
"define la interfaz para establecer un puente entre el \" EstadoTContract \" "
"real de un contrato genérico y el \" EstadoComponent< EstadoTContract\"."

#: src/ch16-02-01-under-the-hood.md:75
msgid "// generated per component\n"
msgstr "// generado por componente\n"

#: src/ch16-02-01-under-the-hood.md:85
msgid ""
"In our context `ComponentState<TContractState>` is a type specific to the "
"ownable component, i.e. it has members based on the storage variables "
"defined in `ownable_component::Storage`. Moving from the generic "
"`TContractState` to `ComponentState<TContractState>` will allow us to embed "
"`Ownable` in any contract that wants to use it. The opposite direction "
"(`ComponentState<TContractState>` to `ContractState`) is useful for "
"dependencies (see the `Upgradeable` component depending on an `IOwnable` "
"implementation example in the [Components dependencies ](./ch16-02-02-"
"component-dependencies.md) section)."
msgstr ""
"En nuestro contexto, `ComponentState<TContractState` es un tipo específico "
"del componente propio, es decir, tiene miembros basados en las variables de "
"almacenamiento definidas en `ownable_component::Storage`. El paso del "
"`TContractState` genérico a `ContractState` genérico nos permitirá insertar "
"`Ownable` en cualquier contrato que desee utilizarlo. La dirección opuesta "
"(`ComponentState<TContractState` a `ContractState`) es útil para las "
"dependencias (véase el componente `Actualable` dependiendo de un ejemplo de "
"aplicación `Iownable` en la sección [Dependencias de los componentes](./"
"ch16-02-02-component-dependencias.md))."

#: src/ch16-02-01-under-the-hood.md:94
msgid ""
"To put it briefly, one should think of an implementation of the above "
"`HasComponent<T>` as saying: **“Contract whose state T has the upgradeable "
"component”.**"
msgstr ""
"Para decirlo brevemente, uno debe pensar en una implementación de lo "
"anterior `TieneComponente<T® como diciendo: **“Contrato cuyo estado T tiene "
"el componente actualizable”.**"

#: src/ch16-02-01-under-the-hood.md:98
msgid "`Ownable` is annotated with the `embeddable_as(<name>)` attribute:"
msgstr "`Ownable` está anotado con el atributo `embeddable_as(<name>)`:"

#: src/ch16-02-01-under-the-hood.md:100
msgid ""
"`embeddable_as` is similar to `embeddable`; it only applies to impls of "
"`starknet::interface` traits and allows embedding this impl in a contract "
"module. That said, `embeddable_as(<name>)` has another role in the context "
"of components. Eventually, when embedding `OwnableImpl` in some contract, we "
"expect to get an impl with the following functions:"
msgstr ""
"`embeddable_as` es similar a `embeddable`; sólo se aplica a los impls de "
"`starknet::interface` rasgos y permite insertar este impl en un módulo de "
"contrato. Dicho esto, `embeddable_as(<name>)` tiene otro papel en el "
"contexto de los componentes. Eventualmente, al incorporar `OwnableImpl` en "
"algún contrato, esperamos obtener un impl con las siguientes funciones:"

#: src/ch16-02-01-under-the-hood.md:112
msgid ""
"Note that while starting with a function receiving the generic type "
"`ComponentState<TContractState>`, we want to end up with a function "
"receiving `ContractState`. This is where `embeddable_as(<name>)` comes in. "
"To see the full picture, we need to see what is the impl generated by the "
"compiler due to the `embeddable_as(Ownable)` annotation:"
msgstr ""
"Tenga en cuenta que al comenzar con una función que recibe el tipo genérico "
"`ComponentState<TContractState®, queremos terminar con una función que "
"recibe `ContractState`. Aquí es donde entra `embeddable_as(<name>)`. Para "
"ver la imagen completa, necesitamos ver cuál es el impl generado por el "
"compilador debido a la anotación `embeddable_as(Ownable)`:"

#: src/ch16-02-01-under-the-hood.md:140
msgid ""
"Note that thanks to having an impl of `HasComponent<TContractState>`, the "
"compiler was able to wrap our functions in a new impl that doesn’t directly "
"know about the `ComponentState` type. `Ownable`, whose name we chose when "
"writing `embeddable_as(Ownable)`, is the impl that we will embed in a "
"contract that wants ownership."
msgstr ""
"Tenga en cuenta que gracias a tener un impl de "
"`HasComponent<TContractState®, el compilador fue capaz de envolver nuestras "
"funciones en un nuevo impl que no sabe directamente sobre el tipo "
"`ComponentState`. `Ownable`, cuyo nombre elegimos al escribir "
"`embeddable_as(Ownable)`, es el impl que vamos a insertar en un contrato que "
"quiere propiedad."

#: src/ch16-02-01-under-the-hood.md:146
msgid "Contract Integration"
msgstr "Integración contractual"

#: src/ch16-02-01-under-the-hood.md:148
msgid ""
"We've seen how generic impls enable component reusability. Next let's see "
"how a contract integrates a component."
msgstr ""
"Hemos visto cómo los impls genéricos permiten la reutilizabilidad de los "
"componentes. A continuación vamos a ver cómo un contrato integra un "
"componente."

#: src/ch16-02-01-under-the-hood.md:151
msgid ""
"The contract uses an **impl alias** to instantiate the component's generic "
"impl with the concrete `ContractState` of the contract."
msgstr ""
"En el contrato se utiliza un alias **impl** para presentar la impresión "
"genérica del componente con el concreto `Contract State'del contrato."

#: src/ch16-02-01-under-the-hood.md:161
msgid ""
"The above lines use the Cairo impl embedding mechanism alongside the impl "
"alias syntax. We’re instantiating the generic `OwnableImpl<TContractState>` "
"with the concrete type `ContractState`. Recall that "
"`OwnableImpl<TContractState>` has the `HasComponent<TContractState>` generic "
"impl parameter. An implementation of this trait is generated by the "
"`component!` macro."
msgstr ""
"Las líneas anteriores utilizan el mecanismo de inserción de El Cairo junto "
"con la sintaxis de impl alias. Estamos instaurando el genérico "
"`OwnableImpl<TContractState® con el tipo de concreto `ContractState`. "
"Recordemos que `OwnableImpl<TContractState® tiene el parámetro genérico "
"`HasComponent<TContractState®. Una implementación de este rasgo es generada "
"por el macro `component!`."

#: src/ch16-02-01-under-the-hood.md:167
msgid ""
"Note that only the using contract could have implemented this trait since "
"only it knows about both the contract state and the component state."
msgstr ""
"Tenga en cuenta que sólo el contrato de uso podría haber implementado este "
"rasgo ya que sólo sabe sobre el estado del contrato y el estado del "
"componente."

#: src/ch16-02-01-under-the-hood.md:171
msgid ""
"This glues everything together to inject the component logic into the "
"contract."
msgstr "Esto pega todo para inyectar la lógica del componente en el contrato."

#: src/ch16-02-01-under-the-hood.md:173
msgid "Key Takeaways"
msgstr "Llaves para llevar"

#: src/ch16-02-01-under-the-hood.md:175
msgid ""
"Embeddable impls allow injecting components logic into contracts by adding "
"entry points and modifying the contract ABI."
msgstr ""
"Los impls integrables permiten inyectar componentes lógicos en los contratos "
"añadiendo puntos de entrada y modificando el contrato ABI."

#: src/ch16-02-01-under-the-hood.md:177
msgid ""
"The compiler automatically generates a `HasComponent` trait implementation "
"when a component is used in a contract. This creates a bridge between the "
"contract's state and the component's state, enabling interaction between the "
"two."
msgstr ""
"El compilador genera automáticamente un rasgo de `HasComponent` cuando un "
"componente se utiliza en un contrato, lo que crea un puente entre el estado "
"del contrato y el estado del componente, permitiendo la interacción entre "
"ambos."

#: src/ch16-02-01-under-the-hood.md:181
msgid ""
"Components encapsulate reusable logic in a generic, contract-agnostic way. "
"Contracts integrate components through impl aliases and access them via the "
"generated `HasComponent` trait."
msgstr ""
"Los componentes encapsulan la lógica reutilizable de manera genérica y "
"agnóstica: los contratos integran componentes mediante alias y acceden a "
"ellos a través del rasgo generado \" HasComponent \"."

#: src/ch16-02-01-under-the-hood.md:184
msgid ""
"Components build on embeddable impls by defining generic component logic "
"that can be integrated into any contract wanting to use that component. Impl "
"aliases instantiate these generic impls with the contract's concrete storage "
"types."
msgstr ""
"Los componentes se basan en impls incrustables mediante la definición de la "
"lógica genérica de componentes que puede integrarse en cualquier contrato "
"que desee utilizar ese componente. Implicar alias instanciar estos impls "
"genéricos con los tipos de almacenamiento de hormigón del contrato."

#: src/ch16-02-02-component-dependencies.md:3
msgid ""
"Working with components becomes more complex when we try to use one "
"component inside another. As mentioned earlier, a component can only be "
"embedded within a contract, meaning that it's not possible to embed a "
"component within another component. However, this doesn't mean that we can't "
"use one component inside another. In this section, we will see how to use a "
"component as a dependency of another component."
msgstr ""
"Trabajar con componentes se vuelve más complejo cuando tratamos de usar un "
"componente dentro de otro. Como se mencionó anteriormente, un componente "
"sólo puede ser incrustado dentro de un contrato, lo que significa que no es "
"posible incrustar un componente dentro de otro componente. Sin embargo, esto "
"no significa que no podamos utilizar un componente dentro de otro. En esta "
"sección, veremos cómo utilizar un componente como dependencia de otro "
"componente."

#: src/ch16-02-02-component-dependencies.md:5
msgid ""
"Consider a component called `OwnableCounter` whose purpose is to create a "
"counter that can only be incremented by its owner. This component can be "
"embedded in any contract, so that any contract that uses it will have a "
"counter that can only be incremented by its owner."
msgstr ""
"Considere un componente llamado `OwnableCounter` cuyo propósito es crear un "
"contador que sólo puede ser incrementado por su propietario. Este componente "
"puede ser incrustado en cualquier contrato, de modo que cualquier contrato "
"que lo utilice tendrá un contador que sólo puede ser incrementado por su "
"propietario."

#: src/ch16-02-02-component-dependencies.md:7
msgid ""
"The first way to implement this is to create a single component that "
"contains both counter and ownership features from within a single component. "
"However, this approach is not recommended: our goal is to minimize the "
"amount of code duplication and take advantage of component reusability. "
"Instead, we can create a new component that _depends_ on the `Ownable` "
"component for the ownership features, and internally defines the logic for "
"the counter."
msgstr ""
"La primera forma de implementar esto es crear un único componente que "
"contenga tanto funciones de contador como de propiedad desde un solo "
"componente. Sin embargo, no se recomienda este enfoque: nuestro objetivo es "
"minimizar la cantidad de duplicación de código y aprovechar la "
"reutilizabilidad de los componentes. En su lugar, podemos crear un nuevo "
"componente que _depende_ del componente `Ownable` para las características "
"de propiedad, y define internamente la lógica para el contador."

#: src/ch16-02-02-component-dependencies.md:9
msgid ""
"Listing 16-1 shows the complete implementation, which we'll break down right "
"after:"
msgstr ""
"La lista 16-1 muestra la implementación completa, que desglosaremos "
"inmediatamente después:"

#: src/ch16-02-02-component-dependencies.md:58
msgid ""
"<span class=\"caption\">Listing 16-1: An OwnableCounter Component</span>"
msgstr ""
"<span class=\"caption\">Lista 16-1: Un componente de contador propio</span>"

#: src/ch16-02-02-component-dependencies.md:60
msgid "Specificities"
msgstr "Especificidades"

#: src/ch16-02-02-component-dependencies.md:62
msgid "Specifying Dependencies on Another Component"
msgstr "Especificación de dependencias en otro componente"

#: src/ch16-02-02-component-dependencies.md:73
msgid ""
"In [chapter 8](./ch08-02-traits-in-cairo.md), we introduced trait bounds, "
"which are used to specify that a generic type must implement a certain "
"trait. In the same way, we can specify that a component depends on another "
"component by restricting the `impl` block to be available only for contracts "
"that contain the required component. In our case, this is done by adding a "
"restriction `impl Owner: ownable_component::HasComponent<TContractState>`, "
"which indicates that this `impl` block is only available for contracts that "
"contain an implementation of the `ownable_component::HasComponent` trait. "
"This essentially means that the \\`TContractState' type has access to the "
"ownable component. See [Components under the hood](ch16-02-01-under-the-hood."
"md#inside-components-generic-impls) for more information."
msgstr ""
"En [capítulo 8](./ch08-02-traits-in-cairo.md), introdujimos límites de "
"rasgos, que se utilizan para especificar que un tipo genérico debe "
"implementar un determinado rasgo. De la misma manera, podemos especificar "
"que un componente depende de otro componente limitando el bloque `impl` a "
"estar disponible sólo para contratos que contengan el componente requerido. "
"En nuestro caso, esto se hace añadiendo una restricción `impl Propietario: "
"propietario_componente:::TieneComponente<TContractState®, que indica que "
"este bloque `impl` sólo está disponible para contratos que contengan una "
"aplicación del componente `ownable_componente::TieneComponente` trait. Esto "
"significa esencialmente que el tipo TContractState' tiene acceso al "
"componente propio. Véase [Componentes bajo la campana](ch16-02-01-under-the-"
"hood.md#inside-components-generic-impls) para más información."

#: src/ch16-02-02-component-dependencies.md:76
msgid ""
"Although most of the trait bounds were defined using \\[anonymous "
"parameters\\]\\[anonymous generic impl operator\\], the dependency on the "
"`Ownable` component is defined using a named parameter (here, `Owner`). We "
"will need to use this explicit name when accessing the `Ownable`component "
"within the`impl` block."
msgstr ""
"Aunque la mayoría de los límites del rasgo se definieron utilizando "
"\\[parámetros anónimos\\]\\[operador genérico de impresión anónimo\\], la "
"dependencia del componente `Ownable` se define utilizando un parámetro "
"denominado (aquí, `Owner`). Necesitaremos usar este nombre explícito al "
"acceder al componente `Ownable` dentro del bloque `impl`."

#: src/ch16-02-02-component-dependencies.md:78
msgid ""
"While this mechanism is verbose and may not be easy to approach at first, it "
"is a powerful leverage of the trait system in Cairo. The inner workings of "
"this mechanism are abstracted away from the user, and all you need to know "
"is that when you embed a component in a contract, all other components in "
"the same contract can access it."
msgstr ""
"Aunque este mecanismo es verbal y puede no ser fácil de abordar al "
"principio, es un poderoso apalancamiento del sistema de rasgo en El Cairo. "
"El funcionamiento interno de este mecanismo se abstrae del usuario, y todo "
"lo que necesita saber es que cuando se incrusta un componente en un "
"contrato, todos los demás componentes en el mismo contrato pueden acceder a "
"él."

#: src/ch16-02-02-component-dependencies.md:82
msgid ""
"\\[anonymous generic impl operator\\]: ./ch08-01-generic-data-types "
"md#anonymous-generic-implementation-parameter--operator"
msgstr ""
"\\[anónimo genérico impl operator\\]:./ch08-01-genérico-datos-tipos "
"md#anonymous-genérico-implementación-parametro--operador"

#: src/ch16-02-02-component-dependencies.md:84
msgid "Using the Dependency"
msgstr "Uso de la dependencia"

#: src/ch16-02-02-component-dependencies.md:86
msgid ""
"Now that we have made our `impl` depend on the `Ownable` component, we can "
"access its functions, storage, and events within the implementation block. "
"To bring the `Ownable` component into scope, we have two choices, depending "
"on whether we intend to mutate the state of the `Ownable` component or not. "
"If we want to access the state of the `Ownable` component without mutating "
"it, we use the `get_dep_component!` macro. If we want to mutate the state of "
"the `Ownable` component (for example, change the current owner), we use the "
"`get_dep_component_mut!` macro. Both macros take two arguments: the first is "
"`self`, either as a snapshot or by reference depending on mutability, "
"representing the state of the component using the dependency, and the second "
"is the component to access."
msgstr ""
"Ahora que hemos hecho que nuestro componente `Ownable` dependa del "
"componente `Ownable`, podemos acceder a sus funciones, almacenamiento y "
"eventos dentro del bloque de aplicación. Para poner el componente `Ownable` "
"en el ámbito de aplicación, tenemos dos opciones, dependiendo de si tenemos "
"la intención de mutar el estado del componente `Ownable` o no. Si queremos "
"acceder al estado del componente `Ownable` sin mutarlo, utilizamos el macro "
"`get_dep_component!'. Si queremos mutar el estado del componente `Ownable` "
"(por ejemplo, cambiar el propietario actual), utilizamos el macro "
"`get_dep_component_mut!. Ambos macros tienen dos argumentos: el primero es "
"`auto', ya sea como una instantánea o por referencia dependiendo de la "
"mutabilidad, que representa el estado del componente utilizando la "
"dependencia, y el segundo es el componente al que se accede."

#: src/ch16-02-02-component-dependencies.md:98
msgid ""
"In this function, we want to make sure that only the owner can call the "
"`increment` function. We need to use the `assert_only_owner` function from "
"the `Ownable` component. We'll use the `get_dep_component!` macro which will "
"return a snapshot of the requested component state, and call "
"`assert_only_owner` on it, as a method of that component."
msgstr ""
"En esta función, queremos asegurarnos de que sólo el propietario puede "
"llamar a la función `incremento`. Necesitamos utilizar la función "
"`assert_only_owner` desde el componente `Ownable`. Usaremos la macro "
"`get_dep_component!` que devolverá una instantánea del estado del componente "
"solicitado, y llamaremos a `assert_only_owner` en él, como un método de ese "
"componente."

#: src/ch16-02-02-component-dependencies.md:101
msgid ""
"For the `transfer_ownership` function, we want to mutate that state to "
"change the current owner. We need to use the `get_dep_component_mut!` macro, "
"which will return the requested component state as a mutable reference, and "
"call `transfer_ownership` on it."
msgstr ""
"Para la función `transfer_ownership`, queremos mutar ese estado para cambiar "
"el propietario actual. Necesitamos usar la macro `get_dep_component_mut!`, "
"que devolverá el estado de componente solicitado como una referencia "
"mutable, y llamar a `transfer_ownership` en él."

#: src/ch16-02-02-component-dependencies.md:112
msgid ""
"It works exactly the same as `get_dep_component!` except that we need to "
"pass the state as a `ref` so we can mutate it to transfer the ownership."
msgstr ""
"Funciona exactamente igual que `get_dep_component!` excepto que tenemos que "
"pasar el estado como `ref` para que podamos mutarlo para transferir la "
"propiedad."

#: src/ch16-02-03-testing-components.md:3
msgid ""
"Testing components is a bit different than testing contracts. Contracts need "
"to be tested against a specific state, which can be achieved by either "
"deploying the contract in a test, or by simply getting the `ContractState` "
"object and modifying it in the context of your tests."
msgstr ""
"Los componentes de prueba son un poco diferentes a los contratos de prueba. "
"Los contratos deben ser probados contra un estado específico, que puede "
"lograrse mediante el despliegue del contrato en una prueba, o simplemente "
"obteniendo el objeto `Contract State'y modificándolo en el contexto de sus "
"pruebas."

#: src/ch16-02-03-testing-components.md:6
msgid ""
"Components are a generic construct, meant to be integrated in contracts, "
"that can't be deployed on their own and don't have a `ContractState` object "
"that we could use. So how do we test them?"
msgstr ""
"Los componentes son un constructo genérico, destinado a ser integrado en "
"contratos, que no pueden ser implementados por sí mismos y no tienen un "
"objeto `Contract State` que podamos usar. Entonces, ¿cómo los probamos?"

#: src/ch16-02-03-testing-components.md:8
msgid ""
"Let's consider that we want to test a very simple component called "
"\"Counter\", that will allow each contract to have a counter that can be "
"incremented. The component is defined in Listing 16-2:"
msgstr ""
"Consideremos que queremos probar un componente muy simple llamado "
"\"Counter\", que permitirá a cada contrato tener un contador que se puede "
"incrementar. El componente se define en Listado 16-2:"

#: src/ch16-02-03-testing-components.md:33
msgid "<span class=\"caption\">Listing 16-2: A simple Counter component</span>"
msgstr ""
"<span class=\"caption\">Lista 16-2: Un simple componente de contador</span>"

#: src/ch16-02-03-testing-components.md:35
msgid "Testing the Component by Deploying a Mock Contract"
msgstr "Probando el componente mediante el despliegue de un contrato de mock"

#: src/ch16-02-03-testing-components.md:37
msgid ""
"The easiest way to test a component is to integrate it within a mock "
"contract. This mock contract is only used for testing purposes, and only "
"integrates the component you want to test. This allows you to test the "
"component in the context of a contract, and to use a Dispatcher to call the "
"component's entry points."
msgstr ""
"La forma más fácil de probar un componente es integrarlo en un contrato "
"simulado. Este contrato simulado sólo se utiliza para fines de prueba, y "
"sólo integra el componente que desea probar. Esto le permite probar el "
"componente en el contexto de un contrato, y utilizar un Dispatcher para "
"llamar a los puntos de entrada del componente."

#: src/ch16-02-03-testing-components.md:39
msgid "We can define such a mock contract as follows:"
msgstr "Podemos definir este tipo de contrato simulado de la siguiente manera:"

#: src/ch16-02-03-testing-components.md:65
msgid ""
"This contract is entirely dedicated to testing the `Counter` component. It "
"embeds the component with the `component!` macro, exposes the component's "
"entry points by annotating the impl aliases with `#[abi(embed_v0)]`."
msgstr ""
"Este contrato se dedica enteramente a probar el componente `Counter`. "
"Incrusta el componente con el `componente!` macro, expone los puntos de "
"entrada del componente anotando los alias de impl con '[abi(embed_v0)] '."

#: src/ch16-02-03-testing-components.md:67
msgid ""
"We also need to define an interface that will be required to interact "
"externally with this mock contract."
msgstr ""
"También tenemos que definir una interfaz que será necesaria para interactuar "
"externamente con este contrato simulado."

#: src/ch16-02-03-testing-components.md:77
msgid ""
"We can now write tests for the component by deploying this mock contract and "
"calling its entry points, as we would with a typical contract."
msgstr ""
"Ahora podemos escribir pruebas para el componente implementando este "
"contrato simulado y llamando a sus puntos de entrada, como lo haríamos con "
"un contrato típico."

#: src/ch16-02-03-testing-components.md:107
msgid "Testing Components Without Deploying a Contract"
msgstr "Ensayo de componentes sin recurrir a un contrato"

#: src/ch16-02-03-testing-components.md:109
msgid ""
"In [Components under the hood](./ch16-02-01-under-the-hood.md), we saw that "
"components leveraged genericity to define storage and logic that could be "
"embedded in multiple contracts. If a contract embeds a component, a "
"`HasComponent` trait is created in this contract, and the component methods "
"are made available."
msgstr ""
"En [Componentes bajo el capó](./ch16-02-01-under-the-hood.md), vimos que los "
"componentes aprovechaban la genericidad para definir el almacenamiento y la "
"lógica que podían integrarse en múltiples contratos. Si un contrato incrusta "
"un componente, en este contrato se crea un rasgo \" HasComponent \" y se "
"ponen a disposición los métodos de componentes."

#: src/ch16-02-03-testing-components.md:111
msgid ""
"This informs us that if we can provide a concrete `TContractState` that "
"implements the `HasComponent` trait to the `ComponentState` struct, should "
"be able to directly invoke the methods of the component using this concrete "
"`ComponentState` object, without having to deploy a mock."
msgstr ""
"Esto nos informa de que si podemos proporcionar un \" Estado contratante \" "
"concreto que ponga en práctica el rasgo \" TieneComponente \" de la "
"estructura \" Estado contratante \", debería poder invocar directamente los "
"métodos del componente utilizando este objeto concreto \" Estado contratante "
"\", sin tener que utilizar un simulacro."

#: src/ch16-02-03-testing-components.md:113
msgid ""
"Let's see how we can do that by using type aliases. We still need to define "
"a mock contract - let's use the same as above - but this time, we won't need "
"to deploy it."
msgstr ""
"Vamos a ver cómo podemos hacer eso usando alias de tipo. Todavía tenemos que "
"definir un contrato simulado - usemos lo mismo que arriba - pero esta vez, "
"no necesitaremos implementarlo."

#: src/ch16-02-03-testing-components.md:115
msgid ""
"First, we need to define a concrete implementation of the generic "
"`ComponentState` type using a type alias. We will use the `MockContract::"
"ContractState` type to do so."
msgstr ""
"En primer lugar, es necesario definir una aplicación concreta del tipo "
"genérico `EstadoComponente` utilizando un alias de tipo. Para ello, "
"utilizaremos el tipo `Contrato::EstadoContractual`."

#: src/ch16-02-03-testing-components.md:123
#: src/ch16-02-03-testing-components.md:167
msgid "// You can derive even `Default` on this type alias\n"
msgstr "// Usted puede derivar incluso `Default` en este tipo de alias\n"

#: src/ch16-02-03-testing-components.md:144
msgid ""
"We defined the `TestingState` type as an alias of the `CounterComponent::"
"ComponentState<MockContract::ContractState>` type. By passing the "
"`MockContract::ContractState` type as a concrete type for `ComponentState`, "
"we aliased a concrete implementation of the `ComponentState` struct to "
"`TestingState`."
msgstr ""
"Definimos el tipo `Estado de prueba` como un alias del "
"`ContrastanteComponente::EstadoComponente<MockContract::EstadoContrastante* "
"Tipo. Al pasar el tipo `MockContract::EstadoContrastante` como un tipo "
"concreto para `EstadoComponente`, alias una aplicación concreta del "
"`EstadoComponente` estructura a `Estado de prueba`."

#: src/ch16-02-03-testing-components.md:146
msgid ""
"Because `MockContract` embeds `CounterComponent`, the methods of "
"`CounterComponent` defined in the `CounterImpl` block can now be used on a "
"`TestingState` object."
msgstr ""
"Dado que `MockContract` incorpora `CounterComponent`, los métodos de "
"`CounterComponent` definidos en el bloque `CounterImpl` ahora pueden "
"utilizarse en un objeto `TestingState`."

#: src/ch16-02-03-testing-components.md:148
msgid ""
"Now that we have made these methods available, we need to instantiate an "
"object of type `TestingState`, that we will use to test the component. We "
"can do so by calling the `component_state_for_testing` function, which "
"automatically infers that it should return an object of type `TestingState`."
msgstr ""
"Ahora que hemos puesto estos métodos a disposición, necesitamos instanciar "
"un objeto de tipo `TestingState`, que usaremos para probar el componente. "
"Podemos hacerlo llamando a la función `component_state_for_testing`, que "
"automáticamente infiere que debe devolver un objeto de tipo `TestingState`."

#: src/ch16-02-03-testing-components.md:150
msgid ""
"We can even implement this as part of the `Default` trait, which allows us "
"to return an empty `TestingState` with the `Default::default()` syntax."
msgstr ""
"Incluso podemos implementar esto como parte del rasgo `Default`, que nos "
"permite devolver un `Estado de prueba` vacío con la sintaxis `Default::"
"default()`."

#: src/ch16-02-03-testing-components.md:152
msgid "Let's summarize what we've done so far:"
msgstr "Vamos a resumir lo que hemos hecho hasta ahora:"

#: src/ch16-02-03-testing-components.md:154
msgid "We defined a mock contract that embeds the component we want to test."
msgstr ""
"Definimos un contrato simulado que incrusta el componente que queremos "
"probar."

#: src/ch16-02-03-testing-components.md:155
msgid ""
"We defined a concrete implementation of `ComponentState<TContractState>` "
"using a type alias with `MockContract::ContractState`, that we named "
"`TestingState`."
msgstr ""
"Definimos una aplicación concreta de "
"`Estadocomponente<EstadoTcontractatorio} utilizando un tipo de alias con "
"`MockContract::EstadoContractual`, que llamamos `EstadoPruebador`."

#: src/ch16-02-03-testing-components.md:156
msgid ""
"We defined a function that uses `component_state_for_testing` to return a "
"`TestingState` object."
msgstr ""
"Definimos una función que utiliza `component_state_for_testing` para "
"devolver un objeto `TestingState`."

#: src/ch16-02-03-testing-components.md:158
msgid ""
"We can now write tests for the component by calling its functions directly, "
"without having to deploy a mock contract. This approach is more lightweight "
"than the previous one, and it allows testing internal functions of the "
"component that are not exposed to the outside world trivially."
msgstr ""
"Ahora podemos escribir pruebas para el componente llamando a sus funciones "
"directamente, sin tener que implementar un contrato simulado. Este enfoque "
"es más ligero que el anterior, y permite probar funciones internas del "
"componente que no están expuestas al mundo exterior trivialmente."

#: src/ch16-03-upgradeability.md:1
msgid "Upgradeable Contracts"
msgstr "Contratos actualizables"

#: src/ch16-03-upgradeability.md:3
msgid ""
"Starknet separates contracts into classes and instances, making it simple to "
"upgrade a contract's logic without affecting its state."
msgstr ""
"Starknet separa los contratos en clases e instancias, por lo que es fácil "
"actualizar la lógica de un contrato sin afectar su estado."

#: src/ch16-03-upgradeability.md:5
msgid ""
"A contract class is the definition of the semantics of a contract. It "
"includes the entire logic of a contract: the name of the entry points, the "
"addresses of the storage variables, the events that can be emitted, etc. "
"Each class is uniquely identified by its class hash. A class does not have "
"its own storage: it's only a definition of logic."
msgstr ""
"Una clase de contrato es la definición de la semántica de un contrato. "
"Incluye toda la lógica de un contrato: el nombre de los puntos de entrada, "
"las direcciones de las variables de almacenamiento, los eventos que pueden "
"emitirse, etc. Cada clase es identificada de manera única por su hachís de "
"clase. Una clase no tiene su propio almacenamiento: es sólo una definición "
"de lógica."

#: src/ch16-03-upgradeability.md:7
msgid ""
"Classes are typically identified by a [class hash](https://docs.starknet.io/"
"documentation/architecture_and_concepts/Smart_Contracts/class-hash). When "
"declaring a class, the network registers it and assigns a unique hash used "
"to identify the class and deploy contract instances from it."
msgstr ""
"Las clases suelen ser identificadas por un hash [clase] (https://docs."
"starknet.io/documentation/architecture_and_concepts/Smart_Contracts/class-"
"hash). Al declarar una clase, la red la registra y asigna un hash único "
"utilizado para identificar la clase y desplegar instancias de contrato desde "
"ella."

#: src/ch16-03-upgradeability.md:9
msgid ""
"A contract instance is a deployed contract corresponding to a class, with "
"its own storage."
msgstr ""
"Una instancia de contrato es un contrato desplegado que corresponde a una "
"clase, con su propio almacenamiento."

#: src/ch16-03-upgradeability.md:11
msgid ""
"Starknet natively supports upgradeable contracts through the "
"`replace_class_syscall` [system call](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/system-calls-cairo1/), enabling "
"simple contract upgrades without affecting the contract's state."
msgstr ""
"Starknet apoya de forma nativa los contratos actualizables a través del "
"`replace_class_syscall` [llamada al sistema] (https://docs.starknet.io/"
"documentation/architecture_and_concepts/Smart_Contracts/system-calls-"
"cairo1/), permitiendo mejoras simples de contratos sin afectar el estado del "
"contrato."

#: src/ch16-03-upgradeability.md:16
msgid "Upgrading Contracts"
msgstr "Mejora de los contratos"

#: src/ch16-03-upgradeability.md:18
msgid ""
"To upgrade a contract, expose an entry point that executes "
"`replace_class_syscall` with the new class hash as an argument:"
msgstr ""
"Para actualizar un contrato, exponga un punto de entrada que ejecute "
"`replace_class_syscall` con el nuevo hash de clase como argumento:"

#: src/ch16-03-upgradeability.md:31
msgid ""
"<span class=\"caption\">Listing 16-3: Exposing `replace_class_syscall` to "
"update the contract's class</span>"
msgstr ""
"<span class=\"caption\">Lista 16-3: Exponiendo `replace_class_syscall` para "
"actualizar la clase del contrato</span>"

#: src/ch16-03-upgradeability.md:33
msgid ""
"Note: Thoroughly review changes and potential impacts before upgrading, as "
"it's a delicate procedure with security implications. Don't allow arbitrary "
"addresses to upgrade your contract."
msgstr ""
"Nota: Revise a fondo los cambios e impactos potenciales antes de actualizar, "
"ya que es un procedimiento delicado con implicaciones de seguridad. No "
"permita que las direcciones arbitrarias actualicen su contrato."

#: src/ch16-03-upgradeability.md:35
msgid "Upgradeable Component"
msgstr "Componente actualizable"

#: src/ch16-03-upgradeability.md:37
msgid ""
"OpenZeppelin Contracts for Cairo provides the `Upgradeable` component that "
"can be embedded into your contract to make it upgradeable. This component is "
"a simple way to add upgradeability to your contract while relying on an "
"audited library. It can be combined with the `Ownable` component to restrict "
"the upgradeability to a single address, so that the contract owner has the "
"exclusive right to upgrade the contract."
msgstr ""
"OpenZeppelin Contracts for Cairo proporciona el componente `Upgradeable` que "
"se puede incorporar en su contrato para que sea actualizable. Este "
"componente es una forma sencilla de añadir upgradeability a su contrato "
"mientras confía en una biblioteca auditada. Se puede combinar con el "
"componente `Ownable` para restringir la upgradeability a una sola dirección, "
"de modo que el propietario del contrato tiene el derecho exclusivo de "
"actualizar el contrato."

#: src/ch16-03-upgradeability.md:51
msgid "/// Ownable\n"
msgstr "/// Propiedad\n"

#: src/ch16-03-upgradeability.md:56
msgid "/// Upgradeable\n"
msgstr "/// Actualizable\n"

#: src/ch16-03-upgradeability.md:84
msgid "// This function can only be called by the owner\n"
msgstr "// Esta función sólo puede ser llamada por el propietario\n"

#: src/ch16-03-upgradeability.md:87
msgid "// Replace the class hash upgrading the contract\n"
msgstr "// Reemplazar el hash de clase que mejora el contrato\n"

#: src/ch16-03-upgradeability.md:94
msgid ""
"<span class=\"caption\">Listing 16-4 Integrating OpenZeppelin's Upgradeable "
"component in a contract</span>"
msgstr ""
"<span class=\"caption\">Lista 16-4 Integrar el componente actualizable de "
"OpenZeppelin en un contrato</span>"

#: src/ch16-03-upgradeability.md:96
msgid ""
"For more information, please refer to the [OpenZeppelin docs API reference]"
"(https://docs.openzeppelin.com/contracts-cairo/0.9.0/api/upgrades)."
msgstr ""
"Para más información, consulte la [Referencia API OpenZeppelin docs](https://"
"docs.openzeppelin.com/contracts-cairo/0.9.0/api/upgrades)."

#: src/ch16-04-L1-L2-messaging.md:1
msgid "L1-L2 Messaging"
msgstr "Mensajería L1-L2"

#: src/ch16-04-L1-L2-messaging.md:3
msgid "A crucial feature of a Layer 2 is its ability to interact with Layer 1."
msgstr ""
"Una característica crucial de una capa 2 es su capacidad de interactuar con "
"la capa 1."

#: src/ch16-04-L1-L2-messaging.md:5
msgid ""
"Starknet has its own `L1-L2` messaging system, which is different from its "
"consensus mechanism and the submission of state updates on L1. Messaging is "
"a way for smart-contracts on L1 to interact with smart-contracts on L2 (or "
"the other way around), allowing us to do \"cross-chain\" transactions. For "
"example, we can do some computations on a chain and use the result of this "
"computation on the other chain."
msgstr ""
"Starknet tiene su propio sistema de mensajería `L1-L2`, que es diferente de "
"su mecanismo de consenso y la presentación de actualizaciones de estado en "
"L1. La mensajería es una manera para que los contratos inteligentes en L1 "
"interactúen con contratos inteligentes en L2 (o al revés), permitiéndonos "
"hacer transacciones de \"cadena cruzada\". Por ejemplo, podemos hacer "
"algunos cálculos en una cadena y utilizar el resultado de este cálculo en la "
"otra cadena."

#: src/ch16-04-L1-L2-messaging.md:7
msgid ""
"Bridges on Starknet all use `L1-L2` messaging. Let's say that you want to "
"bridge tokens from Ethereum to Starknet. You will simply have to deposit "
"your tokens in the L1 bridge contract, which will automatically trigger the "
"minting of the same token on L2. Another good use case for `L1-L2` messaging "
"would be [DeFi pooling](https://starkware.co/resource/defi-pooling/)."
msgstr ""
"Puentes en Starknet todos usan mensajería `L1-L2`. Digamos que usted quiere "
"puentear tokens de Ethereum a Starknet. Usted tendrá que simplemente "
"depositar sus tokens en el contrato del puente L1, que activará "
"automáticamente la acuñación del mismo token en L2. Otro buen caso de uso "
"para mensajería `L1-L2` sería [la puesta en común de DeFi] (https://"
"starkware.co/resource/defi-pooling/)."

#: src/ch16-04-L1-L2-messaging.md:9
msgid ""
"On Starknet, it's important to note that the messaging system is "
"**asynchronous** and **asymmetric**."
msgstr ""
"En Starknet, es importante notar que el sistema de mensajería es "
"**asíncrono** y **asimétrico**."

#: src/ch16-04-L1-L2-messaging.md:11
msgid ""
"**Asynchronous**: this means that in your contract code (being Solidity or "
"Cairo), you can't wait the result of the message being sent on the other "
"chain within your contract code execution."
msgstr ""
"**Asíncrono**: esto significa que en su código de contrato (siendo Solidity "
"o El Cairo), no puede esperar el resultado del mensaje que se envía en la "
"otra cadena dentro de la ejecución del código de contrato."

#: src/ch16-04-L1-L2-messaging.md:12
msgid ""
"**Asymmetric**: sending a message from Ethereum to Starknet (`L1->L2`) is "
"fully automated by the Starknet sequencer, which means that the message is "
"being automatically delivered to the target contract on L2. However, when "
"sending a message from Starknet to Ethereum (`L2->L1`), only the hash of the "
"message is sent on L1 by the Starknet sequencer. You must then consume the "
"message manually via a transaction on L1."
msgstr ""
"** Asimétrico**: enviar un mensaje de Ethereum a Starknet (`L1->L2`) está "
"completamente automatizado por el secuenciador Starknet, lo que significa "
"que el mensaje se está entregando automáticamente al contrato de destino en "
"L2. Sin embargo, cuando se envía un mensaje de Starknet a Ethereum (`L2-"
">L1`), sólo el hash del mensaje es enviado en L1 por el secuenciador "
"Starknet. Debe consumir el mensaje manualmente a través de una transacción "
"en L1."

#: src/ch16-04-L1-L2-messaging.md:14
msgid "Let's dive into the details."
msgstr "Vamos a sumergirnos en los detalles."

#: src/ch16-04-L1-L2-messaging.md:18
msgid "The StarknetMessaging Contract"
msgstr "El contrato StarknetMessaging"

#: src/ch16-04-L1-L2-messaging.md:20
msgid ""
"The crucial component of the `L1-L2` Messaging system is the [`StarknetCore`]"
"(https://etherscan.io/address/0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4) "
"contract. It is a set of Solidity contracts deployed on Ethereum that allows "
"Starknet to function properly. One of the contracts of `StarknetCore` is "
"called `StarknetMessaging` and it is the contract responsible for passing "
"messages between Starknet and Ethereum. `StarknetMessaging` follows an "
"[interface](https://github.com/starkware-libs/cairo-lang/"
"blob/4e233516f52477ad158bc81a86ec2760471c1b65/src/starkware/starknet/eth/"
"IStarknetMessaging.sol#L6) with functions allowing to send message to L2, "
"receiving messages on L1 from L2 and canceling messages."
msgstr ""
"El componente crucial del sistema de mensajería `L1-L2` es el contrato "
"[`StarknetCore`] (https://etherscan.io/"
"address/0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4), que es un conjunto de "
"contratos de solidez implementados en Ethereum que permite a Starknet "
"funcionar correctamente. Uno de los contratos de `StarknetCore` se llama "
"`StarknetMessaging` y es el contrato responsable de transmitir mensajes "
"entre Starknet y Ethereum. `StarknetMessag` sigue una [interfaz](https://"
"github.com/starkware-libs/cairo-lang/"
"blob/4e233516f52477ad158b81a86ec27601c1b65/src/starkware/starknet/"
"IStarknetMessaging.sol#L6) con funciones que permiten enviar mensajes a L2, "
"recibir mensajes de L1 y cancelar mensajes de L1."

#: src/ch16-04-L1-L2-messaging.md:51
msgid "<span class=\"caption\"> Starknet messaging contract interface</span>"
msgstr ""
"<span class=\"caption\"> Interfaz de contrato de mensajería Starknet</span>"

#: src/ch16-04-L1-L2-messaging.md:53
msgid ""
"In the case of `L1->L2` messages, the Starknet sequencer is constantly "
"listening to the logs emitted by the `StarknetMessaging` contract on "
"Ethereum. Once a message is detected in a log, the sequencer prepares and "
"executes a `L1HandlerTransaction` to call the function on the target L2 "
"contract. This takes up to 1-2 minutes to be done (few seconds for ethereum "
"block to be mined, and then the sequencer must build and execute the "
"transaction)."
msgstr ""
"En el caso de los mensajes `L1->L2`, el secuenciador Starknet escucha "
"constantemente los registros emitidos por el contrato `StarknetMessaging` en "
"Ethereum. Una vez que un mensaje se detecta en un registro, el secuenciador "
"prepara y ejecuta una `L1HandlerTransaction` para llamar a la función en el "
"contrato L2 objetivo. Esto tarda hasta 1-2 minutos en hacerse (pocos "
"segundos para que el bloque etéreo se extraiga, y luego el secuenciador debe "
"construir y ejecutar la transacción)."

#: src/ch16-04-L1-L2-messaging.md:56
msgid ""
"`L2->L1` messages are prepared by contracts execution on L2 and are part of "
"the block produced. When the sequencer produces a block, it sends the hash "
"of each message prepared by contracts execution to the `StarknetCore` "
"contract on L1, where they can then be consumed once the block they belong "
"to is proven and verified on Ethereum (which for now is around 3-4 hours)."
msgstr ""
"Los mensajes `L2->L1` son preparados por la ejecución de contratos en L2 y "
"forman parte del bloque producido. Cuando el secuenciador produce un bloque, "
"envía el hash de cada mensaje preparado por la ejecución de contratos al "
"contrato `StarknetCore` en L1, donde pueden ser consumidos una vez que el "
"bloque al que pertenecen es probado y verificado en Ethereum (que por ahora "
"es de alrededor de 3-4 horas)."

#: src/ch16-04-L1-L2-messaging.md:62
msgid "Sending Messages from Ethereum to Starknet"
msgstr "Envío de mensajes de Ethereum a Starknet"

#: src/ch16-04-L1-L2-messaging.md:64
msgid ""
"If you want to send messages from Ethereum to Starknet, your Solidity "
"contracts must call the `sendMessageToL2` function of the "
"`StarknetMessaging` contract. To receive these messages on Starknet, you "
"will need to annotate functions that can be called from L1 with the "
"`#[l1_handler]` attribute."
msgstr ""
"Si desea enviar mensajes de Ethereum a Starknet, sus contratos de Solidity "
"deben llamar a la función `Enviar MensajeToL2` del contrato "
"`StarknetMessaging`. Para recibir estos mensajes en Starknet, tendrá que "
"anotar funciones que se pueden llamar desde L1 con el atributo "
"`[l1_handler]`."

#: src/ch16-04-L1-L2-messaging.md:66
msgid ""
"Let's take a simple contract taken from [this tutorial](https://github.com/"
"glihm/starknet-messaging-dev/blob/main/solidity/src/ContractMsg.sol) where "
"we want to send a message to Starknet. The `_snMessaging` is a state "
"variable already initialized with the address of the `StarknetMessaging` "
"contract. You can check all Starknet contract and sequencer addresses [here]"
"(https://docs.starknet.io/documentation/tools/important_addresses/)."
msgstr ""
"Tomemos un simple contrato tomado de [este tutorial] (https://github.com/"
"glihm/starknet-messaging-dev/blob/main/solidity/src/ContractMsg.sol) donde "
"queremos enviar un mensaje a Starknet. La variable `_snMessaging` es una "
"variable de estado ya inicializada con la dirección del contrato "
"`StarknetMessaging`. Puede comprobar todas las direcciones de contrato y "
"secuenciador de Starknet [aquí] (https://docs.starknet.io/documentation/"
"tools/important_direcciones/)."

#: src/ch16-04-L1-L2-messaging.md:70
msgid "// Sends a message on Starknet with a single felt.\n"
msgstr "// Envía un mensaje en Starknet con un solo fieltro.\n"

#: src/ch16-04-L1-L2-messaging.md:79
msgid ""
"// We \"serialize\" here the felt into a payload, which is an array of "
"uint256.\n"
msgstr ""
"// Aquí \"serializamos\" el fieltro en una carga útil, que es una matriz de "
"uint256.\n"

#: src/ch16-04-L1-L2-messaging.md:83
msgid "// msg.value must always be >= 20_000 wei.\n"
msgstr "// msg.value debe ser siempre = 20_000 wei.\n"

#: src/ch16-04-L1-L2-messaging.md:92
msgid ""
"The function sends a message with a single felt value to the "
"`StarknetMessaging` contract. Please note that if you want to send more "
"complex data you can. Just be aware that your Cairo contract will only "
"understand `felt252` data type. So you must ensure that the serialization of "
"your data into the `uint256` array follow the Cairo serialization scheme."
msgstr ""
"La función envía un mensaje con un solo valor de fieltro al contrato "
"`StarknetMessaging`. Tenga en cuenta que si desea enviar datos más complejos "
"que pueda. Sólo tenga en cuenta que su contrato de El Cairo sólo entenderá "
"el tipo de datos `felt252`. Por lo tanto, debe asegurarse de que la "
"serialización de sus datos en la matriz `uint256` siga el esquema de "
"serialización de El Cairo."

#: src/ch16-04-L1-L2-messaging.md:95
msgid ""
"It's important to note that we have `{value: msg.value}`. In fact, the "
"minimum value we've to send here is `20k wei`, due to the fact that the "
"`StarknetMessaging` contract will register the hash of our message in the "
"storage of Ethereum."
msgstr ""
"Es importante tener en cuenta que tenemos value: msg.value. De hecho, el "
"valor mínimo que tenemos que enviar aquí es `20k wei`, debido al hecho de "
"que el contrato `StarknetMessaging` registrará el hash de nuestro mensaje en "
"el almacenamiento de Ethereum."

#: src/ch16-04-L1-L2-messaging.md:98
msgid ""
"In addition to those `20k wei`, since the `L1HandlerTransaction` executed by "
"the sequencer is not tied to any account (the message originates from L1), "
"you must also ensure that you pay enough fees on L1 for your message to be "
"deserialized and processed on L2."
msgstr ""
"Además de los `20k wei`, ya que la `L1HandlerTransaction` ejecutada por el "
"secuenciador no está vinculada a ninguna cuenta (el mensaje se origina en "
"L1), también debe asegurarse de que usted paga suficientes honorarios en L1 "
"para que su mensaje sea deserializado y procesado en L2."

#: src/ch16-04-L1-L2-messaging.md:101
msgid ""
"The fees of the `L1HandlerTransaction` are computed in a regular manner as "
"it would be done for an `Invoke` transaction. For this, you can profile the "
"gas consumption using `starkli` or `snforge` to estimate the cost of your "
"message execution."
msgstr ""
"Los honorarios de la `L1HandlerTransaction` se calculan de manera regular "
"como se haría para una transacción `Invoke`. Para ello, puede perfilar el "
"consumo de gas usando `starkli` o `snforge` para estimar el costo de la "
"ejecución de su mensaje."

#: src/ch16-04-L1-L2-messaging.md:104
msgid "The signature of the `sendMessageToL2` is:"
msgstr "La firma del `enviar MensajeToL2` es:"

#: src/ch16-04-L1-L2-messaging.md:114
msgid "The parameters are as follows:"
msgstr "Los parámetros son los siguientes:"

#: src/ch16-04-L1-L2-messaging.md:116
msgid "`toAddress`: The contract address on L2 that will be called."
msgstr "`toAddress`: La dirección del contrato en L2 que se llamará."

#: src/ch16-04-L1-L2-messaging.md:117
msgid ""
"`selector`: The selector of the function of this contract at `toAddress`. "
"This selector (function) must have the `#[l1_handler]` attribute to be "
"callable."
msgstr ""
"`selector`: El selector de la función de este contrato en `toAddress`. Este "
"selector (función) debe tener el atributo `[l1_handler]` para ser llamado."

#: src/ch16-04-L1-L2-messaging.md:118
msgid ""
"`payload`: The payload is always an array of `felt252` (which are "
"represented by `uint256` in Solidity). For this reason we've inserted the "
"input `myFelt` into the array. This is why we need to insert the input data "
"into an array."
msgstr ""
"`payload`: La payload es siempre una matriz de `felt252` (que están "
"representados por `uint256` en Solidity). Por esta razón hemos insertado la "
"entrada `myFelt` en el array. Es por eso que necesitamos insertar los datos "
"de entrada en un array."

#: src/ch16-04-L1-L2-messaging.md:121
msgid "On the Starknet side, to receive this message, we have:"
msgstr "En el lado de Starknet, para recibir este mensaje, tenemos:"

#: src/ch16-04-L1-L2-messaging.md:128
msgid ""
"// You can now use the data, automatically deserialized from the message "
"payload.\n"
msgstr ""
"// Ahora puede utilizar los datos, automáticamente deserializados de la "
"carga útil del mensaje.\n"

#: src/ch16-04-L1-L2-messaging.md:133
msgid ""
"We need to add the `#[l1_handler]` attribute to our function. L1 handlers "
"are special functions that can only be executed by a `L1HandlerTransaction`. "
"There is nothing particular to do to receive transactions from L1, as the "
"message is relayed by the sequencer automatically. In your `#[l1_handler]` "
"functions, it is important to verify the sender of the L1 message to ensure "
"that our contract can only receive messages from a trusted L1 contract."
msgstr ""
"Tenemos que añadir el atributo \"[l1_handler]` a nuestra función. Los "
"manejadores L1 son funciones especiales que solo pueden ser ejecutadas por "
"una `L1HandlerTransaction`. No hay nada en particular que hacer para recibir "
"transacciones de L1, ya que el mensaje es transmitido automáticamente por el "
"secuenciador. En sus funciones `[l1_handler]`, es importante verificar el "
"remitente del mensaje L1 para asegurarse de que nuestro contrato solo puede "
"recibir mensajes de un contrato de confianza L1."

#: src/ch16-04-L1-L2-messaging.md:138
msgid "Sending Messages from Starknet to Ethereum"
msgstr "Envío de mensajes de Starknet a Ethereum"

#: src/ch16-04-L1-L2-messaging.md:140
msgid ""
"When sending messages from Starknet to Ethereum, you will have to use the "
"`send_message_to_l1` syscall in your Cairo contracts. This syscall allows "
"you to send messages to the `StarknetMessaging` contract on L1. Unlike `L1-"
">L2` messages, `L2->L1` messages must be consumed manually, which means that "
"you will need your Solidity contract to call the `consumeMessageFromL2` "
"function of the `StarknetMessaging` contract explicitly in order to consume "
"the message."
msgstr ""
"Al enviar mensajes desde Starknet a Ethereum, tendrá que usar el "
"`send_message_to_l1` syscall en sus contratos de El Cairo. Esta syscall le "
"permite enviar mensajes al contrato `StarknetMessaging` en L1. A diferencia "
"de los mensajes `L1->L2`, los mensajes `L2->L1` deben ser consumidos "
"manualmente, lo que significa que necesitará su contrato de Solididad para "
"llamar a la función `consumoMessagingFromL2` del contrato "
"`StarknetMessaging` explícitamente para consumir el mensaje."

#: src/ch16-04-L1-L2-messaging.md:142
msgid "To send a message from L2 to L1, what we would do on Starknet is:"
msgstr "Para enviar un mensaje de L2 a L1, lo que haríamos en Starknet es:"

#: src/ch16-04-L1-L2-messaging.md:146
msgid ""
"// Note here, we \"serialize\" my_felt, as the payload must be\n"
"            // a `Span<felt252>`.\n"
msgstr ""
"// Tenga en cuenta aquí, \"serializamos\" my_felt, como la carga útil debe "
"ser // un `Span<felt252».\n"

#: src/ch16-04-L1-L2-messaging.md:153
msgid ""
"We simply build the payload and pass it, along with the L1 contract address, "
"to the syscall function."
msgstr ""
"Simplemente construimos la carga útil y la pasamos, junto con la dirección "
"del contrato L1, a la función syscall."

#: src/ch16-04-L1-L2-messaging.md:155
msgid ""
"On L1, the important part is to build the same payload sent by the L2. Then "
"you call `consumeMessageFromL2` in you Solidity contract by passing the L2 "
"contract address and the payload. Please be aware that the L2 contract "
"address expected by the `consumeMessageFromL2` is the address of the "
"contract that sends the message on the L2 by calling "
"`send_message_to_l1_syscall`."
msgstr ""
"En L1, la parte importante es construir la misma carga útil enviada por la "
"L2. A continuación, llame a `consumoMessageFromL2` en usted contrato de "
"solidez pasando la dirección del contrato L2 y la carga útil. Tenga en "
"cuenta que la dirección del contrato L2 esperada por el "
"`consumoMessageFromL2` es la dirección del contrato que envía el mensaje en "
"la L2 llamando a `send_message_to_l1_syscall`."

#: src/ch16-04-L1-L2-messaging.md:166
msgid "// You can use the message hash if you want here.\n"
msgstr "// Puede utilizar el hash del mensaje si lo desea aquí.\n"

#: src/ch16-04-L1-L2-messaging.md:168
msgid ""
"// We expect the payload to contain only a felt252 value (which is a uint256 "
"in Solidity).\n"
msgstr ""
"// Esperamos que la carga útil contenga sólo un valor feelt252 (que es un "
"uint256 en Solidity).\n"

#: src/ch16-04-L1-L2-messaging.md:169
msgid "\"Invalid payload\""
msgstr "\"Carga útil inválida\""

#: src/ch16-04-L1-L2-messaging.md:173
msgid ""
"// From here, you can safely use `my_felt` as the message has been verified "
"by StarknetMessaging.\n"
msgstr ""
"// A partir de aquí, puede utilizar de forma segura `my_felt` ya que el "
"mensaje ha sido verificado por StarknetMessaging.\n"

#: src/ch16-04-L1-L2-messaging.md:174
msgid "\"Invalid value\""
msgstr "\"Valor inválido\""

#: src/ch16-04-L1-L2-messaging.md:178
msgid ""
"As you can see, in this context we don't have to verify which contract from "
"L2 is sending the message (as we do on the L2 to verify which contract from "
"L1 is sending the message). But we are actually using the "
"`consumeMessageFromL2` of the `StarknetCore` contract to validate the inputs "
"(the contract address on L2 and the payload) to ensure we are only consuming "
"valid messages."
msgstr ""
"Como puede ver, en este contexto no tenemos que verificar qué contrato de L2 "
"está enviando el mensaje (como lo hacemos en el L2 para verificar qué "
"contrato de L1 está enviando el mensaje), pero en realidad estamos "
"utilizando el `ConsumoMensaje de L2` del contrato `StarknetCore` para "
"validar las entradas (la dirección del contrato en L2 y la carga útil) para "
"asegurarnos de que sólo estamos consumiendo mensajes válidos."

#: src/ch16-04-L1-L2-messaging.md:180
msgid ""
"**Note:** The `consumeMessageFromL2` function of the `StarknetCore` contract "
"is expected to be called from a Solidity contract, and not directly on the "
"`StarknetCore` contract. The reason of that is because the `StarknetCore` "
"contract is using `msg.sender` to actually compute the hash of the message. "
"And this `msg.sender` must correspond to the `to_address` field that is "
"given to the function `send_message_to_l1_syscall` that is called on "
"Starknet."
msgstr ""
"**Nota:** La función `Consumo de Mensajes de L2` del contrato `StarknetCore` "
"se llama desde un contrato de Solidity, y no directamente en el contrato "
"`StarknetCore`. La razón de esto es porque el contrato `StarknetCore` está "
"usando `msg.sender` para calcular realmente el hash del mensaje. Y este `msg."
"sender` debe corresponder al campo `to_addirction` que se da a la función "
"`send_message_to_l1_syscall` que se llama en Starknet."

#: src/ch16-04-L1-L2-messaging.md:182
msgid ""
"It is important to remember that on L1 we are sending a payload of "
"`uint256`, but the basic data type on Starknet is `felt252`; however, "
"`felt252` are approximately 4 bits smaller than `uint256`. So we have to pay "
"attention to the values contained in the payload of the messages we are "
"sending. If, on L1, we build a message with values above the maximum "
"`felt252`, the message will be stuck and never consumed on L2."
msgstr ""
"Es importante recordar que en L1 estamos enviando una carga útil de "
"`uint256`, pero el tipo de datos básicos en Starknet es `felt252`; sin "
"embargo, `felt252` son aproximadamente 4 bits más pequeños que `uint256`. "
"Así que tenemos que prestar atención a los valores contenidos en la carga "
"útil de los mensajes que estamos enviando. Si, en L1, construimos un mensaje "
"con valores por encima del máximo `felt252`, el mensaje se quedará atascado "
"y nunca se consumirá en L2."

#: src/ch16-04-L1-L2-messaging.md:184
msgid "Cairo Serde"
msgstr "Cairo Serde"

#: src/ch16-04-L1-L2-messaging.md:186
msgid ""
"Before sending messages between L1 and L2, you must remember that Starknet "
"contracts, written in Cairo, can only understand serialized data. And "
"serialized data is always an array of `felt252`. In Solidity we have "
"`uint256` type, and `felt252` are approximately 4 bits smaller than "
"`uint256`. So we have to pay attention to the values contained in the "
"payload of the messages we are sending. If, on L1, we build a message with "
"values above the maximum `felt252`, the message will be stuck and never "
"consumed on L2."
msgstr ""
"Antes de enviar mensajes entre L1 y L2, debe recordar que los contratos de "
"Starknet, escritos en El Cairo, sólo pueden entender datos seriados. Y los "
"datos seriados son siempre una matriz de `felt252`. En Solidity tenemos "
"`uint256` tipo, y `felt252` son aproximadamente 4 bits más pequeños que "
"`uint256`. Por lo tanto, tenemos que prestar atención a los valores "
"contenidos en la carga útil de los mensajes que estamos enviando. Si, en L1, "
"creamos un mensaje con valores por encima del `felt252` máximo, el mensaje "
"se quedará atascado y nunca se consumirá en L2."

#: src/ch16-04-L1-L2-messaging.md:190
msgid ""
"So for instance, an actual `uint256` value in Cairo is represented by a "
"struct like:"
msgstr ""
"Así, por ejemplo, un valor real `uint256` en El Cairo está representado por "
"una estructura como:"

#: src/ch16-04-L1-L2-messaging.md:199
msgid ""
"which will be serialized as **TWO** felts, one for the `low`, and one for "
"the `high`. This means that to send only one `u256` to Cairo, you'll need to "
"send a payload from L1 with **TWO** values."
msgstr ""
"que se serializará como **WO** fieltros, uno para el `bajo`, y uno para el "
"`alto`. Esto significa que para enviar sólo un `u256` a El Cairo, usted "
"tendrá que enviar una carga útil de L1 con **WO** valores."

#: src/ch16-04-L1-L2-messaging.md:202
msgid "// Let's send the value 1 as a u256 in cairo: low = 1, high = 0.\n"
msgstr ""
"// Vamos a enviar el valor 1 como un u256 en el cairo: bajo = 1, alto = 0.\n"

#: src/ch16-04-L1-L2-messaging.md:208
msgid ""
"If you want to learn more about the messaging mechanism, you can visit the "
"[Starknet documentation](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Network_Architecture/messaging-mechanism/)."
msgstr ""
"Si desea obtener más información sobre el mecanismo de mensajería, puede "
"visitar la [Documentación Starknet](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Network_Architecture/messaging-mechanism/)."

#: src/ch16-04-L1-L2-messaging.md:210
msgid ""
"You can also find a [detailed guide here](https://github.com/glihm/starknet-"
"messaging-dev) to test the messaging system locally."
msgstr ""
"También puede encontrar una [guía detallada aquí](https://github.com/glihm/"
"starknet-messaging-dev) para probar el sistema de mensajería localmente."

#: src/ch16-05-oracle-interactions.md:3
msgid ""
"This section focuses on the concept of bringing off-chain data to the "
"Starknet blockchain using oracles. Oracles are third-party services that "
"serve as intermediaries, securely transmitting external data, such as asset "
"prices, weather information, or other real-world data, to blockchains and "
"smart contracts. It also provides practical examples and code snippets "
"demonstrating how developers can interact with a specific oracle named "
"Pragma on Starknet network, covering topics like querying and handling price "
"data, and verifiable random function (VRF) to generate random numbers."
msgstr ""
"Esta sección se centra en el concepto de llevar datos fuera de cadena a la "
"cadena de bloques Starknet utilizando oráculos. Oracles son servicios de "
"terceros que sirven como intermediarios, la transmisión segura de datos "
"externos, tales como precios de activos, información meteorológica, u otros "
"datos del mundo real, a blockchains y contratos inteligentes. También "
"proporciona ejemplos prácticos y fragmentos de código que demuestran cómo "
"los desarrolladores pueden interactuar con un oráculo específico llamado "
"Pragma en la red Starknet, cubriendo temas como consulta y manejo de datos "
"de precios, y función aleatoria verificable (VRF) para generar números "
"aleatorios."

#: src/ch16-05-01-price-feeds.md:3
msgid ""
"Price feeds enabled by an oracle serve as a bridge between real-world data "
"feed and the blockchain. They provide real time pricing data that is "
"aggregated from multiple trusted external sources ( e.g. crypto exchanges, "
"financial data providers, etc. ) to the blockchain network."
msgstr ""
"Las fuentes de precios habilitadas por un oráculo sirven de puente entre la "
"fuente de datos del mundo real y la cadena de bloques. Proporcionan datos de "
"precios en tiempo real que se agregan de múltiples fuentes externas de "
"confianza (por ejemplo, intercambios de criptogramas, proveedores de datos "
"financieros, etc.) a la red de cadenas de bloques."

#: src/ch16-05-01-price-feeds.md:5
msgid ""
"For the example in this book section, we will use Pragma Oracle to read the "
"price feed for `ETH/USD` asset pair and also showcase a mini application "
"that utilizes this feed."
msgstr ""
"Para el ejemplo en esta sección del libro, vamos a utilizar Pragma Oracle "
"para leer la fuente de precio para el par de activos `ETH/USD` y también "
"mostrar una mini aplicación que utiliza esta fuente."

#: src/ch16-05-01-price-feeds.md:7
msgid ""
"[Pragma Oracle](https://www.pragma.build/) is a leading zero knowledge "
"oracle that provides access to off-chain data on Starknet blockchain in a "
"verifiable way."
msgstr ""
"[Pragma Oracle](https://www.pragma.build/) es un oráculo de conocimiento "
"cero líder que proporciona acceso a datos fuera de cadena en Starknet "
"blockchain de una manera verificable."

#: src/ch16-05-01-price-feeds.md:9
msgid "Add Pragma as a Project Dependency"
msgstr "Añadir Pragma como dependencia del proyecto"

#: src/ch16-05-01-price-feeds.md:11
msgid ""
"To get started with integrating Pragma on your Cairo smart contract for "
"price feed data, edit your project's `Scarb.toml` file to include the path "
"to use Pragma."
msgstr ""
"Para empezar a integrar Pragma en su contrato inteligente de El Cairo para "
"datos de feed de precios, edite el archivo `Scarb.toml` de su proyecto para "
"incluir la ruta para usar Pragma."

#: src/ch16-05-01-price-feeds.md:13 src/ch16-05-02-randomness.md:20
msgid ""
"```toml\n"
"[dependencies]\n"
"pragma_lib = { git = \"https://github.com/astraly-labs/pragma-lib\" }\n"
"```"
msgstr ""
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
"* * * * * * * * * * * * * * * *"

#: src/ch16-05-01-price-feeds.md:18
msgid "Creating a Price Feed Contract"
msgstr "Creación de un contrato de suministro de precios"

#: src/ch16-05-01-price-feeds.md:20
msgid ""
"After adding the required dependencies for your project, you'll need to "
"define a contract interface that includes the required pragma price feed "
"entry point."
msgstr ""
"Después de añadir las dependencias necesarias para su proyecto, tendrá que "
"definir una interfaz de contrato que incluya el punto de entrada de entrada "
"de precio de pragma requerido."

#: src/ch16-05-01-price-feeds.md:22
msgid "Contract Interface"
msgstr "Interfaz de contrato"

#: src/ch16-05-01-price-feeds.md:32
msgid ""
"Of the two public functions exposed in the `IPriceFeedExample`, the one "
"necessary to interact with the pragma price feed oracle is the "
"`get_asset_price` function, a view function that takes in the `asset_id` "
"argument and returns a `u128` value."
msgstr ""
"De las dos funciones públicas expuestas en el `IPriceFeedEjemplo`, la "
"necesaria para interactuar con el oráculo de alimentación de precios de "
"pragma es la función `get_asset_price`, una función de vista que toma el "
"argumento `asset_id` y devuelve un valor `u128`."

#: src/ch16-05-01-price-feeds.md:34
msgid "Pragma Dependency Import to Contract"
msgstr "Importación al contrato de dependencia de Pragma"

#: src/ch16-05-01-price-feeds.md:41
msgid ""
"The snippet above shows the necessary imports you need to add to your "
"contract module in order to interact with the Pragma oracle."
msgstr ""
"El fragmento anterior muestra las importaciones necesarias que necesita "
"añadir a su módulo de contrato para interactuar con el oráculo de Pragma."

#: src/ch16-05-01-price-feeds.md:43
msgid "Required Price Feed Function Impl in Contract"
msgstr "Precio requerido Función de alimentación Impl en contrato"

#: src/ch16-05-01-price-feeds.md:47 src/ch16-05-01-price-feeds.md:117
msgid "// Retrieve the oracle dispatcher\n"
msgstr "// Recuperar el oracle despachador\n"

#: src/ch16-05-01-price-feeds.md:52 src/ch16-05-01-price-feeds.md:122
msgid "// Call the Oracle contract, for a spot entry\n"
msgstr "// Llame al contrato Oracle, para una entrada puntual\n"

#: src/ch16-05-01-price-feeds.md:60
msgid ""
"The `get_asset_price` function is responsible for retrieving the price of "
"the asset specified by the `asset_id` argument from Pragma Oracle. The "
"`get_data_median` method is called from the `IPragmaDispatcher` instance by "
"passing the `DataType::SpotEntry(asset_id)` as an argument and its output is "
"assigned to a variable named `output` of type `PragmaPricesResponse`. "
"Finally, the function returns the price of the requested asset as a `u128`."
msgstr ""
"La función `get_asset_price` es responsable de recuperar el precio del "
"activo especificado por el argumento `asset_id` de Pragma Oracle. El método "
"`get_data_median` se llama de la instancia `IPragmaDispatcher` pasando el "
"`DataType::SpotEntry(asset_id)` como argumento y su salida se asigna a una "
"variable llamada `output` del tipo `PragmaPricesResponse`. Por último, la "
"función devuelve el precio del activo solicitado como `u128`."

#: src/ch16-05-01-price-feeds.md:62
msgid "Example Application Using Pragma Price Feed"
msgstr "Ejemplo de aplicación con Pragma Price Feed"

#: src/ch16-05-01-price-feeds.md:96
msgid "// Calculate the amount of ETH needed\n"
msgstr "// Calcular la cantidad de ETH necesaria\n"

#: src/ch16-05-01-price-feeds.md:102 src/ch16-05-02-randomness.md:228
msgid "// ETH Contract Address\n"
msgstr "// Dirección del contrato ETH\n"

#: src/ch16-05-01-price-feeds.md:105
msgid "// Transfer the ETH to the caller\n"
msgstr "// Transferir la ETH a la persona que llama\n"

#: src/ch16-05-01-price-feeds.md:132
msgid ""
"Note: Pragma returns the value of different token pairs using the decimal "
"factor of 6 or 8. You can convert the value to the required decimal factor "
"by dividing the value by \\\\( {10^{n}} \\\\), where `n` is the decimal "
"factor."
msgstr ""
"Nota: Pragma devuelve el valor de diferentes pares de tokens usando el "
"factor decimal de 6 o 8. Puede convertir el valor al factor decimal "
"requerido dividiendo el valor por"

#: src/ch16-05-01-price-feeds.md:134
msgid ""
"The code above is an example implementation of an applications consuming a "
"price feed from the Pragma oracle. The contract imports necessary modules "
"and interfaces, including the `IPragmaABIDispatcher` for interacting with "
"the Pragma oracle contract and the `ERC20ABIDispatcher` for interacting with "
"the ETH ERC20 token contract."
msgstr ""
"El código anterior es un ejemplo de aplicación de aplicaciones que consumen "
"una fuente de precios del oráculo Pragma. El contrato importa módulos e "
"interfaces necesarios, incluido el `IPragmaABIDispatcher` para interactuar "
"con el contrato Pragma oracle y el `ERC20ABIDispatcher` para interactuar con "
"el contrato simbólico ETH ERC20."

#: src/ch16-05-01-price-feeds.md:136
msgid ""
"The contract has a `const` that stores the token pair ID of `ETH/USD`, and a "
"`Storage` struct that holds two fields `pragma_contract` and "
"`product_price_in_usd`. The constructor function initializes the "
"`pragma_contract` address and sets the `product_price_in_usd` to 100."
msgstr ""
"El contrato tiene un `const` que almacena la identificación del par de "
"fichas de `ETH/USD`, y una estructura `Almacenamiento` que contiene dos "
"campos `pragma_contract` y `product_price_in_usd`. La función constructora "
"inicializa la dirección `pragma_contract` y establece el "
"`product_price_in_usd` a 100."

#: src/ch16-05-01-price-feeds.md:138
msgid ""
"The `buy_item` function is the main entry point for a user to purchase an "
"item. It retrieves the caller's address. It calls the `get_asset_price` "
"function to get the current price of ETH in USD using the `ETH_USD` asset "
"ID. It calculates the amount of ETH needed to buy the product based on the "
"product price in USD at the corresponding ETH price. It then checks if the "
"caller has enough ETH by calling the `balance_of` method on the ERC20 ETH "
"contract. If the caller has enough ETH, it calls the `transfer_from` method "
"of the `eth_dispatcher` instance to transfer the required amount of ETH from "
"the caller to another contract address."
msgstr ""
"La función `buy_item` es el punto de entrada principal para que un usuario "
"compre un artículo y recupera la dirección de la persona que llama. Llama a "
"la función `get_asset_price` para obtener el precio actual de ETH en USD "
"utilizando el ID del activo `ETH_USD`. Calcula la cantidad de ETH necesaria "
"para comprar el producto sobre la base del precio del producto en USD al "
"precio correspondiente de ETH. A continuación, comprueba si la persona que "
"llama tiene suficiente ETH llamando al método `balance_of` en el contrato "
"ERC20 ETH. Si la persona que llama tiene suficiente ETH, llama al método "
"`transfer_ from` de la instancia `eth_dispatcher` para transferir la "
"cantidad requerida de ETH de la persona que llama a otra dirección del "
"contrato."

#: src/ch16-05-01-price-feeds.md:140
msgid ""
"The `get_asset_price` function is the entry point to interact with the "
"Pragma oracle and has been explained in the section above."
msgstr ""
"La función `get_asset_price` es el punto de entrada para interactuar con el "
"oráculo Pragma y se ha explicado en la sección anterior."

#: src/ch16-05-01-price-feeds.md:142
msgid ""
"You can get a detailed guide on consuming data using Pragma price feeds "
"[here](https://docs.pragma.build/Resources/Cairo%201/data-feeds/consuming-"
"data)."
msgstr ""
"Puede obtener una guía detallada sobre el consumo de datos utilizando los "
"feeds de precios de Pragma [aquí] (https://docs.pragma.build/Resources/"
"Eliro%201/data-feeds/consuming-data)."

#: src/ch16-05-02-randomness.md:3
msgid ""
"Since all blockchains are fundamentally deterministic and most are public "
"ledgers, generating truly unpredictatable randomness on-chain presents a "
"challenge. This randomness is crucial for fair outcomes in gaming, "
"lotteries, and unique generation of NFTs. To address this, verifiable random "
"functions (VRFs) provided by oracles offer a solution. VRFs guarantee that "
"the randomness can't be predicted or tampered with, ensuring trust and "
"transparency in these applications."
msgstr ""
"Dado que todas las cadenas de bloques son fundamentalmente deterministas y "
"la mayoría son libros públicos, generar aleatoriedad realmente impredecible "
"en la cadena presenta un desafío. Esta aleatoriedad es crucial para "
"resultados justos en juegos, loterías y generación única de NFTs. Para "
"abordar esto, funciones aleatorias verificables (VRFs) proporcionados por "
"oráculos ofrecen una solución. Los VRFs garantizan que la aleatoriedad no se "
"puede predecir o manipular, garantizando la confianza y la transparencia en "
"estas aplicaciones."

#: src/ch16-05-02-randomness.md:5
msgid "Overview on VRFs"
msgstr "Sinopsis de los marcos de resultados voluntarios"

#: src/ch16-05-02-randomness.md:7
msgid ""
"Pseudo-random but secure: VRFs use a secret key and a nonce (a unique input) "
"to generate an output that appears random. While technically 'pseudo-"
"random', it's practically impossible for another party to predict the "
"outcome without knowing the secret key."
msgstr ""
"Pseudo-aleatorio pero seguro: los VRF utilizan una clave secreta y un nonce "
"(una entrada única) para generar una salida que parece aleatoria. Si bien "
"técnicamente 'pseudo-aleatoria', es prácticamente imposible para otra parte "
"predecir el resultado sin conocer la clave secreta."

#: src/ch16-05-02-randomness.md:9
msgid ""
"Verifiable output: VRFs produce not only the random number but also a proof "
"that anyone can use to independently verify that the result was generated "
"correctly according to the function's parameters."
msgstr ""
"Salida verificable: Los VRF producen no sólo el número aleatorio, sino "
"también una prueba de que cualquiera puede utilizar para verificar "
"independientemente que el resultado se generó correctamente de acuerdo con "
"los parámetros de la función."

#: src/ch16-05-02-randomness.md:11
msgid "Generating Randomness with Pragma"
msgstr "Generando Al azar con Pragma"

#: src/ch16-05-02-randomness.md:13
msgid ""
"[Pragma](https://www.pragma.build/), an oracle on Starknet provides a "
"solution for generating random numbers using VRFs. Let's dive into how to "
"use Pragma VRF to generate a random number in a simple dice game contract."
msgstr ""
"[Pragma](https://www.pragma.build/), un oráculo en Starknet proporciona una "
"solución para generar números aleatorios usando VRFs. Vamos a sumergirnos en "
"cómo utilizar Pragma VRF para generar un número aleatorio en un simple "
"contrato de juego de dados."

#: src/ch16-05-02-randomness.md:16
msgid "Add Pragma as a Dependency"
msgstr "Añadir Pragma como dependencia"

#: src/ch16-05-02-randomness.md:18
msgid ""
"Edit your cairo project's `Scarb.toml` file to include the path to use "
"Pragma."
msgstr ""
"Edite el archivo `Scarb.toml` de su proyecto de cairo para incluir la ruta "
"para usar Pragma."

#: src/ch16-05-02-randomness.md:61
msgid ""
"<span class=\"caption\">Listing 16-5 shows a contract interfaces for Pragma "
"VRF and a simple dice game.</span>"
msgstr ""
"<span class=\"caption\">Lista 16-5 muestra una interfaz de contrato para "
"Pragma VRF y un juego de dados simple.</span>"

#: src/ch16-05-02-randomness.md:63
msgid "Description of Key IPragmaVRF Entrypoints and Their Inputs"
msgstr "Descripción de los puntos de entrada IPragmaVRF clave y sus entradas"

#: src/ch16-05-02-randomness.md:65
msgid ""
"The function `request_randomness_from_pragma` initiates a request for "
"verifiable randomness from the Pragma oracle. It does this by emitting an "
"event that triggers the following actions off-chain:"
msgstr ""
"La función `request_randomness_from_pragma` inicia una solicitud de "
"aleatoriedad verificable desde el oráculo Pragma. Lo hace emitiendo un "
"evento que desencadena las siguientes acciones fuera de cadena:"

#: src/ch16-05-02-randomness.md:67
msgid ""
"Randomness generation: The oracle generates random values and a "
"corresponding proof."
msgstr ""
"Generación de azar: El oráculo genera valores aleatorios y una prueba "
"correspondiente."

#: src/ch16-05-02-randomness.md:68
msgid ""
"On-chain submission: The oracle submits the generated randomness and proof "
"back to the blockchain via the `receive_random_words` callback function."
msgstr ""
"Sumisión en cadena: El oráculo devuelve la aleatoriedad y la prueba "
"generadas a la cadena de bloques a través de la función de devolución de "
"llamadas `reciep_random_words`."

#: src/ch16-05-02-randomness.md:70
msgid "`request_randomness_from_pragma` Inputs"
msgstr "`solicitud_aleatoria_de_pragma` Inputs"

#: src/ch16-05-02-randomness.md:72
msgid ""
"`seed`: A value used to initialize the randomness generation process. This "
"should be unique to ensure unpredictable results."
msgstr ""
"`semilla`: Un valor utilizado para inicializar el proceso de generación de "
"al azar, que debería ser único para garantizar resultados impredecibles."

#: src/ch16-05-02-randomness.md:73
msgid ""
"`callback_address`: The contract address where the `receive_random_words` "
"function will be called to deliver the generated randomness. It is typically "
"the address of your deployed contract implementing Pragma VRF."
msgstr ""
"`callback_address`: La dirección del contrato donde se llamará a la función "
"`recibe_random_words` para entregar la aleatoriedad generada. Típicamente es "
"la dirección de su contrato desplegado implementando Pragma VRF."

#: src/ch16-05-02-randomness.md:74
msgid ""
"`callback_fee_limit`: The maximum amount of gas you're willing to spend on "
"executing the `receive_random_words` callback function."
msgstr ""
"`callback_fee_limit`: La cantidad máxima de gas que está dispuesto a gastar "
"en la ejecución de la función de devolución de llamada `reciep_random_words`."

#: src/ch16-05-02-randomness.md:75
msgid ""
"`publish_delay`: The minimum delay (in blocks) between requesting randomness "
"and the oracle fulfilling the request."
msgstr ""
"`publish_delay`: La demora mínima (en bloques) entre la solicitud de "
"aleatoriedad y el oráculo que satisface la solicitud."

#: src/ch16-05-02-randomness.md:76
msgid ""
"`num_words`: The number of random values (each represented as a `felt252`) "
"you want to receive in a single callback."
msgstr ""
"`num_words`: El número de valores aleatorios (cada uno representado como "
"`felt252`) que desea recibir en una sola devolución de llamada."

#: src/ch16-05-02-randomness.md:77
msgid ""
"`calldata`: Additional data you want to pass to the `receive_random_words` "
"callback function."
msgstr ""
"`calldata`: Datos adicionales que desea pasar a la función "
"`recept_random_words` callback."

#: src/ch16-05-02-randomness.md:79
msgid "`receive_randomn_words` Inputs"
msgstr "Entradas `recibir_aleatorios_palabras`"

#: src/ch16-05-02-randomness.md:81
msgid ""
"`requester_address`: The contract address that initiated the randomness "
"request."
msgstr ""
"`requester_adress`: La dirección del contrato que inició la solicitud de "
"azar."

#: src/ch16-05-02-randomness.md:82
msgid "`request_id`: A unique identifier assigned to the randomness request."
msgstr "`request_id`: Un identificador único asignado a la solicitud de azar."

#: src/ch16-05-02-randomness.md:83
msgid ""
"`random_words`:  An array (span) of the generated random values (represented "
"as `felt252`)."
msgstr ""
"`random_words`: un array (span) de los valores aleatorios generados "
"(representado como `felt252`)."

#: src/ch16-05-02-randomness.md:84
msgid ""
"`calldata`:  Additional data passed along with the initial randomness "
"request."
msgstr ""
"`calldata`: Datos adicionales transmitidos junto con la solicitud inicial de "
"randomidad."

#: src/ch16-05-02-randomness.md:86
msgid "Dice Game Contract"
msgstr "Contrato de juego de dados"

#: src/ch16-05-02-randomness.md:88
msgid ""
"This dice game contract allows players to guess a number between 1 & 6 "
"during an active game window. The contract owner then has the ability to "
"toggle the game window to disable new guesses from players. To determine the "
"winning number, the contract owner calls the "
"`request_randomness_from_pragma` function to request a random number from "
"the Pragma VRF oracle. Once the random number is received through the "
"`receive_random_words` callback function, it is stored in the "
"`last_random_number` storage variable. Each player has to call "
"`process_game_winners` function to determine if they have won or lost. The "
"`last_random_number` generated is then reduced to a number between 1 & 6, "
"and compared to the guesses of the players stored in the `user_guesses` "
"mapping, which leads to the emission of an event `GameWinner` or `GameLost`."
msgstr ""
"Este contrato de juego de dados permite a los jugadores adivinar un número "
"entre 1 y 6 durante una ventana de juego activa. El propietario del contrato "
"tiene entonces la capacidad de cambiar la ventana del juego para desactivar "
"nuevas conjeturas de los jugadores. Para determinar el número ganador, el "
"propietario del contrato llama a la función `request_randomness_from_pragma` "
"para solicitar un número aleatorio del oracle Pragma VRF. Una vez que el "
"número aleatorio se recibe a través de la función `recibe_random_words` "
"callback, se almacena en la variable de almacenamiento `last_random_number`. "
"Cada jugador tiene que llamar a la función `process_game_winners` para "
"determinar si han ganado o perdido. El `last_random_number` generado se "
"reduce a un número entre 1 y 6, y en comparación con las conjeturas de los "
"jugadores almacenados en la asignación `user_guess`, que conduce a la "
"emisión de un evento `GameWinner` o `GameLost`."

#: src/ch16-05-02-randomness.md:223
msgid ""
"// Approve the randomness contract to transfer the callback fee\n"
"            // You would need to send some ETH to this contract first to "
"cover the fees\n"
msgstr ""
"// Aprobar el contrato de azar para transferir la tarifa de devolución de "
"llamada // Usted tendría que enviar un poco de ETH a este contrato primero "
"para cubrir los honorarios\n"

#: src/ch16-05-02-randomness.md:236
msgid "// Request the randomness\n"
msgstr "// Solicitar la aleatoriedad\n"

#: src/ch16-05-02-randomness.md:253
msgid ""
"// Have to make sure that the caller is the Pragma Randomness Oracle "
"contract\n"
msgstr ""
"// Hay que asegurarse de que la persona que llama es el contrato Pragma "
"Randomness Oracle\n"

#: src/ch16-05-02-randomness.md:259
msgid ""
"// and that the current block is within publish_delay of the request block\n"
msgstr ""
"// y que el bloque actual está dentro de publish_delay del bloque de "
"solicitud\n"

#: src/ch16-05-02-randomness.md:273
msgid "// ETH Contract Address            \n"
msgstr "// Dirección del contrato ETH\n"

#: src/ch16-05-02-randomness.md:282
msgid ""
"<span class=\"caption\">Listing 16-6: Simple Dice Game Contract using Pragma "
"VRF.</span>"
msgstr ""
"<span class=\"caption\">Lista 16-6: Contrato de Juego de Dados Simple usando "
"Pragma VRF.</span>"

#: src/ch16-05-02-randomness.md:284
msgid "NB: Fund Your Contract After Deployment to Utilize Pragma VRF"
msgstr ""
"NB: Financie su contrato después del despliegue para utilizar Pragma VRF"

#: src/ch16-05-02-randomness.md:286
msgid ""
"After deploying your contract that includes Pragma VRF functionalities, "
"ensure it holds sufficient ETH to cover the expenses related to requesting "
"random values. Pragma VRF requires payment for both generating the random "
"numbers and executing the callback function defined in your contract."
msgstr ""
"Después de implementar su contrato que incluye funciones Pragma VRF, "
"asegúrese de que tenga suficiente ETH para cubrir los gastos relacionados "
"con la solicitud de valores aleatorios. Pragma VRF requiere el pago tanto "
"para generar los números aleatorios como para ejecutar la función callback "
"definida en su contrato."

#: src/ch16-05-02-randomness.md:288
msgid ""
"For more information, please refer to the [Pragma](https://docs.pragma.build/"
"Resources/Cairo%201/randomness/randomness) docs."
msgstr ""
"Para más información, véase [Pragma](https://docs.pragma.build/Resources/El "
"Cairo%201/randomness/randomness) docs."

#: src/ch16-06-00-other-examples.md:3
msgid ""
"This section contains additional examples of Starknet smart contracts, "
"utilizing various features of the Cairo programming language. Your "
"contributions are welcome and encouraged, as we aim to gather as many "
"diverse examples as possible."
msgstr ""
"Esta sección contiene ejemplos adicionales de contratos inteligentes de "
"Starknet, utilizando varias características del lenguaje de programación de "
"El Cairo. Sus contribuciones son bienvenidas y alentadas, ya que nuestro "
"objetivo es reunir tantos ejemplos diversos como sea posible."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:1
msgid "Deploying and Interacting with a Voting contract"
msgstr "Implementación e interacción con un contrato de votación"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:3
msgid ""
"The **`Vote`** contract in Starknet begins by registering voters through the "
"contract's constructor. Three voters are initialized at this stage, and "
"their addresses are passed to an internal function **`_register_voters`**. "
"This function adds the voters to the contract's state, marking them as "
"registered and eligible to vote."
msgstr ""
"El contrato **`Vote`** en Starknet comienza registrando votantes a través "
"del constructor del contrato. Tres votantes son inicializados en esta etapa, "
"y sus direcciones son pasadas a una función interna **`_register_voters`**. "
"Esta función agrega a los votantes al estado del contrato, marcándolos como "
"registrados y elegibles para votar."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:5
msgid ""
"Within the contract, the constants **`YES`** and **`NO`** are defined to "
"represent the voting options (1 and 0, respectively). These constants "
"facilitate the voting process by standardizing the input values."
msgstr ""
"Dentro del contrato, las constantes **`YES`** y **`NO`** se definen para "
"representar las opciones de votación (1 y 0, respectivamente).Estas "
"constantes facilitan el proceso de votación mediante la normalización de los "
"valores de entrada."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:7
msgid ""
"Once registered, a voter is able to cast a vote using the **`vote`** "
"function, selecting either the 1 (YES) or 0 (NO) as their vote. When voting, "
"the state of the contract is updated, recording the vote and marking the "
"voter as having voted. This ensures that the voter is not able to cast a "
"vote again within the same proposal. The casting of a vote triggers the "
"**`VoteCast`** event, logging the action."
msgstr ""
"Una vez inscrito, un votante puede emitir un voto usando la función "
"**`vote`**, seleccionando el 1 (YES) o 0 (NO) como su voto. Al votar, el "
"estado del contrato se actualiza, registrando el voto y marcando al votante "
"como el que ha votado. Esto asegura que el votante no puede emitir un voto "
"de nuevo dentro de la misma propuesta. El voto desencadena el evento "
"**`VoteCast`**, registrando la acción."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:9
msgid ""
"The contract also monitors unauthorized voting attempts. If an unauthorized "
"action is detected, such as a non-registered user attempting to vote or a "
"user trying to vote again, the **`UnauthorizedAttempt`** event is emitted."
msgstr ""
"El contrato también supervisa los intentos de votación no autorizados. Si se "
"detecta una acción no autorizada, como un usuario no registrado que intenta "
"votar o un usuario que intenta volver a votar, se emite el evento "
"**`UnhabilitedAttempt`**."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:11
msgid ""
"Together, these functions, states, constants, and events create a structured "
"voting system, managing the lifecycle of a vote from registration to "
"casting, event logging, and result retrieval within the Starknet "
"environment. Constants like **`YES`** and **`NO`** help streamline the "
"voting process, while events play a vital role in ensuring transparency and "
"traceability."
msgstr ""
"Juntos, estas funciones, estados, constantes y eventos crean un sistema de "
"votación estructurado, gestionando el ciclo de vida de un voto desde el "
"registro hasta el casting, el registro de eventos y la recuperación de "
"resultados dentro del entorno de Starknet. Constantes como **`YES`** y "
"**`NO`** ayudan a racionalizar el proceso de votación, mientras que los "
"eventos juegan un papel vital para garantizar la transparencia y "
"trazabilidad."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:13
msgid "Listing 16-7 shows the `Vote` contract in detail:"
msgstr "En la lista 16-7 figura el contrato \" Vote \" en detalle:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:16
msgid ""
"/// @dev Core Library Imports for the Traits outside the Starknet Contract\n"
msgstr ""
"/// @dev Core Library Imports for the Traits outside the Starknet Contract\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:18
msgid ""
"/// @dev Trait defining the functions that can be implemented or called by "
"the Starknet Contract\n"
msgstr ""
"/// @dev Rasgo que define las funciones que pueden ser implementadas o "
"llamadas por el Contrato Starknet\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:22
msgid "/// @dev Function that returns the current vote status\n"
msgstr "/// @dev Función que devuelve el estado actual de la votación\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:24
msgid ""
"/// @dev Function that checks if the user at the specified address is "
"allowed to vote\n"
msgstr ""
"/// @dev Función que comprueba si el usuario en la dirección especificada "
"está autorizado a votar\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:26
msgid ""
"/// @dev Function that checks if the specified address is registered as a "
"voter\n"
msgstr ""
"/// @dev Función que comprueba si la dirección especificada está registrada "
"como votante\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:28
msgid "/// @dev Function that allows a user to vote\n"
msgstr "/// @dev Función que permite a un usuario votar\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:31
msgid ""
"/// @dev Starknet Contract allowing three registered voters to vote on a "
"proposal\n"
msgstr ""
"/// @dev Starknet Contrato que permite a tres votantes registrados votar "
"sobre una propuesta\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:41
msgid "/// @dev Structure that stores vote counts and voter states\n"
msgstr ""
"/// @dev Estructura que almacena los recuentos de votos y los estados "
"votantes\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:50
msgid ""
"/// @dev Contract constructor initializing the contract with a list of "
"registered voters and 0 vote count\n"
msgstr ""
"/// @dev Constructor de contrato inicializando el contrato con una lista de "
"votantes registrados y conteo de 0 votos\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:58
msgid "// Register all voters by calling the _register_voters function\n"
msgstr ""
"// Registrar a todos los votantes llamando a la función _register_voters\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:61
msgid "// Initialize the vote count to 0\n"
msgstr "// Inicializar el recuento de votos a 0\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:66
msgid "/// @dev Event that gets emitted when a vote is cast\n"
msgstr "/// @dev Evento que se emite cuando se vota\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:74
msgid "/// @dev Represents a vote that was cast\n"
msgstr "/// @dev Representa un voto emitido\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:81
msgid "/// @dev Represents an unauthorized attempt to vote\n"
msgstr "/// @dev Representa un intento no autorizado de votar\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:87
msgid "/// @dev Implementation of VoteTrait for ContractState\n"
msgstr "/// @dev Implementación de VoteTrait para ContractState\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:90
msgid "/// @dev Returns the voting results\n"
msgstr "/// @dev Devuelve los resultados de la votación\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:97
msgid "/// @dev Check whether a voter is allowed to vote\n"
msgstr "/// @dev Compruebe si un votante puede votar\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:102
msgid "/// @dev Check whether an address is registered as a voter\n"
msgstr "/// @dev Compruebe si una dirección está registrada como votante\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:107
msgid "/// @dev Submit a vote\n"
msgstr "/// @dev Presentar una votación\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:109
msgid "\"VOTE_0_OR_1\""
msgstr "\"VOTE_0_OR_1\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:125
msgid "/// @dev Internal Functions implementation for the Vote contract\n"
msgstr ""
"/// @dev Implementación de funciones internas para el contrato de voto\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:128
msgid ""
"/// @dev Registers the voters and initializes their voting status to true "
"(can vote)\n"
msgstr ""
"/// @dev Registra a los votantes y inicializa su estatus de voto a true "
"(puede votar)\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:146
msgid "/// @dev Asserts implementation for the Vote contract\n"
msgstr "/// @dev Asserts implementa el contrato de voto\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:149
msgid ""
"// @dev Internal function that checks if an address is allowed to vote\n"
msgstr ""
"// @dev Función interna que comprueba si una dirección está autorizada a "
"votar\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:158
msgid "\"USER_NOT_REGISTERED\""
msgstr "\"USER_NO_REGISTERIDO\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:159
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:440
msgid "\"USER_ALREADY_VOTED\""
msgstr "\"USER_ALREADY_VOTADA\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:163
msgid "/// @dev Implement the VotingResultTrait for the Vote contract\n"
msgstr ""
"/// @dev Implementar el VotingResultTrait para el contrato de Votación\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:166
msgid ""
"// @dev Internal function to get the voting results (yes and no vote "
"counts)\n"
msgstr ""
"// @dev Función interna para obtener los resultados de la votación (sí y no "
"cuenta el voto)\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:174
msgid ""
"// @dev Internal function to calculate the voting results in percentage\n"
msgstr ""
"// @dev Función interna para calcular los resultados de votación en "
"porcentaje\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:192
msgid "<span class=\"caption\">Listing 16-7: A voting smart contract</span>"
msgstr ""
"<span class=\"caption\">Lista 16-7: Un contrato inteligente de votación</"
"span>"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:194
msgid "Deploying, Calling and Invoking the Voting Contract"
msgstr "Implementación, convocatoria e invocación del Contrato de Votación"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:196
msgid ""
"Part of the Starknet experience is deploying and interacting with smart "
"contracts."
msgstr ""
"Parte de la experiencia Starknet es implementar e interactuar con contratos "
"inteligentes."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:198
msgid ""
"Once the contract is deployed, we can interact with it by calling and "
"invoking its functions:"
msgstr ""
"Una vez desplegado el contrato, podemos interactuar con él llamando e "
"invocando sus funciones:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:200
msgid ""
"Calling contracts: Interacting with external functions that only read from "
"the state. These functions do not alter the state of the network, so they "
"don't require fees or signing."
msgstr ""
"Contratos de llamada: Interactuar con funciones externas que solo se leen "
"desde el estado. Estas funciones no alteran el estado de la red, por lo que "
"no requieren honorarios ni firma."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:201
msgid ""
"Invoking contracts: Interacting with external functions that can write to "
"the state. These functions do alter the state of the network and require "
"fees and signing."
msgstr ""
"Invocar contratos: Interactuar con funciones externas que pueden escribir al "
"estado. Estas funciones modifican el estado de la red y requieren honorarios "
"y firma."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:203
msgid ""
"We will setup a local development node using `katana` to deploy the voting "
"contract. Then, we'll interact with the contract by calling and invoking its "
"functions. You can also use the Goerli Testnet instead of `katana`. However, "
"we recommend using `katana` for local development and testing. You can find "
"the complete tutorial for `katana` in the [\"Katana: A Local Node\"](https://"
"book.starknet.io/ch02-04-katana.html) chapter of the Starknet Book."
msgstr ""
"Estableceremos un nodo de desarrollo local usando `katana` para implementar "
"el contrato de votación. Luego, interactuaremos con el contrato llamando e "
"invocando sus funciones. También puede utilizar el Goerli Testnet en lugar "
"de `katana`. Sin embargo, recomendamos usar `katana` para el desarrollo "
"local y pruebas. Puede encontrar el tutorial completo para `katana` en el "
"[\"Katana: A Local Node\"] (https://book.starknet.io/ch02-04-katana.html) "
"capítulo del libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:207
msgid "The `katana` Local Starknet Node"
msgstr "El nodo local de `katana` Starknet"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:209
msgid ""
"`katana` is designed to support local development by the [Dojo team](https://"
"github.com/dojoengine/dojo/blob/main/crates/katana). It will allow you to do "
"everything you need to do with Starknet, but locally. It is a great tool for "
"development and testing."
msgstr ""
"El `katana` está diseñado para apoyar el desarrollo local por el [equipo "
"Dojo] (https://github.com/dojoengine/dojo/blob/main/crates/katana) y le "
"permitirá hacer todo lo que necesita hacer con Starknet, pero localmente. Es "
"una gran herramienta para el desarrollo y las pruebas."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:211
msgid ""
"To install `katana` from the source code, please refer to the [\"Basic "
"Installation\"](https://book.starknet.io/ch02-01-basic-installation."
"html#katana-node-installation) chapter of the Starknet Book."
msgstr ""
"Para instalar `katana` desde el código fuente, consulte el capítulo "
"[\"Instalación básica\"] (https://book.starknet.io/ch02-01-basic-"
"installation.html#katana-node-installation) del libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:213
msgid ""
"Note: Please verify that the version of `katana` match the specified version "
"provided below."
msgstr ""
"Nota: Por favor verifique que la versión de `katana` coincida con la versión "
"especificada a continuación."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:220
msgid ""
"To upgrade `katana` version, refer to the [\"Basic Installation\"](https://"
"book.starknet.io/ch02-01-basic-installation.html#katana-node-installation) "
"chapter of the Starknet Book."
msgstr ""
"Para actualizar la versión `katana`, consulte el capítulo [\"Instalación "
"básica\"](https://book.starknet.io/ch02-01-basic-installation.html#katana-"
"node-installation) del libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:222
msgid ""
"Once you have `katana` installed, you can start the local Starknet node with:"
msgstr ""
"Una vez que haya instalado `katana`, puede iniciar el nodo local Starknet "
"con:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:228
msgid ""
"This command will start a local Starknet node with 3 deployed accounts. We "
"will use these accounts to deploy and interact with the voting contract:"
msgstr ""
"Este comando iniciará un nodo local de Starknet con 3 cuentas desplegadas. "
"Usaremos estas cuentas para implementar e interactuar con el contrato de "
"votación:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:233
msgid "================="
msgstr "# # # # # # # # # # # # # # # # # # # # # # # # #"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:249
msgid ""
"Before we can interact with the voting contract, we need to prepare the "
"voter and admin accounts on Starknet. Each voter account must be registered "
"and sufficiently funded for voting. For a more detailed understanding of how "
"accounts operate with Account Abstraction, refer to the [\"Account "
"Abstraction\"](https://book.starknet.io/ch04-00-account-abstraction.html) "
"chapter of the Starknet Book."
msgstr ""
"Antes de que podamos interactuar con el contrato de votación, necesitamos "
"preparar las cuentas de votantes y administradores en Starknet. Cada cuenta "
"de votantes debe estar registrada y suficientemente financiada para votar. "
"Para una comprensión más detallada de cómo funcionan las cuentas con "
"Abstraction Account, consulte el [\"Account Abstraction\"] (https://book."
"starknet.io/ch04-00-account-abstraction.html) capítulo del libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:255
msgid "Smart Wallets for Voting"
msgstr "Carteras inteligentes para votar"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:257
msgid ""
"Aside from Scarb you will need to have Starkli installed. Starkli is a "
"command line tool that allows you to interact with Starknet. You can find "
"the installation instructions in the \\[\"Basic Installation\"\\]\\[starkli "
"installation\\] chapter of the Starknet Book."
msgstr ""
"Además de Scarb tendrá que tener Starkli instalado. Starkli es una "
"herramienta de línea de comandos que le permite interactuar con Starknet. "
"Puede encontrar las instrucciones de instalación en el capítulo "
"\\[\"Instalación básica\"\\]\\[instalación de Starkli\\] del libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:259
msgid ""
"Note: Please verify that the version of `starkli` match the specified "
"version provided below."
msgstr ""
"Nota: Por favor, verifique que la versión de `starkli` coincida con la "
"versión especificada a continuación."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:266
msgid ""
"To upgrade `starkli` to `0.2.9`, use the `starkliup -v 0.2.9` command, or "
"simply `starkliup` which installed the latest stable version."
msgstr ""
"Para actualizar `starkli` a `0.2.9`, utilice el comando `starkliup -v "
"0.2.9`, o simplemente `starkliup'que instaló la última versión estable."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:268
msgid ""
"For each smart wallet we'll use, we must create a Signer within the "
"encrypted keystore and an Account Descriptor. This process is also detailed "
"in the \\[\"Testnet Deployment\"\\]\\[signer creation\\] chapter of the "
"Starknet Book."
msgstr ""
"Para cada cartera inteligente que utilicemos, debemos crear un Signer dentro "
"de la tienda de claves cifrada y un Descriptor de Cuenta. Este proceso "
"también se detalla en el capítulo \\[\"Deploración de redes de "
"prueba\"\\]\\[Creación de firmantes\\] del Libro Starknet."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:270
msgid ""
"We can create Signers and Account Descriptors for the accounts we want to "
"use for voting. Let's create a smart wallet for voting in our smart contract."
msgstr ""
"Podemos crear Signatarios y Descriptores de Cuenta para las cuentas que "
"queremos usar para votar. Vamos a crear una cartera inteligente para votar "
"en nuestro contrato inteligente."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:272
msgid "Firstly, we create a signer from a private key:"
msgstr "En primer lugar, creamos un signatario a partir de una clave privada:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:278
msgid ""
"Then, we create the Account Descriptor by fetching the katana account we "
"want to use:"
msgstr ""
"Luego, creamos el Descriptor de Cuenta mediante la búsqueda de la cuenta "
"katana que queremos usar:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:284
msgid ""
"This command will create a new `account0_account.json` file containing the "
"following details:"
msgstr ""
"Este comando creará un nuevo archivo `account0_account.json` que contiene "
"los siguientes detalles:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:288
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:291
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:401
msgid "\"version\""
msgstr "\"versión\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:289
msgid "\"variant\""
msgstr "\"variante\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:290
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:407
msgid "\"type\""
msgstr "\"tipo\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:290
msgid "\"open_zeppelin\""
msgstr "\"open_zeppelin\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:292
msgid "\"public_key\""
msgstr "\"tecla_pública\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:292
msgid "\"<SMART_WALLET_PUBLIC_KEY>\""
msgstr "\"<SMART_WALLET_PUBLIC_KEY>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:294
msgid "\"deployment\""
msgstr "\"despliegue\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:295
msgid "\"status\""
msgstr "\"status\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:295
msgid "\"deployed\""
msgstr "\"desplegado\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:296
msgid "\"class_hash\""
msgstr "\"clase_hash\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:296
msgid "\"<SMART_WALLET_CLASS_HASH>\""
msgstr "\"<SMART_WALLET_CLASS_HASH>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:297
msgid "\"address\""
msgstr "\"Dirección\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:297
msgid "\"<SMART_WALLET_ADDRESS>\""
msgstr "\"<SMART_WALLET_ADDRESS>\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:302
msgid ""
"You can retrieve the smart wallet class hash (it will be the same for all "
"your smart wallets) with the following command. Notice the use of the `--"
"rpc` flag and the RPC endpoint provided by `katana`:"
msgstr ""
"Puede recuperar el hash de clase de cartera inteligente (será el mismo para "
"todas sus carteras inteligentes) con el siguiente comando. Observe el uso de "
"la bandera `--rpc` y el punto final RPC proporcionado por `katana`:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:304
msgid ""
"```\n"
"starkli class-hash-at <SMART_WALLET_ADDRESS> --rpc http://0.0.0.0:5050\n"
"```"
msgstr "* class-hash-at <SMART_WALLET_ADDRESS> --rpc http://0.0.0.0.5050"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:308
msgid ""
"For the public key, you can use the `starkli signer keystore inspect` "
"command with the directory of the keystore json file:"
msgstr ""
"Para la clave pública, puede utilizar el comando `starkli signator keystore "
"inspection` con el directorio del archivo keystore json:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:314
msgid ""
"This process is identical for `account_1` and `account_2` in case you want "
"to have a second and a third voter."
msgstr ""
"Este proceso es idéntico para `account_1` y `account_2` en caso de que desee "
"tener un segundo y un tercer votante."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:316
msgid ""
"\\[starkli installation\\]: https://book.starknet.io/ch02-01-basic-"
"installation.html#starkli-installation) \\[signer creation\\]: https://book."
"starknet.io/ch02-05-testnet-deployment.html?highlight=signer#creating-a-"
"signer"
msgstr ""
"\\[starkli installation\\]: https://book.starknet.io/ch02-01-basic-"
"installation.html#starkli-installation) \\[signer creation\\]: https://book."
"starknet.io/ch02-05-testnet-distribution.html?highlight=signer#creating-a-"
"signer"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:319
msgid "Contract Deployment"
msgstr "Despliegue de contratos"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:321
msgid ""
"Before deploying, we need to declare the contract. We can do this with the "
"`starkli declare` command:"
msgstr ""
"Antes de desplegar, tenemos que declarar el contrato. Podemos hacer esto con "
"el comando `starkli declara ':"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:327
msgid ""
"If the compiler version you're using is older than the one used by Starkli "
"and you encounter a `compiler-version` error while using the command above, "
"you can specify a compiler version to use in the command by adding the `--"
"compiler-version x.y.z` flag."
msgstr ""
"Si la versión del compilador que está usando es más antigua que la utilizada "
"por Starkli y se encuentra con un error de `compilador-versión` mientras "
"utiliza el comando anterior, puede especificar una versión del compilador "
"para usar en el comando añadiendo la bandera `--compilador-versión x.y.z`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:329
msgid ""
"If you're still encountering issues with the compiler version, try upgrading "
"Starkli using the command: `starkliup` to make sure you're using the latest "
"version of starkli."
msgstr ""
"Si sigues encontrando problemas con la versión del compilador, intenta "
"actualizar Starkli usando el comando: `starkliup` para asegurarte de que "
"estás usando la última versión de Starkli."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:331
msgid ""
"The class hash of the contract is: "
"`0x06974677a079b7edfadcd70aa4d12aac0263a4cda379009fca125e0ab1a9ba52`. You "
"can declare this contract on Sepolia testnet and see that the class hash "
"will correspond."
msgstr ""
"El hash de clase del contrato es: "
"`0x06974677a079b7edfadcd70a4d12aac0263a4cda379009fca125e0ab1a9ba52`. Usted "
"puede declarar este contrato en la red de pruebas Sepolia y ver que el hash "
"de clase corresponderá."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:333
msgid ""
"The `--rpc` flag specifies the RPC endpoint to use (the one provided by "
"`katana`). The `--account` flag specifies the account to use for signing the "
"transaction. The account we use here is the one we created in the previous "
"step. The `--keystore` flag specifies the keystore file to use for signing "
"the transaction."
msgstr ""
"El indicador `--rpc` especifica el punto final RPC a usar (el que "
"proporciona `katana`). El indicador `--account` especifica la cuenta a usar "
"para firmar la transacción. La cuenta que usamos aquí es la que creamos en "
"el paso anterior. El indicador `--keystore` especifica el archivo keystore a "
"usar para firmar la transacción."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:335
msgid ""
"Since we are using a local node, the transaction will achieve finality "
"immediately. If you are using the Goerli Testnet, you will need to wait for "
"the transaction to be final, which usually takes a few seconds."
msgstr ""
"Ya que estamos usando un nodo local, la transacción alcanzará la finalidad "
"inmediatamente. Si usted está usando el Goerli Testnet, tendrá que esperar a "
"que la transacción sea final, lo que generalmente toma unos segundos."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:337
msgid ""
"The following command deploys the voting contract and registers voter_0, "
"voter_1, and voter_2 as eligible voters. These are the constructor "
"arguments, so add a voter account that you can later vote with."
msgstr ""
"El siguiente comando despliega el contrato de votación y registra votante_0, "
"votante_1 y votante_2 como votantes elegibles. Estos son los argumentos del "
"constructor, por lo que añada una cuenta de votante con la que pueda votar "
"más tarde."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:343
msgid "An example command:"
msgstr "Un comando de ejemplo:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:349
msgid ""
"In this case, the contract has been deployed at an specific address: "
"`0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349`. This "
"address will be different for you. We will use this address to interact with "
"the contract."
msgstr ""
"En este caso, el contrato se ha desplegado en una dirección específica: "
"`0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349`. Esta "
"dirección será diferente para usted. Usaremos esta dirección para "
"interactuar con el contrato."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:351
msgid "Voter Eligibility Verification"
msgstr "Verificación de la elegibilidad de los votantes"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:353
msgid ""
"In our voting contract, we have two functions to validate voter eligibility, "
"`voter_can_vote` and `is_voter_registered`. These are external read "
"functions, which mean they don't alter the state of the contract but only "
"read the current state."
msgstr ""
"En nuestro contrato de votación, tenemos dos funciones para validar la "
"elegibilidad del votante, `voter_can_vote` y `is_voter_registered`. Estas "
"son funciones de lectura externa, lo que significa que no alteran el estado "
"del contrato, sino que sólo leen el estado actual."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:355
msgid ""
"The `is_voter_registered` function checks whether a particular address is "
"registered as an eligible voter in the contract. The `voter_can_vote` "
"function, on the other hand, checks whether the voter at a specific address "
"is currently eligible to vote, i.e., they are registered and haven't voted "
"already."
msgstr ""
"La función `is_voter_registered` comprueba si una dirección en particular "
"está inscrita como votante elegible en el contrato. La función "
"`voter_can_vote`, por otro lado, verifica si el votante en una dirección "
"específica es actualmente elegible para votar, es decir, están registrados y "
"no han votado ya."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:357
msgid ""
"You can call these functions using the `starkli call` command. Note that the "
"`call` command is used for read functions, while the `invoke` command is "
"used for functions that can also write to storage. The `call` command does "
"not require signing, while the `invoke` command does."
msgstr ""
"Puede llamar a estas funciones utilizando el comando `starkli call`. Tenga "
"en cuenta que el comando `call` se utiliza para las funciones de lectura, "
"mientras que el comando `invoke` se utiliza para las funciones que también "
"pueden escribir en el almacenamiento. El comando `call` no requiere firmar, "
"mientras que el comando `invoke` lo hace."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:359
msgid ""
"```bash+\n"
"starkli call "
"0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349 "
"voter_can_vote "
"0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0 --rpc "
"http://0.0.0.0:5050\n"
"```"
msgstr ""
"Llamada de «Bash+ Starkli» "
"0x05ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349 "
"votante_can_voto "
"0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0 --rpc "
"http://0.0.0.0.5050"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:363
msgid ""
"First we added the address of the contract, then the function we want to "
"call, and finally the input for the function. In this case, we are checking "
"whether the voter at the address "
"`0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0` can "
"vote."
msgstr ""
"Primero añadimos la dirección del contrato, luego la función que queremos "
"llamar, y finalmente la entrada para la función. En este caso, estamos "
"comprobando si el votante en la dirección "
"`0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0` puede "
"votar."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:365
msgid ""
"Since we provided a registered voter address as an input, the result is 1 "
"(boolean true), indicating the voter is eligible to vote."
msgstr ""
"Dado que proporcionamos una dirección de votante registrada como entrada, el "
"resultado es 1 (verdadero booleano), indicando que el votante es elegible "
"para votar."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:367
msgid ""
"Next, let's call the `is_voter_registered` function using an unregistered "
"account address to observe the output:"
msgstr ""
"A continuación, llamemos a la función `is_voter_registered` usando una "
"dirección de cuenta no registrada para observar la salida:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:373
msgid ""
"With an unregistered account address, the terminal output is 0 (i.e., "
"false), confirming that the account is not eligible to vote."
msgstr ""
"Con una dirección de cuenta no registrada, la salida del terminal es 0 (es "
"decir, falsa), confirmando que la cuenta no es elegible para votar."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:375
msgid "Casting a Vote"
msgstr "Lanzar un voto"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:377
msgid ""
"Now that we have established how to verify voter eligibility, we can vote! "
"To vote, we interact with the `vote` function, which is flagged as external, "
"necessitating the use of the `starknet invoke` command."
msgstr ""
"Ahora que hemos establecido cómo verificar la elegibilidad de los votantes, "
"¡podemos votar! Para votar, interactuamos con la función `voto`, que está "
"marcada como externa, necesitando el uso del comando `starknet invoque '."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:379
msgid ""
"The `invoke` command syntax resembles the `call` command, but for voting, we "
"submit either `1` (for Yes) or `0` (for No) as our input. When we invoke the "
"`vote` function, we are charged a fee, and the transaction must be signed by "
"the voter; we are writing to the contract's storage."
msgstr ""
"La sintaxis de comando `invoke` se asemeja al comando `call`, pero para "
"votar, enviamos `1` (para Sí) o `0` (para No) como nuestra entrada. Cuando "
"invocamos la función `voto`, se nos cobra una tarifa, y la transacción debe "
"ser firmada por el votante; estamos escribiendo al almacenamiento del "
"contrato."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:389
msgid ""
"You will be prompted to enter the password for the signer. Once you enter "
"the password, the transaction will be signed and submitted to the Starknet "
"network. You will receive the transaction hash as output. With the starkli "
"transaction command, you can get more details about the transaction:"
msgstr ""
"Se le pedirá que introduzca la contraseña para el firmante. Una vez que "
"introduzca la contraseña, la transacción será firmada y enviada a la red "
"Starknet. Recibirá el hash de transacción como salida. Con el comando de "
"transacción Starkli, podrá obtener más detalles sobre la transacción:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:395
msgid "This returns:"
msgstr "Esto devuelve:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:399
msgid "\"transaction_hash\""
msgstr "\"transaction_hash\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:399
msgid "\"0x5604a97922b6811060e70ed0b40959ea9e20c726220b526ec690de8923907fd\""
msgstr "\"0x5604a97922b6811060e70ed0b40959ea9e20c726220b526ec690de8923907fd\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:400
msgid "\"max_fee\""
msgstr "«max_fee»"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:400
msgid "\"0x430e81\""
msgstr "\"0x430e81\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:401
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:410
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:414
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:415
#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:416
msgid "\"0x1\""
msgstr "\"0x1\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:402
msgid "\"signature\""
msgstr "\"Firma\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:403
msgid "\"0x75e5e4880d7a8301b35ff4a1ed1e3d72fffefa64bb6c306c314496e6e402d57\""
msgstr "\"0x75e5e4880d7a8301b35ff4a1ed1e3d72fffefa64bb6c306c314496e6e402d57\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:404
msgid "\"0xbb6c459b395a535dcd00d8ab13d7ed71273da4a8e9c1f4afe9b9f4254a6f51\""
msgstr "\"0xbb6c459b395a535dcd00d8ab13d7ed71273da4a8e9c1f4afe9b9f4254a6f51\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:406
msgid "\"nonce\""
msgstr "\"Ninguna vez\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:406
msgid "\"0x3\""
msgstr "\"0x3\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:407
msgid "\"INVOKE\""
msgstr "\"INVOKE\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:408
msgid "\"sender_address\""
msgstr "«sender_adress»"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:408
msgid "\"0x3ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0\""
msgstr "\"0x3ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:409
msgid "\"calldata\""
msgstr "\"calldata\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:411
msgid "\"0x5ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349\""
msgstr "\"0x5ea3a690be71c7fcd83945517f82e8861a97d42fca8ec9a2c46831d11f33349\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:412
msgid "\"0x132bdf85fc8aa10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41\""
msgstr "\"0x132bdf85fc8a10ac3c22f02317f8f53d4b4f52235ed1eabb3a4cbbe08b5c41\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:413
msgid "\"0x0\""
msgstr "\"0x0\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:421
msgid "If you try to vote twice with the same signer you will get an error:"
msgstr "Si intentas votar dos veces con el mismo firmante, recibirás un error:"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:424
msgid "\"Contract error\""
msgstr "\"Error de contratación\""

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:427
msgid ""
"The error is not very informative, but you can get more details when looking "
"at the output in the terminal where you started `katana` (our local Starknet "
"node):"
msgstr ""
"El error no es muy informativo, pero puede obtener más detalles al mirar la "
"salida en la terminal donde se inició `katana` (nuestro nodo local Starknet):"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:431
msgid ""
"\"Error in the called contract "
"(0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0):\n"
"    Error at pc=0:81:\n"
"    Got an exception while executing a hint: Custom Hint Error: Execution "
"failed. Failure reason: \\\"USER_ALREADY_VOTED\\\".\n"
"    ...\n"
msgstr ""
"\"Error en el contrato llamado "
"(0x03ee9e18edc71a6df30ac3aca2e0b02a198fbce19b7480a63a0d71cbd76652e0): Error "
"en pc=0:81: Obtuvo una excepción al ejecutar una pista: Error de pista "
"personalizada: La ejecución falló. Razón de fallo: \\\"USER_ALREADY_VOTED\\"
"\"....\n"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:437
msgid "The key for the error is `USER_ALREADY_VOTED`."
msgstr "La clave para el error es `USER_ALREADY_VOTED`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:443
msgid ""
"We can repeat the process to create Signers and Account Descriptors for the "
"accounts we want to use for voting. Remember that each Signer must be "
"created from a private key, and each Account Descriptor must be created from "
"a public key, a smart wallet address, and the smart wallet class hash (which "
"is the same for each voter)."
msgstr ""
"Podemos repetir el proceso para crear Signatarios y Descriptores de Cuenta "
"para las cuentas que queremos usar para votar. Recuerde que cada Signatario "
"debe ser creado a partir de una clave privada, y cada Descriptor de Cuenta "
"debe ser creado a partir de una clave pública, una dirección de cartera "
"inteligente, y la clase de hash de cartera inteligente (que es lo mismo para "
"cada votante)."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:451
msgid "Visualizing Vote Outcomes"
msgstr "Visualización de los resultados del voto"

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:453
msgid ""
"To examine the voting results, we invoke the `get_vote_status` function, "
"another view function, through the `starknet call` command."
msgstr ""
"Para examinar los resultados de la votación, invocamos la función "
"`get_vote_status`, otra función de vista, a través del comando `starknet "
"call`."

#: src/ch16-06-01-deploying-and-interacting-with-a-voting-contract.md:459
msgid ""
"The output reveals the tally of \"Yes\" and \"No\" votes along with their "
"relative percentages."
msgstr ""
"La salida revela el recuento de los votos \"Sí\" y \"No\" junto con sus "
"porcentajes relativos."

#: src/ch17-01-general-recommendations.md:3
msgid ""
"When developing software, ensuring it functions as intended is usually "
"straightforward. However, preventing unintended usage and vulnerabilities "
"can be more challenging."
msgstr ""
"Al desarrollar software, asegurar que funcione como se pretende es "
"generalmente sencillo. Sin embargo, prevenir el uso no deseado y "
"vulnerabilidades puede ser más difícil."

#: src/ch17-01-general-recommendations.md:5
msgid ""
"In smart contract development, security is very important. A single error "
"can result in the loss of valuable assets or the improper functioning of "
"certain features."
msgstr ""
"En el desarrollo de contratos inteligentes, la seguridad es muy importante. "
"Un solo error puede resultar en la pérdida de activos valiosos o el "
"funcionamiento inadecuado de ciertas características."

#: src/ch17-01-general-recommendations.md:7
msgid ""
"Smart contracts are executed in a public environment where anyone can "
"examine the code and interact with it. Any errors or vulnerabilities in the "
"code can be exploited by malicious actors."
msgstr ""
"Los contratos inteligentes se ejecutan en un entorno público donde "
"cualquiera puede examinar el código e interactuar con él. Cualquier error o "
"vulnerabilidad en el código puede ser explotado por actores maliciosos."

#: src/ch17-01-general-recommendations.md:9
msgid ""
"This chapter presents general recommendations for writing secure smart "
"contracts. By incorporating these concepts during development, you can "
"create robust and reliable smart contracts. This reduces the chance of "
"unexpected behavior or vulnerabilities."
msgstr ""
"Este capítulo presenta recomendaciones generales para escribir contratos "
"inteligentes seguros. Al incorporar estos conceptos durante el desarrollo, "
"puede crear contratos inteligentes robustos y confiables. Esto reduce la "
"posibilidad de comportamiento inesperado o vulnerabilidades."

#: src/ch17-01-general-recommendations.md:11
msgid "Disclaimer"
msgstr "Descargo de responsabilidad"

#: src/ch17-01-general-recommendations.md:13
msgid ""
"This chapter does not provide an exhaustive list of all possible security "
"issues, and it does not guarantee that your contracts will be completely "
"secure."
msgstr ""
"Este capítulo no proporciona una lista exhaustiva de todas las posibles "
"cuestiones de seguridad, y no garantiza que sus contratos sean completamente "
"seguros."

#: src/ch17-01-general-recommendations.md:15
msgid ""
"If you are developing smart contracts for production use, it is highly "
"recommended to conduct external audits performed by security experts."
msgstr ""
"Si está desarrollando contratos inteligentes para el uso de la producción, "
"es muy recomendable realizar auditorías externas realizadas por expertos en "
"seguridad."

#: src/ch17-01-general-recommendations.md:17
msgid "Mindset"
msgstr "Mindset"

#: src/ch17-01-general-recommendations.md:19
msgid ""
"Cairo is a highly safe language inspired by Rust. It is designed in a way "
"that forces you to cover all possible cases. Security issues on Starknet "
"mostly arise from the way smart contract flows are designed, not much from "
"the language itself."
msgstr ""
"El Cairo es un lenguaje altamente seguro inspirado en Rust. Está diseñado de "
"una manera que te obliga a cubrir todos los casos posibles. Los problemas de "
"seguridad en Starknet surgen principalmente de la forma en que se diseñan "
"los flujos de contratos inteligentes, no mucho de la lengua en sí."

#: src/ch17-01-general-recommendations.md:21
msgid ""
"Adopting a security mindset is the initial step in writing secure smart "
"contracts. Try to always consider all possible scenarios when writing code."
msgstr ""
"Adoptar una mentalidad de seguridad es el paso inicial en la escritura de "
"contratos inteligentes seguros. Trate de considerar siempre todos los "
"escenarios posibles al escribir código."

#: src/ch17-01-general-recommendations.md:23
msgid "Viewing Smart Contracts as Finite State Machines"
msgstr "Viendo contratos inteligentes como máquinas de estado finito"

#: src/ch17-01-general-recommendations.md:25
msgid ""
"Transactions in smart contracts are atomic, meaning they either succeed or "
"fail without making any changes."
msgstr ""
"Las transacciones en contratos inteligentes son atómicas, lo que significa "
"que tienen éxito o fracasan sin hacer ningún cambio."

#: src/ch17-01-general-recommendations.md:27
msgid ""
"Think of smart contracts as state machines: they have a set of initial "
"states defined by the constructor constraints, and external functions "
"represent a set of possible state transitions. A transaction is nothing more "
"than a state transition."
msgstr ""
"Piense en los contratos inteligentes como máquinas estatales: tienen un "
"conjunto de estados iniciales definidos por las restricciones del "
"constructor, y las funciones externas representan un conjunto de posibles "
"transiciones del estado. Una transacción no es más que una transición del "
"estado."

#: src/ch17-01-general-recommendations.md:29
msgid ""
"The `assert!` or `panic!` macros can be used to validate conditions before "
"performing specific actions. You can learn more about these on the "
"[Unrecoverable Errors with panic](./ch09-01-unrecoverable-errors-with-panic."
"md) page."
msgstr ""
"Las macros `asertar!` o `panic!` se pueden utilizar para validar las "
"condiciones antes de realizar acciones específicas. Puede obtener más "
"información sobre estas en la página [Errores irrecuperables con pánico](./"
"ch09-01-irrecuperable-errors-with-panic.md)."

#: src/ch17-01-general-recommendations.md:31
msgid "These validations can include:"
msgstr "Estas validaciones pueden incluir:"

#: src/ch17-01-general-recommendations.md:33
msgid "Inputs provided by the caller"
msgstr "Aportaciones proporcionadas por la persona que llama"

#: src/ch17-01-general-recommendations.md:34
msgid "Execution requirements"
msgstr "Requisitos de ejecución"

#: src/ch17-01-general-recommendations.md:35
msgid "Invariants (conditions that must always be true)"
msgstr "Invariantes (condiciones que siempre deben ser ciertas)"

#: src/ch17-01-general-recommendations.md:36
msgid "Return values from other function calls"
msgstr "Devuelve valores de otras llamadas a funciones"

#: src/ch17-01-general-recommendations.md:38
msgid ""
"For example, you could use the `assert!` macro to validate that a user has "
"enough funds to perform a withdraw transaction. If the condition is not met, "
"the transaction will fail and the state of the contract will not change."
msgstr ""
"Por ejemplo, podría utilizar la macro `asertar!` para validar que un usuario "
"tiene fondos suficientes para realizar una transacción de retiro. Si la "
"condición no se cumple, la transacción fallará y el estado del contrato no "
"cambiará."

#: src/ch17-01-general-recommendations.md:45
msgid "\"Insufficient funds\""
msgstr "\"Fondos insuficientes\""

#: src/ch17-01-general-recommendations.md:51
msgid ""
"Using these functions to check conditions adds constraints that help clearly "
"define the boundaries of possible state transitions for each function in "
"your smart contract. These checks ensure that the behavior of the contract "
"stays within the expected limits."
msgstr ""
"El uso de estas funciones para comprobar las condiciones añade restricciones "
"que ayudan a definir claramente los límites de las posibles transiciones de "
"estado para cada función en su contrato inteligente. Estas comprobaciones "
"aseguran que el comportamiento del contrato se mantenga dentro de los "
"límites esperados."

#: src/ch17-01-general-recommendations.md:53
msgid "Recommendations"
msgstr "Recomendaciones"

#: src/ch17-01-general-recommendations.md:55
msgid "Checks Effects Interactions Pattern"
msgstr "Controla el Patrón de Interacciones de Efectos"

#: src/ch17-01-general-recommendations.md:57
msgid ""
"The Checks Effects Interactions pattern is a common design pattern used to "
"prevent reentrancy attacks on Ethereum. While reentrancy is harder to "
"achieve in Starknet, it is still recommended to use this pattern in your "
"smart contracts."
msgstr ""
"El patrón Checks Effects Interactions es un patrón de diseño común utilizado "
"para prevenir los ataques de reentrancy en Ethereum. Aunque la reentrancy es "
"más difícil de lograr en Starknet, se recomienda seguir usando este patrón "
"en sus contratos inteligentes."

#: src/ch17-01-general-recommendations.md:61
msgid ""
"The pattern consists of following a specific order of operations in your "
"functions:"
msgstr ""
"El patrón consiste en seguir un orden específico de operaciones en sus "
"funciones:"

#: src/ch17-01-general-recommendations.md:63
msgid ""
"**Checks**: Validate all conditions and inputs before performing any state "
"changes."
msgstr ""
"**Comprobaciones**: Validar todas las condiciones e entradas antes de "
"realizar cualquier cambio de estado."

#: src/ch17-01-general-recommendations.md:64
msgid "**Effects**: Perform all state changes."
msgstr "**Efectos**: Realizar todos los cambios de estado."

#: src/ch17-01-general-recommendations.md:65
msgid ""
"**Interactions**: All external calls to other contracts should be made at "
"the end of the function."
msgstr ""
"** Interacciones**: Todas las llamadas externas a otros contratos deben "
"hacerse al final de la función."

#: src/ch17-01-general-recommendations.md:67
msgid "Access Control"
msgstr "Control de acceso"

#: src/ch17-01-general-recommendations.md:69
msgid ""
"Access control is the process of restricting access to certain features or "
"resources. It is a common security mechanism used to prevent unauthorized "
"access to sensitive information or actions. In smart contracts, some "
"functions may often be restricted to specific users or roles."
msgstr ""
"El control de acceso es el proceso de restringir el acceso a ciertas "
"características o recursos. Es un mecanismo de seguridad común utilizado "
"para prevenir el acceso no autorizado a información o acciones sensibles. En "
"contratos inteligentes, algunas funciones pueden estar a menudo restringidas "
"a usuarios o roles específicos."

#: src/ch17-01-general-recommendations.md:71
msgid ""
"You can implement the access control pattern to easily manage permissions. "
"This pattern consists of defining a set of roles and assigning them to "
"specific users. Each function can then be restricted to specific roles."
msgstr ""
"Puede implementar el patrón de control de acceso para administrar fácilmente "
"los permisos. Este patrón consiste en definir un conjunto de roles y "
"asignarlos a usuarios específicos. Cada función puede restringirse a roles "
"específicos."

#: src/ch17-01-general-recommendations.md:92
msgid "// Role 'owner': only one address\n"
msgstr "// Rol 'propietario': sólo una dirección\n"

#: src/ch17-01-general-recommendations.md:94
msgid "// Role 'role_a': a set of addresses\n"
msgstr "// Rol 'role_a': un conjunto de direcciones\n"

#: src/ch17-01-general-recommendations.md:103
msgid "// Guard functions to check roles\n"
msgstr "// Funciones de guardia para comprobar roles\n"

#: src/ch17-01-general-recommendations.md:118
msgid "\"Not owner\""
msgstr "\"No es dueño\""

#: src/ch17-01-general-recommendations.md:123
msgid "\"Not role A\""
msgstr "\"No papel A\""

#: src/ch17-01-general-recommendations.md:126
msgid "// You can easily combine guards to perform complex checks\n"
msgstr ""
"// Usted puede combinar fácilmente guardias para realizar comprobaciones "
"complejas\n"

#: src/ch17-01-general-recommendations.md:128
msgid "\"Not allowed\""
msgstr "\"No se permite\""

#: src/ch17-01-general-recommendations.md:131
msgid "// Functions to manage roles\n"
msgstr "// Funciones para administrar roles\n"

#: src/ch17-01-general-recommendations.md:138
msgid ""
"// You can now focus on the business logic of your contract\n"
"        // and reduce the complexity of your code by using guard functions\n"
msgstr ""
"// Ahora puede centrarse en la lógica de negocio de su contrato // y reducir "
"la complejidad de su código mediante el uso de funciones de guardia\n"

#: src/ch17-02-testing-smart-contracts.md:3
msgid ""
"Testing smart contracts is a critical part of the development process. It is "
"important to ensure that smart contracts behave as expected and that they "
"are secure."
msgstr ""
"La prueba de contratos inteligentes es una parte crítica del proceso de "
"desarrollo. Es importante garantizar que los contratos inteligentes se "
"comporten como se esperaba y sean seguros."

#: src/ch17-02-testing-smart-contracts.md:5
msgid ""
"In a previous section of the Cairo Book, we learned how to write and "
"structure our tests for Cairo programs. We demonstrated how these tests "
"could be run using the `scarb` command-line tool. While this approach is "
"useful for testing standalone Cairo programs and functions, it lacks "
"functionality for testing smart contracts that require control over the "
"contract state and execution context. Therefore, in this section, we will "
"introduce how to use Starknet Foundry, a smart contract development "
"toolchain for Starknet, to test your Cairo contracts."
msgstr ""
"En una sección anterior del Libro de El Cairo, aprendimos a escribir y "
"estructurar nuestras pruebas para los programas de El Cairo. Demostramos "
"cómo estas pruebas podrían ejecutarse utilizando la herramienta de línea de "
"comandos `scarb`. Si bien este enfoque es útil para probar programas y "
"funciones de El Cairo independientes, carece de funcionalidad para probar "
"contratos inteligentes que requieren control sobre el estado del contrato y "
"el contexto de ejecución. Por lo tanto, en esta sección, vamos a introducir "
"cómo utilizar Starknet Foundry, una cadena de herramientas de desarrollo de "
"contratos inteligentes para Starknet, para probar sus contratos de El Cairo."

#: src/ch17-02-testing-smart-contracts.md:8
msgid ""
"Throughout this chapter, we will be using as an example the `PizzaFactory` "
"contract in Listing 17-1 to demonstrate how to write tests with Starknet "
"Foundry."
msgstr ""
"A lo largo de este capítulo, utilizaremos como ejemplo el contrato "
"`PizzaFactory` en la Lista 17-1 para demostrar cómo escribir pruebas con "
"Starknet Foundry."

#: src/ch17-02-testing-smart-contracts.md:59
#: src/ch17-02-testing-smart-contracts.md:64
msgid "\"Amount cannot be 0\""
msgstr "\"La cantidad no puede ser 0\""

#: src/ch17-02-testing-smart-contracts.md:69
msgid "\"Not enough pepperoni\""
msgstr "\"No hay suficiente pepperoni\""

#: src/ch17-02-testing-smart-contracts.md:70
msgid "\"Not enough pineapple\""
msgstr "\"No hay suficiente piña\""

#: src/ch17-02-testing-smart-contracts.md:75
#: src/ch17-02-testing-smart-contracts.md:210
#: src/ch17-02-testing-smart-contracts.md:326
#: src/ch17-02-testing-smart-contracts.md:438
#: src/ch17-02-testing-smart-contracts.md:550
#: src/ch17-02-testing-smart-contracts.md:664
msgid "\"Only the owner can make pizza\""
msgstr "\"Sólo el dueño puede hacer pizza\""

#: src/ch17-02-testing-smart-contracts.md:101
#: src/ch17-02-testing-smart-contracts.md:200
#: src/ch17-02-testing-smart-contracts.md:316
#: src/ch17-02-testing-smart-contracts.md:428
#: src/ch17-02-testing-smart-contracts.md:540
#: src/ch17-02-testing-smart-contracts.md:654
msgid "\"Only the owner can set ownership\""
msgstr "\"Sólo el propietario puede establecer la propiedad\""

#: src/ch17-02-testing-smart-contracts.md:109
msgid ""
"<span class=\"caption\">Listing 17-1: A pizza factory that needs to be "
"tested</span>"
msgstr ""
"<span class=\"caption\">Lista 17-1: Una fábrica de pizzas que necesita ser "
"probada</span>"

#: src/ch17-02-testing-smart-contracts.md:111
msgid "Configuring your Scarb project with Starknet Foundry"
msgstr "Configurando tu proyecto Scarb con Starknet Foundry"

#: src/ch17-02-testing-smart-contracts.md:113
msgid ""
"The settings of your Scarb project can be configured in the `Scarb.toml` "
"file. To use Starknet Foundry as your testing tool, you will need to add it "
"as a dev dependency in your `Scarb.toml` file. At the time of writing, the "
"latest version of Starknet Foundry is `v0.22.0` - but you should use the "
"latest version."
msgstr ""
"Los ajustes de su proyecto Scarb se pueden configurar en el archivo `Scarb."
"toml`. Para utilizar Starknet Foundry como su herramienta de prueba, tendrá "
"que añadirlo como una dependencia dev en su archivo `Scarb.toml`. En el "
"momento de escribir, la última versión de Starknet Foundry es `v0.22.0` - "
"pero debe utilizar la última versión."

#: src/ch17-02-testing-smart-contracts.md:115
msgid ""
"```toml,noplayground\n"
"[dev-dependencies]\n"
"snforge_std = { git = \"https://github.com/foundry-rs/starknet-foundry."
"git\", tag = \"v0.22.0\" }\n"
"\n"
"[scripts]\n"
"test = \"snforge test\"\n"
"```"
msgstr ""
"«toml,noplayground [dev-dependencias] snforge_std = { git = \"https://github."
"com/foundry-rs/starknet-foundry.git\", tag = \"v0.22.0\" } [scripts] test = "
"\"snforge test\""

#: src/ch17-02-testing-smart-contracts.md:123
msgid ""
"The `scarb test` command is configured to execute `scarb cairo-test` by "
"default. In our settings, we have configured it to execute `snforge test` "
"instead. This will allow us to run our tests using Starknet Foundry when we "
"run the `scarb test` command."
msgstr ""
"El comando `scarb test` está configurado para ejecutar `scarb cairo-test` "
"por defecto. En nuestra configuración, lo hemos configurado para ejecutar "
"`snforge test` en su lugar. Esto nos permitirá ejecutar nuestras pruebas "
"usando Starknet Foundry cuando ejecutemos el comando `scarb test`."

#: src/ch17-02-testing-smart-contracts.md:125
msgid ""
"Once your project is configured, you will need to install Starknet Foundry "
"by following the installation guide from the [Starknet Foundry Documentation]"
"(https://foundry-rs.github.io/starknet-foundry/getting-started/installation."
"html). As usual, we recommend to use `asdf` to manage versions of your "
"development tools."
msgstr ""
"Una vez que su proyecto esté configurado, tendrá que instalar Starknet "
"Foundry siguiendo la guía de instalación de [Starknet Foundry Documentation]"
"(https://foundry-rs.github.io/starknet-foundry/getting-started/installation."
"html). Como de costumbre, recomendamos utilizar `asdf` para administrar "
"versiones de sus herramientas de desarrollo."

#: src/ch17-02-testing-smart-contracts.md:127
msgid "Testing Smart Contracts with Starknet Foundry"
msgstr "Prueba de contratos inteligentes con la fundición Starknet"

#: src/ch17-02-testing-smart-contracts.md:129
msgid ""
"The usual command to run your tests using Starknet Foundry is `snforge "
"test`. However, when we configured our projects, we defined that the `scarb "
"test` command will run the `snforge test` command. Therefore, during the "
"rest of this chapter, consider that the `scarb test` command will be using "
"`snforge test` under the hood."
msgstr ""
"El comando habitual para ejecutar sus pruebas usando Starknet Foundry es "
"`snforge test`. Sin embargo, cuando configuramos nuestros proyectos, "
"definimos que el comando `scarb test` ejecutará el comando `snforge test`. "
"Por lo tanto, durante el resto de este capítulo, considere que el comando "
"`scarb test` usará `snforge test` bajo el capó."

#: src/ch17-02-testing-smart-contracts.md:131
msgid "The usual testing flow of a contract is as follows:"
msgstr "El flujo de ensayo habitual de un contrato es el siguiente:"

#: src/ch17-02-testing-smart-contracts.md:133
msgid "Declare the class of the contract to test, identified by its name"
msgstr "Declarar la clase del contrato a probar, identificada por su nombre"

#: src/ch17-02-testing-smart-contracts.md:134
msgid "Serialize the constructor calldata into an array"
msgstr "Serializar los datos de llamada del constructor en un array"

#: src/ch17-02-testing-smart-contracts.md:135
msgid "Deploy the contract and retrieve its address"
msgstr "Implementar el contrato y recuperar su dirección"

#: src/ch17-02-testing-smart-contracts.md:136
msgid "Interact with the contract's entrypoint to test various scenarios"
msgstr ""
"Interactúa con el punto de entrada del contrato para probar varios escenarios"

#: src/ch17-02-testing-smart-contracts.md:138
msgid "Deploying the Contract to Test"
msgstr "Implementación del contrato de prueba"

#: src/ch17-02-testing-smart-contracts.md:140
msgid ""
"In Listing 17-2, we wrote a function that deploys the `PizzaFactory` "
"contract and sets up the dispatcher for interactions."
msgstr ""
"En la Lista 17-2, escribimos una función que despliega el contrato "
"`PizzaFactory` y establece el despachador para las interacciones."

#: src/ch17-02-testing-smart-contracts.md:162
#: src/ch17-02-testing-smart-contracts.md:278
#: src/ch17-02-testing-smart-contracts.md:390
#: src/ch17-02-testing-smart-contracts.md:502
#: src/ch17-02-testing-smart-contracts.md:616
msgid "\"PizzaFactory\""
msgstr "\"PizzaFactory\""

#: src/ch17-02-testing-smart-contracts.md:178
#: src/ch17-02-testing-smart-contracts.md:294
#: src/ch17-02-testing-smart-contracts.md:406
#: src/ch17-02-testing-smart-contracts.md:518
#: src/ch17-02-testing-smart-contracts.md:632
msgid "\"pepperoni\""
msgstr "\"pepperoni\""

#: src/ch17-02-testing-smart-contracts.md:179
#: src/ch17-02-testing-smart-contracts.md:295
#: src/ch17-02-testing-smart-contracts.md:407
#: src/ch17-02-testing-smart-contracts.md:519
#: src/ch17-02-testing-smart-contracts.md:633
msgid "\"pineapple\""
msgstr "\"Piña\""

#: src/ch17-02-testing-smart-contracts.md:221
#: src/ch17-02-testing-smart-contracts.md:337
#: src/ch17-02-testing-smart-contracts.md:449
#: src/ch17-02-testing-smart-contracts.md:561
#: src/ch17-02-testing-smart-contracts.md:675
msgid "// Setup\n"
msgstr "// Configuración\n"

#: src/ch17-02-testing-smart-contracts.md:226
#: src/ch17-02-testing-smart-contracts.md:342
#: src/ch17-02-testing-smart-contracts.md:454
#: src/ch17-02-testing-smart-contracts.md:566
#: src/ch17-02-testing-smart-contracts.md:680
msgid "// When\n"
msgstr "// Cuando\n"

#: src/ch17-02-testing-smart-contracts.md:229
#: src/ch17-02-testing-smart-contracts.md:345
#: src/ch17-02-testing-smart-contracts.md:457
#: src/ch17-02-testing-smart-contracts.md:569
#: src/ch17-02-testing-smart-contracts.md:683
msgid "// Then\n"
msgstr "// Entonces\n"

#: src/ch17-02-testing-smart-contracts.md:246
msgid ""
"<span class=\"caption\">Listing 17-2 Deploying the contract to test</span>"
msgstr ""
"<span class=\"caption\">Lista 17-2 Implementación del contrato para probar</"
"span>"

#: src/ch17-02-testing-smart-contracts.md:248
msgid "Testing our Contract"
msgstr "Probando nuestro contrato"

#: src/ch17-02-testing-smart-contracts.md:250
msgid ""
"Determining the behavior that your contract should respect is the first step "
"in writing tests. In the `PizzaFactory` contract, we determined that the "
"contract should have the following behavior:"
msgstr ""
"Determinar el comportamiento que debe respetar su contrato es el primer paso "
"en la redacción de pruebas. En el contrato `PizzaFactory`, determinamos que "
"el contrato debe tener el siguiente comportamiento:"

#: src/ch17-02-testing-smart-contracts.md:252
msgid ""
"Upon deployment, the contract owner should be set to the address provided in "
"the constructor, and the factory should have 10 units of pepperoni and "
"pineapple, and no pizzas created."
msgstr ""
"Tras el despliegue, el propietario del contrato debe ser fijado a la "
"dirección proporcionada en el constructor, y la fábrica debe tener 10 "
"unidades de pepperoni y piña, y no se crean pizzas."

#: src/ch17-02-testing-smart-contracts.md:253
msgid ""
"If someone tries to make a pizza and they are not the owner, the operation "
"should fail. Otherwise, the pizza count should be incremented, and an event "
"should be emitted."
msgstr ""
"Si alguien trata de hacer una pizza y no es el propietario, la operación "
"debe fallar. De lo contrario, el conteo de pizza debe ser incrementado, y un "
"evento debe ser emitido."

#: src/ch17-02-testing-smart-contracts.md:254
msgid ""
"If someone tries to take ownership of the contract and they are not the "
"owner, the operation should fail. Otherwise, the owner should be updated."
msgstr ""
"Si alguien trata de tomar la propiedad del contrato y no es el propietario, "
"la operación debe fallar. De lo contrario, el propietario debe ser "
"actualizado."

#: src/ch17-02-testing-smart-contracts.md:256
msgid "Accessing Storage Variables with `load`"
msgstr "Acceso a las variables de almacenamiento con `carga`"

#: src/ch17-02-testing-smart-contracts.md:362
msgid ""
"<span class=\"caption\">Listing 17-3: Testing the initial state by loading "
"storage variables </span>"
msgstr ""
"<span class=\"caption\">Lista 17-3: Probando el estado inicial cargando "
"variables de almacenamiento </span>"

#: src/ch17-02-testing-smart-contracts.md:364
msgid ""
"Once our contract is deployed, we want to assert that the initial values are "
"set as expected. If our contract has an entrypoint that returns the value of "
"a storage variable, we can call this entrypoint. Otherwise, we can use the "
"`load` function from `snforge` to load the value of a storage variable "
"inside our contract, even if not exposed by an entrypoint."
msgstr ""
"Una vez desplegado nuestro contrato, queremos afirmar que los valores "
"iniciales se establecen como se esperaba. Si nuestro contrato tiene un punto "
"de entrada que devuelve el valor de una variable de almacenamiento, podemos "
"llamar a este punto de entrada. De lo contrario, podemos utilizar la función "
"`load` de `snforge` para cargar el valor de una variable de almacenamiento "
"dentro de nuestro contrato, incluso si no está expuesto por un punto de "
"entrada."

#: src/ch17-02-testing-smart-contracts.md:366
msgid "Mocking the Caller Address with `start_cheat_caller_address`"
msgstr "Ocultando la dirección del llamante con `start_cheat_caller_adress`"

#: src/ch17-02-testing-smart-contracts.md:368
msgid ""
"The security of our factory relies on the owner being the only one able to "
"make pizzas and transfer ownership. To test this, we can use the "
"`start_cheat_caller_address` function to mock the caller address and assert "
"that the contract behaves as expected."
msgstr ""
"La seguridad de nuestra fábrica depende de que el propietario sea el único "
"capaz de hacer pizzas y transferir la propiedad. Para probar esto, podemos "
"utilizar la función `start_cheat_caller_address` para burlarse de la "
"dirección de la persona que llama y afirmar que el contrato se comporta como "
"se esperaba."

#: src/ch17-02-testing-smart-contracts.md:474
msgid ""
"<span class=\"caption\">Listing 17-4: Testing ownership of the contract by "
"mocking the caller address </span>"
msgstr ""
"<span class=\"caption\">Lista 17-4: Probando la propiedad del contrato "
"burlándose de la dirección de llamada </span>"

#: src/ch17-02-testing-smart-contracts.md:476
msgid ""
"Using `start_cheat_caller_address`, we call the `change_owner` function "
"first as the owner, and then as a different address. We assert that the "
"operation fails when the caller is not the owner, and that the owner is "
"updated when the caller is the owner."
msgstr ""
"Utilizando `start_cheat_caller_address`, llamamos a la función "
"`change_owner` primero como el propietario, y luego como una dirección "
"diferente. Afirmamos que la operación falla cuando el llamante no es el "
"propietario, y que el propietario se actualiza cuando el llamante es el "
"propietario."

#: src/ch17-02-testing-smart-contracts.md:478
msgid "Capturing Events with `spy_events`"
msgstr "Capturar eventos con `spy_events`"

#: src/ch17-02-testing-smart-contracts.md:480
msgid ""
"When a pizza is created, the contract emits an event. To test this, we can "
"use the `spy_events` function to capture the emitted events and assert that "
"the event was emitted with the expected parameters. Naturally, we can also "
"assert that the pizza count was incremented, and that only the owner can "
"make a pizza."
msgstr ""
"Cuando se crea una pizza, el contrato emite un evento. Para probar esto, "
"podemos usar la función `spy_events` para capturar los eventos emitidos y "
"afirmar que el evento fue emitido con los parámetros esperados. "
"Naturalmente, también podemos afirmar que el conteo de pizzas fue "
"incrementado, y que sólo el propietario puede hacer una pizza."

#: src/ch17-02-testing-smart-contracts.md:586
msgid ""
"<span class=\"caption\">Listing 17-5: Testing the events emitted when a "
"pizza is created</span>"
msgstr ""
"<span class=\"caption\">Lista 17-5: Probando los eventos emitidos cuando se "
"crea una pizza</span>"

#: src/ch17-02-testing-smart-contracts.md:588
msgid "Accessing Internal Functions with `contract_state_for_testing`"
msgstr "Acceso a funciones internas con `contract_state_for_testing`"

#: src/ch17-02-testing-smart-contracts.md:590
msgid ""
"All the tests we have seen so far have been using a workflow that involves "
"deploying the contract and interacting with the contract's entrypoints. "
"However, sometimes we may want to test the internals of the contract "
"directly, without deploying the contract. How could this be done, if we were "
"reasoning in purely Cairo terms?"
msgstr ""
"Todas las pruebas que hemos visto hasta ahora han estado utilizando un flujo "
"de trabajo que implica desplegar el contrato e interactuar con los puntos de "
"entrada del contrato. Sin embargo, a veces podemos querer probar los "
"internos del contrato directamente, sin desplegar el contrato. ¿Cómo se "
"podría hacer esto, si estábamos razonando en términos puramente de El Cairo?"

#: src/ch17-02-testing-smart-contracts.md:592
msgid ""
"Recall the struct `ContractState`, which is used as a parameter to all the "
"entrypoints of a contract. To make it short, this struct contains zero-sized "
"fields, corresponding to the storage variables of the contract. The only "
"purpose of these fields is to allow the Cairo compiler to generate the "
"correct code for accessing the storage variables. If we could create an "
"instance of this struct, we could access these storage variables directly, "
"without deploying the contract..."
msgstr ""
"Recuerde la estructura `Contract State`, que se utiliza como parámetro para "
"todos los puntos de entrada de un contrato. Para abreviar, esta estructura "
"contiene campos de tamaño cero, correspondientes a las variables de "
"almacenamiento del contrato. El único propósito de estos campos es permitir "
"que el compilador de El Cairo genere el código correcto para acceder a las "
"variables de almacenamiento. Si pudiéramos crear una instancia de esta "
"estructura, podríamos acceder a estas variables de almacenamiento "
"directamente, sin desplegar el contrato..."

#: src/ch17-02-testing-smart-contracts.md:594
msgid ""
"...and this is exactly what the `contract_state_for_testing` function does! "
"It creates an instance of the `ContractState` struct, allowing us to call "
"any function that takes as parameter a `ContractState` struct, without "
"deploying the contract. To interact with the storage variables properly, we "
"need to manually import the traits that define access to the storage "
"variables."
msgstr ""
"...y esto es exactamente lo que hace la función "
"`contract_state_for_testing`! Crea una instancia de la estructura "
"`ContractState`, permitiéndonos llamar a cualquier función que tome como "
"parámetro una estructura `ContractState`, sin desplegar el contrato. Para "
"interactuar correctamente con las variables de almacenamiento, necesitamos "
"importar manualmente los rasgos que definen el acceso a las variables de "
"almacenamiento."

#: src/ch17-02-testing-smart-contracts.md:700
msgid ""
"<span class=\"caption\">Listing 17-6: Unit testing our contract without "
"deployment</span>"
msgstr ""
"<span class=\"caption\">Lista 17-6: Unidad probando nuestro contrato sin "
"despliegue</span>"

#: src/ch17-02-testing-smart-contracts.md:702
msgid ""
"These imports give us access to our internal functions (notably, "
"`set_owner`), as well as the read/write access to the `owner` storage "
"variable. Once we have these, we can interact with the contract directly, "
"changing the address of the owner by calling the `set_owner` method, "
"accessible through `InternalTrait`, and reading the `owner` storage variable."
msgstr ""
"Estas importaciones nos dan acceso a nuestras funciones internas (en "
"particular, `set_owner`), así como al acceso de lectura/escritura a la "
"variable de almacenamiento `owner`. Una vez que las tenemos, podemos "
"interactuar directamente con el contrato, cambiando la dirección del "
"propietario llamando al método `set_owner`, accesible a través de "
"`InternalTrait`, y leyendo la variable de almacenamiento `owner`."

#: src/ch17-02-testing-smart-contracts.md:707
msgid ""
"Note: Both approaches cannot be used at the same time. If you decide to "
"deploy the contract, you interact with it using the dispatcher. If you "
"decide to test the internal functions, you interact with the `ContractState` "
"object directly."
msgstr ""
"Nota: Ambos enfoques no se pueden usar al mismo tiempo. Si decide "
"implementar el contrato, interactúa con él usando el despachador. Si decide "
"probar las funciones internas, interactúa directamente con el objeto "
"`Contract State`."

#: src/ch17-02-testing-smart-contracts.md:728
msgid ""
"The output of the tests shows that all the tests passed successfully, along "
"with an estimation of the gas consumed by each test."
msgstr ""
"La salida de las pruebas muestra que todas las pruebas pasaron con éxito, "
"junto con una estimación del gas consumido por cada prueba."

#: src/ch17-02-testing-smart-contracts.md:732
msgid ""
"In this chapter, we learned how to test smart contracts using Starknet "
"Foundry. We demonstrated how to deploy a contract and interact with it using "
"the dispatcher. We also showed how to test the contract's behavior by "
"mocking the caller address and capturing events. Finally, we demonstrated "
"how to test the internal functions of the contract directly, without "
"deploying the contract."
msgstr ""
"En este capítulo, aprendimos a probar contratos inteligentes usando Starknet "
"Foundry. Demostramos cómo implementar un contrato e interactuar con él "
"usando el despachador. También demostramos cómo probar el comportamiento del "
"contrato burlándonos de la dirección del llamante y capturando eventos. "
"Finalmente, demostramos cómo probar las funciones internas del contrato "
"directamente, sin implementar el contrato."

#: src/ch17-02-testing-smart-contracts.md:734
msgid ""
"To learn more about Starknet Foundry, refer to the [Starknet Foundry "
"documentation](https://foundry-rs.github.io/starknet-foundry/index.html)."
msgstr ""
"Para obtener más información sobre Starknet Foundry, consulte la "
"[Documentación de Starknet Foundry] (https://foundry-rs.github.io/starknet-"
"foundry/index.html)."

#: src/ch17-03-static-analysis-tools.md:3
msgid ""
"Static analysis refers to the process of examining code without its "
"execution, focusing on its structure, syntax, and properties. It involves "
"analyzing the source code to identify potential issues, vulnerabilities, or "
"violations of specified rules."
msgstr ""
"El análisis estático se refiere al proceso de examinar el código sin su "
"ejecución, centrándose en su estructura, sintaxis y propiedades. Implica "
"analizar el código fuente para identificar posibles problemas, "
"vulnerabilidades o violaciones de reglas especificadas."

#: src/ch17-03-static-analysis-tools.md:5
msgid ""
"By defining rules, such as coding conventions or security guidelines, "
"developers can utilize static analysis tools to automatically check the code "
"against these standards."
msgstr ""
"Al definir reglas, tales como convenciones de codificación o directrices de "
"seguridad, los desarrolladores pueden utilizar herramientas de análisis "
"estático para comprobar automáticamente el código contra estos estándares."

#: src/ch17-03-static-analysis-tools.md:7
msgid "Reference:"
msgstr "Referencia:"

#: src/ch17-03-static-analysis-tools.md:9
msgid ""
"[Semgrep Cairo 1.0 support](https://semgrep.dev/blog/2023/semgrep-now-"
"supports-cairo-1-0)"
msgstr ""
"[Semgrep Cairo 1.0 support](https://semgrep.dev/blog/2023/semgrep-now-"
"supports-cairo-1-0)"

#: src/ch17-03-static-analysis-tools.md:10
msgid ""
"[Caracal, a Starknet static analyzer](https://github.com/crytic/caracal)"
msgstr ""
"[Caracal, un analizador estático Starknet] (https://github.com/crytic/"
"caracal)"

#: src/appendix-000.md
msgid ""
"The following sections contain reference material you may find useful in "
"your Starknet journey."
msgstr ""
"Las siguientes secciones contienen material de referencia que usted puede "
"encontrar útil en su viaje Starknet."

#: src/appendix-08-system-calls.md:1
msgid "Appendix A - System Calls"
msgstr "Apéndice A - Llamadas al sistema"

#: src/appendix-08-system-calls.md:3
msgid ""
"This chapter is based on the StarkNet documentation available at [StarkNet "
"Docs](https://docs.starknet.io/documentation/architecture_and_concepts/"
"Smart_Contracts/system-calls-cairo1/)."
msgstr ""
"Este capítulo se basa en la documentación de StarkNet disponible en "
"[StarkNet Docs](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/system-calls-cairo1/)."

#: src/appendix-08-system-calls.md:5
msgid ""
"Writing smart contracts requires various associated operations, such as "
"calling another contract or accessing the contract’s storage, that "
"standalone programs do not require."
msgstr ""
"Escribir contratos inteligentes requiere varias operaciones asociadas, como "
"llamar a otro contrato o acceder al almacenamiento del contrato, que los "
"programas independientes no requieren."

#: src/appendix-08-system-calls.md:7
msgid ""
"The Starknet contract language supports these operations by using system "
"calls. System calls enable a contract to require services from the Starknet "
"OS. You can use system calls in a function to get information that depends "
"on the broader state of Starknet, which would otherwise be inaccessible, "
"rather than local variables that appear in the function’s scope."
msgstr ""
"El lenguaje de contrato Starknet soporta estas operaciones utilizando "
"llamadas del sistema. Las llamadas del sistema permiten que un contrato "
"requiera servicios del sistema operativo Starknet. Puede utilizar llamadas "
"del sistema en una función para obtener información que depende del estado "
"más amplio de Starknet, que de otro modo sería inaccesible, en lugar de "
"variables locales que aparecen en el alcance de la función."

#: src/appendix-08-system-calls.md:9
msgid "Here is a list of the system calls available in Cairo 1.0:"
msgstr ""
"Aquí está una lista de las llamadas del sistema disponibles en El Cairo 1.0:"

#: src/appendix-08-system-calls.md:11
msgid "[get_block_hash](#get_block_hash)"
msgstr "[get_block_hash](#get_block_hash)"

#: src/appendix-08-system-calls.md:12
msgid "[get_execution_info](#get_execution_info)"
msgstr "[get_ejecution_info](#get_ejecution_info)"

#: src/appendix-08-system-calls.md:13
msgid "[call_contract](#call_contract)"
msgstr "[call_contract](#call_contract)"

#: src/appendix-08-system-calls.md:14
msgid "[deploy](#deploy)"
msgstr "[desplegar] (#desplegar)"

#: src/appendix-08-system-calls.md:15
msgid "[emit_event](#emit_event)"
msgstr "[emit_event](#emit_event)"

#: src/appendix-08-system-calls.md:16
msgid "[library_call](#library_call)"
msgstr "[biblioteca_call](#biblioteca_call)"

#: src/appendix-08-system-calls.md:17
msgid "[send_message_to_L1](#send_message_to_l1)"
msgstr "[send_message_to_L1](#send_message_to_l1)"

#: src/appendix-08-system-calls.md:18
msgid "[replace_class](#replace_class)"
msgstr "[reemplazar_clase](#reemplazar_clase)"

#: src/appendix-08-system-calls.md:19
msgid "[storage_read](#storage_read)"
msgstr "[Almacenamiento_lectura](#Almacenamiento_lectura)"

#: src/appendix-08-system-calls.md:20
msgid "[storage_write](#storage_write)"
msgstr "[Almacenamiento_escritura](#Almacenamiento_escritura)"

#: src/appendix-08-system-calls.md:22
msgid "`get_block_hash`"
msgstr "«get_block_hash»"

#: src/appendix-08-system-calls.md:24 src/appendix-08-system-calls.md:51
#: src/appendix-08-system-calls.md:79 src/appendix-08-system-calls.md:117
#: src/appendix-08-system-calls.md:153 src/appendix-08-system-calls.md:198
#: src/appendix-08-system-calls.md:230 src/appendix-08-system-calls.md:273
#: src/appendix-08-system-calls.md:305 src/appendix-08-system-calls.md:348
msgid "Syntax"
msgstr "Sintaxis"

#: src/appendix-08-system-calls.md:32 src/appendix-08-system-calls.md:59
#: src/appendix-08-system-calls.md:87 src/appendix-08-system-calls.md:128
#: src/appendix-08-system-calls.md:161 src/appendix-08-system-calls.md:206
#: src/appendix-08-system-calls.md:238 src/appendix-08-system-calls.md:281
#: src/appendix-08-system-calls.md:313 src/appendix-08-system-calls.md:356
msgid "Description"
msgstr "Descripción"

#: src/appendix-08-system-calls.md:34
msgid ""
"Gets the hash of a specific StarkNet block within the range of "
"`[first_v0_12_0_block, current_block - 10]`."
msgstr ""
"Obtiene el hash de un bloque específico de StarkNet dentro del rango de "
"`[first_v0_12_0_block, current_block - 10]`."

#: src/appendix-08-system-calls.md:36 src/appendix-08-system-calls.md:69
#: src/appendix-08-system-calls.md:103 src/appendix-08-system-calls.md:139
#: src/appendix-08-system-calls.md:173 src/appendix-08-system-calls.md:220
#: src/appendix-08-system-calls.md:252 src/appendix-08-system-calls.md:295
#: src/appendix-08-system-calls.md:327 src/appendix-08-system-calls.md:372
msgid "Return Values"
msgstr "Valores de devolución"

#: src/appendix-08-system-calls.md:38
msgid "Returns the hash of the given block."
msgstr "Devuelve el hash del bloque dado."

#: src/appendix-08-system-calls.md:40
msgid "Error Messages"
msgstr "Mensajes de error"

#: src/appendix-08-system-calls.md:42
msgid ""
"`Block number out of range`: `block_number` is greater than "
"_`current_block`_`- 10`."
msgstr ""
"`Número de bloque fuera de rango`: `bloque_número` es mayor que "
"`current_block`_`- 10 '."

#: src/appendix-08-system-calls.md:43
msgid "`0`: `block_number` is less than the first block number of v0.12.0."
msgstr "`0`: `block_number` es inferior al primer número de bloque de v0.12.0."

#: src/appendix-08-system-calls.md:45 src/appendix-08-system-calls.md:73
#: src/appendix-08-system-calls.md:107 src/appendix-08-system-calls.md:147
#: src/appendix-08-system-calls.md:192 src/appendix-08-system-calls.md:224
#: src/appendix-08-system-calls.md:267 src/appendix-08-system-calls.md:299
#: src/appendix-08-system-calls.md:342 src/appendix-08-system-calls.md:376
msgid "Common Library"
msgstr "Biblioteca común"

#: src/appendix-08-system-calls.md:47
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/0c882679fdb24a818cad19f2c18decbf6ef66153/corelib/src/starknet/syscalls."
"cairo#L37)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/0c882679fdb24a818cad19f2c18debbf6ef66153/corelib/src/starknet/syscalls."
"cairo#L37)"

#: src/appendix-08-system-calls.md:49
msgid "`get_execution_info`"
msgstr "«get_execution_info»"

#: src/appendix-08-system-calls.md:61
msgid "Gets information about the original transaction."
msgstr "Obtiene información sobre la transacción original."

#: src/appendix-08-system-calls.md:63
msgid ""
"In Cairo 1.0, all block/transaction/execution context getters are batched "
"into this single system call."
msgstr ""
"En El Cairo 1.0, todos los block/transaction/ejecution context getters se "
"agrupan en esta única llamada del sistema."

#: src/appendix-08-system-calls.md:65 src/appendix-08-system-calls.md:97
#: src/appendix-08-system-calls.md:132 src/appendix-08-system-calls.md:167
#: src/appendix-08-system-calls.md:212 src/appendix-08-system-calls.md:246
#: src/appendix-08-system-calls.md:291 src/appendix-08-system-calls.md:321
#: src/appendix-08-system-calls.md:364
msgid "Arguments"
msgstr "Argumentos"

#: src/appendix-08-system-calls.md:67 src/appendix-08-system-calls.md:175
#: src/appendix-08-system-calls.md:254 src/appendix-08-system-calls.md:297
#: src/appendix-08-system-calls.md:374
msgid "None."
msgstr "Ninguno."

#: src/appendix-08-system-calls.md:71
msgid ""
"Returns a [struct](https://github.com/starkware-libs/cairo/blob/"
"efbf69d4e93a60faa6e1363fd0152b8fcedbb00a/corelib/src/starknet/info.cairo#L8) "
"containing the execution info."
msgstr ""
"Devuelve un [struct](https://github.com/starkware-libs/cairo/blob/"
"efbf69d4e93a60faa6e1363fd0152b8fcedbb00a/corelib/src/starknet/info.cairo#L8) "
"que contiene la información de ejecución."

#: src/appendix-08-system-calls.md:75
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L35)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L35)"

#: src/appendix-08-system-calls.md:77
msgid "`call_contract`"
msgstr "`call_contract`"

#: src/appendix-08-system-calls.md:89
msgid ""
"Calls a given contract. This system call expects the address of the called "
"contract, a selector for a function within that contract, and call arguments."
msgstr ""
"Convoca un contrato determinado. Esta llamada del sistema espera la "
"dirección del contrato llamado, un selector para una función dentro de ese "
"contrato, y argumentos de convocatoria."

#: src/appendix-08-system-calls.md:91 src/appendix-08-system-calls.md:285
msgid "**Note:**"
msgstr "**Nota:**"

#: src/appendix-08-system-calls.md:93
msgid ""
"An internal call can’t return Err(\\_) as this is not handled by the "
"sequencer and the Starknet OS."
msgstr ""
"Una llamada interna no puede devolver Err(\\_) ya que esto no es manejado "
"por el secuenciador y el sistema operativo Starknet."

#: src/appendix-08-system-calls.md:95
msgid ""
"If call_contract_syscall fails, this can’t be caught and will therefore "
"result in the entire transaction being reverted."
msgstr ""
"Si call_contract_syscall falla, esto no puede ser capturado y por lo tanto "
"resultará en que toda la transacción sea revertida."

#: src/appendix-08-system-calls.md:99
msgid "_`address`_: The address of the contract you want to call."
msgstr "_`direccion`_: La dirección del contrato al que desea llamar."

#: src/appendix-08-system-calls.md:100
msgid ""
"_`entry_point_selector`_: A selector for a function within that contract, "
"can be computed with the `selector!` macro."
msgstr ""
"_`entry_point_selector`_: Un selector para una función dentro de ese "
"contrato, se puede calcular con la macro `selector!`."

#: src/appendix-08-system-calls.md:101
msgid "_`calldata`_: The calldata array."
msgstr "_`calldata`_: La matriz de calldata."

#: src/appendix-08-system-calls.md:105 src/appendix-08-system-calls.md:222
msgid "The call response, of type `SyscallResult<Span<felt252>>`."
msgstr "La respuesta de llamada, de tipo `SyscallResult<Span<felt252."

#: src/appendix-08-system-calls.md:109
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L10)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L10)"

#: src/appendix-08-system-calls.md:111
msgid ""
"**Note:** This is considered a lower-level syntax for calling contracts. If "
"the interface of the called contract is available, then you can use a more "
"straightforward syntax."
msgstr ""
"**Nota:** Esto se considera una sintaxis de nivel inferior para llamar "
"contratos. Si la interfaz del contrato llamado está disponible, entonces "
"puede utilizar una sintaxis más sencilla."

#: src/appendix-08-system-calls.md:115
msgid "`deploy`"
msgstr "`deploy`"

#: src/appendix-08-system-calls.md:130
msgid "Deploys a new instance of a previously declared class."
msgstr "Implementa una nueva instancia de una clase previamente declarada."

#: src/appendix-08-system-calls.md:134
msgid "_`class_hash`_: The class hash of the contract to be deployed."
msgstr "_`class_hash`_: La clase hash del contrato a ser desplegado."

#: src/appendix-08-system-calls.md:135
msgid ""
"_`contract_address_salt`_: The salt, an arbitrary value provided by the "
"sender. It is used in the computation of the contract’s address."
msgstr ""
"_`contract_address_salt`_: La sal, un valor arbitrario proporcionado por el "
"remitente. Se utiliza en el cálculo de la dirección del contrato."

#: src/appendix-08-system-calls.md:136
msgid "_`calldata`_: The constructor’s calldata. An array of felts."
msgstr "_`calldata`_: Calldata del constructor. Una serie de fieltros."

#: src/appendix-08-system-calls.md:137
msgid ""
"_`deploy_from_zero`_: A flag used for the contract address computation. If "
"not set, the caller address will be used as the new contract’s deployer "
"address, otherwise 0 is used."
msgstr ""
"_`deploy_from_zero`_: Un indicador utilizado para el cálculo de la dirección "
"del contrato. Si no se establece, la dirección del llamante se utilizará "
"como la dirección del despliegue del nuevo contrato, de lo contrario se "
"utiliza 0."

#: src/appendix-08-system-calls.md:141
msgid "A tuple wrapped with SyscallResult where:"
msgstr "Una tupla envuelta con SyscallResult donde:"

#: src/appendix-08-system-calls.md:143
msgid ""
"The first element is the address of the deployed contract, of type "
"`ContractAddress`."
msgstr ""
"El primer elemento es la dirección del contrato desplegado, del tipo "
"`ContractAddress '."

#: src/appendix-08-system-calls.md:145
msgid ""
"The second element is the response array from the contract’s constructor, of "
"type `Span::<felt252>`."
msgstr ""
"El segundo elemento es la matriz de respuesta del constructor del contrato, "
"del tipo `Span::<felt252''."

#: src/appendix-08-system-calls.md:149
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/4821865770ac9e57442aef6f0ce82edc7020a4d6/corelib/src/starknet/syscalls."
"cairo#L22)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/"
"blob/4821865770ac9e57442aef6f0ce82edc7020a4d6/corelib/src/starknet/syscalls."
"cairo#L22)"

#: src/appendix-08-system-calls.md:151
msgid "`emit_event`"
msgstr "`emit_event`"

#: src/appendix-08-system-calls.md:163
msgid "Emits an event with a given set of keys and data."
msgstr "Emite un evento con un conjunto dado de claves y datos."

#: src/appendix-08-system-calls.md:165
msgid ""
"For more information and a higher-level syntax for emitting events, see "
"[Starknet events](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/starknet-events/)."
msgstr ""
"Para obtener más información y una sintaxis de mayor nivel para emitir "
"eventos, consulte [Eventos Starknet](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/starknet-events/)."

#: src/appendix-08-system-calls.md:169
msgid ""
"_`keys`_: The event’s keys. These are analogous to Ethereum’s event topics, "
"you can use the starknet_getEvents method to filter by these keys."
msgstr ""
"_`keys`_: Las claves del evento. Estos son análogos a los temas del evento "
"de Ethereum, puede utilizar el método Starknet_getEvents para filtrar por "
"estas teclas."

#: src/appendix-08-system-calls.md:171
msgid "_`data`_: The event’s data."
msgstr "_`data`_: Los datos del evento."

#: src/appendix-08-system-calls.md:179
msgid ""
"The following example emits an event with two keys, the strings `status` and "
"`deposit` and three data elements: `1`, `2`, and `3`."
msgstr ""
"El siguiente ejemplo emite un evento con dos claves, las cadenas `status` y "
"`deposit` y tres elementos de datos: `1`, `2` y `3`."

#: src/appendix-08-system-calls.md:194
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L30)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L30)"

#: src/appendix-08-system-calls.md:196
msgid "`library_call`"
msgstr "`biblioteca_call`"

#: src/appendix-08-system-calls.md:208
msgid ""
"Calls the requested function in any previously declared class. The class is "
"only used for its logic."
msgstr ""
"Llama a la función solicitada en cualquier clase previamente declarada. La "
"clase sólo se utiliza para su lógica."

#: src/appendix-08-system-calls.md:210
msgid ""
"This system call replaces the known delegate call functionality from "
"Ethereum, with the important difference that there is only one contract "
"involved."
msgstr ""
"Esta llamada del sistema reemplaza la conocida funcionalidad de llamada "
"delegada de Ethereum, con la importante diferencia de que sólo hay un "
"contrato involucrado."

#: src/appendix-08-system-calls.md:214
msgid "_`class_hash`_: The hash of the class you want to use."
msgstr "_`class_hash`_: El hash de la clase que quieres usar."

#: src/appendix-08-system-calls.md:216
msgid ""
"_`function_selector`_: A selector for a function within that class, can be "
"computed with the `selector!` macro."
msgstr ""
"_`function_selector`_: Un selector para una función dentro de esa clase, se "
"puede calcular con la macro `selector!`."

#: src/appendix-08-system-calls.md:218
msgid "_`calldata`_: The calldata."
msgstr "_`calldata`_: Los calldata."

#: src/appendix-08-system-calls.md:226
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L43)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L43)"

#: src/appendix-08-system-calls.md:228
msgid "`send_message_to_L1`"
msgstr "«send_message_to_L1»"

#: src/appendix-08-system-calls.md:240
msgid "Sends a message to L1."
msgstr "Envía un mensaje a L1."

#: src/appendix-08-system-calls.md:242
msgid ""
"This system call includes the message parameters as part of the proof’s "
"output and exposes these parameters to the `StarknetCore` contract on L1 "
"once the state update, including the transaction, is received."
msgstr ""
"Esta llamada al sistema incluye los parámetros del mensaje como parte de la "
"salida de la prueba y expone estos parámetros al contrato `StarknetCore` en "
"L1 una vez que se recibe la actualización del estado, incluida la "
"transacción."

#: src/appendix-08-system-calls.md:244
msgid ""
"For more information, see Starknet’s [messaging mechanism](https://docs."
"starknet.io/documentation/architecture_and_concepts/Network_Architecture/"
"messaging-mechanism/)."
msgstr ""
"Para más información, véase el [mecanismo de mensajería] de Starknet "
"(https://docs.starknet.io/documentation/architecture_and_concepts/"
"Network_Architecture/messaging-mechanism/)."

#: src/appendix-08-system-calls.md:248
msgid "_`to_address`_: The recipient’s L1 address."
msgstr "_`to_address`_: La dirección L1 del destinatario."

#: src/appendix-08-system-calls.md:250
msgid "_`payload`_: The array containing the message payload."
msgstr "_`payload`_: La matriz que contiene la carga útil del mensaje."

#: src/appendix-08-system-calls.md:258
msgid ""
"The following example sends a message whose content is `(1,2)` to the L1 "
"contract whose address is `3423542542364363`."
msgstr ""
"El siguiente ejemplo envía un mensaje cuyo contenido es `(1,2)` al contrato "
"L1 cuya dirección es `3423542542364363`."

#: src/appendix-08-system-calls.md:269
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L51)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L51)"

#: src/appendix-08-system-calls.md:271
msgid "`replace_class`"
msgstr "«reemplazar_clase»"

#: src/appendix-08-system-calls.md:283
msgid ""
"Once `replace_class` is called, the class of the calling contract (i.e. the "
"contract whose address is returned by `get_contract_address` at the time the "
"syscall is called) will be replaced by the class whose hash is given by the "
"class_hash argument."
msgstr ""
"Una vez llamado `replace_class`, la clase del contrato que llama (es decir, "
"el contrato cuya dirección es devuelta por `get_contract_adress` en el "
"momento en que se llama a syscall) será reemplazada por la clase cuyo hash "
"es dado por el argumento class_hash."

#: src/appendix-08-system-calls.md:287
msgid ""
"After calling `replace_class`, the code currently executing from the old "
"class will finish running."
msgstr ""
"Después de llamar a `replace_class`, el código que actualmente se ejecuta "
"desde la clase antigua terminará de ejecutarse."

#: src/appendix-08-system-calls.md:289
msgid ""
"The new class will be used from the next transaction onwards or if the "
"contract is called via the `call_contract` syscall in the same transaction "
"(after the replacement)."
msgstr ""
"La nueva clase se utilizará a partir de la siguiente transacción o si el "
"contrato se llama a través del syscall `call_contract'en la misma "
"transacción (después de la sustitución)."

#: src/appendix-08-system-calls.md:293
msgid "_`class_hash`_: The hash of the class you want to use as a replacement."
msgstr "_`class_hash`_: El hash de la clase que desea utilizar como reemplazo."

#: src/appendix-08-system-calls.md:301
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L77)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L77)"

#: src/appendix-08-system-calls.md:303
msgid "`storage_read`"
msgstr "`almacenamiento_read`"

#: src/appendix-08-system-calls.md:315
msgid "Gets the value of a key in the storage of the calling contract."
msgstr ""
"Obtiene el valor de una llave en el almacenamiento del contrato de llamada."

#: src/appendix-08-system-calls.md:317
msgid ""
"This system call provides direct access to any possible key in storage, in "
"contrast with `var.read()`, which enables you to read storage variables that "
"are defined explicitly in the contract."
msgstr ""
"Esta llamada del sistema proporciona acceso directo a cualquier posible "
"clave en el almacenamiento, en contraste con `var.read()`, que le permite "
"leer variables de almacenamiento que se definen explícitamente en el "
"contrato."

#: src/appendix-08-system-calls.md:319 src/appendix-08-system-calls.md:362
msgid ""
"For information on accessing storage by using the storage variables, see "
"[storage variables](https://docs.starknet.io/documentation/"
"architecture_and_concepts/Smart_Contracts/contract-storage/"
"#storage_variables)."
msgstr ""
"Para obtener información sobre el acceso al almacenamiento utilizando las "
"variables de almacenamiento, véase [variables de almacenamiento](https://"
"docs.starknet.io/documentation/architecture_and_concepts/Smart_Contracts/"
"contract-storage/#storage_variables)."

#: src/appendix-08-system-calls.md:323 src/appendix-08-system-calls.md:366
msgid ""
"_`address_domain`_: The domain of the key, used to separate between "
"different data availability modes. This separation is used in Starknet to "
"offer different data availability modes. Currently, only the onchain mode "
"(where all updates go to L1), indicated by domain `0`, is supported. Other "
"address domains which will be introduced in the future will behave "
"differently in terms of publication (in particular, they will not be posted "
"on L1, creating a tradeoff between cost and security)."
msgstr ""
"_`direccion_dominio`_: El dominio de la clave, utilizado para separar entre "
"diferentes modos de disponibilidad de datos. Esta separación se utiliza en "
"Starknet para ofrecer diferentes modos de disponibilidad de datos. "
"Actualmente, sólo se admite el modo onchain (donde todas las actualizaciones "
"van a L1), indicado por el dominio `0`. Otros dominios de direcciones que se "
"introducirán en el futuro se comportarán de manera diferente en términos de "
"publicación (en particular, no se publicarán en L1, creando una compensación "
"entre costo y seguridad)."

#: src/appendix-08-system-calls.md:325 src/appendix-08-system-calls.md:368
msgid "_`address`_: The requested storage address."
msgstr "_`dirección`_: La dirección de almacenamiento solicitada."

#: src/appendix-08-system-calls.md:329
msgid "The value of the key, of type `SyscallResult<felt252>`."
msgstr "El valor de la clave, del tipo `SyscallResult<felt252»."

#: src/appendix-08-system-calls.md:344
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L60)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L60)"

#: src/appendix-08-system-calls.md:346
msgid "`storage_write`"
msgstr "`almacenamiento_escritura`"

#: src/appendix-08-system-calls.md:358
msgid "Sets the value of a key in the storage of the calling contract."
msgstr ""
"Establece el valor de una clave en el almacenamiento del contrato de llamada."

#: src/appendix-08-system-calls.md:360
msgid ""
"This system call provides direct access to any possible key in storage, in "
"contrast with `var.write()`, which enables you to write to storage variables "
"that are defined explicitly in the contract."
msgstr ""
"Esta llamada del sistema proporciona acceso directo a cualquier posible "
"clave en el almacenamiento, en contraste con `var.write()`, que le permite "
"escribir a las variables de almacenamiento que se definen explícitamente en "
"el contrato."

#: src/appendix-08-system-calls.md:370
msgid "_`value`_: The value to write to the key."
msgstr "_`value`_: El valor a escribir en la clave."

#: src/appendix-08-system-calls.md:378
msgid ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L70)"
msgstr ""
"[syscalls.cairo](https://github.com/starkware-libs/cairo/blob/"
"cca08c898f0eb3e58797674f20994df0ba641983/corelib/src/starknet/syscalls."
"cairo#L70)"

#~ msgid "\"result is not 4\""
#~ msgstr "\"El resultado no es 4\""

#~ msgid "First of all, add the following code in your _lib.cairo_ file:"
#~ msgstr ""
#~ "En primer lugar, agregue el siguiente código en su archivo _lib.cairo_:"

#~ msgid ""
#~ "Note that we still need to use the `#[cfg(test)]` attribute here, because "
#~ "we are in the _lib.cairo_ file of the _src_ directory. Then, create a "
#~ "_tests.cairo_ file and fill it as follows:"
#~ msgstr ""
#~ "Tenga en cuenta que todavía tenemos que usar el atributo •[cfg(test)]` "
#~ "aquí, porque estamos en el archivo _lib.cairo_ del directorio _src_. A "
#~ "continuación, cree un archivo _tests.cairo_ y llénelo de la siguiente "
#~ "manera:"

#~ msgid ""
#~ "The result of the tests is the same as what we've been seeing: one line "
#~ "for each test."
#~ msgstr ""
#~ "El resultado de las pruebas es el mismo que hemos estado viendo: una "
#~ "línea para cada prueba."
